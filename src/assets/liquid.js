/*! For license information please see design-system.bundle.min.js.LICENSE.txt */
(() => {
    var __webpack_modules__ = {
            98564: (t) => {
                t.exports = { BRAD_HASH_ANIMATIONS_URL: "animations/" };
            },
            46824: (t, e, i) => {
                var r = i(4147).version;
                t.exports = { BRAD_HASH_ANIMATIONS_URL: `https://banco.bradesco/cdn/design-system/dist/storybook-${r}/animations/` };
            },
            62520: (t, e, i) => {
                i(52004),
                    i(28407),
                    i(70462),
                    i(22429),
                    i(71172),
                    i(38288),
                    i(91274),
                    i(98201),
                    i(56626),
                    i(93211),
                    i(79952),
                    i(20015),
                    i(19831),
                    i(7521),
                    i(72972),
                    i(21719),
                    i(11646),
                    i(87178),
                    i(25652),
                    i(51271),
                    i(38833),
                    i(47715),
                    i(85375),
                    i(39390),
                    i(30655),
                    i(95680),
                    i(23675),
                    i(12076),
                    i(27228),
                    i(51301),
                    i(55677),
                    i(67441),
                    i(46825),
                    i(92070),
                    i(87896),
                    i(4363),
                    i(96382),
                    i(57021),
                    i(20288),
                    i(7262),
                    i(74486),
                    i(91029),
                    i(6429),
                    i(55892),
                    i(46270),
                    i(74047),
                    i(6541),
                    i(6399),
                    i(73163),
                    i(94975),
                    i(72609),
                    i(57436),
                    i(25649),
                    i(32001),
                    i(39762),
                    i(22466),
                    i(75298),
                    i(81526),
                    i(67469),
                    i(43344),
                    i(54458),
                    i(76169),
                    i(84415),
                    i(76956),
                    i(14327),
                    i(27680),
                    i(28743),
                    i(59295),
                    i(62794),
                    i(52340),
                    i(74779),
                    i(97359),
                    i(29627),
                    i(32474),
                    i(76493),
                    i(59630),
                    i(30357),
                    i(92374),
                    i(52079),
                    i(17388),
                    i(94593),
                    i(55222),
                    i(45777),
                    i(30717),
                    i(77483),
                    i(74176),
                    i(12406),
                    i(92437),
                    i(23311),
                    i(66474),
                    i(65206),
                    i(71579),
                    i(66016),
                    i(56660),
                    i(96785),
                    i(74517),
                    i(4334),
                    i(89610),
                    i(90190),
                    i(74649),
                    i(77031),
                    i(86737),
                    i(47561),
                    i(5809),
                    i(10815),
                    i(79174),
                    i(5536),
                    i(25101),
                    i(45710),
                    i(22698),
                    i(49815),
                    i(55056),
                    i(99751),
                    i(51796),
                    i(61904),
                    i(95738),
                    i(47595),
                    i(27867),
                    i(56394),
                    i(49628),
                    i(56718),
                    i(573),
                    i(25334),
                    i(86969),
                    i(32021),
                    i(38328),
                    i(31678),
                    i(13080),
                    i(9079),
                    i(36714),
                    i(36582),
                    i(69723),
                    i(14728),
                    i(22704),
                    i(76401),
                    i(5274),
                    i(54817),
                    i(91183),
                    i(32309),
                    i(52257),
                    i(7390),
                    i(86956),
                    i(62322),
                    i(93710),
                    i(514),
                    i(19297),
                    i(64669),
                    i(26922),
                    i(619),
                    i(23223),
                    i(40594),
                    i(97723),
                    i(92129),
                    i(55017),
                    i(70698),
                    i(82433),
                    i(11932),
                    i(45924),
                    i(51142),
                    i(93296),
                    i(66553),
                    i(79006),
                    i(49268),
                    i(97754),
                    i(52933),
                    i(13233),
                    i(28599),
                    i(20087),
                    i(36993),
                    i(76755),
                    i(99138),
                    i(42448),
                    i(92378),
                    i(61892),
                    i(40842),
                    i(66060),
                    i(59808),
                    i(17590),
                    i(39353),
                    i(79068),
                    i(53631),
                    i(31351),
                    i(1998),
                    i(28729),
                    i(29151),
                    i(23330),
                    i(73594),
                    i(93525),
                    i(30337),
                    i(60506),
                    i(53224),
                    i(50597),
                    i(43543),
                    i(35210),
                    i(95785),
                    i(30091),
                    i(29595),
                    i(63181),
                    i(23357),
                    i(91816),
                    i(2161),
                    i(47445),
                    i(84875),
                    i(71608),
                    i(24283),
                    i(72994),
                    i(284),
                    i(30601),
                    i(39494),
                    i(66229),
                    i(19149),
                    i(79503),
                    i(9617),
                    i(91962),
                    i(8097),
                    i(7878),
                    i(31770),
                    i(70435),
                    i(98974),
                    i(7715),
                    i(93876),
                    i(15167),
                    i(71977),
                    i(43726),
                    i(56335),
                    i(29658),
                    i(70733),
                    i(25981),
                    i(7270),
                    i(4056),
                    i(22421),
                    i(55879),
                    i(93302),
                    i(3124),
                    i(46419),
                    i(45097),
                    i(32855),
                    i(88304),
                    i(97246),
                    i(32865),
                    i(49866),
                    i(79548),
                    i(69527),
                    i(85835),
                    i(96691),
                    i(97420),
                    i(3949),
                    i(26921),
                    i(21594),
                    i(72311),
                    i(63917),
                    i(23406),
                    i(10581),
                    i(14912),
                    i(15544),
                    i(39271),
                    i(60943),
                    i(15765),
                    i(21292),
                    i(8068),
                    i(1310),
                    i(29913),
                    i(96003),
                    i(37709),
                    i(73826),
                    i(52510),
                    i(43092),
                    i(39960),
                    i(98536),
                    i(94061),
                    i(84173),
                    i(32787),
                    i(99151),
                    i(95664),
                    i(63502),
                    i(30924),
                    i(8990),
                    i(63053),
                    i(16705),
                    i(97146),
                    i(22503),
                    i(92414),
                    i(84890),
                    i(88023),
                    i(93278),
                    i(24951),
                    i(40374),
                    i(37770),
                    i(94305),
                    i(64251),
                    i(99175),
                    i(86945),
                    i(64114),
                    i(14960),
                    i(15306),
                    i(31183),
                    i(42106),
                    i(53261),
                    i(43637),
                    i(75045),
                    i(51092),
                    i(58936),
                    i(28041),
                    i(85748),
                    i(78193),
                    i(5646),
                    i(9250),
                    i(17525),
                    i(50519),
                    i(20613),
                    i(6905),
                    i(83868),
                    i(54651),
                    i(14846),
                    i(14488),
                    i(91327),
                    i(43970),
                    i(65030),
                    i(48698),
                    i(73123),
                    i(90634),
                    i(7820),
                    i(93022),
                    i(85927),
                    i(13163),
                    i(39027),
                    i(33299),
                    i(44644),
                    i(85942),
                    i(9063),
                    i(91437),
                    i(63278),
                    i(13607),
                    i(95685),
                    i(92034),
                    i(4365),
                    i(52826),
                    i(59371),
                    i(48132),
                    i(985),
                    i(10377),
                    i(31086),
                    i(68694),
                    i(6316),
                    i(24192),
                    i(73884),
                    i(11649),
                    i(90925),
                    i(3020),
                    i(48462),
                    i(98501),
                    i(95869),
                    i(59686),
                    i(95175),
                    i(55090),
                    i(24655),
                    i(68192),
                    i(39201),
                    i(60151),
                    i(76453),
                    i(58138),
                    i(46549),
                    (t.exports = i(21287));
            },
            99365: (t, e, i) => {
                t.exports = i(62520);
            },
            96163: (t) => {
                t.exports = function (t) {
                    if ("function" != typeof t) throw TypeError(String(t) + " is not a function");
                    return t;
                };
            },
            79882: (t, e, i) => {
                var r = i(90794);
                t.exports = function (t) {
                    if (!r(t) && null !== t) throw TypeError("Can't set " + String(t) + " as a prototype");
                    return t;
                };
            },
            36288: (t, e, i) => {
                var r = i(3649),
                    s = i(3590),
                    a = i(94615),
                    n = r("unscopables"),
                    o = Array.prototype;
                null == o[n] && a.f(o, n, { configurable: !0, value: s(null) }),
                    (t.exports = function (t) {
                        o[n][t] = !0;
                    });
            },
            96733: (t, e, i) => {
                "use strict";
                var r = i(96389).charAt;
                t.exports = function (t, e, i) {
                    return e + (i ? r(t, e).length : 1);
                };
            },
            44761: (t) => {
                t.exports = function (t, e, i) {
                    if (!(t instanceof e)) throw TypeError("Incorrect " + (i ? i + " " : "") + "invocation");
                    return t;
                };
            },
            92569: (t, e, i) => {
                var r = i(90794);
                t.exports = function (t) {
                    if (!r(t)) throw TypeError(String(t) + " is not an object");
                    return t;
                };
            },
            41601: (t) => {
                t.exports = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView;
            },
            13977: (t, e, i) => {
                "use strict";
                var r,
                    s = i(41601),
                    a = i(18494),
                    n = i(47583),
                    o = i(90794),
                    l = i(34402),
                    h = i(33058),
                    c = i(57),
                    d = i(61270),
                    u = i(94615).f,
                    p = i(80729),
                    m = i(17496),
                    f = i(3649),
                    g = i(98284),
                    v = n.Int8Array,
                    b = v && v.prototype,
                    y = n.Uint8ClampedArray,
                    w = y && y.prototype,
                    x = v && p(v),
                    E = b && p(b),
                    C = Object.prototype,
                    S = C.isPrototypeOf,
                    T = f("toStringTag"),
                    _ = g("TYPED_ARRAY_TAG"),
                    M = s && !!m && "Opera" !== h(n.opera),
                    P = !1,
                    k = { Int8Array: 1, Uint8Array: 1, Uint8ClampedArray: 1, Int16Array: 2, Uint16Array: 2, Int32Array: 4, Uint32Array: 4, Float32Array: 4, Float64Array: 8 },
                    A = { BigInt64Array: 8, BigUint64Array: 8 },
                    D = function (t) {
                        if (!o(t)) return !1;
                        var e = h(t);
                        return l(k, e) || l(A, e);
                    };
                for (r in k) n[r] || (M = !1);
                if (
                    (!M || "function" != typeof x || x === Function.prototype) &&
                    ((x = function () {
                        throw TypeError("Incorrect invocation");
                    }),
                    M)
                )
                    for (r in k) n[r] && m(n[r], x);
                if ((!M || !E || E === C) && ((E = x.prototype), M)) for (r in k) n[r] && m(n[r].prototype, E);
                if ((M && p(w) !== E && m(w, E), a && !l(E, T)))
                    for (r in ((P = !0),
                    u(E, T, {
                        get: function () {
                            return o(this) ? this[_] : void 0;
                        },
                    }),
                    k))
                        n[r] && c(n[r], _, r);
                t.exports = {
                    NATIVE_ARRAY_BUFFER_VIEWS: M,
                    TYPED_ARRAY_TAG: P && _,
                    aTypedArray: function (t) {
                        if (D(t)) return t;
                        throw TypeError("Target is not a typed array");
                    },
                    aTypedArrayConstructor: function (t) {
                        if (m) {
                            if (S.call(x, t)) return t;
                        } else
                            for (var e in k)
                                if (l(k, r)) {
                                    var i = n[e];
                                    if (i && (t === i || S.call(i, t))) return t;
                                }
                        throw TypeError("Target is not a typed array constructor");
                    },
                    exportTypedArrayMethod: function (t, e, i) {
                        if (a) {
                            if (i)
                                for (var r in k) {
                                    var s = n[r];
                                    if (s && l(s.prototype, t))
                                        try {
                                            delete s.prototype[t];
                                        } catch (t) {}
                                }
                            (E[t] && !i) || d(E, t, i ? e : (M && b[t]) || e);
                        }
                    },
                    exportTypedArrayStaticMethod: function (t, e, i) {
                        var r, s;
                        if (a) {
                            if (m) {
                                if (i)
                                    for (r in k)
                                        if ((s = n[r]) && l(s, t))
                                            try {
                                                delete s[t];
                                            } catch (t) {}
                                if (x[t] && !i) return;
                                try {
                                    return d(x, t, i ? e : (M && x[t]) || e);
                                } catch (t) {}
                            }
                            for (r in k) !(s = n[r]) || (s[t] && !i) || d(s, t, e);
                        }
                    },
                    isView: function (t) {
                        if (!o(t)) return !1;
                        var e = h(t);
                        return "DataView" === e || l(k, e) || l(A, e);
                    },
                    isTypedArray: D,
                    TypedArray: x,
                    TypedArrayPrototype: E,
                };
            },
            5562: (t, e, i) => {
                "use strict";
                var r = i(47583),
                    s = i(18494),
                    a = i(41601),
                    n = i(57),
                    o = i(96893),
                    l = i(16544),
                    h = i(44761),
                    c = i(75089),
                    d = i(70097),
                    u = i(12488),
                    p = i(43834),
                    m = i(80729),
                    f = i(17496),
                    g = i(9275).f,
                    v = i(94615).f,
                    b = i(93579),
                    y = i(98821),
                    w = i(42743),
                    x = w.get,
                    E = w.set,
                    C = "ArrayBuffer",
                    S = "DataView",
                    T = "prototype",
                    _ = "Wrong index",
                    M = r[C],
                    P = M,
                    k = r[S],
                    A = k && k[T],
                    D = Object.prototype,
                    L = r.RangeError,
                    I = p.pack,
                    R = p.unpack,
                    O = function (t) {
                        return [255 & t];
                    },
                    F = function (t) {
                        return [255 & t, (t >> 8) & 255];
                    },
                    B = function (t) {
                        return [255 & t, (t >> 8) & 255, (t >> 16) & 255, (t >> 24) & 255];
                    },
                    z = function (t) {
                        return (t[3] << 24) | (t[2] << 16) | (t[1] << 8) | t[0];
                    },
                    N = function (t) {
                        return I(t, 23, 4);
                    },
                    V = function (t) {
                        return I(t, 52, 8);
                    },
                    H = function (t, e) {
                        v(t[T], e, {
                            get: function () {
                                return x(this)[e];
                            },
                        });
                    },
                    j = function (t, e, i, r) {
                        var s = u(i),
                            a = x(t);
                        if (s + e > a.byteLength) throw L(_);
                        var n = x(a.buffer).bytes,
                            o = s + a.byteOffset,
                            l = n.slice(o, o + e);
                        return r ? l : l.reverse();
                    },
                    W = function (t, e, i, r, s, a) {
                        var n = u(i),
                            o = x(t);
                        if (n + e > o.byteLength) throw L(_);
                        for (var l = x(o.buffer).bytes, h = n + o.byteOffset, c = r(+s), d = 0; d < e; d++) l[h + d] = c[a ? d : e - d - 1];
                    };
                if (a) {
                    if (
                        !l(function () {
                            M(1);
                        }) ||
                        !l(function () {
                            new M(-1);
                        }) ||
                        l(function () {
                            return new M(), new M(1.5), new M(NaN), M.name != C;
                        })
                    ) {
                        for (
                            var G,
                                q = ((P = function (t) {
                                    return h(this, P), new M(u(t));
                                })[T] = M[T]),
                                $ = g(M),
                                U = 0;
                            $.length > U;

                        )
                            (G = $[U++]) in P || n(P, G, M[G]);
                        q.constructor = P;
                    }
                    f && m(A) !== D && f(A, D);
                    var Y = new k(new P(2)),
                        X = A.setInt8;
                    Y.setInt8(0, 2147483648),
                        Y.setInt8(1, 2147483649),
                        (!Y.getInt8(0) && Y.getInt8(1)) ||
                            o(
                                A,
                                {
                                    setInt8: function (t, e) {
                                        X.call(this, t, (e << 24) >> 24);
                                    },
                                    setUint8: function (t, e) {
                                        X.call(this, t, (e << 24) >> 24);
                                    },
                                },
                                { unsafe: !0 }
                            );
                } else
                    (P = function (t) {
                        h(this, P, C);
                        var e = u(t);
                        E(this, { bytes: b.call(new Array(e), 0), byteLength: e }), s || (this.byteLength = e);
                    }),
                        (k = function (t, e, i) {
                            h(this, k, S), h(t, P, S);
                            var r = x(t).byteLength,
                                a = c(e);
                            if (a < 0 || a > r) throw L("Wrong offset");
                            if (a + (i = void 0 === i ? r - a : d(i)) > r) throw L("Wrong length");
                            E(this, { buffer: t, byteLength: i, byteOffset: a }), s || ((this.buffer = t), (this.byteLength = i), (this.byteOffset = a));
                        }),
                        s && (H(P, "byteLength"), H(k, "buffer"), H(k, "byteLength"), H(k, "byteOffset")),
                        o(k[T], {
                            getInt8: function (t) {
                                return (j(this, 1, t)[0] << 24) >> 24;
                            },
                            getUint8: function (t) {
                                return j(this, 1, t)[0];
                            },
                            getInt16: function (t) {
                                var e = j(this, 2, t, arguments.length > 1 ? arguments[1] : void 0);
                                return (((e[1] << 8) | e[0]) << 16) >> 16;
                            },
                            getUint16: function (t) {
                                var e = j(this, 2, t, arguments.length > 1 ? arguments[1] : void 0);
                                return (e[1] << 8) | e[0];
                            },
                            getInt32: function (t) {
                                return z(j(this, 4, t, arguments.length > 1 ? arguments[1] : void 0));
                            },
                            getUint32: function (t) {
                                return z(j(this, 4, t, arguments.length > 1 ? arguments[1] : void 0)) >>> 0;
                            },
                            getFloat32: function (t) {
                                return R(j(this, 4, t, arguments.length > 1 ? arguments[1] : void 0), 23);
                            },
                            getFloat64: function (t) {
                                return R(j(this, 8, t, arguments.length > 1 ? arguments[1] : void 0), 52);
                            },
                            setInt8: function (t, e) {
                                W(this, 1, t, O, e);
                            },
                            setUint8: function (t, e) {
                                W(this, 1, t, O, e);
                            },
                            setInt16: function (t, e) {
                                W(this, 2, t, F, e, arguments.length > 2 ? arguments[2] : void 0);
                            },
                            setUint16: function (t, e) {
                                W(this, 2, t, F, e, arguments.length > 2 ? arguments[2] : void 0);
                            },
                            setInt32: function (t, e) {
                                W(this, 4, t, B, e, arguments.length > 2 ? arguments[2] : void 0);
                            },
                            setUint32: function (t, e) {
                                W(this, 4, t, B, e, arguments.length > 2 ? arguments[2] : void 0);
                            },
                            setFloat32: function (t, e) {
                                W(this, 4, t, N, e, arguments.length > 2 ? arguments[2] : void 0);
                            },
                            setFloat64: function (t, e) {
                                W(this, 8, t, V, e, arguments.length > 2 ? arguments[2] : void 0);
                            },
                        });
                y(P, C), y(k, S), (t.exports = { ArrayBuffer: P, DataView: k });
            },
            68050: (t, e, i) => {
                "use strict";
                var r = i(61324),
                    s = i(96782),
                    a = i(70097),
                    n = Math.min;
                t.exports =
                    [].copyWithin ||
                    function (t, e) {
                        var i = r(this),
                            o = a(i.length),
                            l = s(t, o),
                            h = s(e, o),
                            c = arguments.length > 2 ? arguments[2] : void 0,
                            d = n((void 0 === c ? o : s(c, o)) - h, o - l),
                            u = 1;
                        for (h < l && l < h + d && ((u = -1), (h += d - 1), (l += d - 1)); d-- > 0; ) h in i ? (i[l] = i[h]) : delete i[l], (l += u), (h += u);
                        return i;
                    };
            },
            93579: (t, e, i) => {
                "use strict";
                var r = i(61324),
                    s = i(96782),
                    a = i(70097);
                t.exports = function (t) {
                    for (var e = r(this), i = a(e.length), n = arguments.length, o = s(n > 1 ? arguments[1] : void 0, i), l = n > 2 ? arguments[2] : void 0, h = void 0 === l ? i : s(l, i); h > o; ) e[o++] = t;
                    return e;
                };
            },
            63200: (t, e, i) => {
                "use strict";
                var r = i(24805).forEach,
                    s = i(60906)("forEach");
                t.exports = s
                    ? [].forEach
                    : function (t) {
                          return r(this, t, arguments.length > 1 ? arguments[1] : void 0);
                      };
            },
            35513: (t, e, i) => {
                "use strict";
                var r = i(12938),
                    s = i(61324),
                    a = i(65294),
                    n = i(70114),
                    o = i(70097),
                    l = i(65999),
                    h = i(38272);
                t.exports = function (t) {
                    var e,
                        i,
                        c,
                        d,
                        u,
                        p,
                        m = s(t),
                        f = "function" == typeof this ? this : Array,
                        g = arguments.length,
                        v = g > 1 ? arguments[1] : void 0,
                        b = void 0 !== v,
                        y = h(m),
                        w = 0;
                    if ((b && (v = r(v, g > 2 ? arguments[2] : void 0, 2)), null == y || (f == Array && n(y)))) for (i = new f((e = o(m.length))); e > w; w++) (p = b ? v(m[w], w) : m[w]), l(i, w, p);
                    else for (u = (d = y.call(m)).next, i = new f(); !(c = u.call(d)).done; w++) (p = b ? a(d, v, [c.value, w], !0) : c.value), l(i, w, p);
                    return (i.length = w), i;
                };
            },
            15766: (t, e, i) => {
                var r = i(22977),
                    s = i(70097),
                    a = i(96782),
                    n = function (t) {
                        return function (e, i, n) {
                            var o,
                                l = r(e),
                                h = s(l.length),
                                c = a(n, h);
                            if (t && i != i) {
                                for (; h > c; ) if ((o = l[c++]) != o) return !0;
                            } else for (; h > c; c++) if ((t || c in l) && l[c] === i) return t || c || 0;
                            return !t && -1;
                        };
                    };
                t.exports = { includes: n(!0), indexOf: n(!1) };
            },
            32544: (t, e, i) => {
                var r = i(12938),
                    s = i(55044),
                    a = i(61324),
                    n = i(70097),
                    o = function (t) {
                        var e = 6 == t;
                        return function (i, o, l) {
                            for (var h, c = a(i), d = s(c), u = r(o, l, 3), p = n(d.length); p-- > 0; )
                                if (u((h = d[p]), p, c))
                                    switch (t) {
                                        case 5:
                                            return h;
                                        case 6:
                                            return p;
                                    }
                            return e ? -1 : void 0;
                        };
                    };
                t.exports = { findLast: o(5), findLastIndex: o(6) };
            },
            24805: (t, e, i) => {
                var r = i(12938),
                    s = i(55044),
                    a = i(61324),
                    n = i(70097),
                    o = i(44822),
                    l = [].push,
                    h = function (t) {
                        var e = 1 == t,
                            i = 2 == t,
                            h = 3 == t,
                            c = 4 == t,
                            d = 6 == t,
                            u = 7 == t,
                            p = 5 == t || d;
                        return function (m, f, g, v) {
                            for (var b, y, w = a(m), x = s(w), E = r(f, g, 3), C = n(x.length), S = 0, T = v || o, _ = e ? T(m, C) : i || u ? T(m, 0) : void 0; C > S; S++)
                                if ((p || S in x) && ((y = E((b = x[S]), S, w)), t))
                                    if (e) _[S] = y;
                                    else if (y)
                                        switch (t) {
                                            case 3:
                                                return !0;
                                            case 5:
                                                return b;
                                            case 6:
                                                return S;
                                            case 2:
                                                l.call(_, b);
                                        }
                                    else
                                        switch (t) {
                                            case 4:
                                                return !1;
                                            case 7:
                                                l.call(_, b);
                                        }
                            return d ? -1 : h || c ? c : _;
                        };
                    };
                t.exports = { forEach: h(0), map: h(1), filter: h(2), some: h(3), every: h(4), find: h(5), findIndex: h(6), filterOut: h(7) };
            },
            73161: (t, e, i) => {
                "use strict";
                var r = i(22977),
                    s = i(75089),
                    a = i(70097),
                    n = i(60906),
                    o = Math.min,
                    l = [].lastIndexOf,
                    h = !!l && 1 / [1].lastIndexOf(1, -0) < 0,
                    c = n("lastIndexOf"),
                    d = h || !c;
                t.exports = d
                    ? function (t) {
                          if (h) return l.apply(this, arguments) || 0;
                          var e = r(this),
                              i = a(e.length),
                              n = i - 1;
                          for (arguments.length > 1 && (n = o(n, s(arguments[1]))), n < 0 && (n = i + n); n >= 0; n--) if (n in e && e[n] === t) return n || 0;
                          return -1;
                      }
                    : l;
            },
            69269: (t, e, i) => {
                var r = i(16544),
                    s = i(3649),
                    a = i(24061),
                    n = s("species");
                t.exports = function (t) {
                    return (
                        a >= 51 ||
                        !r(function () {
                            var e = [];
                            return (
                                ((e.constructor = {})[n] = function () {
                                    return { foo: 1 };
                                }),
                                1 !== e[t](Boolean).foo
                            );
                        })
                    );
                };
            },
            60906: (t, e, i) => {
                "use strict";
                var r = i(16544);
                t.exports = function (t, e) {
                    var i = [][t];
                    return (
                        !!i &&
                        r(function () {
                            i.call(
                                null,
                                e ||
                                    function () {
                                        throw 1;
                                    },
                                1
                            );
                        })
                    );
                };
            },
            64325: (t, e, i) => {
                var r = i(96163),
                    s = i(61324),
                    a = i(55044),
                    n = i(70097),
                    o = function (t) {
                        return function (e, i, o, l) {
                            r(i);
                            var h = s(e),
                                c = a(h),
                                d = n(h.length),
                                u = t ? d - 1 : 0,
                                p = t ? -1 : 1;
                            if (o < 2)
                                for (;;) {
                                    if (u in c) {
                                        (l = c[u]), (u += p);
                                        break;
                                    }
                                    if (((u += p), t ? u < 0 : d <= u)) throw TypeError("Reduce of empty array with no initial value");
                                }
                            for (; t ? u >= 0 : d > u; u += p) u in c && (l = i(l, c[u], u, h));
                            return l;
                        };
                    };
                t.exports = { left: o(!1), right: o(!0) };
            },
            25744: (t) => {
                var e = Math.floor,
                    i = function (t, e) {
                        for (var i, r, s = t.length, a = 1; a < s; ) {
                            for (r = a, i = t[a]; r && e(t[r - 1], i) > 0; ) t[r] = t[--r];
                            r !== a++ && (t[r] = i);
                        }
                        return t;
                    },
                    r = function (t, e, i) {
                        for (var r = t.length, s = e.length, a = 0, n = 0, o = []; a < r || n < s; ) a < r && n < s ? o.push(i(t[a], e[n]) <= 0 ? t[a++] : e[n++]) : o.push(a < r ? t[a++] : e[n++]);
                        return o;
                    };
                t.exports = function t(s, a) {
                    var n = s.length,
                        o = e(n / 2);
                    return n < 8 ? i(s, a) : r(t(s.slice(0, o), a), t(s.slice(o), a), a);
                };
            },
            44822: (t, e, i) => {
                var r = i(90794),
                    s = i(54521),
                    a = i(3649)("species");
                t.exports = function (t, e) {
                    var i;
                    return s(t) && ("function" != typeof (i = t.constructor) || (i !== Array && !s(i.prototype)) ? r(i) && null === (i = i[a]) && (i = void 0) : (i = void 0)), new (void 0 === i ? Array : i)(0 === e ? 0 : e);
                };
            },
            33878: (t, e, i) => {
                "use strict";
                var r = i(70097),
                    s = i(61324),
                    a = i(35897),
                    n = i(44822),
                    o = [].push;
                t.exports = function (t) {
                    var e,
                        i,
                        l,
                        h,
                        c = s(this),
                        d = r(c.length),
                        u = n(c, 0),
                        p = new (a("Map"))();
                    if ("function" == typeof t) e = t;
                    else {
                        if (null != t) throw new TypeError("Incorrect resolver!");
                        e = function (t) {
                            return t;
                        };
                    }
                    for (i = 0; i < d; i++) (h = e((l = c[i]))), p.has(h) || p.set(h, l);
                    return (
                        p.forEach(function (t) {
                            o.call(u, t);
                        }),
                        u
                    );
                };
            },
            17562: (t, e, i) => {
                "use strict";
                var r = i(21287),
                    s = i(96163),
                    a = i(92569),
                    n = i(3590),
                    o = i(57),
                    l = i(96893),
                    h = i(3649),
                    c = i(42743),
                    d = i(35897)("Promise"),
                    u = c.set,
                    p = c.get,
                    m = h("toStringTag"),
                    f = function (t) {
                        var e = p(this).iterator,
                            i = e.return;
                        return void 0 === i ? d.resolve({ done: !0, value: t }) : a(i.call(e, t));
                    },
                    g = function (t) {
                        var e = p(this).iterator,
                            i = e.throw;
                        return void 0 === i ? d.reject(t) : i.call(e, t);
                    };
                t.exports = function (t, e) {
                    var i = function (t) {
                        (t.next = s(t.iterator.next)), (t.done = !1), u(this, t);
                    };
                    return (
                        (i.prototype = l(n(r.AsyncIterator.prototype), {
                            next: function (e) {
                                var i = p(this);
                                if (i.done) return d.resolve({ done: !0, value: void 0 });
                                try {
                                    return d.resolve(a(t.call(i, e, d)));
                                } catch (t) {
                                    return d.reject(t);
                                }
                            },
                            return: f,
                            throw: g,
                        })),
                        e || o(i.prototype, m, "Generator"),
                        i
                    );
                };
            },
            60316: (t, e, i) => {
                "use strict";
                var r = i(96163),
                    s = i(92569),
                    a = i(35897)("Promise"),
                    n = [].push,
                    o = function (t) {
                        var e = 0 == t,
                            i = 1 == t,
                            o = 2 == t,
                            l = 3 == t;
                        return function (t, h) {
                            s(t);
                            var c = r(t.next),
                                d = e ? [] : void 0;
                            return (
                                e || r(h),
                                new a(function (r, u) {
                                    var p = function (e, i) {
                                            try {
                                                var r = t.return;
                                                if (void 0 !== r)
                                                    return a.resolve(r.call(t)).then(
                                                        function () {
                                                            e(i);
                                                        },
                                                        function (t) {
                                                            u(t);
                                                        }
                                                    );
                                            } catch (t) {
                                                return u(t);
                                            }
                                            e(i);
                                        },
                                        m = function (t) {
                                            p(u, t);
                                        };
                                    !(function u() {
                                        try {
                                            a.resolve(s(c.call(t))).then(function (t) {
                                                try {
                                                    if (s(t).done) r(e ? d : !l && (o || void 0));
                                                    else {
                                                        var c = t.value;
                                                        e
                                                            ? (n.call(d, c), u())
                                                            : a.resolve(h(c)).then(function (t) {
                                                                  i ? u() : o ? (t ? u() : p(r, !1)) : t ? p(r, l || c) : u();
                                                              }, m);
                                                    }
                                                } catch (t) {
                                                    m(t);
                                                }
                                            }, m);
                                        } catch (t) {
                                            m(t);
                                        }
                                    })();
                                })
                            );
                        };
                    };
                t.exports = { toArray: o(0), forEach: o(1), every: o(2), some: o(3), find: o(4) };
            },
            46578: (t, e, i) => {
                var r,
                    s,
                    a = i(47583),
                    n = i(31314),
                    o = i(80729),
                    l = i(34402),
                    h = i(57),
                    c = i(3649),
                    d = i(86268),
                    u = "USE_FUNCTION_CONSTRUCTOR",
                    p = c("asyncIterator"),
                    m = a.AsyncIterator,
                    f = n.AsyncIteratorPrototype;
                if (!d)
                    if (f) r = f;
                    else if ("function" == typeof m) r = m.prototype;
                    else if (n[u] || a[u])
                        try {
                            (s = o(o(o(Function("return async function*(){}()")())))), o(s) === Object.prototype && (r = s);
                        } catch (t) {}
                r || (r = {}),
                    l(r, p) ||
                        h(r, p, function () {
                            return this;
                        }),
                    (t.exports = r);
            },
            65294: (t, e, i) => {
                var r = i(92569),
                    s = i(47093);
                t.exports = function (t, e, i, a) {
                    try {
                        return a ? e(r(i)[0], i[1]) : e(i);
                    } catch (e) {
                        throw (s(t), e);
                    }
                };
            },
            3616: (t, e, i) => {
                var r = i(3649)("iterator"),
                    s = !1;
                try {
                    var a = 0,
                        n = {
                            next: function () {
                                return { done: !!a++ };
                            },
                            return: function () {
                                s = !0;
                            },
                        };
                    (n[r] = function () {
                        return this;
                    }),
                        Array.from(n, function () {
                            throw 2;
                        });
                } catch (t) {}
                t.exports = function (t, e) {
                    if (!e && !s) return !1;
                    var i = !1;
                    try {
                        var a = {};
                        (a[r] = function () {
                            return {
                                next: function () {
                                    return { done: (i = !0) };
                                },
                            };
                        }),
                            t(a);
                    } catch (t) {}
                    return i;
                };
            },
            39624: (t) => {
                var e = {}.toString;
                t.exports = function (t) {
                    return e.call(t).slice(8, -1);
                };
            },
            33058: (t, e, i) => {
                var r = i(88191),
                    s = i(39624),
                    a = i(3649)("toStringTag"),
                    n =
                        "Arguments" ==
                        s(
                            (function () {
                                return arguments;
                            })()
                        );
                t.exports = r
                    ? s
                    : function (t) {
                          var e, i, r;
                          return void 0 === t
                              ? "Undefined"
                              : null === t
                              ? "Null"
                              : "string" ==
                                typeof (i = (function (t, e) {
                                    try {
                                        return t[e];
                                    } catch (t) {}
                                })((e = Object(t)), a))
                              ? i
                              : n
                              ? s(e)
                              : "Object" == (r = s(e)) && "function" == typeof e.callee
                              ? "Arguments"
                              : r;
                      };
            },
            99390: (t, e, i) => {
                "use strict";
                var r = i(92569),
                    s = i(96163);
                t.exports = function () {
                    for (var t = r(this), e = s(t.add), i = 0, a = arguments.length; i < a; i++) e.call(t, arguments[i]);
                    return t;
                };
            },
            85337: (t, e, i) => {
                "use strict";
                var r = i(92569),
                    s = i(96163);
                t.exports = function () {
                    for (var t, e = r(this), i = s(e.delete), a = !0, n = 0, o = arguments.length; n < o; n++) (t = i.call(e, arguments[n])), (a = a && t);
                    return !!a;
                };
            },
            46123: (t, e, i) => {
                "use strict";
                var r = i(96163),
                    s = i(12938),
                    a = i(54026);
                t.exports = function (t) {
                    var e,
                        i,
                        n,
                        o,
                        l = arguments.length,
                        h = l > 1 ? arguments[1] : void 0;
                    return (
                        r(this),
                        (e = void 0 !== h) && r(h),
                        null == t
                            ? new this()
                            : ((i = []),
                              e
                                  ? ((n = 0),
                                    (o = s(h, l > 2 ? arguments[2] : void 0, 2)),
                                    a(t, function (t) {
                                        i.push(o(t, n++));
                                    }))
                                  : a(t, i.push, { that: i }),
                              new this(i))
                    );
                };
            },
            59284: (t) => {
                "use strict";
                t.exports = function () {
                    for (var t = arguments.length, e = new Array(t); t--; ) e[t] = arguments[t];
                    return new this(e);
                };
            },
            26100: (t, e, i) => {
                "use strict";
                var r = i(94615).f,
                    s = i(3590),
                    a = i(96893),
                    n = i(12938),
                    o = i(44761),
                    l = i(54026),
                    h = i(99012),
                    c = i(7730),
                    d = i(18494),
                    u = i(51909).fastKey,
                    p = i(42743),
                    m = p.set,
                    f = p.getterFor;
                t.exports = {
                    getConstructor: function (t, e, i, h) {
                        var c = t(function (t, r) {
                                o(t, c, e), m(t, { type: e, index: s(null), first: void 0, last: void 0, size: 0 }), d || (t.size = 0), null != r && l(r, t[h], { that: t, AS_ENTRIES: i });
                            }),
                            p = f(e),
                            g = function (t, e, i) {
                                var r,
                                    s,
                                    a = p(t),
                                    n = v(t, e);
                                return (
                                    n
                                        ? (n.value = i)
                                        : ((a.last = n = { index: (s = u(e, !0)), key: e, value: i, previous: (r = a.last), next: void 0, removed: !1 }),
                                          a.first || (a.first = n),
                                          r && (r.next = n),
                                          d ? a.size++ : t.size++,
                                          "F" !== s && (a.index[s] = n)),
                                    t
                                );
                            },
                            v = function (t, e) {
                                var i,
                                    r = p(t),
                                    s = u(e);
                                if ("F" !== s) return r.index[s];
                                for (i = r.first; i; i = i.next) if (i.key == e) return i;
                            };
                        return (
                            a(c.prototype, {
                                clear: function () {
                                    for (var t = p(this), e = t.index, i = t.first; i; ) (i.removed = !0), i.previous && (i.previous = i.previous.next = void 0), delete e[i.index], (i = i.next);
                                    (t.first = t.last = void 0), d ? (t.size = 0) : (this.size = 0);
                                },
                                delete: function (t) {
                                    var e = this,
                                        i = p(e),
                                        r = v(e, t);
                                    if (r) {
                                        var s = r.next,
                                            a = r.previous;
                                        delete i.index[r.index], (r.removed = !0), a && (a.next = s), s && (s.previous = a), i.first == r && (i.first = s), i.last == r && (i.last = a), d ? i.size-- : e.size--;
                                    }
                                    return !!r;
                                },
                                forEach: function (t) {
                                    for (var e, i = p(this), r = n(t, arguments.length > 1 ? arguments[1] : void 0, 3); (e = e ? e.next : i.first); ) for (r(e.value, e.key, this); e && e.removed; ) e = e.previous;
                                },
                                has: function (t) {
                                    return !!v(this, t);
                                },
                            }),
                            a(
                                c.prototype,
                                i
                                    ? {
                                          get: function (t) {
                                              var e = v(this, t);
                                              return e && e.value;
                                          },
                                          set: function (t, e) {
                                              return g(this, 0 === t ? 0 : t, e);
                                          },
                                      }
                                    : {
                                          add: function (t) {
                                              return g(this, (t = 0 === t ? 0 : t), t);
                                          },
                                      }
                            ),
                            d &&
                                r(c.prototype, "size", {
                                    get: function () {
                                        return p(this).size;
                                    },
                                }),
                            c
                        );
                    },
                    setStrong: function (t, e, i) {
                        var r = e + " Iterator",
                            s = f(e),
                            a = f(r);
                        h(
                            t,
                            e,
                            function (t, e) {
                                m(this, { type: r, target: t, state: s(t), kind: e, last: void 0 });
                            },
                            function () {
                                for (var t = a(this), e = t.kind, i = t.last; i && i.removed; ) i = i.previous;
                                return t.target && (t.last = i = i ? i.next : t.state.first)
                                    ? "keys" == e
                                        ? { value: i.key, done: !1 }
                                        : "values" == e
                                        ? { value: i.value, done: !1 }
                                        : { value: [i.key, i.value], done: !1 }
                                    : ((t.target = void 0), { value: void 0, done: !0 });
                            },
                            i ? "entries" : "values",
                            !i,
                            !0
                        ),
                            c(e);
                    },
                };
            },
            57012: (t, e, i) => {
                "use strict";
                var r = i(96893),
                    s = i(51909).getWeakData,
                    a = i(92569),
                    n = i(90794),
                    o = i(44761),
                    l = i(54026),
                    h = i(24805),
                    c = i(34402),
                    d = i(42743),
                    u = d.set,
                    p = d.getterFor,
                    m = h.find,
                    f = h.findIndex,
                    g = 0,
                    v = function (t) {
                        return t.frozen || (t.frozen = new b());
                    },
                    b = function () {
                        this.entries = [];
                    },
                    y = function (t, e) {
                        return m(t.entries, function (t) {
                            return t[0] === e;
                        });
                    };
                (b.prototype = {
                    get: function (t) {
                        var e = y(this, t);
                        if (e) return e[1];
                    },
                    has: function (t) {
                        return !!y(this, t);
                    },
                    set: function (t, e) {
                        var i = y(this, t);
                        i ? (i[1] = e) : this.entries.push([t, e]);
                    },
                    delete: function (t) {
                        var e = f(this.entries, function (e) {
                            return e[0] === t;
                        });
                        return ~e && this.entries.splice(e, 1), !!~e;
                    },
                }),
                    (t.exports = {
                        getConstructor: function (t, e, i, h) {
                            var d = t(function (t, r) {
                                    o(t, d, e), u(t, { type: e, id: g++, frozen: void 0 }), null != r && l(r, t[h], { that: t, AS_ENTRIES: i });
                                }),
                                m = p(e),
                                f = function (t, e, i) {
                                    var r = m(t),
                                        n = s(a(e), !0);
                                    return !0 === n ? v(r).set(e, i) : (n[r.id] = i), t;
                                };
                            return (
                                r(d.prototype, {
                                    delete: function (t) {
                                        var e = m(this);
                                        if (!n(t)) return !1;
                                        var i = s(t);
                                        return !0 === i ? v(e).delete(t) : i && c(i, e.id) && delete i[e.id];
                                    },
                                    has: function (t) {
                                        var e = m(this);
                                        if (!n(t)) return !1;
                                        var i = s(t);
                                        return !0 === i ? v(e).has(t) : i && c(i, e.id);
                                    },
                                }),
                                r(
                                    d.prototype,
                                    i
                                        ? {
                                              get: function (t) {
                                                  var e = m(this);
                                                  if (n(t)) {
                                                      var i = s(t);
                                                      return !0 === i ? v(e).get(t) : i ? i[e.id] : void 0;
                                                  }
                                              },
                                              set: function (t, e) {
                                                  return f(this, t, e);
                                              },
                                          }
                                        : {
                                              add: function (t) {
                                                  return f(this, t, !0);
                                              },
                                          }
                                ),
                                d
                            );
                        },
                    });
            },
            24802: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(47583),
                    a = i(34451),
                    n = i(61270),
                    o = i(51909),
                    l = i(54026),
                    h = i(44761),
                    c = i(90794),
                    d = i(16544),
                    u = i(3616),
                    p = i(98821),
                    m = i(40434);
                t.exports = function (t, e, i) {
                    var f = -1 !== t.indexOf("Map"),
                        g = -1 !== t.indexOf("Weak"),
                        v = f ? "set" : "add",
                        b = s[t],
                        y = b && b.prototype,
                        w = b,
                        x = {},
                        E = function (t) {
                            var e = y[t];
                            n(
                                y,
                                t,
                                "add" == t
                                    ? function (t) {
                                          return e.call(this, 0 === t ? 0 : t), this;
                                      }
                                    : "delete" == t
                                    ? function (t) {
                                          return !(g && !c(t)) && e.call(this, 0 === t ? 0 : t);
                                      }
                                    : "get" == t
                                    ? function (t) {
                                          return g && !c(t) ? void 0 : e.call(this, 0 === t ? 0 : t);
                                      }
                                    : "has" == t
                                    ? function (t) {
                                          return !(g && !c(t)) && e.call(this, 0 === t ? 0 : t);
                                      }
                                    : function (t, i) {
                                          return e.call(this, 0 === t ? 0 : t, i), this;
                                      }
                            );
                        };
                    if (
                        a(
                            t,
                            "function" != typeof b ||
                                !(
                                    g ||
                                    (y.forEach &&
                                        !d(function () {
                                            new b().entries().next();
                                        }))
                                )
                        )
                    )
                        (w = i.getConstructor(e, t, f, v)), (o.REQUIRED = !0);
                    else if (a(t, !0)) {
                        var C = new w(),
                            S = C[v](g ? {} : -0, 1) != C,
                            T = d(function () {
                                C.has(1);
                            }),
                            _ = u(function (t) {
                                new b(t);
                            }),
                            M =
                                !g &&
                                d(function () {
                                    for (var t = new b(), e = 5; e--; ) t[v](e, e);
                                    return !t.has(-0);
                                });
                        _ ||
                            (((w = e(function (e, i) {
                                h(e, w, t);
                                var r = m(new b(), e, w);
                                return null != i && l(i, r[v], { that: r, AS_ENTRIES: f }), r;
                            })).prototype = y),
                            (y.constructor = w)),
                            (T || M) && (E("delete"), E("has"), f && E("get")),
                            (M || S) && E(v),
                            g && y.clear && delete y.clear;
                    }
                    return (x[t] = w), r({ global: !0, forced: w != b }, x), p(w, t), g || i.setStrong(w, t, f), w;
                };
            },
            3246: (t, e, i) => {
                var r = i(14327),
                    s = i(31770),
                    a = i(3590),
                    n = i(90794),
                    o = function () {
                        (this.object = null), (this.symbol = null), (this.primitives = null), (this.objectsByIndex = a(null));
                    };
                (o.prototype.get = function (t, e) {
                    return this[t] || (this[t] = e());
                }),
                    (o.prototype.next = function (t, e, i) {
                        var a = i ? this.objectsByIndex[t] || (this.objectsByIndex[t] = new s()) : this.primitives || (this.primitives = new r()),
                            n = a.get(e);
                        return n || a.set(e, (n = new o())), n;
                    });
                var l = new o();
                t.exports = function () {
                    var t,
                        e,
                        i = l,
                        r = arguments.length;
                    for (t = 0; t < r; t++) n((e = arguments[t])) && (i = i.next(t, e, !0));
                    if (this === Object && i === l) throw TypeError("Composite keys must contain a non-primitive component");
                    for (t = 0; t < r; t++) n((e = arguments[t])) || (i = i.next(t, e, !1));
                    return i;
                };
            },
            83478: (t, e, i) => {
                var r = i(34402),
                    s = i(40929),
                    a = i(46683),
                    n = i(94615);
                t.exports = function (t, e) {
                    for (var i = s(e), o = n.f, l = a.f, h = 0; h < i.length; h++) {
                        var c = i[h];
                        r(t, c) || o(t, c, l(e, c));
                    }
                };
            },
            83989: (t, e, i) => {
                var r = i(3649)("match");
                t.exports = function (t) {
                    var e = /./;
                    try {
                        "/./"[t](e);
                    } catch (i) {
                        try {
                            return (e[r] = !1), "/./"[t](e);
                        } catch (t) {}
                    }
                    return !1;
                };
            },
            50926: (t, e, i) => {
                var r = i(16544);
                t.exports = !r(function () {
                    function t() {}
                    return (t.prototype.constructor = null), Object.getPrototypeOf(new t()) !== t.prototype;
                });
            },
            35888: (t, e, i) => {
                var r = i(63955),
                    s = /"/g;
                t.exports = function (t, e, i, a) {
                    var n = String(r(t)),
                        o = "<" + e;
                    return "" !== i && (o += " " + i + '="' + String(a).replace(s, "&quot;") + '"'), o + ">" + n + "</" + e + ">";
                };
            },
            24683: (t, e, i) => {
                "use strict";
                var r = i(72365).IteratorPrototype,
                    s = i(3590),
                    a = i(54677),
                    n = i(98821),
                    o = i(60339),
                    l = function () {
                        return this;
                    };
                t.exports = function (t, e, i) {
                    var h = e + " Iterator";
                    return (t.prototype = s(r, { next: a(1, i) })), n(t, h, !1, !0), (o[h] = l), t;
                };
            },
            57: (t, e, i) => {
                var r = i(18494),
                    s = i(94615),
                    a = i(54677);
                t.exports = r
                    ? function (t, e, i) {
                          return s.f(t, e, a(1, i));
                      }
                    : function (t, e, i) {
                          return (t[e] = i), t;
                      };
            },
            54677: (t) => {
                t.exports = function (t, e) {
                    return { enumerable: !(1 & t), configurable: !(2 & t), writable: !(4 & t), value: e };
                };
            },
            65999: (t, e, i) => {
                "use strict";
                var r = i(22670),
                    s = i(94615),
                    a = i(54677);
                t.exports = function (t, e, i) {
                    var n = r(e);
                    n in t ? s.f(t, n, a(0, i)) : (t[n] = i);
                };
            },
            74095: (t, e, i) => {
                "use strict";
                var r = i(16544),
                    s = i(70578).start,
                    a = Math.abs,
                    n = Date.prototype,
                    o = n.getTime,
                    l = n.toISOString;
                t.exports =
                    r(function () {
                        return "0385-07-25T07:06:39.999Z" != l.call(new Date(-50000000000001));
                    }) ||
                    !r(function () {
                        l.call(new Date(NaN));
                    })
                        ? function () {
                              if (!isFinite(o.call(this))) throw RangeError("Invalid time value");
                              var t = this,
                                  e = t.getUTCFullYear(),
                                  i = t.getUTCMilliseconds(),
                                  r = e < 0 ? "-" : e > 9999 ? "+" : "";
                              return (
                                  r +
                                  s(a(e), r ? 6 : 4, 0) +
                                  "-" +
                                  s(t.getUTCMonth() + 1, 2, 0) +
                                  "-" +
                                  s(t.getUTCDate(), 2, 0) +
                                  "T" +
                                  s(t.getUTCHours(), 2, 0) +
                                  ":" +
                                  s(t.getUTCMinutes(), 2, 0) +
                                  ":" +
                                  s(t.getUTCSeconds(), 2, 0) +
                                  "." +
                                  s(i, 3, 0) +
                                  "Z"
                              );
                          }
                        : l;
            },
            40307: (t, e, i) => {
                "use strict";
                var r = i(92569),
                    s = i(22670);
                t.exports = function (t) {
                    if ("string" !== t && "number" !== t && "default" !== t) throw TypeError("Incorrect hint");
                    return s(r(this), "number" !== t);
                };
            },
            99012: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(24683),
                    a = i(80729),
                    n = i(17496),
                    o = i(98821),
                    l = i(57),
                    h = i(61270),
                    c = i(3649),
                    d = i(86268),
                    u = i(60339),
                    p = i(72365),
                    m = p.IteratorPrototype,
                    f = p.BUGGY_SAFARI_ITERATORS,
                    g = c("iterator"),
                    v = "keys",
                    b = "values",
                    y = "entries",
                    w = function () {
                        return this;
                    };
                t.exports = function (t, e, i, c, p, x, E) {
                    s(i, e, c);
                    var C,
                        S,
                        T,
                        _ = function (t) {
                            if (t === p && D) return D;
                            if (!f && t in k) return k[t];
                            switch (t) {
                                case v:
                                case b:
                                case y:
                                    return function () {
                                        return new i(this, t);
                                    };
                            }
                            return function () {
                                return new i(this);
                            };
                        },
                        M = e + " Iterator",
                        P = !1,
                        k = t.prototype,
                        A = k[g] || k["@@iterator"] || (p && k[p]),
                        D = (!f && A) || _(p),
                        L = ("Array" == e && k.entries) || A;
                    if (
                        (L && ((C = a(L.call(new t()))), m !== Object.prototype && C.next && (d || a(C) === m || (n ? n(C, m) : "function" != typeof C[g] && l(C, g, w)), o(C, M, !0, !0), d && (u[M] = w))),
                        p == b &&
                            A &&
                            A.name !== b &&
                            ((P = !0),
                            (D = function () {
                                return A.call(this);
                            })),
                        (d && !E) || k[g] === D || l(k, g, D),
                        (u[e] = D),
                        p)
                    )
                        if (((S = { values: _(b), keys: x ? D : _(v), entries: _(y) }), E)) for (T in S) (f || P || !(T in k)) && h(k, T, S[T]);
                        else r({ target: e, proto: !0, forced: f || P }, S);
                    return S;
                };
            },
            82219: (t, e, i) => {
                var r = i(21287),
                    s = i(34402),
                    a = i(20491),
                    n = i(94615).f;
                t.exports = function (t) {
                    var e = r.Symbol || (r.Symbol = {});
                    s(e, t) || n(e, t, { value: a.f(t) });
                };
            },
            18494: (t, e, i) => {
                var r = i(16544);
                t.exports = !r(function () {
                    return (
                        7 !=
                        Object.defineProperty({}, 1, {
                            get: function () {
                                return 7;
                            },
                        })[1]
                    );
                });
            },
            26668: (t, e, i) => {
                var r = i(47583),
                    s = i(90794),
                    a = r.document,
                    n = s(a) && s(a.createElement);
                t.exports = function (t) {
                    return n ? a.createElement(t) : {};
                };
            },
            86778: (t) => {
                t.exports = {
                    CSSRuleList: 0,
                    CSSStyleDeclaration: 0,
                    CSSValueList: 0,
                    ClientRectList: 0,
                    DOMRectList: 0,
                    DOMStringList: 0,
                    DOMTokenList: 1,
                    DataTransferItemList: 0,
                    FileList: 0,
                    HTMLAllCollection: 0,
                    HTMLCollection: 0,
                    HTMLFormElement: 0,
                    HTMLSelectElement: 0,
                    MediaList: 0,
                    MimeTypeArray: 0,
                    NamedNodeMap: 0,
                    NodeList: 1,
                    PaintRequestList: 0,
                    Plugin: 0,
                    PluginArray: 0,
                    SVGLengthList: 0,
                    SVGNumberList: 0,
                    SVGPathSegList: 0,
                    SVGPointList: 0,
                    SVGStringList: 0,
                    SVGTransformList: 0,
                    SourceBufferList: 0,
                    StyleSheetList: 0,
                    TextTrackCueList: 0,
                    TextTrackList: 0,
                    TouchList: 0,
                };
            },
            15857: (t, e, i) => {
                var r = i(46918).match(/firefox\/(\d+)/i);
                t.exports = !!r && +r[1];
            },
            12274: (t) => {
                t.exports = "object" == typeof window;
            },
            50924: (t, e, i) => {
                var r = i(46918);
                t.exports = /MSIE|Trident/.test(r);
            },
            17020: (t, e, i) => {
                var r = i(46918);
                t.exports = /(?:iphone|ipod|ipad).*applewebkit/i.test(r);
            },
            45354: (t, e, i) => {
                var r = i(39624),
                    s = i(47583);
                t.exports = "process" == r(s.process);
            },
            86846: (t, e, i) => {
                var r = i(46918);
                t.exports = /web0s(?!.*chrome)/i.test(r);
            },
            46918: (t, e, i) => {
                var r = i(35897);
                t.exports = r("navigator", "userAgent") || "";
            },
            24061: (t, e, i) => {
                var r,
                    s,
                    a = i(47583),
                    n = i(46918),
                    o = a.process,
                    l = o && o.versions,
                    h = l && l.v8;
                h ? (s = (r = h.split("."))[0] < 4 ? 1 : r[0] + r[1]) : n && (!(r = n.match(/Edge\/(\d+)/)) || r[1] >= 74) && (r = n.match(/Chrome\/(\d+)/)) && (s = r[1]), (t.exports = s && +s);
            },
            20003: (t, e, i) => {
                var r = i(46918).match(/AppleWebKit\/(\d+)\./);
                t.exports = !!r && +r[1];
            },
            15690: (t) => {
                t.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
            },
            37263: (t, e, i) => {
                var r = i(47583),
                    s = i(46683).f,
                    a = i(57),
                    n = i(61270),
                    o = i(50460),
                    l = i(83478),
                    h = i(34451);
                t.exports = function (t, e) {
                    var i,
                        c,
                        d,
                        u,
                        p,
                        m = t.target,
                        f = t.global,
                        g = t.stat;
                    if ((i = f ? r : g ? r[m] || o(m, {}) : (r[m] || {}).prototype))
                        for (c in e) {
                            if (((u = e[c]), (d = t.noTargetGet ? (p = s(i, c)) && p.value : i[c]), !h(f ? c : m + (g ? "." : "#") + c, t.forced) && void 0 !== d)) {
                                if (typeof u == typeof d) continue;
                                l(u, d);
                            }
                            (t.sham || (d && d.sham)) && a(u, "sham", !0), n(i, c, u, t);
                        }
                };
            },
            16544: (t) => {
                t.exports = function (t) {
                    try {
                        return !!t();
                    } catch (t) {
                        return !0;
                    }
                };
            },
            90783: (t, e, i) => {
                "use strict";
                i(62322);
                var r = i(61270),
                    s = i(48445),
                    a = i(16544),
                    n = i(3649),
                    o = i(57),
                    l = n("species"),
                    h = RegExp.prototype;
                t.exports = function (t, e, i, c) {
                    var d = n(t),
                        u = !a(function () {
                            var e = {};
                            return (
                                (e[d] = function () {
                                    return 7;
                                }),
                                7 != ""[t](e)
                            );
                        }),
                        p =
                            u &&
                            !a(function () {
                                var e = !1,
                                    i = /a/;
                                return (
                                    "split" === t &&
                                        (((i = {}).constructor = {}),
                                        (i.constructor[l] = function () {
                                            return i;
                                        }),
                                        (i.flags = ""),
                                        (i[d] = /./[d])),
                                    (i.exec = function () {
                                        return (e = !0), null;
                                    }),
                                    i[d](""),
                                    !e
                                );
                            });
                    if (!u || !p || i) {
                        var m = /./[d],
                            f = e(d, ""[t], function (t, e, i, r, a) {
                                var n = e.exec;
                                return n === s || n === h.exec ? (u && !a ? { done: !0, value: m.call(e, i, r) } : { done: !0, value: t.call(i, e, r) }) : { done: !1 };
                            });
                        r(String.prototype, t, f[0]), r(h, d, f[1]);
                    }
                    c && o(h[d], "sham", !0);
                };
            },
            21266: (t, e, i) => {
                "use strict";
                var r = i(54521),
                    s = i(70097),
                    a = i(12938);
                t.exports = function t(e, i, n, o, l, h, c, d) {
                    for (var u, p = l, m = 0, f = !!c && a(c, d, 3); m < o; ) {
                        if (m in n) {
                            if (((u = f ? f(n[m], m, i) : n[m]), h > 0 && r(u))) p = t(e, i, u, s(u.length), p, h - 1) - 1;
                            else {
                                if (p >= 9007199254740991) throw TypeError("Exceed the acceptable array length");
                                e[p] = u;
                            }
                            p++;
                        }
                        m++;
                    }
                    return p;
                };
            },
            39974: (t, e, i) => {
                var r = i(16544);
                t.exports = !r(function () {
                    return Object.isExtensible(Object.preventExtensions({}));
                });
            },
            12938: (t, e, i) => {
                var r = i(96163);
                t.exports = function (t, e, i) {
                    if ((r(t), void 0 === e)) return t;
                    switch (i) {
                        case 0:
                            return function () {
                                return t.call(e);
                            };
                        case 1:
                            return function (i) {
                                return t.call(e, i);
                            };
                        case 2:
                            return function (i, r) {
                                return t.call(e, i, r);
                            };
                        case 3:
                            return function (i, r, s) {
                                return t.call(e, i, r, s);
                            };
                    }
                    return function () {
                        return t.apply(e, arguments);
                    };
                };
            },
            51335: (t, e, i) => {
                "use strict";
                var r = i(96163),
                    s = i(90794),
                    a = [].slice,
                    n = {};
                t.exports =
                    Function.bind ||
                    function (t) {
                        var e = r(this),
                            i = a.call(arguments, 1),
                            o = function () {
                                var r = i.concat(a.call(arguments));
                                return this instanceof o
                                    ? (function (t, e, i) {
                                          if (!(e in n)) {
                                              for (var r = [], s = 0; s < e; s++) r[s] = "a[" + s + "]";
                                              n[e] = Function("C,a", "return new C(" + r.join(",") + ")");
                                          }
                                          return n[e](t, i);
                                      })(e, r.length, r)
                                    : e.apply(t, r);
                            };
                        return s(e.prototype) && (o.prototype = e.prototype), o;
                    };
            },
            36630: (t, e, i) => {
                var r = i(38272),
                    s = i(3649)("asyncIterator");
                t.exports = function (t) {
                    var e = t[s];
                    return void 0 === e ? r(t) : e;
                };
            },
            35897: (t, e, i) => {
                var r = i(21287),
                    s = i(47583),
                    a = function (t) {
                        return "function" == typeof t ? t : void 0;
                    };
                t.exports = function (t, e) {
                    return arguments.length < 2 ? a(r[t]) || a(s[t]) : (r[t] && r[t][e]) || (s[t] && s[t][e]);
                };
            },
            38272: (t, e, i) => {
                var r = i(33058),
                    s = i(60339),
                    a = i(3649)("iterator");
                t.exports = function (t) {
                    if (null != t) return t[a] || t["@@iterator"] || s[r(t)];
                };
            },
            36307: (t, e, i) => {
                var r = i(92569),
                    s = i(38272);
                t.exports = function (t) {
                    var e = s(t);
                    if ("function" != typeof e) throw TypeError(String(t) + " is not iterable");
                    return r(e.call(t));
                };
            },
            53780: (t, e, i) => {
                var r = i(86268),
                    s = i(36307);
                t.exports = r
                    ? s
                    : function (t) {
                          return Map.prototype.entries.call(t);
                      };
            },
            91206: (t, e, i) => {
                var r = i(86268),
                    s = i(36307);
                t.exports = r
                    ? s
                    : function (t) {
                          return Set.prototype.values.call(t);
                      };
            },
            4305: (t, e, i) => {
                var r = i(61324),
                    s = Math.floor,
                    a = "".replace,
                    n = /\$([$&'`]|\d{1,2}|<[^>]*>)/g,
                    o = /\$([$&'`]|\d{1,2})/g;
                t.exports = function (t, e, i, l, h, c) {
                    var d = i + t.length,
                        u = l.length,
                        p = o;
                    return (
                        void 0 !== h && ((h = r(h)), (p = n)),
                        a.call(c, p, function (r, a) {
                            var n;
                            switch (a.charAt(0)) {
                                case "$":
                                    return "$";
                                case "&":
                                    return t;
                                case "`":
                                    return e.slice(0, i);
                                case "'":
                                    return e.slice(d);
                                case "<":
                                    n = h[a.slice(1, -1)];
                                    break;
                                default:
                                    var o = +a;
                                    if (0 === o) return r;
                                    if (o > u) {
                                        var c = s(o / 10);
                                        return 0 === c ? r : c <= u ? (void 0 === l[c - 1] ? a.charAt(1) : l[c - 1] + a.charAt(1)) : r;
                                    }
                                    n = l[o - 1];
                            }
                            return void 0 === n ? "" : n;
                        })
                    );
                };
            },
            47583: (t, e, i) => {
                var r = function (t) {
                    return t && t.Math == Math && t;
                };
                t.exports =
                    r("object" == typeof globalThis && globalThis) ||
                    r("object" == typeof window && window) ||
                    r("object" == typeof self && self) ||
                    r("object" == typeof i.g && i.g) ||
                    (function () {
                        return this;
                    })() ||
                    Function("return this")();
            },
            34402: (t, e, i) => {
                var r = i(61324),
                    s = {}.hasOwnProperty;
                t.exports =
                    Object.hasOwn ||
                    function (t, e) {
                        return s.call(r(t), e);
                    };
            },
            64639: (t) => {
                t.exports = {};
            },
            92716: (t, e, i) => {
                var r = i(47583);
                t.exports = function (t, e) {
                    var i = r.console;
                    i && i.error && (1 === arguments.length ? i.error(t) : i.error(t, e));
                };
            },
            90482: (t, e, i) => {
                var r = i(35897);
                t.exports = r("document", "documentElement");
            },
            275: (t, e, i) => {
                var r = i(18494),
                    s = i(16544),
                    a = i(26668);
                t.exports =
                    !r &&
                    !s(function () {
                        return (
                            7 !=
                            Object.defineProperty(a("div"), "a", {
                                get: function () {
                                    return 7;
                                },
                            }).a
                        );
                    });
            },
            43834: (t) => {
                var e = Math.abs,
                    i = Math.pow,
                    r = Math.floor,
                    s = Math.log,
                    a = Math.LN2;
                t.exports = {
                    pack: function (t, n, o) {
                        var l,
                            h,
                            c,
                            d = new Array(o),
                            u = 8 * o - n - 1,
                            p = (1 << u) - 1,
                            m = p >> 1,
                            f = 23 === n ? i(2, -24) - i(2, -77) : 0,
                            g = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0,
                            v = 0;
                        for (
                            (t = e(t)) != t || t === 1 / 0
                                ? ((h = t != t ? 1 : 0), (l = p))
                                : ((l = r(s(t) / a)),
                                  t * (c = i(2, -l)) < 1 && (l--, (c *= 2)),
                                  (t += l + m >= 1 ? f / c : f * i(2, 1 - m)) * c >= 2 && (l++, (c /= 2)),
                                  l + m >= p ? ((h = 0), (l = p)) : l + m >= 1 ? ((h = (t * c - 1) * i(2, n)), (l += m)) : ((h = t * i(2, m - 1) * i(2, n)), (l = 0)));
                            n >= 8;
                            d[v++] = 255 & h, h /= 256, n -= 8
                        );
                        for (l = (l << n) | h, u += n; u > 0; d[v++] = 255 & l, l /= 256, u -= 8);
                        return (d[--v] |= 128 * g), d;
                    },
                    unpack: function (t, e) {
                        var r,
                            s = t.length,
                            a = 8 * s - e - 1,
                            n = (1 << a) - 1,
                            o = n >> 1,
                            l = a - 7,
                            h = s - 1,
                            c = t[h--],
                            d = 127 & c;
                        for (c >>= 7; l > 0; d = 256 * d + t[h], h--, l -= 8);
                        for (r = d & ((1 << -l) - 1), d >>= -l, l += e; l > 0; r = 256 * r + t[h], h--, l -= 8);
                        if (0 === d) d = 1 - o;
                        else {
                            if (d === n) return r ? NaN : c ? -1 / 0 : 1 / 0;
                            (r += i(2, e)), (d -= o);
                        }
                        return (c ? -1 : 1) * r * i(2, d - e);
                    },
                };
            },
            55044: (t, e, i) => {
                var r = i(16544),
                    s = i(39624),
                    a = "".split;
                t.exports = r(function () {
                    return !Object("z").propertyIsEnumerable(0);
                })
                    ? function (t) {
                          return "String" == s(t) ? a.call(t, "") : Object(t);
                      }
                    : Object;
            },
            40434: (t, e, i) => {
                var r = i(90794),
                    s = i(17496);
                t.exports = function (t, e, i) {
                    var a, n;
                    return s && "function" == typeof (a = e.constructor) && a !== i && r((n = a.prototype)) && n !== i.prototype && s(t, n), t;
                };
            },
            69734: (t, e, i) => {
                var r = i(31314),
                    s = Function.toString;
                "function" != typeof r.inspectSource &&
                    (r.inspectSource = function (t) {
                        return s.call(t);
                    }),
                    (t.exports = r.inspectSource);
            },
            51909: (t, e, i) => {
                var r = i(64639),
                    s = i(90794),
                    a = i(34402),
                    n = i(94615).f,
                    o = i(98284),
                    l = i(39974),
                    h = o("meta"),
                    c = 0,
                    d =
                        Object.isExtensible ||
                        function () {
                            return !0;
                        },
                    u = function (t) {
                        n(t, h, { value: { objectID: "O" + ++c, weakData: {} } });
                    },
                    p = (t.exports = {
                        REQUIRED: !1,
                        fastKey: function (t, e) {
                            if (!s(t)) return "symbol" == typeof t ? t : ("string" == typeof t ? "S" : "P") + t;
                            if (!a(t, h)) {
                                if (!d(t)) return "F";
                                if (!e) return "E";
                                u(t);
                            }
                            return t[h].objectID;
                        },
                        getWeakData: function (t, e) {
                            if (!a(t, h)) {
                                if (!d(t)) return !0;
                                if (!e) return !1;
                                u(t);
                            }
                            return t[h].weakData;
                        },
                        onFreeze: function (t) {
                            return l && p.REQUIRED && d(t) && !a(t, h) && u(t), t;
                        },
                    });
                r[h] = !0;
            },
            42743: (t, e, i) => {
                var r,
                    s,
                    a,
                    n = i(89491),
                    o = i(47583),
                    l = i(90794),
                    h = i(57),
                    c = i(34402),
                    d = i(31314),
                    u = i(89137),
                    p = i(64639),
                    m = "Object already initialized",
                    f = o.WeakMap;
                if (n || d.state) {
                    var g = d.state || (d.state = new f()),
                        v = g.get,
                        b = g.has,
                        y = g.set;
                    (r = function (t, e) {
                        if (b.call(g, t)) throw new TypeError(m);
                        return (e.facade = t), y.call(g, t, e), e;
                    }),
                        (s = function (t) {
                            return v.call(g, t) || {};
                        }),
                        (a = function (t) {
                            return b.call(g, t);
                        });
                } else {
                    var w = u("state");
                    (p[w] = !0),
                        (r = function (t, e) {
                            if (c(t, w)) throw new TypeError(m);
                            return (e.facade = t), h(t, w, e), e;
                        }),
                        (s = function (t) {
                            return c(t, w) ? t[w] : {};
                        }),
                        (a = function (t) {
                            return c(t, w);
                        });
                }
                t.exports = {
                    set: r,
                    get: s,
                    has: a,
                    enforce: function (t) {
                        return a(t) ? s(t) : r(t, {});
                    },
                    getterFor: function (t) {
                        return function (e) {
                            var i;
                            if (!l(e) || (i = s(e)).type !== t) throw TypeError("Incompatible receiver, " + t + " required");
                            return i;
                        };
                    },
                };
            },
            70114: (t, e, i) => {
                var r = i(3649),
                    s = i(60339),
                    a = r("iterator"),
                    n = Array.prototype;
                t.exports = function (t) {
                    return void 0 !== t && (s.Array === t || n[a] === t);
                };
            },
            54521: (t, e, i) => {
                var r = i(39624);
                t.exports =
                    Array.isArray ||
                    function (t) {
                        return "Array" == r(t);
                    };
            },
            34451: (t, e, i) => {
                var r = i(16544),
                    s = /#|\.prototype\./,
                    a = function (t, e) {
                        var i = o[n(t)];
                        return i == h || (i != l && ("function" == typeof e ? r(e) : !!e));
                    },
                    n = (a.normalize = function (t) {
                        return String(t).replace(s, ".").toLowerCase();
                    }),
                    o = (a.data = {}),
                    l = (a.NATIVE = "N"),
                    h = (a.POLYFILL = "P");
                t.exports = a;
            },
            87186: (t, e, i) => {
                var r = i(90794),
                    s = Math.floor;
                t.exports = function (t) {
                    return !r(t) && isFinite(t) && s(t) === t;
                };
            },
            90794: (t) => {
                t.exports = function (t) {
                    return "object" == typeof t ? null !== t : "function" == typeof t;
                };
            },
            86268: (t) => {
                t.exports = !1;
            },
            17574: (t, e, i) => {
                var r = i(90794),
                    s = i(39624),
                    a = i(3649)("match");
                t.exports = function (t) {
                    var e;
                    return r(t) && (void 0 !== (e = t[a]) ? !!e : "RegExp" == s(t));
                };
            },
            54026: (t, e, i) => {
                var r = i(92569),
                    s = i(70114),
                    a = i(70097),
                    n = i(12938),
                    o = i(38272),
                    l = i(47093),
                    h = function (t, e) {
                        (this.stopped = t), (this.result = e);
                    };
                t.exports = function (t, e, i) {
                    var c,
                        d,
                        u,
                        p,
                        m,
                        f,
                        g,
                        v = i && i.that,
                        b = !(!i || !i.AS_ENTRIES),
                        y = !(!i || !i.IS_ITERATOR),
                        w = !(!i || !i.INTERRUPTED),
                        x = n(e, v, 1 + b + w),
                        E = function (t) {
                            return c && l(c), new h(!0, t);
                        },
                        C = function (t) {
                            return b ? (r(t), w ? x(t[0], t[1], E) : x(t[0], t[1])) : w ? x(t, E) : x(t);
                        };
                    if (y) c = t;
                    else {
                        if ("function" != typeof (d = o(t))) throw TypeError("Target is not iterable");
                        if (s(d)) {
                            for (u = 0, p = a(t.length); p > u; u++) if ((m = C(t[u])) && m instanceof h) return m;
                            return new h(!1);
                        }
                        c = d.call(t);
                    }
                    for (f = c.next; !(g = f.call(c)).done; ) {
                        try {
                            m = C(g.value);
                        } catch (t) {
                            throw (l(c), t);
                        }
                        if ("object" == typeof m && m && m instanceof h) return m;
                    }
                    return new h(!1);
                };
            },
            47093: (t, e, i) => {
                var r = i(92569);
                t.exports = function (t) {
                    var e = t.return;
                    if (void 0 !== e) return r(e.call(t)).value;
                };
            },
            72471: (t, e, i) => {
                "use strict";
                var r = i(21287),
                    s = i(96163),
                    a = i(92569),
                    n = i(3590),
                    o = i(57),
                    l = i(96893),
                    h = i(3649),
                    c = i(42743),
                    d = c.set,
                    u = c.get,
                    p = h("toStringTag"),
                    m = function (t) {
                        var e = u(this).iterator,
                            i = e.return;
                        return void 0 === i ? { done: !0, value: t } : a(i.call(e, t));
                    },
                    f = function (t) {
                        var e = u(this).iterator,
                            i = e.throw;
                        if (void 0 === i) throw t;
                        return i.call(e, t);
                    };
                t.exports = function (t, e) {
                    var i = function (t) {
                        (t.next = s(t.iterator.next)), (t.done = !1), d(this, t);
                    };
                    return (
                        (i.prototype = l(n(r.Iterator.prototype), {
                            next: function () {
                                var e = u(this),
                                    i = e.done ? void 0 : t.apply(e, arguments);
                                return { done: e.done, value: i };
                            },
                            return: m,
                            throw: f,
                        })),
                        e || o(i.prototype, p, "Generator"),
                        i
                    );
                };
            },
            72365: (t, e, i) => {
                "use strict";
                var r,
                    s,
                    a,
                    n = i(16544),
                    o = i(80729),
                    l = i(57),
                    h = i(34402),
                    c = i(3649),
                    d = i(86268),
                    u = c("iterator"),
                    p = !1;
                [].keys && ("next" in (a = [].keys()) ? (s = o(o(a))) !== Object.prototype && (r = s) : (p = !0));
                var m =
                    null == r ||
                    n(function () {
                        var t = {};
                        return r[u].call(t) !== t;
                    });
                m && (r = {}),
                    (d && !m) ||
                        h(r, u) ||
                        l(r, u, function () {
                            return this;
                        }),
                    (t.exports = { IteratorPrototype: r, BUGGY_SAFARI_ITERATORS: p });
            },
            60339: (t) => {
                t.exports = {};
            },
            53069: (t, e, i) => {
                "use strict";
                var r = i(92569);
                t.exports = function (t, e) {
                    var i = r(this),
                        s = i.has(t) && "update" in e ? e.update(i.get(t), t, i) : e.insert(t, i);
                    return i.set(t, s), s;
                };
            },
            48080: (t, e, i) => {
                "use strict";
                var r = i(92569);
                t.exports = function (t, e) {
                    var i,
                        s = r(this),
                        a = arguments.length > 2 ? arguments[2] : void 0;
                    if ("function" != typeof e && "function" != typeof a) throw TypeError("At least one callback required");
                    return s.has(t) ? ((i = s.get(t)), "function" == typeof e && ((i = e(i)), s.set(t, i))) : "function" == typeof a && ((i = a()), s.set(t, i)), i;
                };
            },
            1599: (t) => {
                var e = Math.expm1,
                    i = Math.exp;
                t.exports =
                    !e || e(10) > 22025.465794806718 || e(10) < 22025.465794806718 || -2e-17 != e(-2e-17)
                        ? function (t) {
                              return 0 == (t = +t) ? t : t > -1e-6 && t < 1e-6 ? t + (t * t) / 2 : i(t) - 1;
                          }
                        : e;
            },
            75661: (t, e, i) => {
                var r = i(87768),
                    s = Math.abs,
                    a = Math.pow,
                    n = a(2, -52),
                    o = a(2, -23),
                    l = a(2, 127) * (2 - o),
                    h = a(2, -126);
                t.exports =
                    Math.fround ||
                    function (t) {
                        var e,
                            i,
                            a = s(t),
                            c = r(t);
                        return a < h ? c * (a / h / o + 1 / n - 1 / n) * h * o : (i = (e = (1 + o / n) * a) - (e - a)) > l || i != i ? c * (1 / 0) : c * i;
                    };
            },
            40865: (t) => {
                var e = Math.log;
                t.exports =
                    Math.log1p ||
                    function (t) {
                        return (t = +t) > -1e-8 && t < 1e-8 ? t - (t * t) / 2 : e(1 + t);
                    };
            },
            86617: (t) => {
                t.exports =
                    Math.scale ||
                    function (t, e, i, r, s) {
                        return 0 === arguments.length || t != t || e != e || i != i || r != r || s != s ? NaN : t === 1 / 0 || t === -1 / 0 ? t : ((t - e) * (s - r)) / (i - e) + r;
                    };
            },
            87768: (t) => {
                t.exports =
                    Math.sign ||
                    function (t) {
                        return 0 == (t = +t) || t != t ? t : t < 0 ? -1 : 1;
                    };
            },
            92095: (t, e, i) => {
                var r,
                    s,
                    a,
                    n,
                    o,
                    l,
                    h,
                    c,
                    d = i(47583),
                    u = i(46683).f,
                    p = i(48117).set,
                    m = i(17020),
                    f = i(86846),
                    g = i(45354),
                    v = d.MutationObserver || d.WebKitMutationObserver,
                    b = d.document,
                    y = d.process,
                    w = d.Promise,
                    x = u(d, "queueMicrotask"),
                    E = x && x.value;
                E ||
                    ((r = function () {
                        var t, e;
                        for (g && (t = y.domain) && t.exit(); s; ) {
                            (e = s.fn), (s = s.next);
                            try {
                                e();
                            } catch (t) {
                                throw (s ? n() : (a = void 0), t);
                            }
                        }
                        (a = void 0), t && t.enter();
                    }),
                    m || g || f || !v || !b
                        ? w && w.resolve
                            ? (((h = w.resolve(void 0)).constructor = w),
                              (c = h.then),
                              (n = function () {
                                  c.call(h, r);
                              }))
                            : (n = g
                                  ? function () {
                                        y.nextTick(r);
                                    }
                                  : function () {
                                        p.call(d, r);
                                    })
                        : ((o = !0),
                          (l = b.createTextNode("")),
                          new v(r).observe(l, { characterData: !0 }),
                          (n = function () {
                              l.data = o = !o;
                          }))),
                    (t.exports =
                        E ||
                        function (t) {
                            var e = { fn: t, next: void 0 };
                            a && (a.next = e), s || ((s = e), n()), (a = e);
                        });
            },
            40783: (t, e, i) => {
                var r = i(47583);
                t.exports = r.Promise;
            },
            88640: (t, e, i) => {
                var r = i(24061),
                    s = i(16544);
                t.exports =
                    !!Object.getOwnPropertySymbols &&
                    !s(function () {
                        var t = Symbol();
                        return !String(t) || !(Object(t) instanceof Symbol) || (!Symbol.sham && r && r < 41);
                    });
            },
            77664: (t, e, i) => {
                var r = i(16544),
                    s = i(3649),
                    a = i(86268),
                    n = s("iterator");
                t.exports = !r(function () {
                    var t = new URL("b?a=1&b=2&c=3", "http://a"),
                        e = t.searchParams,
                        i = "";
                    return (
                        (t.pathname = "c%20d"),
                        e.forEach(function (t, r) {
                            e.delete("b"), (i += r + t);
                        }),
                        (a && !t.toJSON) ||
                            !e.sort ||
                            "http://a/c%20d?a=1&c=3" !== t.href ||
                            "3" !== e.get("c") ||
                            "a=1" !== String(new URLSearchParams("?a=1")) ||
                            !e[n] ||
                            "a" !== new URL("https://a@b").username ||
                            "b" !== new URLSearchParams(new URLSearchParams("a=b")).get("a") ||
                            "xn--e1aybc" !== new URL("http://Ñ‚ÐµÑÑ‚").host ||
                            "#%D0%B1" !== new URL("http://a#Ð±").hash ||
                            "a1c3" !== i ||
                            "x" !== new URL("http://x", void 0).host
                    );
                });
            },
            89491: (t, e, i) => {
                var r = i(47583),
                    s = i(69734),
                    a = r.WeakMap;
                t.exports = "function" == typeof a && /native code/.test(s(a));
            },
            5084: (t, e, i) => {
                "use strict";
                var r = i(96163),
                    s = function (t) {
                        var e, i;
                        (this.promise = new t(function (t, r) {
                            if (void 0 !== e || void 0 !== i) throw TypeError("Bad Promise constructor");
                            (e = t), (i = r);
                        })),
                            (this.resolve = r(e)),
                            (this.reject = r(i));
                    };
                t.exports.f = function (t) {
                    return new s(t);
                };
            },
            59041: (t, e, i) => {
                var r = i(17574);
                t.exports = function (t) {
                    if (r(t)) throw TypeError("The method doesn't accept regular expressions");
                    return t;
                };
            },
            79606: (t, e, i) => {
                var r = i(47583).isFinite;
                t.exports =
                    Number.isFinite ||
                    function (t) {
                        return "number" == typeof t && r(t);
                    };
            },
            17560: (t, e, i) => {
                var r = i(47583),
                    s = i(68940).trim,
                    a = i(20771),
                    n = r.parseFloat,
                    o = 1 / n(a + "-0") != -1 / 0;
                t.exports = o
                    ? function (t) {
                          var e = s(String(t)),
                              i = n(e);
                          return 0 === i && "-" == e.charAt(0) ? -0 : i;
                      }
                    : n;
            },
            35407: (t, e, i) => {
                var r = i(47583),
                    s = i(68940).trim,
                    a = i(20771),
                    n = r.parseInt,
                    o = /^[+-]?0[Xx]/,
                    l = 8 !== n(a + "08") || 22 !== n(a + "0x16");
                t.exports = l
                    ? function (t, e) {
                          var i = s(String(t));
                          return n(i, e >>> 0 || (o.test(i) ? 16 : 10));
                      }
                    : n;
            },
            94106: (t, e, i) => {
                "use strict";
                var r = i(42743),
                    s = i(24683),
                    a = i(90794),
                    n = i(28728),
                    o = i(18494),
                    l = "Incorrect Number.range arguments",
                    h = "NumericRangeIterator",
                    c = r.set,
                    d = r.getterFor(h),
                    u = s(
                        function (t, e, i, r, s, n) {
                            if (typeof t != r || (e !== 1 / 0 && e !== -1 / 0 && typeof e != r)) throw new TypeError(l);
                            if (t === 1 / 0 || t === -1 / 0) throw new RangeError(l);
                            var d,
                                u = e > t,
                                p = !1;
                            if (void 0 === i) d = void 0;
                            else if (a(i)) (d = i.step), (p = !!i.inclusive);
                            else {
                                if (typeof i != r) throw new TypeError(l);
                                d = i;
                            }
                            if ((null == d && (d = u ? n : -n), typeof d != r)) throw new TypeError(l);
                            if (d === 1 / 0 || d === -1 / 0 || (d === s && t !== e)) throw new RangeError(l);
                            c(this, { type: h, start: t, end: e, step: d, inclusiveEnd: p, hitsEnd: t != t || e != e || d != d || e > t != d > s, currentCount: s, zero: s }),
                                o || ((this.start = t), (this.end = e), (this.step = d), (this.inclusive = p));
                        },
                        h,
                        function () {
                            var t = d(this);
                            if (t.hitsEnd) return { value: void 0, done: !0 };
                            var e = t.start,
                                i = t.end,
                                r = e + t.step * t.currentCount++;
                            r === i && (t.hitsEnd = !0);
                            var s = t.inclusiveEnd;
                            return (i > e ? (s ? r > i : r >= i) : s ? i > r : i >= r) ? { value: void 0, done: (t.hitsEnd = !0) } : { value: r, done: !1 };
                        }
                    ),
                    p = function (t) {
                        return { get: t, set: function () {}, configurable: !0, enumerable: !1 };
                    };
                o &&
                    n(u.prototype, {
                        start: p(function () {
                            return d(this).start;
                        }),
                        end: p(function () {
                            return d(this).end;
                        }),
                        inclusive: p(function () {
                            return d(this).inclusiveEnd;
                        }),
                        step: p(function () {
                            return d(this).step;
                        }),
                    }),
                    (t.exports = u);
            },
            79304: (t, e, i) => {
                "use strict";
                var r = i(18494),
                    s = i(16544),
                    a = i(75432),
                    n = i(74012),
                    o = i(20112),
                    l = i(61324),
                    h = i(55044),
                    c = Object.assign,
                    d = Object.defineProperty;
                t.exports =
                    !c ||
                    s(function () {
                        if (
                            r &&
                            1 !==
                                c(
                                    { b: 1 },
                                    c(
                                        d({}, "a", {
                                            enumerable: !0,
                                            get: function () {
                                                d(this, "b", { value: 3, enumerable: !1 });
                                            },
                                        }),
                                        { b: 2 }
                                    )
                                ).b
                        )
                            return !0;
                        var t = {},
                            e = {},
                            i = Symbol(),
                            s = "abcdefghijklmnopqrst";
                        return (
                            (t[i] = 7),
                            s.split("").forEach(function (t) {
                                e[t] = t;
                            }),
                            7 != c({}, t)[i] || a(c({}, e)).join("") != s
                        );
                    })
                        ? function (t, e) {
                              for (var i = l(t), s = arguments.length, c = 1, d = n.f, u = o.f; s > c; )
                                  for (var p, m = h(arguments[c++]), f = d ? a(m).concat(d(m)) : a(m), g = f.length, v = 0; g > v; ) (p = f[v++]), (r && !u.call(m, p)) || (i[p] = m[p]);
                              return i;
                          }
                        : c;
            },
            3590: (t, e, i) => {
                var r,
                    s = i(92569),
                    a = i(28728),
                    n = i(15690),
                    o = i(64639),
                    l = i(90482),
                    h = i(26668),
                    c = i(89137),
                    d = "prototype",
                    u = "script",
                    p = c("IE_PROTO"),
                    m = function () {},
                    f = function (t) {
                        return "<" + u + ">" + t + "</" + u + ">";
                    },
                    g = function () {
                        try {
                            r = document.domain && new ActiveXObject("htmlfile");
                        } catch (t) {}
                        var t, e, i;
                        g = r
                            ? (function (t) {
                                  t.write(f("")), t.close();
                                  var e = t.parentWindow.Object;
                                  return (t = null), e;
                              })(r)
                            : ((e = h("iframe")), (i = "java" + u + ":"), (e.style.display = "none"), l.appendChild(e), (e.src = String(i)), (t = e.contentWindow.document).open(), t.write(f("document.F=Object")), t.close(), t.F);
                        for (var s = n.length; s--; ) delete g[d][n[s]];
                        return g();
                    };
                (o[p] = !0),
                    (t.exports =
                        Object.create ||
                        function (t, e) {
                            var i;
                            return null !== t ? ((m[d] = s(t)), (i = new m()), (m[d] = null), (i[p] = t)) : (i = g()), void 0 === e ? i : a(i, e);
                        });
            },
            28728: (t, e, i) => {
                var r = i(18494),
                    s = i(94615),
                    a = i(92569),
                    n = i(75432);
                t.exports = r
                    ? Object.defineProperties
                    : function (t, e) {
                          a(t);
                          for (var i, r = n(e), o = r.length, l = 0; o > l; ) s.f(t, (i = r[l++]), e[i]);
                          return t;
                      };
            },
            94615: (t, e, i) => {
                var r = i(18494),
                    s = i(275),
                    a = i(92569),
                    n = i(22670),
                    o = Object.defineProperty;
                e.f = r
                    ? o
                    : function (t, e, i) {
                          if ((a(t), (e = n(e, !0)), a(i), s))
                              try {
                                  return o(t, e, i);
                              } catch (t) {}
                          if ("get" in i || "set" in i) throw TypeError("Accessors not supported");
                          return "value" in i && (t[e] = i.value), t;
                      };
            },
            46683: (t, e, i) => {
                var r = i(18494),
                    s = i(20112),
                    a = i(54677),
                    n = i(22977),
                    o = i(22670),
                    l = i(34402),
                    h = i(275),
                    c = Object.getOwnPropertyDescriptor;
                e.f = r
                    ? c
                    : function (t, e) {
                          if (((t = n(t)), (e = o(e, !0)), h))
                              try {
                                  return c(t, e);
                              } catch (t) {}
                          if (l(t, e)) return a(!s.f.call(t, e), t[e]);
                      };
            },
            63130: (t, e, i) => {
                var r = i(22977),
                    s = i(9275).f,
                    a = {}.toString,
                    n = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
                t.exports.f = function (t) {
                    return n && "[object Window]" == a.call(t)
                        ? (function (t) {
                              try {
                                  return s(t);
                              } catch (t) {
                                  return n.slice();
                              }
                          })(t)
                        : s(r(t));
                };
            },
            9275: (t, e, i) => {
                var r = i(98356),
                    s = i(15690).concat("length", "prototype");
                e.f =
                    Object.getOwnPropertyNames ||
                    function (t) {
                        return r(t, s);
                    };
            },
            74012: (t, e) => {
                e.f = Object.getOwnPropertySymbols;
            },
            80729: (t, e, i) => {
                var r = i(34402),
                    s = i(61324),
                    a = i(89137),
                    n = i(50926),
                    o = a("IE_PROTO"),
                    l = Object.prototype;
                t.exports = n
                    ? Object.getPrototypeOf
                    : function (t) {
                          return (t = s(t)), r(t, o) ? t[o] : "function" == typeof t.constructor && t instanceof t.constructor ? t.constructor.prototype : t instanceof Object ? l : null;
                      };
            },
            40927: (t, e, i) => {
                "use strict";
                var r = i(42743),
                    s = i(24683),
                    a = i(34402),
                    n = i(75432),
                    o = i(61324),
                    l = "Object Iterator",
                    h = r.set,
                    c = r.getterFor(l);
                t.exports = s(
                    function (t, e) {
                        var i = o(t);
                        h(this, { type: l, mode: e, object: i, keys: n(i), index: 0 });
                    },
                    "Object",
                    function () {
                        for (var t = c(this), e = t.keys; ; ) {
                            if (null === e || t.index >= e.length) return (t.object = t.keys = null), { value: void 0, done: !0 };
                            var i = e[t.index++],
                                r = t.object;
                            if (a(r, i)) {
                                switch (t.mode) {
                                    case "keys":
                                        return { value: i, done: !1 };
                                    case "values":
                                        return { value: r[i], done: !1 };
                                }
                                return { value: [i, r[i]], done: !1 };
                            }
                        }
                    }
                );
            },
            98356: (t, e, i) => {
                var r = i(34402),
                    s = i(22977),
                    a = i(15766).indexOf,
                    n = i(64639);
                t.exports = function (t, e) {
                    var i,
                        o = s(t),
                        l = 0,
                        h = [];
                    for (i in o) !r(n, i) && r(o, i) && h.push(i);
                    for (; e.length > l; ) r(o, (i = e[l++])) && (~a(h, i) || h.push(i));
                    return h;
                };
            },
            75432: (t, e, i) => {
                var r = i(98356),
                    s = i(15690);
                t.exports =
                    Object.keys ||
                    function (t) {
                        return r(t, s);
                    };
            },
            20112: (t, e) => {
                "use strict";
                var i = {}.propertyIsEnumerable,
                    r = Object.getOwnPropertyDescriptor,
                    s = r && !i.call({ 1: 2 }, 1);
                e.f = s
                    ? function (t) {
                          var e = r(this, t);
                          return !!e && e.enumerable;
                      }
                    : i;
            },
            36037: (t, e, i) => {
                "use strict";
                var r = i(86268),
                    s = i(47583),
                    a = i(16544),
                    n = i(20003);
                t.exports =
                    r ||
                    !a(function () {
                        if (!(n && n < 535)) {
                            var t = Math.random();
                            __defineSetter__.call(null, t, function () {}), delete s[t];
                        }
                    });
            },
            17496: (t, e, i) => {
                var r = i(92569),
                    s = i(79882);
                t.exports =
                    Object.setPrototypeOf ||
                    ("__proto__" in {}
                        ? (function () {
                              var t,
                                  e = !1,
                                  i = {};
                              try {
                                  (t = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(i, []), (e = i instanceof Array);
                              } catch (t) {}
                              return function (i, a) {
                                  return r(i), s(a), e ? t.call(i, a) : (i.__proto__ = a), i;
                              };
                          })()
                        : void 0);
            },
            69953: (t, e, i) => {
                var r = i(18494),
                    s = i(75432),
                    a = i(22977),
                    n = i(20112).f,
                    o = function (t) {
                        return function (e) {
                            for (var i, o = a(e), l = s(o), h = l.length, c = 0, d = []; h > c; ) (i = l[c++]), (r && !n.call(o, i)) || d.push(t ? [i, o[i]] : o[i]);
                            return d;
                        };
                    };
                t.exports = { entries: o(!0), values: o(!1) };
            },
            43060: (t, e, i) => {
                "use strict";
                var r = i(88191),
                    s = i(33058);
                t.exports = r
                    ? {}.toString
                    : function () {
                          return "[object " + s(this) + "]";
                      };
            },
            40929: (t, e, i) => {
                var r = i(35897),
                    s = i(9275),
                    a = i(74012),
                    n = i(92569);
                t.exports =
                    r("Reflect", "ownKeys") ||
                    function (t) {
                        var e = s.f(n(t)),
                            i = a.f;
                        return i ? e.concat(i(t)) : e;
                    };
            },
            21287: (t, e, i) => {
                var r = i(47583);
                t.exports = r;
            },
            80544: (t) => {
                t.exports = function (t) {
                    try {
                        return { error: !1, value: t() };
                    } catch (t) {
                        return { error: !0, value: t };
                    }
                };
            },
            95732: (t, e, i) => {
                var r = i(92569),
                    s = i(90794),
                    a = i(5084);
                t.exports = function (t, e) {
                    if ((r(t), s(e) && e.constructor === t)) return e;
                    var i = a.f(t);
                    return (0, i.resolve)(e), i.promise;
                };
            },
            96893: (t, e, i) => {
                var r = i(61270);
                t.exports = function (t, e, i) {
                    for (var s in e) r(t, s, e[s], i);
                    return t;
                };
            },
            61270: (t, e, i) => {
                var r = i(47583),
                    s = i(57),
                    a = i(34402),
                    n = i(50460),
                    o = i(69734),
                    l = i(42743),
                    h = l.get,
                    c = l.enforce,
                    d = String(String).split("String");
                (t.exports = function (t, e, i, o) {
                    var l,
                        h = !!o && !!o.unsafe,
                        u = !!o && !!o.enumerable,
                        p = !!o && !!o.noTargetGet;
                    "function" == typeof i && ("string" != typeof e || a(i, "name") || s(i, "name", e), (l = c(i)).source || (l.source = d.join("string" == typeof e ? e : ""))),
                        t !== r ? (h ? !p && t[e] && (u = !0) : delete t[e], u ? (t[e] = i) : s(t, e, i)) : u ? (t[e] = i) : n(e, i);
                })(Function.prototype, "toString", function () {
                    return ("function" == typeof this && h(this).source) || o(this);
                });
            },
            67802: (t, e, i) => {
                var r = i(14327),
                    s = i(31770),
                    a = i(17836)("metadata"),
                    n = a.store || (a.store = new s()),
                    o = function (t, e, i) {
                        var s = n.get(t);
                        if (!s) {
                            if (!i) return;
                            n.set(t, (s = new r()));
                        }
                        var a = s.get(e);
                        if (!a) {
                            if (!i) return;
                            s.set(e, (a = new r()));
                        }
                        return a;
                    };
                t.exports = {
                    store: n,
                    getMap: o,
                    has: function (t, e, i) {
                        var r = o(e, i, !1);
                        return void 0 !== r && r.has(t);
                    },
                    get: function (t, e, i) {
                        var r = o(e, i, !1);
                        return void 0 === r ? void 0 : r.get(t);
                    },
                    set: function (t, e, i, r) {
                        o(i, r, !0).set(t, e);
                    },
                    keys: function (t, e) {
                        var i = o(t, e, !1),
                            r = [];
                        return (
                            i &&
                                i.forEach(function (t, e) {
                                    r.push(e);
                                }),
                            r
                        );
                    },
                    toKey: function (t) {
                        return void 0 === t || "symbol" == typeof t ? t : String(t);
                    },
                };
            },
            74214: (t, e, i) => {
                var r = i(39624),
                    s = i(48445);
                t.exports = function (t, e) {
                    var i = t.exec;
                    if ("function" == typeof i) {
                        var a = i.call(t, e);
                        if ("object" != typeof a) throw TypeError("RegExp exec method returned something other than an Object or null");
                        return a;
                    }
                    if ("RegExp" !== r(t)) throw TypeError("RegExp#exec called on incompatible receiver");
                    return s.call(t, e);
                };
            },
            48445: (t, e, i) => {
                "use strict";
                var r,
                    s,
                    a = i(41118),
                    n = i(35230),
                    o = i(17836),
                    l = i(3590),
                    h = i(42743).get,
                    c = i(74121),
                    d = i(1712),
                    u = RegExp.prototype.exec,
                    p = o("native-string-replace", String.prototype.replace),
                    m = u,
                    f = ((r = /a/), (s = /b*/g), u.call(r, "a"), u.call(s, "a"), 0 !== r.lastIndex || 0 !== s.lastIndex),
                    g = n.UNSUPPORTED_Y || n.BROKEN_CARET,
                    v = void 0 !== /()??/.exec("")[1];
                (f || v || g || c || d) &&
                    (m = function (t) {
                        var e,
                            i,
                            r,
                            s,
                            n,
                            o,
                            c,
                            d = this,
                            b = h(d),
                            y = b.raw;
                        if (y) return (y.lastIndex = d.lastIndex), (e = m.call(y, t)), (d.lastIndex = y.lastIndex), e;
                        var w = b.groups,
                            x = g && d.sticky,
                            E = a.call(d),
                            C = d.source,
                            S = 0,
                            T = t;
                        if (
                            (x &&
                                (-1 === (E = E.replace("y", "")).indexOf("g") && (E += "g"),
                                (T = String(t).slice(d.lastIndex)),
                                d.lastIndex > 0 && (!d.multiline || (d.multiline && "\n" !== t[d.lastIndex - 1])) && ((C = "(?: " + C + ")"), (T = " " + T), S++),
                                (i = new RegExp("^(?:" + C + ")", E))),
                            v && (i = new RegExp("^" + C + "$(?!\\s)", E)),
                            f && (r = d.lastIndex),
                            (s = u.call(x ? i : d, T)),
                            x ? (s ? ((s.input = s.input.slice(S)), (s[0] = s[0].slice(S)), (s.index = d.lastIndex), (d.lastIndex += s[0].length)) : (d.lastIndex = 0)) : f && s && (d.lastIndex = d.global ? s.index + s[0].length : r),
                            v &&
                                s &&
                                s.length > 1 &&
                                p.call(s[0], i, function () {
                                    for (n = 1; n < arguments.length - 2; n++) void 0 === arguments[n] && (s[n] = void 0);
                                }),
                            s && w)
                        )
                            for (s.groups = o = l(null), n = 0; n < w.length; n++) o[(c = w[n])[0]] = s[c[1]];
                        return s;
                    }),
                    (t.exports = m);
            },
            41118: (t, e, i) => {
                "use strict";
                var r = i(92569);
                t.exports = function () {
                    var t = r(this),
                        e = "";
                    return t.global && (e += "g"), t.ignoreCase && (e += "i"), t.multiline && (e += "m"), t.dotAll && (e += "s"), t.unicode && (e += "u"), t.sticky && (e += "y"), e;
                };
            },
            35230: (t, e, i) => {
                var r = i(16544),
                    s = function (t, e) {
                        return RegExp(t, e);
                    };
                (e.UNSUPPORTED_Y = r(function () {
                    var t = s("a", "y");
                    return (t.lastIndex = 2), null != t.exec("abcd");
                })),
                    (e.BROKEN_CARET = r(function () {
                        var t = s("^r", "gy");
                        return (t.lastIndex = 2), null != t.exec("str");
                    }));
            },
            74121: (t, e, i) => {
                var r = i(16544);
                t.exports = r(function () {
                    var t = RegExp(".", "string".charAt(0));
                    return !(t.dotAll && t.exec("\n") && "s" === t.flags);
                });
            },
            1712: (t, e, i) => {
                var r = i(16544);
                t.exports = r(function () {
                    var t = RegExp("(?<a>b)", "string".charAt(5));
                    return "b" !== t.exec("b").groups.a || "bc" !== "b".replace(t, "$<a>c");
                });
            },
            63955: (t) => {
                t.exports = function (t) {
                    if (null == t) throw TypeError("Can't call method on " + t);
                    return t;
                };
            },
            40994: (t) => {
                t.exports = function (t, e) {
                    return t === e || (t != t && e != e);
                };
            },
            8690: (t) => {
                t.exports =
                    Object.is ||
                    function (t, e) {
                        return t === e ? 0 !== t || 1 / t == 1 / e : t != t && e != e;
                    };
            },
            50460: (t, e, i) => {
                var r = i(47583),
                    s = i(57);
                t.exports = function (t, e) {
                    try {
                        s(r, t, e);
                    } catch (i) {
                        r[t] = e;
                    }
                    return e;
                };
            },
            7730: (t, e, i) => {
                "use strict";
                var r = i(35897),
                    s = i(94615),
                    a = i(3649),
                    n = i(18494),
                    o = a("species");
                t.exports = function (t) {
                    var e = r(t),
                        i = s.f;
                    n &&
                        e &&
                        !e[o] &&
                        i(e, o, {
                            configurable: !0,
                            get: function () {
                                return this;
                            },
                        });
                };
            },
            98821: (t, e, i) => {
                var r = i(94615).f,
                    s = i(34402),
                    a = i(3649)("toStringTag");
                t.exports = function (t, e, i) {
                    t && !s((t = i ? t : t.prototype), a) && r(t, a, { configurable: !0, value: e });
                };
            },
            89137: (t, e, i) => {
                var r = i(17836),
                    s = i(98284),
                    a = r("keys");
                t.exports = function (t) {
                    return a[t] || (a[t] = s(t));
                };
            },
            31314: (t, e, i) => {
                var r = i(47583),
                    s = i(50460),
                    a = "__core-js_shared__",
                    n = r[a] || s(a, {});
                t.exports = n;
            },
            17836: (t, e, i) => {
                var r = i(86268),
                    s = i(31314);
                (t.exports = function (t, e) {
                    return s[t] || (s[t] = void 0 !== e ? e : {});
                })("versions", []).push({ version: "3.15.1", mode: r ? "pure" : "global", copyright: "Â© 2021 Denis Pushkarev (zloirock.ru)" });
            },
            40564: (t, e, i) => {
                var r = i(92569),
                    s = i(96163),
                    a = i(3649)("species");
                t.exports = function (t, e) {
                    var i,
                        n = r(t).constructor;
                    return void 0 === n || null == (i = r(n)[a]) ? e : s(i);
                };
            },
            29578: (t, e, i) => {
                var r = i(16544);
                t.exports = function (t) {
                    return r(function () {
                        var e = ""[t]('"');
                        return e !== e.toLowerCase() || e.split('"').length > 3;
                    });
                };
            },
            96389: (t, e, i) => {
                var r = i(75089),
                    s = i(63955),
                    a = function (t) {
                        return function (e, i) {
                            var a,
                                n,
                                o = String(s(e)),
                                l = r(i),
                                h = o.length;
                            return l < 0 || l >= h
                                ? t
                                    ? ""
                                    : void 0
                                : (a = o.charCodeAt(l)) < 55296 || a > 56319 || l + 1 === h || (n = o.charCodeAt(l + 1)) < 56320 || n > 57343
                                ? t
                                    ? o.charAt(l)
                                    : a
                                : t
                                ? o.slice(l, l + 2)
                                : n - 56320 + ((a - 55296) << 10) + 65536;
                        };
                    };
                t.exports = { codeAt: a(!1), charAt: a(!0) };
            },
            98040: (t, e, i) => {
                var r = i(46918);
                t.exports = /Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(r);
            },
            70578: (t, e, i) => {
                var r = i(70097),
                    s = i(74061),
                    a = i(63955),
                    n = Math.ceil,
                    o = function (t) {
                        return function (e, i, o) {
                            var l,
                                h,
                                c = String(a(e)),
                                d = c.length,
                                u = void 0 === o ? " " : String(o),
                                p = r(i);
                            return p <= d || "" == u ? c : ((l = p - d), (h = s.call(u, n(l / u.length))).length > l && (h = h.slice(0, l)), t ? c + h : h + c);
                        };
                    };
                t.exports = { start: o(!1), end: o(!0) };
            },
            58304: (t) => {
                "use strict";
                var e = 2147483647,
                    i = /[^\0-\u007E]/,
                    r = /[.\u3002\uFF0E\uFF61]/g,
                    s = "Overflow: input needs wider integers to process",
                    a = Math.floor,
                    n = String.fromCharCode,
                    o = function (t) {
                        return t + 22 + 75 * (t < 26);
                    },
                    l = function (t, e, i) {
                        var r = 0;
                        for (t = i ? a(t / 700) : t >> 1, t += a(t / e); t > 455; r += 36) t = a(t / 35);
                        return a(r + (36 * t) / (t + 38));
                    },
                    h = function (t) {
                        var i = [];
                        t = (function (t) {
                            for (var e = [], i = 0, r = t.length; i < r; ) {
                                var s = t.charCodeAt(i++);
                                if (s >= 55296 && s <= 56319 && i < r) {
                                    var a = t.charCodeAt(i++);
                                    56320 == (64512 & a) ? e.push(((1023 & s) << 10) + (1023 & a) + 65536) : (e.push(s), i--);
                                } else e.push(s);
                            }
                            return e;
                        })(t);
                        var r,
                            h,
                            c = t.length,
                            d = 128,
                            u = 0,
                            p = 72;
                        for (r = 0; r < t.length; r++) (h = t[r]) < 128 && i.push(n(h));
                        var m = i.length,
                            f = m;
                        for (m && i.push("-"); f < c; ) {
                            var g = e;
                            for (r = 0; r < t.length; r++) (h = t[r]) >= d && h < g && (g = h);
                            var v = f + 1;
                            if (g - d > a((e - u) / v)) throw RangeError(s);
                            for (u += (g - d) * v, d = g, r = 0; r < t.length; r++) {
                                if ((h = t[r]) < d && ++u > e) throw RangeError(s);
                                if (h == d) {
                                    for (var b = u, y = 36; ; y += 36) {
                                        var w = y <= p ? 1 : y >= p + 26 ? 26 : y - p;
                                        if (b < w) break;
                                        var x = b - w,
                                            E = 36 - w;
                                        i.push(n(o(w + (x % E)))), (b = a(x / E));
                                    }
                                    i.push(n(o(b))), (p = l(u, v, f == m)), (u = 0), ++f;
                                }
                            }
                            ++u, ++d;
                        }
                        return i.join("");
                    };
                t.exports = function (t) {
                    var e,
                        s,
                        a = [],
                        n = t.toLowerCase().replace(r, ".").split(".");
                    for (e = 0; e < n.length; e++) (s = n[e]), a.push(i.test(s) ? "xn--" + h(s) : s);
                    return a.join(".");
                };
            },
            74061: (t, e, i) => {
                "use strict";
                var r = i(75089),
                    s = i(63955);
                t.exports = function (t) {
                    var e = String(s(this)),
                        i = "",
                        a = r(t);
                    if (a < 0 || a == 1 / 0) throw RangeError("Wrong number of repetitions");
                    for (; a > 0; (a >>>= 1) && (e += e)) 1 & a && (i += e);
                    return i;
                };
            },
            65760: (t, e, i) => {
                var r = i(16544),
                    s = i(20771);
                t.exports = function (t) {
                    return r(function () {
                        return !!s[t]() || "â€‹Â…á Ž" != "â€‹Â…á Ž"[t]() || s[t].name !== t;
                    });
                };
            },
            68940: (t, e, i) => {
                var r = i(63955),
                    s = "[" + i(20771) + "]",
                    a = RegExp("^" + s + s + "*"),
                    n = RegExp(s + s + "*$"),
                    o = function (t) {
                        return function (e) {
                            var i = String(r(e));
                            return 1 & t && (i = i.replace(a, "")), 2 & t && (i = i.replace(n, "")), i;
                        };
                    };
                t.exports = { start: o(1), end: o(2), trim: o(3) };
            },
            48117: (t, e, i) => {
                var r,
                    s,
                    a,
                    n = i(47583),
                    o = i(16544),
                    l = i(12938),
                    h = i(90482),
                    c = i(26668),
                    d = i(17020),
                    u = i(45354),
                    p = n.location,
                    m = n.setImmediate,
                    f = n.clearImmediate,
                    g = n.process,
                    v = n.MessageChannel,
                    b = n.Dispatch,
                    y = 0,
                    w = {},
                    x = "onreadystatechange",
                    E = function (t) {
                        if (w.hasOwnProperty(t)) {
                            var e = w[t];
                            delete w[t], e();
                        }
                    },
                    C = function (t) {
                        return function () {
                            E(t);
                        };
                    },
                    S = function (t) {
                        E(t.data);
                    },
                    T = function (t) {
                        n.postMessage(t + "", p.protocol + "//" + p.host);
                    };
                (m && f) ||
                    ((m = function (t) {
                        for (var e = [], i = 1; arguments.length > i; ) e.push(arguments[i++]);
                        return (
                            (w[++y] = function () {
                                ("function" == typeof t ? t : Function(t)).apply(void 0, e);
                            }),
                            r(y),
                            y
                        );
                    }),
                    (f = function (t) {
                        delete w[t];
                    }),
                    u
                        ? (r = function (t) {
                              g.nextTick(C(t));
                          })
                        : b && b.now
                        ? (r = function (t) {
                              b.now(C(t));
                          })
                        : v && !d
                        ? ((a = (s = new v()).port2), (s.port1.onmessage = S), (r = l(a.postMessage, a, 1)))
                        : n.addEventListener && "function" == typeof postMessage && !n.importScripts && p && "file:" !== p.protocol && !o(T)
                        ? ((r = T), n.addEventListener("message", S, !1))
                        : (r =
                              x in c("script")
                                  ? function (t) {
                                        h.appendChild(c("script"))[x] = function () {
                                            h.removeChild(this), E(t);
                                        };
                                    }
                                  : function (t) {
                                        setTimeout(C(t), 0);
                                    })),
                    (t.exports = { set: m, clear: f });
            },
            38064: (t, e, i) => {
                var r = i(39624);
                t.exports = function (t) {
                    if ("number" != typeof t && "Number" != r(t)) throw TypeError("Incorrect invocation");
                    return +t;
                };
            },
            96782: (t, e, i) => {
                var r = i(75089),
                    s = Math.max,
                    a = Math.min;
                t.exports = function (t, e) {
                    var i = r(t);
                    return i < 0 ? s(i + e, 0) : a(i, e);
                };
            },
            12488: (t, e, i) => {
                var r = i(75089),
                    s = i(70097);
                t.exports = function (t) {
                    if (void 0 === t) return 0;
                    var e = r(t),
                        i = s(e);
                    if (e !== i) throw RangeError("Wrong length or index");
                    return i;
                };
            },
            22977: (t, e, i) => {
                var r = i(55044),
                    s = i(63955);
                t.exports = function (t) {
                    return r(s(t));
                };
            },
            75089: (t) => {
                var e = Math.ceil,
                    i = Math.floor;
                t.exports = function (t) {
                    return isNaN((t = +t)) ? 0 : (t > 0 ? i : e)(t);
                };
            },
            70097: (t, e, i) => {
                var r = i(75089),
                    s = Math.min;
                t.exports = function (t) {
                    return t > 0 ? s(r(t), 9007199254740991) : 0;
                };
            },
            61324: (t, e, i) => {
                var r = i(63955);
                t.exports = function (t) {
                    return Object(r(t));
                };
            },
            33248: (t, e, i) => {
                var r = i(42955);
                t.exports = function (t, e) {
                    var i = r(t);
                    if (i % e) throw RangeError("Wrong offset");
                    return i;
                };
            },
            42955: (t, e, i) => {
                var r = i(75089);
                t.exports = function (t) {
                    var e = r(t);
                    if (e < 0) throw RangeError("The argument can't be less than 0");
                    return e;
                };
            },
            22670: (t, e, i) => {
                var r = i(90794);
                t.exports = function (t, e) {
                    if (!r(t)) return t;
                    var i, s;
                    if (e && "function" == typeof (i = t.toString) && !r((s = i.call(t)))) return s;
                    if ("function" == typeof (i = t.valueOf) && !r((s = i.call(t)))) return s;
                    if (!e && "function" == typeof (i = t.toString) && !r((s = i.call(t)))) return s;
                    throw TypeError("Can't convert object to primitive value");
                };
            },
            88191: (t, e, i) => {
                var r = {};
                (r[i(3649)("toStringTag")] = "z"), (t.exports = "[object z]" === String(r));
            },
            58073: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(47583),
                    a = i(18494),
                    n = i(40165),
                    o = i(13977),
                    l = i(5562),
                    h = i(44761),
                    c = i(54677),
                    d = i(57),
                    u = i(70097),
                    p = i(12488),
                    m = i(33248),
                    f = i(22670),
                    g = i(34402),
                    v = i(33058),
                    b = i(90794),
                    y = i(3590),
                    w = i(17496),
                    x = i(9275).f,
                    E = i(77353),
                    C = i(24805).forEach,
                    S = i(7730),
                    T = i(94615),
                    _ = i(46683),
                    M = i(42743),
                    P = i(40434),
                    k = M.get,
                    A = M.set,
                    D = T.f,
                    L = _.f,
                    I = Math.round,
                    R = s.RangeError,
                    O = l.ArrayBuffer,
                    F = l.DataView,
                    B = o.NATIVE_ARRAY_BUFFER_VIEWS,
                    z = o.TYPED_ARRAY_TAG,
                    N = o.TypedArray,
                    V = o.TypedArrayPrototype,
                    H = o.aTypedArrayConstructor,
                    j = o.isTypedArray,
                    W = "BYTES_PER_ELEMENT",
                    G = "Wrong length",
                    q = function (t, e) {
                        for (var i = 0, r = e.length, s = new (H(t))(r); r > i; ) s[i] = e[i++];
                        return s;
                    },
                    $ = function (t, e) {
                        D(t, e, {
                            get: function () {
                                return k(this)[e];
                            },
                        });
                    },
                    U = function (t) {
                        var e;
                        return t instanceof O || "ArrayBuffer" == (e = v(t)) || "SharedArrayBuffer" == e;
                    },
                    Y = function (t, e) {
                        return j(t) && "symbol" != typeof e && e in t && String(+e) == String(e);
                    },
                    X = function (t, e) {
                        return Y(t, (e = f(e, !0))) ? c(2, t[e]) : L(t, e);
                    },
                    K = function (t, e, i) {
                        return !(Y(t, (e = f(e, !0))) && b(i) && g(i, "value")) || g(i, "get") || g(i, "set") || i.configurable || (g(i, "writable") && !i.writable) || (g(i, "enumerable") && !i.enumerable)
                            ? D(t, e, i)
                            : ((t[e] = i.value), t);
                    };
                a
                    ? (B || ((_.f = X), (T.f = K), $(V, "buffer"), $(V, "byteOffset"), $(V, "byteLength"), $(V, "length")),
                      r({ target: "Object", stat: !0, forced: !B }, { getOwnPropertyDescriptor: X, defineProperty: K }),
                      (t.exports = function (t, e, i) {
                          var a = t.match(/\d+$/)[0] / 8,
                              o = t + (i ? "Clamped" : "") + "Array",
                              l = "get" + t,
                              c = "set" + t,
                              f = s[o],
                              g = f,
                              v = g && g.prototype,
                              T = {},
                              _ = function (t, e) {
                                  D(t, e, {
                                      get: function () {
                                          return (function (t, e) {
                                              var i = k(t);
                                              return i.view[l](e * a + i.byteOffset, !0);
                                          })(this, e);
                                      },
                                      set: function (t) {
                                          return (function (t, e, r) {
                                              var s = k(t);
                                              i && (r = (r = I(r)) < 0 ? 0 : r > 255 ? 255 : 255 & r), s.view[c](e * a + s.byteOffset, r, !0);
                                          })(this, e, t);
                                      },
                                      enumerable: !0,
                                  });
                              };
                          B
                              ? n &&
                                ((g = e(function (t, e, i, r) {
                                    return h(t, g, o), P(b(e) ? (U(e) ? (void 0 !== r ? new f(e, m(i, a), r) : void 0 !== i ? new f(e, m(i, a)) : new f(e)) : j(e) ? q(g, e) : E.call(g, e)) : new f(p(e)), t, g);
                                })),
                                w && w(g, N),
                                C(x(f), function (t) {
                                    t in g || d(g, t, f[t]);
                                }),
                                (g.prototype = v))
                              : ((g = e(function (t, e, i, r) {
                                    h(t, g, o);
                                    var s,
                                        n,
                                        l,
                                        c = 0,
                                        d = 0;
                                    if (b(e)) {
                                        if (!U(e)) return j(e) ? q(g, e) : E.call(g, e);
                                        (s = e), (d = m(i, a));
                                        var f = e.byteLength;
                                        if (void 0 === r) {
                                            if (f % a) throw R(G);
                                            if ((n = f - d) < 0) throw R(G);
                                        } else if ((n = u(r) * a) + d > f) throw R(G);
                                        l = n / a;
                                    } else (l = p(e)), (s = new O((n = l * a)));
                                    for (A(t, { buffer: s, byteOffset: d, byteLength: n, length: l, view: new F(s) }); c < l; ) _(t, c++);
                                })),
                                w && w(g, N),
                                (v = g.prototype = y(V))),
                              v.constructor !== g && d(v, "constructor", g),
                              z && d(v, z, o),
                              (T[o] = g),
                              r({ global: !0, forced: g != f, sham: !B }, T),
                              W in g || d(g, W, a),
                              W in v || d(v, W, a),
                              S(o);
                      }))
                    : (t.exports = function () {});
            },
            40165: (t, e, i) => {
                var r = i(47583),
                    s = i(16544),
                    a = i(3616),
                    n = i(13977).NATIVE_ARRAY_BUFFER_VIEWS,
                    o = r.ArrayBuffer,
                    l = r.Int8Array;
                t.exports =
                    !n ||
                    !s(function () {
                        l(1);
                    }) ||
                    !s(function () {
                        new l(-1);
                    }) ||
                    !a(function (t) {
                        new l(), new l(null), new l(1.5), new l(t);
                    }, !0) ||
                    s(function () {
                        return 1 !== new l(new o(2), 1, void 0).length;
                    });
            },
            49741: (t, e, i) => {
                var r = i(13977).aTypedArrayConstructor,
                    s = i(40564);
                t.exports = function (t, e) {
                    for (var i = s(t, t.constructor), a = 0, n = e.length, o = new (r(i))(n); n > a; ) o[a] = e[a++];
                    return o;
                };
            },
            77353: (t, e, i) => {
                var r = i(61324),
                    s = i(70097),
                    a = i(38272),
                    n = i(70114),
                    o = i(12938),
                    l = i(13977).aTypedArrayConstructor;
                t.exports = function (t) {
                    var e,
                        i,
                        h,
                        c,
                        d,
                        u,
                        p = r(t),
                        m = arguments.length,
                        f = m > 1 ? arguments[1] : void 0,
                        g = void 0 !== f,
                        v = a(p);
                    if (null != v && !n(v)) for (u = (d = v.call(p)).next, p = []; !(c = u.call(d)).done; ) p.push(c.value);
                    for (g && m > 2 && (f = o(f, arguments[2], 2)), i = s(p.length), h = new (l(this))(i), e = 0; i > e; e++) h[e] = g ? f(p[e], e) : p[e];
                    return h;
                };
            },
            98284: (t) => {
                var e = 0,
                    i = Math.random();
                t.exports = function (t) {
                    return "Symbol(" + String(void 0 === t ? "" : t) + ")_" + (++e + i).toString(36);
                };
            },
            67786: (t, e, i) => {
                var r = i(88640);
                t.exports = r && !Symbol.sham && "symbol" == typeof Symbol.iterator;
            },
            20491: (t, e, i) => {
                var r = i(3649);
                e.f = r;
            },
            3649: (t, e, i) => {
                var r = i(47583),
                    s = i(17836),
                    a = i(34402),
                    n = i(98284),
                    o = i(88640),
                    l = i(67786),
                    h = s("wks"),
                    c = r.Symbol,
                    d = l ? c : (c && c.withoutSetter) || n;
                t.exports = function (t) {
                    return (a(h, t) && (o || "string" == typeof h[t])) || (o && a(c, t) ? (h[t] = c[t]) : (h[t] = d("Symbol." + t))), h[t];
                };
            },
            20771: (t) => {
                t.exports = "\t\n\v\f\r Â áš€â€€â€â€‚â€ƒâ€„â€…â€†â€‡â€ˆâ€‰â€Šâ€¯âŸã€€\u2028\u2029\ufeff";
            },
            21719: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(80729),
                    a = i(17496),
                    n = i(3590),
                    o = i(57),
                    l = i(54677),
                    h = i(54026),
                    c = function (t, e) {
                        var i = this;
                        if (!(i instanceof c)) return new c(t, e);
                        a && (i = a(new Error(void 0), s(i))), void 0 !== e && o(i, "message", String(e));
                        var r = [];
                        return h(t, r.push, { that: r }), o(i, "errors", r), i;
                    };
                (c.prototype = n(Error.prototype, { constructor: l(5, c), message: l(5, ""), name: l(5, "AggregateError") })), r({ global: !0 }, { AggregateError: c });
            },
            74047: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(47583),
                    a = i(5562),
                    n = i(7730),
                    o = "ArrayBuffer",
                    l = a[o];
                r({ global: !0, forced: s[o] !== l }, { ArrayBuffer: l }), n(o);
            },
            6541: (t, e, i) => {
                var r = i(37263),
                    s = i(13977);
                r({ target: "ArrayBuffer", stat: !0, forced: !s.NATIVE_ARRAY_BUFFER_VIEWS }, { isView: s.isView });
            },
            6399: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(16544),
                    a = i(5562),
                    n = i(92569),
                    o = i(96782),
                    l = i(70097),
                    h = i(40564),
                    c = a.ArrayBuffer,
                    d = a.DataView,
                    u = c.prototype.slice;
                r(
                    {
                        target: "ArrayBuffer",
                        proto: !0,
                        unsafe: !0,
                        forced: s(function () {
                            return !new c(2).slice(1, void 0).byteLength;
                        }),
                    },
                    {
                        slice: function (t, e) {
                            if (void 0 !== u && void 0 === e) return u.call(n(this), t);
                            for (var i = n(this).byteLength, r = o(t, i), s = o(void 0 === e ? i : e, i), a = new (h(this, c))(l(s - r)), p = new d(this), m = new d(a), f = 0; r < s; ) m.setUint8(f++, p.getUint8(r++));
                            return a;
                        },
                    }
                );
            },
            11646: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(16544),
                    a = i(54521),
                    n = i(90794),
                    o = i(61324),
                    l = i(70097),
                    h = i(65999),
                    c = i(44822),
                    d = i(69269),
                    u = i(3649),
                    p = i(24061),
                    m = u("isConcatSpreadable"),
                    f = 9007199254740991,
                    g = "Maximum allowed index exceeded",
                    v =
                        p >= 51 ||
                        !s(function () {
                            var t = [];
                            return (t[m] = !1), t.concat()[0] !== t;
                        }),
                    b = d("concat"),
                    y = function (t) {
                        if (!n(t)) return !1;
                        var e = t[m];
                        return void 0 !== e ? !!e : a(t);
                    };
                r(
                    { target: "Array", proto: !0, forced: !v || !b },
                    {
                        concat: function (t) {
                            var e,
                                i,
                                r,
                                s,
                                a,
                                n = o(this),
                                d = c(n, 0),
                                u = 0;
                            for (e = -1, r = arguments.length; e < r; e++)
                                if (y((a = -1 === e ? n : arguments[e]))) {
                                    if (u + (s = l(a.length)) > f) throw TypeError(g);
                                    for (i = 0; i < s; i++, u++) i in a && h(d, u, a[i]);
                                } else {
                                    if (u >= f) throw TypeError(g);
                                    h(d, u++, a);
                                }
                            return (d.length = u), d;
                        },
                    }
                );
            },
            87178: (t, e, i) => {
                var r = i(37263),
                    s = i(68050),
                    a = i(36288);
                r({ target: "Array", proto: !0 }, { copyWithin: s }), a("copyWithin");
            },
            25652: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(24805).every;
                r(
                    { target: "Array", proto: !0, forced: !i(60906)("every") },
                    {
                        every: function (t) {
                            return s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                );
            },
            51271: (t, e, i) => {
                var r = i(37263),
                    s = i(93579),
                    a = i(36288);
                r({ target: "Array", proto: !0 }, { fill: s }), a("fill");
            },
            38833: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(24805).filter;
                r(
                    { target: "Array", proto: !0, forced: !i(69269)("filter") },
                    {
                        filter: function (t) {
                            return s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                );
            },
            85375: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(24805).findIndex,
                    a = i(36288),
                    n = "findIndex",
                    o = !0;
                n in [] &&
                    Array(1)[n](function () {
                        o = !1;
                    }),
                    r(
                        { target: "Array", proto: !0, forced: o },
                        {
                            findIndex: function (t) {
                                return s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                            },
                        }
                    ),
                    a(n);
            },
            47715: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(24805).find,
                    a = i(36288),
                    n = "find",
                    o = !0;
                n in [] &&
                    Array(1)[n](function () {
                        o = !1;
                    }),
                    r(
                        { target: "Array", proto: !0, forced: o },
                        {
                            find: function (t) {
                                return s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                            },
                        }
                    ),
                    a(n);
            },
            30655: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(21266),
                    a = i(61324),
                    n = i(70097),
                    o = i(96163),
                    l = i(44822);
                r(
                    { target: "Array", proto: !0 },
                    {
                        flatMap: function (t) {
                            var e,
                                i = a(this),
                                r = n(i.length);
                            return o(t), ((e = l(i, 0)).length = s(e, i, i, r, 0, 1, t, arguments.length > 1 ? arguments[1] : void 0)), e;
                        },
                    }
                );
            },
            39390: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(21266),
                    a = i(61324),
                    n = i(70097),
                    o = i(75089),
                    l = i(44822);
                r(
                    { target: "Array", proto: !0 },
                    {
                        flat: function () {
                            var t = arguments.length ? arguments[0] : void 0,
                                e = a(this),
                                i = n(e.length),
                                r = l(e, 0);
                            return (r.length = s(r, e, e, i, 0, void 0 === t ? 1 : o(t))), r;
                        },
                    }
                );
            },
            95680: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(63200);
                r({ target: "Array", proto: !0, forced: [].forEach != s }, { forEach: s });
            },
            23675: (t, e, i) => {
                var r = i(37263),
                    s = i(35513);
                r(
                    {
                        target: "Array",
                        stat: !0,
                        forced: !i(3616)(function (t) {
                            Array.from(t);
                        }),
                    },
                    { from: s }
                );
            },
            12076: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(15766).includes,
                    a = i(36288);
                r(
                    { target: "Array", proto: !0 },
                    {
                        includes: function (t) {
                            return s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                ),
                    a("includes");
            },
            27228: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(15766).indexOf,
                    a = i(60906),
                    n = [].indexOf,
                    o = !!n && 1 / [1].indexOf(1, -0) < 0,
                    l = a("indexOf");
                r(
                    { target: "Array", proto: !0, forced: o || !l },
                    {
                        indexOf: function (t) {
                            return o ? n.apply(this, arguments) || 0 : s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                );
            },
            51301: (t, e, i) => {
                i(37263)({ target: "Array", stat: !0 }, { isArray: i(54521) });
            },
            55677: (t, e, i) => {
                "use strict";
                var r = i(22977),
                    s = i(36288),
                    a = i(60339),
                    n = i(42743),
                    o = i(99012),
                    l = "Array Iterator",
                    h = n.set,
                    c = n.getterFor(l);
                (t.exports = o(
                    Array,
                    "Array",
                    function (t, e) {
                        h(this, { type: l, target: r(t), index: 0, kind: e });
                    },
                    function () {
                        var t = c(this),
                            e = t.target,
                            i = t.kind,
                            r = t.index++;
                        return !e || r >= e.length ? ((t.target = void 0), { value: void 0, done: !0 }) : "keys" == i ? { value: r, done: !1 } : "values" == i ? { value: e[r], done: !1 } : { value: [r, e[r]], done: !1 };
                    },
                    "values"
                )),
                    (a.Arguments = a.Array),
                    s("keys"),
                    s("values"),
                    s("entries");
            },
            67441: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(55044),
                    a = i(22977),
                    n = i(60906),
                    o = [].join,
                    l = s != Object,
                    h = n("join", ",");
                r(
                    { target: "Array", proto: !0, forced: l || !h },
                    {
                        join: function (t) {
                            return o.call(a(this), void 0 === t ? "," : t);
                        },
                    }
                );
            },
            46825: (t, e, i) => {
                var r = i(37263),
                    s = i(73161);
                r({ target: "Array", proto: !0, forced: s !== [].lastIndexOf }, { lastIndexOf: s });
            },
            92070: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(24805).map;
                r(
                    { target: "Array", proto: !0, forced: !i(69269)("map") },
                    {
                        map: function (t) {
                            return s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                );
            },
            87896: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(16544),
                    a = i(65999);
                r(
                    {
                        target: "Array",
                        stat: !0,
                        forced: s(function () {
                            function t() {}
                            return !(Array.of.call(t) instanceof t);
                        }),
                    },
                    {
                        of: function () {
                            for (var t = 0, e = arguments.length, i = new ("function" == typeof this ? this : Array)(e); e > t; ) a(i, t, arguments[t++]);
                            return (i.length = e), i;
                        },
                    }
                );
            },
            96382: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(64325).right,
                    a = i(60906),
                    n = i(24061),
                    o = i(45354);
                r(
                    { target: "Array", proto: !0, forced: !a("reduceRight") || (!o && n > 79 && n < 83) },
                    {
                        reduceRight: function (t) {
                            return s(this, t, arguments.length, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                );
            },
            4363: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(64325).left,
                    a = i(60906),
                    n = i(24061),
                    o = i(45354);
                r(
                    { target: "Array", proto: !0, forced: !a("reduce") || (!o && n > 79 && n < 83) },
                    {
                        reduce: function (t) {
                            return s(this, t, arguments.length, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                );
            },
            57021: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(54521),
                    a = [].reverse,
                    n = [1, 2];
                r(
                    { target: "Array", proto: !0, forced: String(n) === String(n.reverse()) },
                    {
                        reverse: function () {
                            return s(this) && (this.length = this.length), a.call(this);
                        },
                    }
                );
            },
            20288: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(90794),
                    a = i(54521),
                    n = i(96782),
                    o = i(70097),
                    l = i(22977),
                    h = i(65999),
                    c = i(3649),
                    d = i(69269)("slice"),
                    u = c("species"),
                    p = [].slice,
                    m = Math.max;
                r(
                    { target: "Array", proto: !0, forced: !d },
                    {
                        slice: function (t, e) {
                            var i,
                                r,
                                c,
                                d = l(this),
                                f = o(d.length),
                                g = n(t, f),
                                v = n(void 0 === e ? f : e, f);
                            if (a(d) && ("function" != typeof (i = d.constructor) || (i !== Array && !a(i.prototype)) ? s(i) && null === (i = i[u]) && (i = void 0) : (i = void 0), i === Array || void 0 === i)) return p.call(d, g, v);
                            for (r = new (void 0 === i ? Array : i)(m(v - g, 0)), c = 0; g < v; g++, c++) g in d && h(r, c, d[g]);
                            return (r.length = c), r;
                        },
                    }
                );
            },
            7262: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(24805).some;
                r(
                    { target: "Array", proto: !0, forced: !i(60906)("some") },
                    {
                        some: function (t) {
                            return s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                );
            },
            74486: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96163),
                    a = i(61324),
                    n = i(70097),
                    o = i(16544),
                    l = i(25744),
                    h = i(60906),
                    c = i(15857),
                    d = i(50924),
                    u = i(24061),
                    p = i(20003),
                    m = [],
                    f = m.sort,
                    g = o(function () {
                        m.sort(void 0);
                    }),
                    v = o(function () {
                        m.sort(null);
                    }),
                    b = h("sort"),
                    y = !o(function () {
                        if (u) return u < 70;
                        if (!(c && c > 3)) {
                            if (d) return !0;
                            if (p) return p < 603;
                            var t,
                                e,
                                i,
                                r,
                                s = "";
                            for (t = 65; t < 76; t++) {
                                switch (((e = String.fromCharCode(t)), t)) {
                                    case 66:
                                    case 69:
                                    case 70:
                                    case 72:
                                        i = 3;
                                        break;
                                    case 68:
                                    case 71:
                                        i = 4;
                                        break;
                                    default:
                                        i = 2;
                                }
                                for (r = 0; r < 47; r++) m.push({ k: e + r, v: i });
                            }
                            for (
                                m.sort(function (t, e) {
                                    return e.v - t.v;
                                }),
                                    r = 0;
                                r < m.length;
                                r++
                            )
                                (e = m[r].k.charAt(0)), s.charAt(s.length - 1) !== e && (s += e);
                            return "DGBEFHACIJK" !== s;
                        }
                    });
                r(
                    { target: "Array", proto: !0, forced: g || !v || !b || !y },
                    {
                        sort: function (t) {
                            void 0 !== t && s(t);
                            var e = a(this);
                            if (y) return void 0 === t ? f.call(e) : f.call(e, t);
                            var i,
                                r,
                                o = [],
                                h = n(e.length);
                            for (r = 0; r < h; r++) r in e && o.push(e[r]);
                            for (
                                o = l(
                                    o,
                                    (function (t) {
                                        return function (e, i) {
                                            return void 0 === i ? -1 : void 0 === e ? 1 : void 0 !== t ? +t(e, i) || 0 : String(e) > String(i) ? 1 : -1;
                                        };
                                    })(t)
                                ),
                                    i = o.length,
                                    r = 0;
                                r < i;

                            )
                                e[r] = o[r++];
                            for (; r < h; ) delete e[r++];
                            return e;
                        },
                    }
                );
            },
            91029: (t, e, i) => {
                i(7730)("Array");
            },
            6429: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96782),
                    a = i(75089),
                    n = i(70097),
                    o = i(61324),
                    l = i(44822),
                    h = i(65999),
                    c = i(69269)("splice"),
                    d = Math.max,
                    u = Math.min;
                r(
                    { target: "Array", proto: !0, forced: !c },
                    {
                        splice: function (t, e) {
                            var i,
                                r,
                                c,
                                p,
                                m,
                                f,
                                g = o(this),
                                v = n(g.length),
                                b = s(t, v),
                                y = arguments.length;
                            if ((0 === y ? (i = r = 0) : 1 === y ? ((i = 0), (r = v - b)) : ((i = y - 2), (r = u(d(a(e), 0), v - b))), v + i - r > 9007199254740991)) throw TypeError("Maximum allowed length exceeded");
                            for (c = l(g, r), p = 0; p < r; p++) (m = b + p) in g && h(c, p, g[m]);
                            if (((c.length = r), i < r)) {
                                for (p = b; p < v - r; p++) (f = p + i), (m = p + r) in g ? (g[f] = g[m]) : delete g[f];
                                for (p = v; p > v - r + i; p--) delete g[p - 1];
                            } else if (i > r) for (p = v - r; p > b; p--) (f = p + i - 1), (m = p + r - 1) in g ? (g[f] = g[m]) : delete g[f];
                            for (p = 0; p < i; p++) g[p + b] = arguments[p + 2];
                            return (g.length = v - r + i), c;
                        },
                    }
                );
            },
            46270: (t, e, i) => {
                i(36288)("flatMap");
            },
            55892: (t, e, i) => {
                i(36288)("flat");
            },
            73163: (t, e, i) => {
                var r = i(37263),
                    s = i(5562);
                r({ global: !0, forced: !i(41601) }, { DataView: s.DataView });
            },
            94975: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = Date.prototype.getFullYear;
                r(
                    { target: "Date", proto: !0 },
                    {
                        getYear: function () {
                            return s.call(this) - 1900;
                        },
                    }
                );
            },
            72609: (t, e, i) => {
                i(37263)(
                    { target: "Date", stat: !0 },
                    {
                        now: function () {
                            return new Date().getTime();
                        },
                    }
                );
            },
            57436: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(75089),
                    a = Date.prototype.getTime,
                    n = Date.prototype.setFullYear;
                r(
                    { target: "Date", proto: !0 },
                    {
                        setYear: function (t) {
                            a.call(this);
                            var e = s(t),
                                i = 0 <= e && e <= 99 ? e + 1900 : e;
                            return n.call(this, i);
                        },
                    }
                );
            },
            25649: (t, e, i) => {
                i(37263)({ target: "Date", proto: !0 }, { toGMTString: Date.prototype.toUTCString });
            },
            32001: (t, e, i) => {
                var r = i(37263),
                    s = i(74095);
                r({ target: "Date", proto: !0, forced: Date.prototype.toISOString !== s }, { toISOString: s });
            },
            39762: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(16544),
                    a = i(61324),
                    n = i(22670);
                r(
                    {
                        target: "Date",
                        proto: !0,
                        forced: s(function () {
                            return (
                                null !== new Date(NaN).toJSON() ||
                                1 !==
                                    Date.prototype.toJSON.call({
                                        toISOString: function () {
                                            return 1;
                                        },
                                    })
                            );
                        }),
                    },
                    {
                        toJSON: function (t) {
                            var e = a(this),
                                i = n(e);
                            return "number" != typeof i || isFinite(i) ? e.toISOString() : null;
                        },
                    }
                );
            },
            22466: (t, e, i) => {
                var r = i(57),
                    s = i(40307),
                    a = i(3649)("toPrimitive"),
                    n = Date.prototype;
                a in n || r(n, a, s);
            },
            75298: (t, e, i) => {
                var r = i(61270),
                    s = Date.prototype,
                    a = "Invalid Date",
                    n = "toString",
                    o = s[n],
                    l = s.getTime;
                new Date(NaN) + "" != a &&
                    r(s, n, function () {
                        var t = l.call(this);
                        return t == t ? o.call(this) : a;
                    });
            },
            81526: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = /[\w*+\-./@]/,
                    a = function (t, e) {
                        for (var i = t.toString(16); i.length < e; ) i = "0" + i;
                        return i;
                    };
                r(
                    { global: !0 },
                    {
                        escape: function (t) {
                            for (var e, i, r = String(t), n = "", o = r.length, l = 0; l < o; ) (e = r.charAt(l++)), s.test(e) ? (n += e) : (n += (i = e.charCodeAt(0)) < 256 ? "%" + a(i, 2) : "%u" + a(i, 4).toUpperCase());
                            return n;
                        },
                    }
                );
            },
            67469: (t, e, i) => {
                i(37263)({ target: "Function", proto: !0 }, { bind: i(51335) });
            },
            43344: (t, e, i) => {
                "use strict";
                var r = i(90794),
                    s = i(94615),
                    a = i(80729),
                    n = i(3649)("hasInstance"),
                    o = Function.prototype;
                n in o ||
                    s.f(o, n, {
                        value: function (t) {
                            if ("function" != typeof this || !r(t)) return !1;
                            if (!r(this.prototype)) return t instanceof this;
                            for (; (t = a(t)); ) if (this.prototype === t) return !0;
                            return !1;
                        },
                    });
            },
            54458: (t, e, i) => {
                var r = i(18494),
                    s = i(94615).f,
                    a = Function.prototype,
                    n = a.toString,
                    o = /^\s*function ([^ (]*)/,
                    l = "name";
                r &&
                    !(l in a) &&
                    s(a, l, {
                        configurable: !0,
                        get: function () {
                            try {
                                return n.call(this).match(o)[1];
                            } catch (t) {
                                return "";
                            }
                        },
                    });
            },
            76169: (t, e, i) => {
                i(37263)({ global: !0 }, { globalThis: i(47583) });
            },
            84415: (t, e, i) => {
                var r = i(37263),
                    s = i(35897),
                    a = i(16544),
                    n = s("JSON", "stringify"),
                    o = /[\uD800-\uDFFF]/g,
                    l = /^[\uD800-\uDBFF]$/,
                    h = /^[\uDC00-\uDFFF]$/,
                    c = function (t, e, i) {
                        var r = i.charAt(e - 1),
                            s = i.charAt(e + 1);
                        return (l.test(t) && !h.test(s)) || (h.test(t) && !l.test(r)) ? "\\u" + t.charCodeAt(0).toString(16) : t;
                    },
                    d = a(function () {
                        return '"\\udf06\\ud834"' !== n("\udf06\ud834") || '"\\udead"' !== n("\udead");
                    });
                n &&
                    r(
                        { target: "JSON", stat: !0, forced: d },
                        {
                            stringify: function (t, e, i) {
                                var r = n.apply(null, arguments);
                                return "string" == typeof r ? r.replace(o, c) : r;
                            },
                        }
                    );
            },
            76956: (t, e, i) => {
                var r = i(47583);
                i(98821)(r.JSON, "JSON", !0);
            },
            14327: (t, e, i) => {
                "use strict";
                var r = i(24802),
                    s = i(26100);
                t.exports = r(
                    "Map",
                    function (t) {
                        return function () {
                            return t(this, arguments.length ? arguments[0] : void 0);
                        };
                    },
                    s
                );
            },
            27680: (t, e, i) => {
                var r = i(37263),
                    s = i(40865),
                    a = Math.acosh,
                    n = Math.log,
                    o = Math.sqrt,
                    l = Math.LN2;
                r(
                    { target: "Math", stat: !0, forced: !a || 710 != Math.floor(a(Number.MAX_VALUE)) || a(1 / 0) != 1 / 0 },
                    {
                        acosh: function (t) {
                            return (t = +t) < 1 ? NaN : t > 94906265.62425156 ? n(t) + l : s(t - 1 + o(t - 1) * o(t + 1));
                        },
                    }
                );
            },
            28743: (t, e, i) => {
                var r = i(37263),
                    s = Math.asinh,
                    a = Math.log,
                    n = Math.sqrt;
                r(
                    { target: "Math", stat: !0, forced: !(s && 1 / s(0) > 0) },
                    {
                        asinh: function t(e) {
                            return isFinite((e = +e)) && 0 != e ? (e < 0 ? -t(-e) : a(e + n(e * e + 1))) : e;
                        },
                    }
                );
            },
            59295: (t, e, i) => {
                var r = i(37263),
                    s = Math.atanh,
                    a = Math.log;
                r(
                    { target: "Math", stat: !0, forced: !(s && 1 / s(-0) < 0) },
                    {
                        atanh: function (t) {
                            return 0 == (t = +t) ? t : a((1 + t) / (1 - t)) / 2;
                        },
                    }
                );
            },
            62794: (t, e, i) => {
                var r = i(37263),
                    s = i(87768),
                    a = Math.abs,
                    n = Math.pow;
                r(
                    { target: "Math", stat: !0 },
                    {
                        cbrt: function (t) {
                            return s((t = +t)) * n(a(t), 1 / 3);
                        },
                    }
                );
            },
            52340: (t, e, i) => {
                var r = i(37263),
                    s = Math.floor,
                    a = Math.log,
                    n = Math.LOG2E;
                r(
                    { target: "Math", stat: !0 },
                    {
                        clz32: function (t) {
                            return (t >>>= 0) ? 31 - s(a(t + 0.5) * n) : 32;
                        },
                    }
                );
            },
            74779: (t, e, i) => {
                var r = i(37263),
                    s = i(1599),
                    a = Math.cosh,
                    n = Math.abs,
                    o = Math.E;
                r(
                    { target: "Math", stat: !0, forced: !a || a(710) === 1 / 0 },
                    {
                        cosh: function (t) {
                            var e = s(n(t) - 1) + 1;
                            return (e + 1 / (e * o * o)) * (o / 2);
                        },
                    }
                );
            },
            97359: (t, e, i) => {
                var r = i(37263),
                    s = i(1599);
                r({ target: "Math", stat: !0, forced: s != Math.expm1 }, { expm1: s });
            },
            29627: (t, e, i) => {
                i(37263)({ target: "Math", stat: !0 }, { fround: i(75661) });
            },
            32474: (t, e, i) => {
                var r = i(37263),
                    s = Math.hypot,
                    a = Math.abs,
                    n = Math.sqrt;
                r(
                    { target: "Math", stat: !0, forced: !!s && s(1 / 0, NaN) !== 1 / 0 },
                    {
                        hypot: function (t, e) {
                            for (var i, r, s = 0, o = 0, l = arguments.length, h = 0; o < l; ) h < (i = a(arguments[o++])) ? ((s = s * (r = h / i) * r + 1), (h = i)) : (s += i > 0 ? (r = i / h) * r : i);
                            return h === 1 / 0 ? 1 / 0 : h * n(s);
                        },
                    }
                );
            },
            76493: (t, e, i) => {
                var r = i(37263),
                    s = i(16544),
                    a = Math.imul;
                r(
                    {
                        target: "Math",
                        stat: !0,
                        forced: s(function () {
                            return -5 != a(4294967295, 5) || 2 != a.length;
                        }),
                    },
                    {
                        imul: function (t, e) {
                            var i = 65535,
                                r = +t,
                                s = +e,
                                a = i & r,
                                n = i & s;
                            return 0 | (a * n + ((((i & (r >>> 16)) * n + a * (i & (s >>> 16))) << 16) >>> 0));
                        },
                    }
                );
            },
            59630: (t, e, i) => {
                var r = i(37263),
                    s = Math.log,
                    a = Math.LOG10E;
                r(
                    { target: "Math", stat: !0 },
                    {
                        log10: function (t) {
                            return s(t) * a;
                        },
                    }
                );
            },
            30357: (t, e, i) => {
                i(37263)({ target: "Math", stat: !0 }, { log1p: i(40865) });
            },
            92374: (t, e, i) => {
                var r = i(37263),
                    s = Math.log,
                    a = Math.LN2;
                r(
                    { target: "Math", stat: !0 },
                    {
                        log2: function (t) {
                            return s(t) / a;
                        },
                    }
                );
            },
            52079: (t, e, i) => {
                i(37263)({ target: "Math", stat: !0 }, { sign: i(87768) });
            },
            17388: (t, e, i) => {
                var r = i(37263),
                    s = i(16544),
                    a = i(1599),
                    n = Math.abs,
                    o = Math.exp,
                    l = Math.E;
                r(
                    {
                        target: "Math",
                        stat: !0,
                        forced: s(function () {
                            return -2e-17 != Math.sinh(-2e-17);
                        }),
                    },
                    {
                        sinh: function (t) {
                            return n((t = +t)) < 1 ? (a(t) - a(-t)) / 2 : (o(t - 1) - o(-t - 1)) * (l / 2);
                        },
                    }
                );
            },
            94593: (t, e, i) => {
                var r = i(37263),
                    s = i(1599),
                    a = Math.exp;
                r(
                    { target: "Math", stat: !0 },
                    {
                        tanh: function (t) {
                            var e = s((t = +t)),
                                i = s(-t);
                            return e == 1 / 0 ? 1 : i == 1 / 0 ? -1 : (e - i) / (a(t) + a(-t));
                        },
                    }
                );
            },
            55222: (t, e, i) => {
                i(98821)(Math, "Math", !0);
            },
            45777: (t, e, i) => {
                var r = i(37263),
                    s = Math.ceil,
                    a = Math.floor;
                r(
                    { target: "Math", stat: !0 },
                    {
                        trunc: function (t) {
                            return (t > 0 ? a : s)(t);
                        },
                    }
                );
            },
            30717: (t, e, i) => {
                "use strict";
                var r = i(18494),
                    s = i(47583),
                    a = i(34451),
                    n = i(61270),
                    o = i(34402),
                    l = i(39624),
                    h = i(40434),
                    c = i(22670),
                    d = i(16544),
                    u = i(3590),
                    p = i(9275).f,
                    m = i(46683).f,
                    f = i(94615).f,
                    g = i(68940).trim,
                    v = "Number",
                    b = s[v],
                    y = b.prototype,
                    w = l(u(y)) == v,
                    x = function (t) {
                        var e,
                            i,
                            r,
                            s,
                            a,
                            n,
                            o,
                            l,
                            h = c(t, !1);
                        if ("string" == typeof h && h.length > 2)
                            if (43 === (e = (h = g(h)).charCodeAt(0)) || 45 === e) {
                                if (88 === (i = h.charCodeAt(2)) || 120 === i) return NaN;
                            } else if (48 === e) {
                                switch (h.charCodeAt(1)) {
                                    case 66:
                                    case 98:
                                        (r = 2), (s = 49);
                                        break;
                                    case 79:
                                    case 111:
                                        (r = 8), (s = 55);
                                        break;
                                    default:
                                        return +h;
                                }
                                for (n = (a = h.slice(2)).length, o = 0; o < n; o++) if ((l = a.charCodeAt(o)) < 48 || l > s) return NaN;
                                return parseInt(a, r);
                            }
                        return +h;
                    };
                if (a(v, !b(" 0o1") || !b("0b1") || b("+0x1"))) {
                    for (
                        var E,
                            C = function (t) {
                                var e = arguments.length < 1 ? 0 : t,
                                    i = this;
                                return i instanceof C &&
                                    (w
                                        ? d(function () {
                                              y.valueOf.call(i);
                                          })
                                        : l(i) != v)
                                    ? h(new b(x(e)), i, C)
                                    : x(e);
                            },
                            S = r
                                ? p(b)
                                : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range".split(","),
                            T = 0;
                        S.length > T;
                        T++
                    )
                        o(b, (E = S[T])) && !o(C, E) && f(C, E, m(b, E));
                    (C.prototype = y), (y.constructor = C), n(s, v, C);
                }
            },
            77483: (t, e, i) => {
                i(37263)({ target: "Number", stat: !0 }, { EPSILON: Math.pow(2, -52) });
            },
            74176: (t, e, i) => {
                i(37263)({ target: "Number", stat: !0 }, { isFinite: i(79606) });
            },
            12406: (t, e, i) => {
                i(37263)({ target: "Number", stat: !0 }, { isInteger: i(87186) });
            },
            92437: (t, e, i) => {
                i(37263)(
                    { target: "Number", stat: !0 },
                    {
                        isNaN: function (t) {
                            return t != t;
                        },
                    }
                );
            },
            23311: (t, e, i) => {
                var r = i(37263),
                    s = i(87186),
                    a = Math.abs;
                r(
                    { target: "Number", stat: !0 },
                    {
                        isSafeInteger: function (t) {
                            return s(t) && a(t) <= 9007199254740991;
                        },
                    }
                );
            },
            66474: (t, e, i) => {
                i(37263)({ target: "Number", stat: !0 }, { MAX_SAFE_INTEGER: 9007199254740991 });
            },
            65206: (t, e, i) => {
                i(37263)({ target: "Number", stat: !0 }, { MIN_SAFE_INTEGER: -9007199254740991 });
            },
            71579: (t, e, i) => {
                var r = i(37263),
                    s = i(17560);
                r({ target: "Number", stat: !0, forced: Number.parseFloat != s }, { parseFloat: s });
            },
            66016: (t, e, i) => {
                var r = i(37263),
                    s = i(35407);
                r({ target: "Number", stat: !0, forced: Number.parseInt != s }, { parseInt: s });
            },
            56660: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(75089),
                    a = i(38064),
                    n = i(74061),
                    o = i(16544),
                    l = (1).toFixed,
                    h = Math.floor,
                    c = function t(e, i, r) {
                        return 0 === i ? r : i % 2 == 1 ? t(e, i - 1, r * e) : t(e * e, i / 2, r);
                    },
                    d = function (t, e, i) {
                        for (var r = -1, s = i; ++r < 6; ) (s += e * t[r]), (t[r] = s % 1e7), (s = h(s / 1e7));
                    },
                    u = function (t, e) {
                        for (var i = 6, r = 0; --i >= 0; ) (r += t[i]), (t[i] = h(r / e)), (r = (r % e) * 1e7);
                    },
                    p = function (t) {
                        for (var e = 6, i = ""; --e >= 0; )
                            if ("" !== i || 0 === e || 0 !== t[e]) {
                                var r = String(t[e]);
                                i = "" === i ? r : i + n.call("0", 7 - r.length) + r;
                            }
                        return i;
                    };
                r(
                    {
                        target: "Number",
                        proto: !0,
                        forced:
                            (l && ("0.000" !== (8e-5).toFixed(3) || "1" !== (0.9).toFixed(0) || "1.25" !== (1.255).toFixed(2) || "1000000000000000128" !== (0xde0b6b3a7640080).toFixed(0))) ||
                            !o(function () {
                                l.call({});
                            }),
                    },
                    {
                        toFixed: function (t) {
                            var e,
                                i,
                                r,
                                o,
                                l = a(this),
                                h = s(t),
                                m = [0, 0, 0, 0, 0, 0],
                                f = "",
                                g = "0";
                            if (h < 0 || h > 20) throw RangeError("Incorrect fraction digits");
                            if (l != l) return "NaN";
                            if (l <= -1e21 || l >= 1e21) return String(l);
                            if ((l < 0 && ((f = "-"), (l = -l)), l > 1e-21))
                                if (
                                    ((i =
                                        (e =
                                            (function (t) {
                                                for (var e = 0, i = t; i >= 4096; ) (e += 12), (i /= 4096);
                                                for (; i >= 2; ) (e += 1), (i /= 2);
                                                return e;
                                            })(l * c(2, 69, 1)) - 69) < 0
                                            ? l * c(2, -e, 1)
                                            : l / c(2, e, 1)),
                                    (i *= 4503599627370496),
                                    (e = 52 - e) > 0)
                                ) {
                                    for (d(m, 0, i), r = h; r >= 7; ) d(m, 1e7, 0), (r -= 7);
                                    for (d(m, c(10, r, 1), 0), r = e - 1; r >= 23; ) u(m, 1 << 23), (r -= 23);
                                    u(m, 1 << r), d(m, 1, 1), u(m, 2), (g = p(m));
                                } else d(m, 0, i), d(m, 1 << -e, 0), (g = p(m) + n.call("0", h));
                            return (g = h > 0 ? f + ((o = g.length) <= h ? "0." + n.call("0", h - o) + g : g.slice(0, o - h) + "." + g.slice(o - h)) : f + g);
                        },
                    }
                );
            },
            96785: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(16544),
                    a = i(38064),
                    n = (1).toPrecision;
                r(
                    {
                        target: "Number",
                        proto: !0,
                        forced:
                            s(function () {
                                return "1" !== n.call(1, void 0);
                            }) ||
                            !s(function () {
                                n.call({});
                            }),
                    },
                    {
                        toPrecision: function (t) {
                            return void 0 === t ? n.call(a(this)) : n.call(a(this), t);
                        },
                    }
                );
            },
            74517: (t, e, i) => {
                var r = i(37263),
                    s = i(79304);
                r({ target: "Object", stat: !0, forced: Object.assign !== s }, { assign: s });
            },
            4334: (t, e, i) => {
                i(37263)({ target: "Object", stat: !0, sham: !i(18494) }, { create: i(3590) });
            },
            89610: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(18494),
                    a = i(36037),
                    n = i(61324),
                    o = i(96163),
                    l = i(94615);
                s &&
                    r(
                        { target: "Object", proto: !0, forced: a },
                        {
                            __defineGetter__: function (t, e) {
                                l.f(n(this), t, { get: o(e), enumerable: !0, configurable: !0 });
                            },
                        }
                    );
            },
            90190: (t, e, i) => {
                var r = i(37263),
                    s = i(18494);
                r({ target: "Object", stat: !0, forced: !s, sham: !s }, { defineProperties: i(28728) });
            },
            74649: (t, e, i) => {
                var r = i(37263),
                    s = i(18494);
                r({ target: "Object", stat: !0, forced: !s, sham: !s }, { defineProperty: i(94615).f });
            },
            77031: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(18494),
                    a = i(36037),
                    n = i(61324),
                    o = i(96163),
                    l = i(94615);
                s &&
                    r(
                        { target: "Object", proto: !0, forced: a },
                        {
                            __defineSetter__: function (t, e) {
                                l.f(n(this), t, { set: o(e), enumerable: !0, configurable: !0 });
                            },
                        }
                    );
            },
            86737: (t, e, i) => {
                var r = i(37263),
                    s = i(69953).entries;
                r(
                    { target: "Object", stat: !0 },
                    {
                        entries: function (t) {
                            return s(t);
                        },
                    }
                );
            },
            47561: (t, e, i) => {
                var r = i(37263),
                    s = i(39974),
                    a = i(16544),
                    n = i(90794),
                    o = i(51909).onFreeze,
                    l = Object.freeze;
                r(
                    {
                        target: "Object",
                        stat: !0,
                        forced: a(function () {
                            l(1);
                        }),
                        sham: !s,
                    },
                    {
                        freeze: function (t) {
                            return l && n(t) ? l(o(t)) : t;
                        },
                    }
                );
            },
            5809: (t, e, i) => {
                var r = i(37263),
                    s = i(54026),
                    a = i(65999);
                r(
                    { target: "Object", stat: !0 },
                    {
                        fromEntries: function (t) {
                            var e = {};
                            return (
                                s(
                                    t,
                                    function (t, i) {
                                        a(e, t, i);
                                    },
                                    { AS_ENTRIES: !0 }
                                ),
                                e
                            );
                        },
                    }
                );
            },
            10815: (t, e, i) => {
                var r = i(37263),
                    s = i(16544),
                    a = i(22977),
                    n = i(46683).f,
                    o = i(18494),
                    l = s(function () {
                        n(1);
                    });
                r(
                    { target: "Object", stat: !0, forced: !o || l, sham: !o },
                    {
                        getOwnPropertyDescriptor: function (t, e) {
                            return n(a(t), e);
                        },
                    }
                );
            },
            79174: (t, e, i) => {
                var r = i(37263),
                    s = i(18494),
                    a = i(40929),
                    n = i(22977),
                    o = i(46683),
                    l = i(65999);
                r(
                    { target: "Object", stat: !0, sham: !s },
                    {
                        getOwnPropertyDescriptors: function (t) {
                            for (var e, i, r = n(t), s = o.f, h = a(r), c = {}, d = 0; h.length > d; ) void 0 !== (i = s(r, (e = h[d++]))) && l(c, e, i);
                            return c;
                        },
                    }
                );
            },
            5536: (t, e, i) => {
                var r = i(37263),
                    s = i(16544),
                    a = i(63130).f;
                r(
                    {
                        target: "Object",
                        stat: !0,
                        forced: s(function () {
                            return !Object.getOwnPropertyNames(1);
                        }),
                    },
                    { getOwnPropertyNames: a }
                );
            },
            25101: (t, e, i) => {
                var r = i(37263),
                    s = i(16544),
                    a = i(61324),
                    n = i(80729),
                    o = i(50926);
                r(
                    {
                        target: "Object",
                        stat: !0,
                        forced: s(function () {
                            n(1);
                        }),
                        sham: !o,
                    },
                    {
                        getPrototypeOf: function (t) {
                            return n(a(t));
                        },
                    }
                );
            },
            22698: (t, e, i) => {
                var r = i(37263),
                    s = i(16544),
                    a = i(90794),
                    n = Object.isExtensible;
                r(
                    {
                        target: "Object",
                        stat: !0,
                        forced: s(function () {
                            n(1);
                        }),
                    },
                    {
                        isExtensible: function (t) {
                            return !!a(t) && (!n || n(t));
                        },
                    }
                );
            },
            49815: (t, e, i) => {
                var r = i(37263),
                    s = i(16544),
                    a = i(90794),
                    n = Object.isFrozen;
                r(
                    {
                        target: "Object",
                        stat: !0,
                        forced: s(function () {
                            n(1);
                        }),
                    },
                    {
                        isFrozen: function (t) {
                            return !a(t) || (!!n && n(t));
                        },
                    }
                );
            },
            55056: (t, e, i) => {
                var r = i(37263),
                    s = i(16544),
                    a = i(90794),
                    n = Object.isSealed;
                r(
                    {
                        target: "Object",
                        stat: !0,
                        forced: s(function () {
                            n(1);
                        }),
                    },
                    {
                        isSealed: function (t) {
                            return !a(t) || (!!n && n(t));
                        },
                    }
                );
            },
            45710: (t, e, i) => {
                i(37263)({ target: "Object", stat: !0 }, { is: i(8690) });
            },
            99751: (t, e, i) => {
                var r = i(37263),
                    s = i(61324),
                    a = i(75432);
                r(
                    {
                        target: "Object",
                        stat: !0,
                        forced: i(16544)(function () {
                            a(1);
                        }),
                    },
                    {
                        keys: function (t) {
                            return a(s(t));
                        },
                    }
                );
            },
            51796: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(18494),
                    a = i(36037),
                    n = i(61324),
                    o = i(22670),
                    l = i(80729),
                    h = i(46683).f;
                s &&
                    r(
                        { target: "Object", proto: !0, forced: a },
                        {
                            __lookupGetter__: function (t) {
                                var e,
                                    i = n(this),
                                    r = o(t, !0);
                                do {
                                    if ((e = h(i, r))) return e.get;
                                } while ((i = l(i)));
                            },
                        }
                    );
            },
            61904: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(18494),
                    a = i(36037),
                    n = i(61324),
                    o = i(22670),
                    l = i(80729),
                    h = i(46683).f;
                s &&
                    r(
                        { target: "Object", proto: !0, forced: a },
                        {
                            __lookupSetter__: function (t) {
                                var e,
                                    i = n(this),
                                    r = o(t, !0);
                                do {
                                    if ((e = h(i, r))) return e.set;
                                } while ((i = l(i)));
                            },
                        }
                    );
            },
            95738: (t, e, i) => {
                var r = i(37263),
                    s = i(90794),
                    a = i(51909).onFreeze,
                    n = i(39974),
                    o = i(16544),
                    l = Object.preventExtensions;
                r(
                    {
                        target: "Object",
                        stat: !0,
                        forced: o(function () {
                            l(1);
                        }),
                        sham: !n,
                    },
                    {
                        preventExtensions: function (t) {
                            return l && s(t) ? l(a(t)) : t;
                        },
                    }
                );
            },
            47595: (t, e, i) => {
                var r = i(37263),
                    s = i(90794),
                    a = i(51909).onFreeze,
                    n = i(39974),
                    o = i(16544),
                    l = Object.seal;
                r(
                    {
                        target: "Object",
                        stat: !0,
                        forced: o(function () {
                            l(1);
                        }),
                        sham: !n,
                    },
                    {
                        seal: function (t) {
                            return l && s(t) ? l(a(t)) : t;
                        },
                    }
                );
            },
            27867: (t, e, i) => {
                i(37263)({ target: "Object", stat: !0 }, { setPrototypeOf: i(17496) });
            },
            56394: (t, e, i) => {
                var r = i(88191),
                    s = i(61270),
                    a = i(43060);
                r || s(Object.prototype, "toString", a, { unsafe: !0 });
            },
            49628: (t, e, i) => {
                var r = i(37263),
                    s = i(69953).values;
                r(
                    { target: "Object", stat: !0 },
                    {
                        values: function (t) {
                            return s(t);
                        },
                    }
                );
            },
            56718: (t, e, i) => {
                var r = i(37263),
                    s = i(17560);
                r({ global: !0, forced: parseFloat != s }, { parseFloat: s });
            },
            573: (t, e, i) => {
                var r = i(37263),
                    s = i(35407);
                r({ global: !0, forced: parseInt != s }, { parseInt: s });
            },
            86969: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96163),
                    a = i(5084),
                    n = i(80544),
                    o = i(54026);
                r(
                    { target: "Promise", stat: !0 },
                    {
                        allSettled: function (t) {
                            var e = this,
                                i = a.f(e),
                                r = i.resolve,
                                l = i.reject,
                                h = n(function () {
                                    var i = s(e.resolve),
                                        a = [],
                                        n = 0,
                                        l = 1;
                                    o(t, function (t) {
                                        var s = n++,
                                            o = !1;
                                        a.push(void 0),
                                            l++,
                                            i.call(e, t).then(
                                                function (t) {
                                                    o || ((o = !0), (a[s] = { status: "fulfilled", value: t }), --l || r(a));
                                                },
                                                function (t) {
                                                    o || ((o = !0), (a[s] = { status: "rejected", reason: t }), --l || r(a));
                                                }
                                            );
                                    }),
                                        --l || r(a);
                                });
                            return h.error && l(h.value), i.promise;
                        },
                    }
                );
            },
            32021: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96163),
                    a = i(35897),
                    n = i(5084),
                    o = i(80544),
                    l = i(54026),
                    h = "No one promise resolved";
                r(
                    { target: "Promise", stat: !0 },
                    {
                        any: function (t) {
                            var e = this,
                                i = n.f(e),
                                r = i.resolve,
                                c = i.reject,
                                d = o(function () {
                                    var i = s(e.resolve),
                                        n = [],
                                        o = 0,
                                        d = 1,
                                        u = !1;
                                    l(t, function (t) {
                                        var s = o++,
                                            l = !1;
                                        n.push(void 0),
                                            d++,
                                            i.call(e, t).then(
                                                function (t) {
                                                    l || u || ((u = !0), r(t));
                                                },
                                                function (t) {
                                                    l || u || ((l = !0), (n[s] = t), --d || c(new (a("AggregateError"))(n, h)));
                                                }
                                            );
                                    }),
                                        --d || c(new (a("AggregateError"))(n, h));
                                });
                            return d.error && c(d.value), i.promise;
                        },
                    }
                );
            },
            38328: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(40783),
                    n = i(16544),
                    o = i(35897),
                    l = i(40564),
                    h = i(95732),
                    c = i(61270);
                if (
                    (r(
                        {
                            target: "Promise",
                            proto: !0,
                            real: !0,
                            forced:
                                !!a &&
                                n(function () {
                                    a.prototype.finally.call({ then: function () {} }, function () {});
                                }),
                        },
                        {
                            finally: function (t) {
                                var e = l(this, o("Promise")),
                                    i = "function" == typeof t;
                                return this.then(
                                    i
                                        ? function (i) {
                                              return h(e, t()).then(function () {
                                                  return i;
                                              });
                                          }
                                        : t,
                                    i
                                        ? function (i) {
                                              return h(e, t()).then(function () {
                                                  throw i;
                                              });
                                          }
                                        : t
                                );
                            },
                        }
                    ),
                    !s && "function" == typeof a)
                ) {
                    var d = o("Promise").prototype.finally;
                    a.prototype.finally !== d && c(a.prototype, "finally", d, { unsafe: !0 });
                }
            },
            25334: (t, e, i) => {
                "use strict";
                var r,
                    s,
                    a,
                    n,
                    o = i(37263),
                    l = i(86268),
                    h = i(47583),
                    c = i(35897),
                    d = i(40783),
                    u = i(61270),
                    p = i(96893),
                    m = i(17496),
                    f = i(98821),
                    g = i(7730),
                    v = i(90794),
                    b = i(96163),
                    y = i(44761),
                    w = i(69734),
                    x = i(54026),
                    E = i(3616),
                    C = i(40564),
                    S = i(48117).set,
                    T = i(92095),
                    _ = i(95732),
                    M = i(92716),
                    P = i(5084),
                    k = i(80544),
                    A = i(42743),
                    D = i(34451),
                    L = i(3649),
                    I = i(12274),
                    R = i(45354),
                    O = i(24061),
                    F = L("species"),
                    B = "Promise",
                    z = A.get,
                    N = A.set,
                    V = A.getterFor(B),
                    H = d && d.prototype,
                    j = d,
                    W = H,
                    G = h.TypeError,
                    q = h.document,
                    $ = h.process,
                    U = P.f,
                    Y = U,
                    X = !!(q && q.createEvent && h.dispatchEvent),
                    K = "function" == typeof PromiseRejectionEvent,
                    Z = "unhandledrejection",
                    J = !1,
                    Q = D(B, function () {
                        var t = w(j) !== String(j);
                        if (!t && 66 === O) return !0;
                        if (l && !W.finally) return !0;
                        if (O >= 51 && /native code/.test(j)) return !1;
                        var e = new j(function (t) {
                                t(1);
                            }),
                            i = function (t) {
                                t(
                                    function () {},
                                    function () {}
                                );
                            };
                        return ((e.constructor = {})[F] = i), !(J = e.then(function () {}) instanceof i) || (!t && I && !K);
                    }),
                    tt =
                        Q ||
                        !E(function (t) {
                            j.all(t).catch(function () {});
                        }),
                    et = function (t) {
                        var e;
                        return !(!v(t) || "function" != typeof (e = t.then)) && e;
                    },
                    it = function (t, e) {
                        if (!t.notified) {
                            t.notified = !0;
                            var i = t.reactions;
                            T(function () {
                                for (var r = t.value, s = 1 == t.state, a = 0; i.length > a; ) {
                                    var n,
                                        o,
                                        l,
                                        h = i[a++],
                                        c = s ? h.ok : h.fail,
                                        d = h.resolve,
                                        u = h.reject,
                                        p = h.domain;
                                    try {
                                        c
                                            ? (s || (2 === t.rejection && nt(t), (t.rejection = 1)),
                                              !0 === c ? (n = r) : (p && p.enter(), (n = c(r)), p && (p.exit(), (l = !0))),
                                              n === h.promise ? u(G("Promise-chain cycle")) : (o = et(n)) ? o.call(n, d, u) : d(n))
                                            : u(r);
                                    } catch (t) {
                                        p && !l && p.exit(), u(t);
                                    }
                                }
                                (t.reactions = []), (t.notified = !1), e && !t.rejection && st(t);
                            });
                        }
                    },
                    rt = function (t, e, i) {
                        var r, s;
                        X ? (((r = q.createEvent("Event")).promise = e), (r.reason = i), r.initEvent(t, !1, !0), h.dispatchEvent(r)) : (r = { promise: e, reason: i }),
                            !K && (s = h["on" + t]) ? s(r) : t === Z && M("Unhandled promise rejection", i);
                    },
                    st = function (t) {
                        S.call(h, function () {
                            var e,
                                i = t.facade,
                                r = t.value;
                            if (
                                at(t) &&
                                ((e = k(function () {
                                    R ? $.emit("unhandledRejection", r, i) : rt(Z, i, r);
                                })),
                                (t.rejection = R || at(t) ? 2 : 1),
                                e.error)
                            )
                                throw e.value;
                        });
                    },
                    at = function (t) {
                        return 1 !== t.rejection && !t.parent;
                    },
                    nt = function (t) {
                        S.call(h, function () {
                            var e = t.facade;
                            R ? $.emit("rejectionHandled", e) : rt("rejectionhandled", e, t.value);
                        });
                    },
                    ot = function (t, e, i) {
                        return function (r) {
                            t(e, r, i);
                        };
                    },
                    lt = function (t, e, i) {
                        t.done || ((t.done = !0), i && (t = i), (t.value = e), (t.state = 2), it(t, !0));
                    },
                    ht = function t(e, i, r) {
                        if (!e.done) {
                            (e.done = !0), r && (e = r);
                            try {
                                if (e.facade === i) throw G("Promise can't be resolved itself");
                                var s = et(i);
                                s
                                    ? T(function () {
                                          var r = { done: !1 };
                                          try {
                                              s.call(i, ot(t, r, e), ot(lt, r, e));
                                          } catch (t) {
                                              lt(r, t, e);
                                          }
                                      })
                                    : ((e.value = i), (e.state = 1), it(e, !1));
                            } catch (t) {
                                lt({ done: !1 }, t, e);
                            }
                        }
                    };
                if (
                    Q &&
                    ((W = (j = function (t) {
                        y(this, j, B), b(t), r.call(this);
                        var e = z(this);
                        try {
                            t(ot(ht, e), ot(lt, e));
                        } catch (t) {
                            lt(e, t);
                        }
                    }).prototype),
                    ((r = function (t) {
                        N(this, { type: B, done: !1, notified: !1, parent: !1, reactions: [], rejection: !1, state: 0, value: void 0 });
                    }).prototype = p(W, {
                        then: function (t, e) {
                            var i = V(this),
                                r = U(C(this, j));
                            return (r.ok = "function" != typeof t || t), (r.fail = "function" == typeof e && e), (r.domain = R ? $.domain : void 0), (i.parent = !0), i.reactions.push(r), 0 != i.state && it(i, !1), r.promise;
                        },
                        catch: function (t) {
                            return this.then(void 0, t);
                        },
                    })),
                    (s = function () {
                        var t = new r(),
                            e = z(t);
                        (this.promise = t), (this.resolve = ot(ht, e)), (this.reject = ot(lt, e));
                    }),
                    (P.f = U = function (t) {
                        return t === j || t === a ? new s(t) : Y(t);
                    }),
                    !l && "function" == typeof d && H !== Object.prototype)
                ) {
                    (n = H.then),
                        J ||
                            (u(
                                H,
                                "then",
                                function (t, e) {
                                    var i = this;
                                    return new j(function (t, e) {
                                        n.call(i, t, e);
                                    }).then(t, e);
                                },
                                { unsafe: !0 }
                            ),
                            u(H, "catch", W.catch, { unsafe: !0 }));
                    try {
                        delete H.constructor;
                    } catch (t) {}
                    m && m(H, W);
                }
                o({ global: !0, wrap: !0, forced: Q }, { Promise: j }),
                    f(j, B, !1, !0),
                    g(B),
                    (a = c(B)),
                    o(
                        { target: B, stat: !0, forced: Q },
                        {
                            reject: function (t) {
                                var e = U(this);
                                return e.reject.call(void 0, t), e.promise;
                            },
                        }
                    ),
                    o(
                        { target: B, stat: !0, forced: l || Q },
                        {
                            resolve: function (t) {
                                return _(l && this === a ? j : this, t);
                            },
                        }
                    ),
                    o(
                        { target: B, stat: !0, forced: tt },
                        {
                            all: function (t) {
                                var e = this,
                                    i = U(e),
                                    r = i.resolve,
                                    s = i.reject,
                                    a = k(function () {
                                        var i = b(e.resolve),
                                            a = [],
                                            n = 0,
                                            o = 1;
                                        x(t, function (t) {
                                            var l = n++,
                                                h = !1;
                                            a.push(void 0),
                                                o++,
                                                i.call(e, t).then(function (t) {
                                                    h || ((h = !0), (a[l] = t), --o || r(a));
                                                }, s);
                                        }),
                                            --o || r(a);
                                    });
                                return a.error && s(a.value), i.promise;
                            },
                            race: function (t) {
                                var e = this,
                                    i = U(e),
                                    r = i.reject,
                                    s = k(function () {
                                        var s = b(e.resolve);
                                        x(t, function (t) {
                                            s.call(e, t).then(i.resolve, r);
                                        });
                                    });
                                return s.error && r(s.value), i.promise;
                            },
                        }
                    );
            },
            31678: (t, e, i) => {
                var r = i(37263),
                    s = i(35897),
                    a = i(96163),
                    n = i(92569),
                    o = i(16544),
                    l = s("Reflect", "apply"),
                    h = Function.apply;
                r(
                    {
                        target: "Reflect",
                        stat: !0,
                        forced: !o(function () {
                            l(function () {});
                        }),
                    },
                    {
                        apply: function (t, e, i) {
                            return a(t), n(i), l ? l(t, e, i) : h.call(t, e, i);
                        },
                    }
                );
            },
            13080: (t, e, i) => {
                var r = i(37263),
                    s = i(35897),
                    a = i(96163),
                    n = i(92569),
                    o = i(90794),
                    l = i(3590),
                    h = i(51335),
                    c = i(16544),
                    d = s("Reflect", "construct"),
                    u = c(function () {
                        function t() {}
                        return !(d(function () {}, [], t) instanceof t);
                    }),
                    p = !c(function () {
                        d(function () {});
                    }),
                    m = u || p;
                r(
                    { target: "Reflect", stat: !0, forced: m, sham: m },
                    {
                        construct: function (t, e) {
                            a(t), n(e);
                            var i = arguments.length < 3 ? t : a(arguments[2]);
                            if (p && !u) return d(t, e, i);
                            if (t == i) {
                                switch (e.length) {
                                    case 0:
                                        return new t();
                                    case 1:
                                        return new t(e[0]);
                                    case 2:
                                        return new t(e[0], e[1]);
                                    case 3:
                                        return new t(e[0], e[1], e[2]);
                                    case 4:
                                        return new t(e[0], e[1], e[2], e[3]);
                                }
                                var r = [null];
                                return r.push.apply(r, e), new (h.apply(t, r))();
                            }
                            var s = i.prototype,
                                c = l(o(s) ? s : Object.prototype),
                                m = Function.apply.call(t, c, e);
                            return o(m) ? m : c;
                        },
                    }
                );
            },
            9079: (t, e, i) => {
                var r = i(37263),
                    s = i(18494),
                    a = i(92569),
                    n = i(22670),
                    o = i(94615);
                r(
                    {
                        target: "Reflect",
                        stat: !0,
                        forced: i(16544)(function () {
                            Reflect.defineProperty(o.f({}, 1, { value: 1 }), 1, { value: 2 });
                        }),
                        sham: !s,
                    },
                    {
                        defineProperty: function (t, e, i) {
                            a(t);
                            var r = n(e, !0);
                            a(i);
                            try {
                                return o.f(t, r, i), !0;
                            } catch (t) {
                                return !1;
                            }
                        },
                    }
                );
            },
            36714: (t, e, i) => {
                var r = i(37263),
                    s = i(92569),
                    a = i(46683).f;
                r(
                    { target: "Reflect", stat: !0 },
                    {
                        deleteProperty: function (t, e) {
                            var i = a(s(t), e);
                            return !(i && !i.configurable) && delete t[e];
                        },
                    }
                );
            },
            69723: (t, e, i) => {
                var r = i(37263),
                    s = i(18494),
                    a = i(92569),
                    n = i(46683);
                r(
                    { target: "Reflect", stat: !0, sham: !s },
                    {
                        getOwnPropertyDescriptor: function (t, e) {
                            return n.f(a(t), e);
                        },
                    }
                );
            },
            14728: (t, e, i) => {
                var r = i(37263),
                    s = i(92569),
                    a = i(80729);
                r(
                    { target: "Reflect", stat: !0, sham: !i(50926) },
                    {
                        getPrototypeOf: function (t) {
                            return a(s(t));
                        },
                    }
                );
            },
            36582: (t, e, i) => {
                var r = i(37263),
                    s = i(90794),
                    a = i(92569),
                    n = i(34402),
                    o = i(46683),
                    l = i(80729);
                r(
                    { target: "Reflect", stat: !0 },
                    {
                        get: function t(e, i) {
                            var r,
                                h,
                                c = arguments.length < 3 ? e : arguments[2];
                            return a(e) === c ? e[i] : (r = o.f(e, i)) ? (n(r, "value") ? r.value : void 0 === r.get ? void 0 : r.get.call(c)) : s((h = l(e))) ? t(h, i, c) : void 0;
                        },
                    }
                );
            },
            22704: (t, e, i) => {
                i(37263)(
                    { target: "Reflect", stat: !0 },
                    {
                        has: function (t, e) {
                            return e in t;
                        },
                    }
                );
            },
            76401: (t, e, i) => {
                var r = i(37263),
                    s = i(92569),
                    a = Object.isExtensible;
                r(
                    { target: "Reflect", stat: !0 },
                    {
                        isExtensible: function (t) {
                            return s(t), !a || a(t);
                        },
                    }
                );
            },
            5274: (t, e, i) => {
                i(37263)({ target: "Reflect", stat: !0 }, { ownKeys: i(40929) });
            },
            54817: (t, e, i) => {
                var r = i(37263),
                    s = i(35897),
                    a = i(92569);
                r(
                    { target: "Reflect", stat: !0, sham: !i(39974) },
                    {
                        preventExtensions: function (t) {
                            a(t);
                            try {
                                var e = s("Object", "preventExtensions");
                                return e && e(t), !0;
                            } catch (t) {
                                return !1;
                            }
                        },
                    }
                );
            },
            32309: (t, e, i) => {
                var r = i(37263),
                    s = i(92569),
                    a = i(79882),
                    n = i(17496);
                n &&
                    r(
                        { target: "Reflect", stat: !0 },
                        {
                            setPrototypeOf: function (t, e) {
                                s(t), a(e);
                                try {
                                    return n(t, e), !0;
                                } catch (t) {
                                    return !1;
                                }
                            },
                        }
                    );
            },
            91183: (t, e, i) => {
                var r = i(37263),
                    s = i(92569),
                    a = i(90794),
                    n = i(34402),
                    o = i(16544),
                    l = i(94615),
                    h = i(46683),
                    c = i(80729),
                    d = i(54677);
                r(
                    {
                        target: "Reflect",
                        stat: !0,
                        forced: o(function () {
                            var t = function () {},
                                e = l.f(new t(), "a", { configurable: !0 });
                            return !1 !== Reflect.set(t.prototype, "a", 1, e);
                        }),
                    },
                    {
                        set: function t(e, i, r) {
                            var o,
                                u,
                                p = arguments.length < 4 ? e : arguments[3],
                                m = h.f(s(e), i);
                            if (!m) {
                                if (a((u = c(e)))) return t(u, i, r, p);
                                m = d(0);
                            }
                            if (n(m, "value")) {
                                if (!1 === m.writable || !a(p)) return !1;
                                if ((o = h.f(p, i))) {
                                    if (o.get || o.set || !1 === o.writable) return !1;
                                    (o.value = r), l.f(p, i, o);
                                } else l.f(p, i, d(0, r));
                                return !0;
                            }
                            return void 0 !== m.set && (m.set.call(p, r), !0);
                        },
                    }
                );
            },
            52257: (t, e, i) => {
                var r = i(37263),
                    s = i(47583),
                    a = i(98821);
                r({ global: !0 }, { Reflect: {} }), a(s.Reflect, "Reflect", !0);
            },
            7390: (t, e, i) => {
                var r = i(18494),
                    s = i(47583),
                    a = i(34451),
                    n = i(40434),
                    o = i(57),
                    l = i(94615).f,
                    h = i(9275).f,
                    c = i(17574),
                    d = i(41118),
                    u = i(35230),
                    p = i(61270),
                    m = i(16544),
                    f = i(34402),
                    g = i(42743).enforce,
                    v = i(7730),
                    b = i(3649),
                    y = i(74121),
                    w = i(1712),
                    x = b("match"),
                    E = s.RegExp,
                    C = E.prototype,
                    S = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/,
                    T = /a/g,
                    _ = /a/g,
                    M = new E(T) !== T,
                    P = u.UNSUPPORTED_Y,
                    k =
                        r &&
                        (!M ||
                            P ||
                            y ||
                            w ||
                            m(function () {
                                return (_[x] = !1), E(T) != T || E(_) == _ || "/a/i" != E(T, "i");
                            }));
                if (a("RegExp", k)) {
                    for (
                        var A = function (t, e) {
                                var i,
                                    r,
                                    s,
                                    a,
                                    l,
                                    h,
                                    u = this instanceof A,
                                    p = c(t),
                                    m = void 0 === e,
                                    v = [],
                                    b = t;
                                if (!u && p && m && t.constructor === A) return t;
                                if (
                                    ((p || t instanceof A) && ((t = t.source), m && (e = ("flags" in b) ? b.flags : d.call(b))),
                                    (t = void 0 === t ? "" : String(t)),
                                    (e = void 0 === e ? "" : String(e)),
                                    (b = t),
                                    y && ("dotAll" in T) && (r = !!e && e.indexOf("s") > -1) && (e = e.replace(/s/g, "")),
                                    (i = e),
                                    P && ("sticky" in T) && (s = !!e && e.indexOf("y") > -1) && (e = e.replace(/y/g, "")),
                                    w &&
                                        ((a = (function (t) {
                                            for (var e, i = t.length, r = 0, s = "", a = [], n = {}, o = !1, l = !1, h = 0, c = ""; r <= i; r++) {
                                                if ("\\" === (e = t.charAt(r))) e += t.charAt(++r);
                                                else if ("]" === e) o = !1;
                                                else if (!o)
                                                    switch (!0) {
                                                        case "[" === e:
                                                            o = !0;
                                                            break;
                                                        case "(" === e:
                                                            S.test(t.slice(r + 1)) && ((r += 2), (l = !0)), (s += e), h++;
                                                            continue;
                                                        case ">" === e && l:
                                                            if ("" === c || f(n, c)) throw new SyntaxError("Invalid capture group name");
                                                            (n[c] = !0), a.push([c, h]), (l = !1), (c = "");
                                                            continue;
                                                    }
                                                l ? (c += e) : (s += e);
                                            }
                                            return [s, a];
                                        })(t)),
                                        (t = a[0]),
                                        (v = a[1])),
                                    (l = n(E(t, e), u ? this : C, A)),
                                    (r || s || v.length) &&
                                        ((h = g(l)),
                                        r &&
                                            ((h.dotAll = !0),
                                            (h.raw = A(
                                                (function (t) {
                                                    for (var e, i = t.length, r = 0, s = "", a = !1; r <= i; r++)
                                                        "\\" !== (e = t.charAt(r)) ? (a || "." !== e ? ("[" === e ? (a = !0) : "]" === e && (a = !1), (s += e)) : (s += "[\\s\\S]")) : (s += e + t.charAt(++r));
                                                    return s;
                                                })(t),
                                                i
                                            ))),
                                        s && (h.sticky = !0),
                                        v.length && (h.groups = v)),
                                    t !== b)
                                )
                                    try {
                                        o(l, "source", "" === b ? "(?:)" : b);
                                    } catch (t) {}
                                return l;
                            },
                            D = function (t) {
                                (t in A) ||
                                    l(A, t, {
                                        configurable: !0,
                                        get: function () {
                                            return E[t];
                                        },
                                        set: function (e) {
                                            E[t] = e;
                                        },
                                    });
                            },
                            L = h(E),
                            I = 0;
                        L.length > I;

                    )
                        D(L[I++]);
                    (C.constructor = A), (A.prototype = C), p(s, "RegExp", A);
                }
                v("RegExp");
            },
            86956: (t, e, i) => {
                var r = i(18494),
                    s = i(74121),
                    a = i(94615).f,
                    n = i(42743).get,
                    o = RegExp.prototype;
                r &&
                    s &&
                    a(o, "dotAll", {
                        configurable: !0,
                        get: function () {
                            if (this !== o) {
                                if (this instanceof RegExp) return !!n(this).dotAll;
                                throw TypeError("Incompatible receiver, RegExp required");
                            }
                        },
                    });
            },
            62322: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(48445);
                r({ target: "RegExp", proto: !0, forced: /./.exec !== s }, { exec: s });
            },
            93710: (t, e, i) => {
                var r = i(18494),
                    s = i(94615),
                    a = i(41118),
                    n = i(16544);
                r &&
                    n(function () {
                        return "sy" !== Object.getOwnPropertyDescriptor(RegExp.prototype, "flags").get.call({ dotAll: !0, sticky: !0 });
                    }) &&
                    s.f(RegExp.prototype, "flags", { configurable: !0, get: a });
            },
            514: (t, e, i) => {
                var r = i(18494),
                    s = i(35230).UNSUPPORTED_Y,
                    a = i(94615).f,
                    n = i(42743).get,
                    o = RegExp.prototype;
                r &&
                    s &&
                    a(o, "sticky", {
                        configurable: !0,
                        get: function () {
                            if (this !== o) {
                                if (this instanceof RegExp) return !!n(this).sticky;
                                throw TypeError("Incompatible receiver, RegExp required");
                            }
                        },
                    });
            },
            19297: (t, e, i) => {
                "use strict";
                i(62322);
                var r,
                    s,
                    a = i(37263),
                    n = i(90794),
                    o =
                        ((r = !1),
                        ((s = /[ac]/).exec = function () {
                            return (r = !0), /./.exec.apply(this, arguments);
                        }),
                        !0 === s.test("abc") && r),
                    l = /./.test;
                a(
                    { target: "RegExp", proto: !0, forced: !o },
                    {
                        test: function (t) {
                            if ("function" != typeof this.exec) return l.call(this, t);
                            var e = this.exec(t);
                            if (null !== e && !n(e)) throw new Error("RegExp exec method returned something other than an Object or null");
                            return !!e;
                        },
                    }
                );
            },
            64669: (t, e, i) => {
                "use strict";
                var r = i(61270),
                    s = i(92569),
                    a = i(16544),
                    n = i(41118),
                    o = "toString",
                    l = RegExp.prototype,
                    h = l[o],
                    c = a(function () {
                        return "/a/b" != h.call({ source: "a", flags: "b" });
                    }),
                    d = h.name != o;
                (c || d) &&
                    r(
                        RegExp.prototype,
                        o,
                        function () {
                            var t = s(this),
                                e = String(t.source),
                                i = t.flags;
                            return "/" + e + "/" + String(void 0 === i && t instanceof RegExp && !("flags" in l) ? n.call(t) : i);
                        },
                        { unsafe: !0 }
                    );
            },
            26922: (t, e, i) => {
                "use strict";
                var r = i(24802),
                    s = i(26100);
                t.exports = r(
                    "Set",
                    function (t) {
                        return function () {
                            return t(this, arguments.length ? arguments[0] : void 0);
                        };
                    },
                    s
                );
            },
            36993: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("anchor") },
                    {
                        anchor: function (t) {
                            return s(this, "a", "name", t);
                        },
                    }
                );
            },
            76755: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("big") },
                    {
                        big: function () {
                            return s(this, "big", "", "");
                        },
                    }
                );
            },
            99138: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("blink") },
                    {
                        blink: function () {
                            return s(this, "blink", "", "");
                        },
                    }
                );
            },
            42448: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("bold") },
                    {
                        bold: function () {
                            return s(this, "b", "", "");
                        },
                    }
                );
            },
            619: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96389).codeAt;
                r(
                    { target: "String", proto: !0 },
                    {
                        codePointAt: function (t) {
                            return s(this, t);
                        },
                    }
                );
            },
            23223: (t, e, i) => {
                "use strict";
                var r,
                    s = i(37263),
                    a = i(46683).f,
                    n = i(70097),
                    o = i(59041),
                    l = i(63955),
                    h = i(83989),
                    c = i(86268),
                    d = "".endsWith,
                    u = Math.min,
                    p = h("endsWith");
                s(
                    { target: "String", proto: !0, forced: !!(c || p || ((r = a(String.prototype, "endsWith")), !r || r.writable)) && !p },
                    {
                        endsWith: function (t) {
                            var e = String(l(this));
                            o(t);
                            var i = arguments.length > 1 ? arguments[1] : void 0,
                                r = n(e.length),
                                s = void 0 === i ? r : u(n(i), r),
                                a = String(t);
                            return d ? d.call(e, a, s) : e.slice(s - a.length, s) === a;
                        },
                    }
                );
            },
            92378: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("fixed") },
                    {
                        fixed: function () {
                            return s(this, "tt", "", "");
                        },
                    }
                );
            },
            61892: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("fontcolor") },
                    {
                        fontcolor: function (t) {
                            return s(this, "font", "color", t);
                        },
                    }
                );
            },
            40842: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("fontsize") },
                    {
                        fontsize: function (t) {
                            return s(this, "font", "size", t);
                        },
                    }
                );
            },
            40594: (t, e, i) => {
                var r = i(37263),
                    s = i(96782),
                    a = String.fromCharCode,
                    n = String.fromCodePoint;
                r(
                    { target: "String", stat: !0, forced: !!n && 1 != n.length },
                    {
                        fromCodePoint: function (t) {
                            for (var e, i = [], r = arguments.length, n = 0; r > n; ) {
                                if (((e = +arguments[n++]), s(e, 1114111) !== e)) throw RangeError(e + " is not a valid code point");
                                i.push(e < 65536 ? a(e) : a(55296 + ((e -= 65536) >> 10), (e % 1024) + 56320));
                            }
                            return i.join("");
                        },
                    }
                );
            },
            97723: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(59041),
                    a = i(63955);
                r(
                    { target: "String", proto: !0, forced: !i(83989)("includes") },
                    {
                        includes: function (t) {
                            return !!~String(a(this)).indexOf(s(t), arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                );
            },
            66060: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("italics") },
                    {
                        italics: function () {
                            return s(this, "i", "", "");
                        },
                    }
                );
            },
            92129: (t, e, i) => {
                "use strict";
                var r = i(96389).charAt,
                    s = i(42743),
                    a = i(99012),
                    n = "String Iterator",
                    o = s.set,
                    l = s.getterFor(n);
                a(
                    String,
                    "String",
                    function (t) {
                        o(this, { type: n, string: String(t), index: 0 });
                    },
                    function () {
                        var t,
                            e = l(this),
                            i = e.string,
                            s = e.index;
                        return s >= i.length ? { value: void 0, done: !0 } : ((t = r(i, s)), (e.index += t.length), { value: t, done: !1 });
                    }
                );
            },
            59808: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("link") },
                    {
                        link: function (t) {
                            return s(this, "a", "href", t);
                        },
                    }
                );
            },
            70698: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(24683),
                    a = i(63955),
                    n = i(70097),
                    o = i(96163),
                    l = i(92569),
                    h = i(39624),
                    c = i(17574),
                    d = i(41118),
                    u = i(57),
                    p = i(16544),
                    m = i(3649),
                    f = i(40564),
                    g = i(96733),
                    v = i(42743),
                    b = i(86268),
                    y = m("matchAll"),
                    w = "RegExp String",
                    x = w + " Iterator",
                    E = v.set,
                    C = v.getterFor(x),
                    S = RegExp.prototype,
                    T = S.exec,
                    _ = "".matchAll,
                    M =
                        !!_ &&
                        !p(function () {
                            "a".matchAll(/./);
                        }),
                    P = s(
                        function (t, e, i, r) {
                            E(this, { type: x, regexp: t, string: e, global: i, unicode: r, done: !1 });
                        },
                        w,
                        function () {
                            var t = C(this);
                            if (t.done) return { value: void 0, done: !0 };
                            var e = t.regexp,
                                i = t.string,
                                r = (function (t, e) {
                                    var i,
                                        r = t.exec;
                                    if ("function" == typeof r) {
                                        if ("object" != typeof (i = r.call(t, e))) throw TypeError("Incorrect exec result");
                                        return i;
                                    }
                                    return T.call(t, e);
                                })(e, i);
                            return null === r ? { value: void 0, done: (t.done = !0) } : t.global ? ("" == String(r[0]) && (e.lastIndex = g(i, n(e.lastIndex), t.unicode)), { value: r, done: !1 }) : ((t.done = !0), { value: r, done: !1 });
                        }
                    ),
                    k = function (t) {
                        var e,
                            i,
                            r,
                            s,
                            a,
                            o,
                            h = l(this),
                            c = String(t);
                        return (
                            (e = f(h, RegExp)),
                            void 0 === (i = h.flags) && h instanceof RegExp && !("flags" in S) && (i = d.call(h)),
                            (r = void 0 === i ? "" : String(i)),
                            (s = new e(e === RegExp ? h.source : h, r)),
                            (a = !!~r.indexOf("g")),
                            (o = !!~r.indexOf("u")),
                            (s.lastIndex = n(h.lastIndex)),
                            new P(s, c, a, o)
                        );
                    };
                r(
                    { target: "String", proto: !0, forced: M },
                    {
                        matchAll: function (t) {
                            var e,
                                i,
                                r,
                                s = a(this);
                            if (null != t) {
                                if (c(t) && !~String(a("flags" in S ? t.flags : d.call(t))).indexOf("g")) throw TypeError("`.matchAll` does not allow non-global regexes");
                                if (M) return _.apply(s, arguments);
                                if ((void 0 === (i = t[y]) && b && "RegExp" == h(t) && (i = k), null != i)) return o(i).call(t, s);
                            } else if (M) return _.apply(s, arguments);
                            return (e = String(s)), (r = new RegExp(t, "g")), b ? k.call(r, e) : r[y](e);
                        },
                    }
                ),
                    b || y in S || u(S, y, k);
            },
            55017: (t, e, i) => {
                "use strict";
                var r = i(90783),
                    s = i(92569),
                    a = i(70097),
                    n = i(63955),
                    o = i(96733),
                    l = i(74214);
                r("match", function (t, e, i) {
                    return [
                        function (e) {
                            var i = n(this),
                                r = null == e ? void 0 : e[t];
                            return void 0 !== r ? r.call(e, i) : new RegExp(e)[t](String(i));
                        },
                        function (t) {
                            var r = i(e, this, t);
                            if (r.done) return r.value;
                            var n = s(this),
                                h = String(t);
                            if (!n.global) return l(n, h);
                            var c = n.unicode;
                            n.lastIndex = 0;
                            for (var d, u = [], p = 0; null !== (d = l(n, h)); ) {
                                var m = String(d[0]);
                                (u[p] = m), "" === m && (n.lastIndex = o(h, a(n.lastIndex), c)), p++;
                            }
                            return 0 === p ? null : u;
                        },
                    ];
                });
            },
            82433: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(70578).end;
                r(
                    { target: "String", proto: !0, forced: i(98040) },
                    {
                        padEnd: function (t) {
                            return s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                );
            },
            11932: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(70578).start;
                r(
                    { target: "String", proto: !0, forced: i(98040) },
                    {
                        padStart: function (t) {
                            return s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                );
            },
            45924: (t, e, i) => {
                var r = i(37263),
                    s = i(22977),
                    a = i(70097);
                r(
                    { target: "String", stat: !0 },
                    {
                        raw: function (t) {
                            for (var e = s(t.raw), i = a(e.length), r = arguments.length, n = [], o = 0; i > o; ) n.push(String(e[o++])), o < r && n.push(String(arguments[o]));
                            return n.join("");
                        },
                    }
                );
            },
            51142: (t, e, i) => {
                i(37263)({ target: "String", proto: !0 }, { repeat: i(74061) });
            },
            66553: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(63955),
                    a = i(17574),
                    n = i(41118),
                    o = i(4305),
                    l = i(3649),
                    h = i(86268),
                    c = l("replace"),
                    d = RegExp.prototype,
                    u = Math.max,
                    p = function (t, e, i) {
                        return i > t.length ? -1 : "" === e ? i : t.indexOf(e, i);
                    };
                r(
                    { target: "String", proto: !0 },
                    {
                        replaceAll: function (t, e) {
                            var i,
                                r,
                                l,
                                m,
                                f,
                                g,
                                v,
                                b,
                                y = s(this),
                                w = 0,
                                x = 0,
                                E = "";
                            if (null != t) {
                                if ((i = a(t)) && !~String(s("flags" in d ? t.flags : n.call(t))).indexOf("g")) throw TypeError("`.replaceAll` does not allow non-global regexes");
                                if (void 0 !== (r = t[c])) return r.call(t, y, e);
                                if (h && i) return String(y).replace(t, e);
                            }
                            for (l = String(y), m = String(t), (f = "function" == typeof e) || (e = String(e)), g = m.length, v = u(1, g), w = p(l, m, 0); -1 !== w; )
                                (b = f ? String(e(m, w, l)) : o(m, l, w, [], void 0, e)), (E += l.slice(x, w) + b), (x = w + g), (w = p(l, m, w + v));
                            return x < l.length && (E += l.slice(x)), E;
                        },
                    }
                );
            },
            93296: (t, e, i) => {
                "use strict";
                var r = i(90783),
                    s = i(16544),
                    a = i(92569),
                    n = i(70097),
                    o = i(75089),
                    l = i(63955),
                    h = i(96733),
                    c = i(4305),
                    d = i(74214),
                    u = i(3649)("replace"),
                    p = Math.max,
                    m = Math.min,
                    f = "$0" === "a".replace(/./, "$0"),
                    g = !!/./[u] && "" === /./[u]("a", "$0");
                r(
                    "replace",
                    function (t, e, i) {
                        var r = g ? "$" : "$0";
                        return [
                            function (t, i) {
                                var r = l(this),
                                    s = null == t ? void 0 : t[u];
                                return void 0 !== s ? s.call(t, r, i) : e.call(String(r), t, i);
                            },
                            function (t, s) {
                                if ("string" == typeof s && -1 === s.indexOf(r) && -1 === s.indexOf("$<")) {
                                    var l = i(e, this, t, s);
                                    if (l.done) return l.value;
                                }
                                var u = a(this),
                                    f = String(t),
                                    g = "function" == typeof s;
                                g || (s = String(s));
                                var v = u.global;
                                if (v) {
                                    var b = u.unicode;
                                    u.lastIndex = 0;
                                }
                                for (var y = []; ; ) {
                                    var w = d(u, f);
                                    if (null === w) break;
                                    if ((y.push(w), !v)) break;
                                    "" === String(w[0]) && (u.lastIndex = h(f, n(u.lastIndex), b));
                                }
                                for (var x, E = "", C = 0, S = 0; S < y.length; S++) {
                                    w = y[S];
                                    for (var T = String(w[0]), _ = p(m(o(w.index), f.length), 0), M = [], P = 1; P < w.length; P++) M.push(void 0 === (x = w[P]) ? x : String(x));
                                    var k = w.groups;
                                    if (g) {
                                        var A = [T].concat(M, _, f);
                                        void 0 !== k && A.push(k);
                                        var D = String(s.apply(void 0, A));
                                    } else D = c(T, f, _, M, k, s);
                                    _ >= C && ((E += f.slice(C, _) + D), (C = _ + T.length));
                                }
                                return E + f.slice(C);
                            },
                        ];
                    },
                    !!s(function () {
                        var t = /./;
                        return (
                            (t.exec = function () {
                                var t = [];
                                return (t.groups = { a: "7" }), t;
                            }),
                            "7" !== "".replace(t, "$<a>")
                        );
                    }) ||
                        !f ||
                        g
                );
            },
            79006: (t, e, i) => {
                "use strict";
                var r = i(90783),
                    s = i(92569),
                    a = i(63955),
                    n = i(8690),
                    o = i(74214);
                r("search", function (t, e, i) {
                    return [
                        function (e) {
                            var i = a(this),
                                r = null == e ? void 0 : e[t];
                            return void 0 !== r ? r.call(e, i) : new RegExp(e)[t](String(i));
                        },
                        function (t) {
                            var r = i(e, this, t);
                            if (r.done) return r.value;
                            var a = s(this),
                                l = String(t),
                                h = a.lastIndex;
                            n(h, 0) || (a.lastIndex = 0);
                            var c = o(a, l);
                            return n(a.lastIndex, h) || (a.lastIndex = h), null === c ? -1 : c.index;
                        },
                    ];
                });
            },
            17590: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("small") },
                    {
                        small: function () {
                            return s(this, "small", "", "");
                        },
                    }
                );
            },
            49268: (t, e, i) => {
                "use strict";
                var r = i(90783),
                    s = i(17574),
                    a = i(92569),
                    n = i(63955),
                    o = i(40564),
                    l = i(96733),
                    h = i(70097),
                    c = i(74214),
                    d = i(48445),
                    u = i(35230),
                    p = i(16544),
                    m = u.UNSUPPORTED_Y,
                    f = [].push,
                    g = Math.min,
                    v = 4294967295;
                r(
                    "split",
                    function (t, e, i) {
                        var r;
                        return (
                            (r =
                                "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || ".".split(/()()/).length > 1 || "".split(/.?/).length
                                    ? function (t, i) {
                                          var r = String(n(this)),
                                              a = void 0 === i ? v : i >>> 0;
                                          if (0 === a) return [];
                                          if (void 0 === t) return [r];
                                          if (!s(t)) return e.call(r, t, a);
                                          for (
                                              var o, l, h, c = [], u = (t.ignoreCase ? "i" : "") + (t.multiline ? "m" : "") + (t.unicode ? "u" : "") + (t.sticky ? "y" : ""), p = 0, m = new RegExp(t.source, u + "g");
                                              (o = d.call(m, r)) && !((l = m.lastIndex) > p && (c.push(r.slice(p, o.index)), o.length > 1 && o.index < r.length && f.apply(c, o.slice(1)), (h = o[0].length), (p = l), c.length >= a));

                                          )
                                              m.lastIndex === o.index && m.lastIndex++;
                                          return p === r.length ? (!h && m.test("")) || c.push("") : c.push(r.slice(p)), c.length > a ? c.slice(0, a) : c;
                                      }
                                    : "0".split(void 0, 0).length
                                    ? function (t, i) {
                                          return void 0 === t && 0 === i ? [] : e.call(this, t, i);
                                      }
                                    : e),
                            [
                                function (e, i) {
                                    var s = n(this),
                                        a = null == e ? void 0 : e[t];
                                    return void 0 !== a ? a.call(e, s, i) : r.call(String(s), e, i);
                                },
                                function (t, s) {
                                    var n = i(r, this, t, s, r !== e);
                                    if (n.done) return n.value;
                                    var d = a(this),
                                        u = String(t),
                                        p = o(d, RegExp),
                                        f = d.unicode,
                                        b = (d.ignoreCase ? "i" : "") + (d.multiline ? "m" : "") + (d.unicode ? "u" : "") + (m ? "g" : "y"),
                                        y = new p(m ? "^(?:" + d.source + ")" : d, b),
                                        w = void 0 === s ? v : s >>> 0;
                                    if (0 === w) return [];
                                    if (0 === u.length) return null === c(y, u) ? [u] : [];
                                    for (var x = 0, E = 0, C = []; E < u.length; ) {
                                        y.lastIndex = m ? 0 : E;
                                        var S,
                                            T = c(y, m ? u.slice(E) : u);
                                        if (null === T || (S = g(h(y.lastIndex + (m ? E : 0)), u.length)) === x) E = l(u, E, f);
                                        else {
                                            if ((C.push(u.slice(x, E)), C.length === w)) return C;
                                            for (var _ = 1; _ <= T.length - 1; _++) if ((C.push(T[_]), C.length === w)) return C;
                                            E = x = S;
                                        }
                                    }
                                    return C.push(u.slice(x)), C;
                                },
                            ]
                        );
                    },
                    !!p(function () {
                        var t = /(?:)/,
                            e = t.exec;
                        t.exec = function () {
                            return e.apply(this, arguments);
                        };
                        var i = "ab".split(t);
                        return 2 !== i.length || "a" !== i[0] || "b" !== i[1];
                    }),
                    m
                );
            },
            97754: (t, e, i) => {
                "use strict";
                var r,
                    s = i(37263),
                    a = i(46683).f,
                    n = i(70097),
                    o = i(59041),
                    l = i(63955),
                    h = i(83989),
                    c = i(86268),
                    d = "".startsWith,
                    u = Math.min,
                    p = h("startsWith");
                s(
                    { target: "String", proto: !0, forced: !!(c || p || ((r = a(String.prototype, "startsWith")), !r || r.writable)) && !p },
                    {
                        startsWith: function (t) {
                            var e = String(l(this));
                            o(t);
                            var i = n(u(arguments.length > 1 ? arguments[1] : void 0, e.length)),
                                r = String(t);
                            return d ? d.call(e, r, i) : e.slice(i, i + r.length) === r;
                        },
                    }
                );
            },
            39353: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("strike") },
                    {
                        strike: function () {
                            return s(this, "strike", "", "");
                        },
                    }
                );
            },
            79068: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("sub") },
                    {
                        sub: function () {
                            return s(this, "sub", "", "");
                        },
                    }
                );
            },
            52933: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(63955),
                    a = i(75089),
                    n = "".slice,
                    o = Math.max,
                    l = Math.min;
                r(
                    { target: "String", proto: !0 },
                    {
                        substr: function (t, e) {
                            var i,
                                r,
                                h = String(s(this)),
                                c = h.length,
                                d = a(t);
                            return d === 1 / 0 && (d = 0), d < 0 && (d = o(c + d, 0)), (i = void 0 === e ? c : a(e)) <= 0 || i === 1 / 0 || d >= (r = l(d + i, c)) ? "" : n.call(h, d, r);
                        },
                    }
                );
            },
            53631: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(35888);
                r(
                    { target: "String", proto: !0, forced: i(29578)("sup") },
                    {
                        sup: function () {
                            return s(this, "sup", "", "");
                        },
                    }
                );
            },
            28599: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(68940).end,
                    a = i(65760)("trimEnd"),
                    n = a
                        ? function () {
                              return s(this);
                          }
                        : "".trimEnd;
                r({ target: "String", proto: !0, forced: a }, { trimEnd: n, trimRight: n });
            },
            20087: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(68940).start,
                    a = i(65760)("trimStart"),
                    n = a
                        ? function () {
                              return s(this);
                          }
                        : "".trimStart;
                r({ target: "String", proto: !0, forced: a }, { trimStart: n, trimLeft: n });
            },
            13233: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(68940).trim;
                r(
                    { target: "String", proto: !0, forced: i(65760)("trim") },
                    {
                        trim: function () {
                            return s(this);
                        },
                    }
                );
            },
            70462: (t, e, i) => {
                i(82219)("asyncIterator");
            },
            28407: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(18494),
                    a = i(47583),
                    n = i(34402),
                    o = i(90794),
                    l = i(94615).f,
                    h = i(83478),
                    c = a.Symbol;
                if (s && "function" == typeof c && (!("description" in c.prototype) || void 0 !== c().description)) {
                    var d = {},
                        u = function () {
                            var t = arguments.length < 1 || void 0 === arguments[0] ? void 0 : String(arguments[0]),
                                e = this instanceof u ? new c(t) : void 0 === t ? c() : c(t);
                            return "" === t && (d[e] = !0), e;
                        };
                    h(u, c);
                    var p = (u.prototype = c.prototype);
                    p.constructor = u;
                    var m = p.toString,
                        f = "Symbol(test)" == String(c("test")),
                        g = /^Symbol\((.*)\)[^)]+$/;
                    l(p, "description", {
                        configurable: !0,
                        get: function () {
                            var t = o(this) ? this.valueOf() : this,
                                e = m.call(t);
                            if (n(d, t)) return "";
                            var i = f ? e.slice(7, -1) : e.replace(g, "$1");
                            return "" === i ? void 0 : i;
                        },
                    }),
                        r({ global: !0, forced: !0 }, { Symbol: u });
                }
            },
            22429: (t, e, i) => {
                i(82219)("hasInstance");
            },
            71172: (t, e, i) => {
                i(82219)("isConcatSpreadable");
            },
            38288: (t, e, i) => {
                i(82219)("iterator");
            },
            52004: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(47583),
                    a = i(35897),
                    n = i(86268),
                    o = i(18494),
                    l = i(88640),
                    h = i(67786),
                    c = i(16544),
                    d = i(34402),
                    u = i(54521),
                    p = i(90794),
                    m = i(92569),
                    f = i(61324),
                    g = i(22977),
                    v = i(22670),
                    b = i(54677),
                    y = i(3590),
                    w = i(75432),
                    x = i(9275),
                    E = i(63130),
                    C = i(74012),
                    S = i(46683),
                    T = i(94615),
                    _ = i(20112),
                    M = i(57),
                    P = i(61270),
                    k = i(17836),
                    A = i(89137),
                    D = i(64639),
                    L = i(98284),
                    I = i(3649),
                    R = i(20491),
                    O = i(82219),
                    F = i(98821),
                    B = i(42743),
                    z = i(24805).forEach,
                    N = A("hidden"),
                    V = "Symbol",
                    H = "prototype",
                    j = I("toPrimitive"),
                    W = B.set,
                    G = B.getterFor(V),
                    q = Object[H],
                    $ = s.Symbol,
                    U = a("JSON", "stringify"),
                    Y = S.f,
                    X = T.f,
                    K = E.f,
                    Z = _.f,
                    J = k("symbols"),
                    Q = k("op-symbols"),
                    tt = k("string-to-symbol-registry"),
                    et = k("symbol-to-string-registry"),
                    it = k("wks"),
                    rt = s.QObject,
                    st = !rt || !rt[H] || !rt[H].findChild,
                    at =
                        o &&
                        c(function () {
                            return (
                                7 !=
                                y(
                                    X({}, "a", {
                                        get: function () {
                                            return X(this, "a", { value: 7 }).a;
                                        },
                                    })
                                ).a
                            );
                        })
                            ? function (t, e, i) {
                                  var r = Y(q, e);
                                  r && delete q[e], X(t, e, i), r && t !== q && X(q, e, r);
                              }
                            : X,
                    nt = function (t, e) {
                        var i = (J[t] = y($[H]));
                        return W(i, { type: V, tag: t, description: e }), o || (i.description = e), i;
                    },
                    ot = h
                        ? function (t) {
                              return "symbol" == typeof t;
                          }
                        : function (t) {
                              return Object(t) instanceof $;
                          },
                    lt = function (t, e, i) {
                        t === q && lt(Q, e, i), m(t);
                        var r = v(e, !0);
                        return m(i), d(J, r) ? (i.enumerable ? (d(t, N) && t[N][r] && (t[N][r] = !1), (i = y(i, { enumerable: b(0, !1) }))) : (d(t, N) || X(t, N, b(1, {})), (t[N][r] = !0)), at(t, r, i)) : X(t, r, i);
                    },
                    ht = function (t, e) {
                        m(t);
                        var i = g(e),
                            r = w(i).concat(pt(i));
                        return (
                            z(r, function (e) {
                                (o && !ct.call(i, e)) || lt(t, e, i[e]);
                            }),
                            t
                        );
                    },
                    ct = function (t) {
                        var e = v(t, !0),
                            i = Z.call(this, e);
                        return !(this === q && d(J, e) && !d(Q, e)) && (!(i || !d(this, e) || !d(J, e) || (d(this, N) && this[N][e])) || i);
                    },
                    dt = function (t, e) {
                        var i = g(t),
                            r = v(e, !0);
                        if (i !== q || !d(J, r) || d(Q, r)) {
                            var s = Y(i, r);
                            return !s || !d(J, r) || (d(i, N) && i[N][r]) || (s.enumerable = !0), s;
                        }
                    },
                    ut = function (t) {
                        var e = K(g(t)),
                            i = [];
                        return (
                            z(e, function (t) {
                                d(J, t) || d(D, t) || i.push(t);
                            }),
                            i
                        );
                    },
                    pt = function (t) {
                        var e = t === q,
                            i = K(e ? Q : g(t)),
                            r = [];
                        return (
                            z(i, function (t) {
                                !d(J, t) || (e && !d(q, t)) || r.push(J[t]);
                            }),
                            r
                        );
                    };
                (l ||
                    (P(
                        ($ = function () {
                            if (this instanceof $) throw TypeError("Symbol is not a constructor");
                            var t = arguments.length && void 0 !== arguments[0] ? String(arguments[0]) : void 0,
                                e = L(t);
                            return (
                                o &&
                                    st &&
                                    at(q, e, {
                                        configurable: !0,
                                        set: function t(i) {
                                            this === q && t.call(Q, i), d(this, N) && d(this[N], e) && (this[N][e] = !1), at(this, e, b(1, i));
                                        },
                                    }),
                                nt(e, t)
                            );
                        })[H],
                        "toString",
                        function () {
                            return G(this).tag;
                        }
                    ),
                    P($, "withoutSetter", function (t) {
                        return nt(L(t), t);
                    }),
                    (_.f = ct),
                    (T.f = lt),
                    (S.f = dt),
                    (x.f = E.f = ut),
                    (C.f = pt),
                    (R.f = function (t) {
                        return nt(I(t), t);
                    }),
                    o &&
                        (X($[H], "description", {
                            configurable: !0,
                            get: function () {
                                return G(this).description;
                            },
                        }),
                        n || P(q, "propertyIsEnumerable", ct, { unsafe: !0 }))),
                r({ global: !0, wrap: !0, forced: !l, sham: !l }, { Symbol: $ }),
                z(w(it), function (t) {
                    O(t);
                }),
                r(
                    { target: V, stat: !0, forced: !l },
                    {
                        for: function (t) {
                            var e = String(t);
                            if (d(tt, e)) return tt[e];
                            var i = $(e);
                            return (tt[e] = i), (et[i] = e), i;
                        },
                        keyFor: function (t) {
                            if (!ot(t)) throw TypeError(t + " is not a symbol");
                            if (d(et, t)) return et[t];
                        },
                        useSetter: function () {
                            st = !0;
                        },
                        useSimple: function () {
                            st = !1;
                        },
                    }
                ),
                r(
                    { target: "Object", stat: !0, forced: !l, sham: !o },
                    {
                        create: function (t, e) {
                            return void 0 === e ? y(t) : ht(y(t), e);
                        },
                        defineProperty: lt,
                        defineProperties: ht,
                        getOwnPropertyDescriptor: dt,
                    }
                ),
                r({ target: "Object", stat: !0, forced: !l }, { getOwnPropertyNames: ut, getOwnPropertySymbols: pt }),
                r(
                    {
                        target: "Object",
                        stat: !0,
                        forced: c(function () {
                            C.f(1);
                        }),
                    },
                    {
                        getOwnPropertySymbols: function (t) {
                            return C.f(f(t));
                        },
                    }
                ),
                U) &&
                    r(
                        {
                            target: "JSON",
                            stat: !0,
                            forced:
                                !l ||
                                c(function () {
                                    var t = $();
                                    return "[null]" != U([t]) || "{}" != U({ a: t }) || "{}" != U(Object(t));
                                }),
                        },
                        {
                            stringify: function (t, e, i) {
                                for (var r, s = [t], a = 1; arguments.length > a; ) s.push(arguments[a++]);
                                if (((r = e), (p(e) || void 0 !== t) && !ot(t)))
                                    return (
                                        u(e) ||
                                            (e = function (t, e) {
                                                if (("function" == typeof r && (e = r.call(this, t, e)), !ot(e))) return e;
                                            }),
                                        (s[1] = e),
                                        U.apply(null, s)
                                    );
                            },
                        }
                    );
                $[H][j] || M($[H], j, $[H].valueOf), F($, V), (D[N] = !0);
            },
            98201: (t, e, i) => {
                i(82219)("matchAll");
            },
            91274: (t, e, i) => {
                i(82219)("match");
            },
            56626: (t, e, i) => {
                i(82219)("replace");
            },
            93211: (t, e, i) => {
                i(82219)("search");
            },
            79952: (t, e, i) => {
                i(82219)("species");
            },
            20015: (t, e, i) => {
                i(82219)("split");
            },
            19831: (t, e, i) => {
                i(82219)("toPrimitive");
            },
            7521: (t, e, i) => {
                i(82219)("toStringTag");
            },
            72972: (t, e, i) => {
                i(82219)("unscopables");
            },
            53224: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(68050),
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("copyWithin", function (t, e) {
                    return s.call(a(this), t, e, arguments.length > 2 ? arguments[2] : void 0);
                });
            },
            50597: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(24805).every,
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("every", function (t) {
                    return s(a(this), t, arguments.length > 1 ? arguments[1] : void 0);
                });
            },
            43543: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(93579),
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("fill", function (t) {
                    return s.apply(a(this), arguments);
                });
            },
            35210: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(24805).filter,
                    a = i(49741),
                    n = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("filter", function (t) {
                    var e = s(n(this), t, arguments.length > 1 ? arguments[1] : void 0);
                    return a(this, e);
                });
            },
            30091: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(24805).findIndex,
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("findIndex", function (t) {
                    return s(a(this), t, arguments.length > 1 ? arguments[1] : void 0);
                });
            },
            95785: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(24805).find,
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("find", function (t) {
                    return s(a(this), t, arguments.length > 1 ? arguments[1] : void 0);
                });
            },
            31351: (t, e, i) => {
                i(58073)("Float32", function (t) {
                    return function (e, i, r) {
                        return t(this, e, i, r);
                    };
                });
            },
            1998: (t, e, i) => {
                i(58073)("Float64", function (t) {
                    return function (e, i, r) {
                        return t(this, e, i, r);
                    };
                });
            },
            29595: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(24805).forEach,
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("forEach", function (t) {
                    s(a(this), t, arguments.length > 1 ? arguments[1] : void 0);
                });
            },
            63181: (t, e, i) => {
                "use strict";
                var r = i(40165);
                (0, i(13977).exportTypedArrayStaticMethod)("from", i(77353), r);
            },
            23357: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(15766).includes,
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("includes", function (t) {
                    return s(a(this), t, arguments.length > 1 ? arguments[1] : void 0);
                });
            },
            91816: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(15766).indexOf,
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("indexOf", function (t) {
                    return s(a(this), t, arguments.length > 1 ? arguments[1] : void 0);
                });
            },
            29151: (t, e, i) => {
                i(58073)("Int16", function (t) {
                    return function (e, i, r) {
                        return t(this, e, i, r);
                    };
                });
            },
            23330: (t, e, i) => {
                i(58073)("Int32", function (t) {
                    return function (e, i, r) {
                        return t(this, e, i, r);
                    };
                });
            },
            28729: (t, e, i) => {
                i(58073)("Int8", function (t) {
                    return function (e, i, r) {
                        return t(this, e, i, r);
                    };
                });
            },
            2161: (t, e, i) => {
                "use strict";
                var r = i(47583),
                    s = i(13977),
                    a = i(55677),
                    n = i(3649)("iterator"),
                    o = r.Uint8Array,
                    l = a.values,
                    h = a.keys,
                    c = a.entries,
                    d = s.aTypedArray,
                    u = s.exportTypedArrayMethod,
                    p = o && o.prototype[n],
                    m = !!p && ("values" == p.name || null == p.name),
                    f = function () {
                        return l.call(d(this));
                    };
                u("entries", function () {
                    return c.call(d(this));
                }),
                    u("keys", function () {
                        return h.call(d(this));
                    }),
                    u("values", f, !m),
                    u(n, f, !m);
            },
            47445: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = r.aTypedArray,
                    a = r.exportTypedArrayMethod,
                    n = [].join;
                a("join", function (t) {
                    return n.apply(s(this), arguments);
                });
            },
            84875: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(73161),
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("lastIndexOf", function (t) {
                    return s.apply(a(this), arguments);
                });
            },
            71608: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(24805).map,
                    a = i(40564),
                    n = r.aTypedArray,
                    o = r.aTypedArrayConstructor;
                (0, r.exportTypedArrayMethod)("map", function (t) {
                    return s(n(this), t, arguments.length > 1 ? arguments[1] : void 0, function (t, e) {
                        return new (o(a(t, t.constructor)))(e);
                    });
                });
            },
            24283: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(40165),
                    a = r.aTypedArrayConstructor;
                (0, r.exportTypedArrayStaticMethod)(
                    "of",
                    function () {
                        for (var t = 0, e = arguments.length, i = new (a(this))(e); e > t; ) i[t] = arguments[t++];
                        return i;
                    },
                    s
                );
            },
            284: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(64325).right,
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("reduceRight", function (t) {
                    return s(a(this), t, arguments.length, arguments.length > 1 ? arguments[1] : void 0);
                });
            },
            72994: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(64325).left,
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("reduce", function (t) {
                    return s(a(this), t, arguments.length, arguments.length > 1 ? arguments[1] : void 0);
                });
            },
            30601: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = r.aTypedArray,
                    a = r.exportTypedArrayMethod,
                    n = Math.floor;
                a("reverse", function () {
                    for (var t, e = this, i = s(e).length, r = n(i / 2), a = 0; a < r; ) (t = e[a]), (e[a++] = e[--i]), (e[i] = t);
                    return e;
                });
            },
            39494: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(70097),
                    a = i(33248),
                    n = i(61324),
                    o = i(16544),
                    l = r.aTypedArray;
                (0, r.exportTypedArrayMethod)(
                    "set",
                    function (t) {
                        l(this);
                        var e = a(arguments.length > 1 ? arguments[1] : void 0, 1),
                            i = this.length,
                            r = n(t),
                            o = s(r.length),
                            h = 0;
                        if (o + e > i) throw RangeError("Wrong length");
                        for (; h < o; ) this[e + h] = r[h++];
                    },
                    o(function () {
                        new Int8Array(1).set({});
                    })
                );
            },
            66229: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(40564),
                    a = i(16544),
                    n = r.aTypedArray,
                    o = r.aTypedArrayConstructor,
                    l = r.exportTypedArrayMethod,
                    h = [].slice;
                l(
                    "slice",
                    function (t, e) {
                        for (var i = h.call(n(this), t, e), r = s(this, this.constructor), a = 0, l = i.length, c = new (o(r))(l); l > a; ) c[a] = i[a++];
                        return c;
                    },
                    a(function () {
                        new Int8Array(1).slice();
                    })
                );
            },
            19149: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(24805).some,
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("some", function (t) {
                    return s(a(this), t, arguments.length > 1 ? arguments[1] : void 0);
                });
            },
            79503: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(47583),
                    a = i(16544),
                    n = i(96163),
                    o = i(70097),
                    l = i(25744),
                    h = i(15857),
                    c = i(50924),
                    d = i(24061),
                    u = i(20003),
                    p = r.aTypedArray,
                    m = r.exportTypedArrayMethod,
                    f = s.Uint16Array,
                    g = f && f.prototype.sort,
                    v =
                        !!g &&
                        !a(function () {
                            var t = new f(2);
                            t.sort(null), t.sort({});
                        }),
                    b =
                        !!g &&
                        !a(function () {
                            if (d) return d < 74;
                            if (h) return h < 67;
                            if (c) return !0;
                            if (u) return u < 602;
                            var t,
                                e,
                                i = new f(516),
                                r = Array(516);
                            for (t = 0; t < 516; t++) (e = t % 4), (i[t] = 515 - t), (r[t] = t - 2 * e + 3);
                            for (
                                i.sort(function (t, e) {
                                    return ((t / 4) | 0) - ((e / 4) | 0);
                                }),
                                    t = 0;
                                t < 516;
                                t++
                            )
                                if (i[t] !== r[t]) return !0;
                        });
                m(
                    "sort",
                    function (t) {
                        var e = this;
                        if ((void 0 !== t && n(t), b)) return g.call(e, t);
                        p(e);
                        var i,
                            r = o(e.length),
                            s = Array(r);
                        for (i = 0; i < r; i++) s[i] = e[i];
                        for (
                            s = l(
                                e,
                                (function (t) {
                                    return function (e, i) {
                                        return void 0 !== t ? +t(e, i) || 0 : i != i ? -1 : e != e ? 1 : 0 === e && 0 === i ? (1 / e > 0 && 1 / i < 0 ? 1 : -1) : e > i;
                                    };
                                })(t)
                            ),
                                i = 0;
                            i < r;
                            i++
                        )
                            e[i] = s[i];
                        return e;
                    },
                    !b || v
                );
            },
            9617: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(70097),
                    a = i(96782),
                    n = i(40564),
                    o = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("subarray", function (t, e) {
                    var i = o(this),
                        r = i.length,
                        l = a(t, r);
                    return new (n(i, i.constructor))(i.buffer, i.byteOffset + l * i.BYTES_PER_ELEMENT, s((void 0 === e ? r : a(e, r)) - l));
                });
            },
            91962: (t, e, i) => {
                "use strict";
                var r = i(47583),
                    s = i(13977),
                    a = i(16544),
                    n = r.Int8Array,
                    o = s.aTypedArray,
                    l = s.exportTypedArrayMethod,
                    h = [].toLocaleString,
                    c = [].slice,
                    d =
                        !!n &&
                        a(function () {
                            h.call(new n(1));
                        });
                l(
                    "toLocaleString",
                    function () {
                        return h.apply(d ? c.call(o(this)) : o(this), arguments);
                    },
                    a(function () {
                        return [1, 2].toLocaleString() != new n([1, 2]).toLocaleString();
                    }) ||
                        !a(function () {
                            n.prototype.toLocaleString.call([1, 2]);
                        })
                );
            },
            8097: (t, e, i) => {
                "use strict";
                var r = i(13977).exportTypedArrayMethod,
                    s = i(16544),
                    a = i(47583).Uint8Array,
                    n = (a && a.prototype) || {},
                    o = [].toString,
                    l = [].join;
                s(function () {
                    o.call({});
                }) &&
                    (o = function () {
                        return l.call(this);
                    });
                var h = n.toString != o;
                r("toString", o, h);
            },
            30337: (t, e, i) => {
                i(58073)("Uint16", function (t) {
                    return function (e, i, r) {
                        return t(this, e, i, r);
                    };
                });
            },
            60506: (t, e, i) => {
                i(58073)("Uint32", function (t) {
                    return function (e, i, r) {
                        return t(this, e, i, r);
                    };
                });
            },
            73594: (t, e, i) => {
                i(58073)("Uint8", function (t) {
                    return function (e, i, r) {
                        return t(this, e, i, r);
                    };
                });
            },
            93525: (t, e, i) => {
                i(58073)(
                    "Uint8",
                    function (t) {
                        return function (e, i, r) {
                            return t(this, e, i, r);
                        };
                    },
                    !0
                );
            },
            7878: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = String.fromCharCode,
                    a = /^[\da-f]{2}$/i,
                    n = /^[\da-f]{4}$/i;
                r(
                    { global: !0 },
                    {
                        unescape: function (t) {
                            for (var e, i, r = String(t), o = "", l = r.length, h = 0; h < l; ) {
                                if ("%" === (e = r.charAt(h++)))
                                    if ("u" === r.charAt(h)) {
                                        if (((i = r.slice(h + 1, h + 5)), n.test(i))) {
                                            (o += s(parseInt(i, 16))), (h += 5);
                                            continue;
                                        }
                                    } else if (((i = r.slice(h, h + 2)), a.test(i))) {
                                        (o += s(parseInt(i, 16))), (h += 2);
                                        continue;
                                    }
                                o += e;
                            }
                            return o;
                        },
                    }
                );
            },
            31770: (t, e, i) => {
                "use strict";
                var r,
                    s = i(47583),
                    a = i(96893),
                    n = i(51909),
                    o = i(24802),
                    l = i(57012),
                    h = i(90794),
                    c = i(42743).enforce,
                    d = i(89491),
                    u = !s.ActiveXObject && "ActiveXObject" in s,
                    p = Object.isExtensible,
                    m = function (t) {
                        return function () {
                            return t(this, arguments.length ? arguments[0] : void 0);
                        };
                    },
                    f = (t.exports = o("WeakMap", m, l));
                if (d && u) {
                    (r = l.getConstructor(m, "WeakMap", !0)), (n.REQUIRED = !0);
                    var g = f.prototype,
                        v = g.delete,
                        b = g.has,
                        y = g.get,
                        w = g.set;
                    a(g, {
                        delete: function (t) {
                            if (h(t) && !p(t)) {
                                var e = c(this);
                                return e.frozen || (e.frozen = new r()), v.call(this, t) || e.frozen.delete(t);
                            }
                            return v.call(this, t);
                        },
                        has: function (t) {
                            if (h(t) && !p(t)) {
                                var e = c(this);
                                return e.frozen || (e.frozen = new r()), b.call(this, t) || e.frozen.has(t);
                            }
                            return b.call(this, t);
                        },
                        get: function (t) {
                            if (h(t) && !p(t)) {
                                var e = c(this);
                                return e.frozen || (e.frozen = new r()), b.call(this, t) ? y.call(this, t) : e.frozen.get(t);
                            }
                            return y.call(this, t);
                        },
                        set: function (t, e) {
                            if (h(t) && !p(t)) {
                                var i = c(this);
                                i.frozen || (i.frozen = new r()), b.call(this, t) ? w.call(this, t, e) : i.frozen.set(t, e);
                            } else w.call(this, t, e);
                            return this;
                        },
                    });
                }
            },
            70435: (t, e, i) => {
                "use strict";
                i(24802)(
                    "WeakSet",
                    function (t) {
                        return function () {
                            return t(this, arguments.length ? arguments[0] : void 0);
                        };
                    },
                    i(57012)
                );
            },
            98974: (t, e, i) => {
                i(21719);
            },
            7715: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(61324),
                    a = i(70097),
                    n = i(75089),
                    o = i(36288);
                r(
                    { target: "Array", proto: !0 },
                    {
                        at: function (t) {
                            var e = s(this),
                                i = a(e.length),
                                r = n(t),
                                o = r >= 0 ? r : i + r;
                            return o < 0 || o >= i ? void 0 : e[o];
                        },
                    }
                ),
                    o("at");
            },
            93876: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(24805).filterOut,
                    a = i(36288);
                r(
                    { target: "Array", proto: !0 },
                    {
                        filterOut: function (t) {
                            return s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                ),
                    a("filterOut");
            },
            71977: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(32544).findLastIndex,
                    a = i(36288);
                r(
                    { target: "Array", proto: !0 },
                    {
                        findLastIndex: function (t) {
                            return s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                ),
                    a("findLastIndex");
            },
            15167: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(32544).findLast,
                    a = i(36288);
                r(
                    { target: "Array", proto: !0 },
                    {
                        findLast: function (t) {
                            return s(this, t, arguments.length > 1 ? arguments[1] : void 0);
                        },
                    }
                ),
                    a("findLast");
            },
            43726: (t, e, i) => {
                var r = i(37263),
                    s = i(54521),
                    a = Object.isFrozen,
                    n = function (t, e) {
                        if (!a || !s(t) || !a(t)) return !1;
                        for (var i, r = 0, n = t.length; r < n; ) if (!("string" == typeof (i = t[r++]) || (e && void 0 === i))) return !1;
                        return 0 !== n;
                    };
                r(
                    { target: "Array", stat: !0 },
                    {
                        isTemplateObject: function (t) {
                            if (!n(t, !0)) return !1;
                            var e = t.raw;
                            return !(e.length !== t.length || !n(e, !1));
                        },
                    }
                );
            },
            56335: (t, e, i) => {
                "use strict";
                var r = i(18494),
                    s = i(36288),
                    a = i(61324),
                    n = i(70097),
                    o = i(94615).f;
                r &&
                    !("lastIndex" in []) &&
                    (o(Array.prototype, "lastIndex", {
                        configurable: !0,
                        get: function () {
                            var t = a(this),
                                e = n(t.length);
                            return 0 == e ? 0 : e - 1;
                        },
                    }),
                    s("lastIndex"));
            },
            29658: (t, e, i) => {
                "use strict";
                var r = i(18494),
                    s = i(36288),
                    a = i(61324),
                    n = i(70097),
                    o = i(94615).f;
                r &&
                    !("lastItem" in []) &&
                    (o(Array.prototype, "lastItem", {
                        configurable: !0,
                        get: function () {
                            var t = a(this),
                                e = n(t.length);
                            return 0 == e ? void 0 : t[e - 1];
                        },
                        set: function (t) {
                            var e = a(this),
                                i = n(e.length);
                            return (e[0 == i ? 0 : i - 1] = t);
                        },
                    }),
                    s("lastItem"));
            },
            70733: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(36288);
                r({ target: "Array", proto: !0 }, { uniqueBy: i(33878) }), s("uniqueBy");
            },
            7270: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(92569),
                    a = i(17562)(function (t, e) {
                        var i = this,
                            r = i.iterator;
                        return e.resolve(s(i.next.call(r, t))).then(function (t) {
                            return s(t).done ? ((i.done = !0), { done: !0, value: void 0 }) : { done: !1, value: [i.index++, t.value] };
                        });
                    });
                r(
                    { target: "AsyncIterator", proto: !0, real: !0 },
                    {
                        asIndexedPairs: function () {
                            return new a({ iterator: s(this), index: 0 });
                        },
                    }
                );
            },
            25981: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(44761),
                    a = i(57),
                    n = i(34402),
                    o = i(3649),
                    l = i(46578),
                    h = i(86268),
                    c = o("toStringTag"),
                    d = function () {
                        s(this, d);
                    };
                (d.prototype = l), n(l, c) || a(l, c, "AsyncIterator"), (n(l, "constructor") && l.constructor !== Object) || a(l, "constructor", d), r({ global: !0, forced: h }, { AsyncIterator: d });
            },
            4056: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(92569),
                    a = i(42955),
                    n = i(17562)(function (t, e) {
                        var i = this;
                        return new e(function (r, a) {
                            !(function n() {
                                try {
                                    e.resolve(s(i.next.call(i.iterator, i.remaining ? void 0 : t))).then(function (t) {
                                        try {
                                            s(t).done ? ((i.done = !0), r({ done: !0, value: void 0 })) : i.remaining ? (i.remaining--, n()) : r({ done: !1, value: t.value });
                                        } catch (t) {
                                            a(t);
                                        }
                                    }, a);
                                } catch (t) {
                                    a(t);
                                }
                            })();
                        });
                    });
                r(
                    { target: "AsyncIterator", proto: !0, real: !0 },
                    {
                        drop: function (t) {
                            return new n({ iterator: s(this), remaining: a(t) });
                        },
                    }
                );
            },
            22421: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(60316).every;
                r(
                    { target: "AsyncIterator", proto: !0, real: !0 },
                    {
                        every: function (t) {
                            return s(this, t);
                        },
                    }
                );
            },
            55879: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96163),
                    a = i(92569),
                    n = i(17562)(function (t, e) {
                        var i = this,
                            r = i.filterer;
                        return new e(function (s, n) {
                            !(function o() {
                                try {
                                    e.resolve(a(i.next.call(i.iterator, t))).then(function (t) {
                                        try {
                                            if (a(t).done) (i.done = !0), s({ done: !0, value: void 0 });
                                            else {
                                                var l = t.value;
                                                e.resolve(r(l)).then(function (t) {
                                                    t ? s({ done: !1, value: l }) : o();
                                                }, n);
                                            }
                                        } catch (t) {
                                            n(t);
                                        }
                                    }, n);
                                } catch (t) {
                                    n(t);
                                }
                            })();
                        });
                    });
                r(
                    { target: "AsyncIterator", proto: !0, real: !0 },
                    {
                        filter: function (t) {
                            return new n({ iterator: a(this), filterer: s(t) });
                        },
                    }
                );
            },
            93302: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(60316).find;
                r(
                    { target: "AsyncIterator", proto: !0, real: !0 },
                    {
                        find: function (t) {
                            return s(this, t);
                        },
                    }
                );
            },
            3124: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96163),
                    a = i(92569),
                    n = i(17562),
                    o = i(36630),
                    l = n(function (t, e) {
                        var i,
                            r,
                            n = this,
                            l = n.mapper;
                        return new e(function (h, c) {
                            var d = function () {
                                    try {
                                        e.resolve(a(n.next.call(n.iterator, t))).then(function (t) {
                                            try {
                                                a(t).done
                                                    ? ((n.done = !0), h({ done: !0, value: void 0 }))
                                                    : e.resolve(l(t.value)).then(function (t) {
                                                          try {
                                                              if (void 0 !== (r = o(t))) return (n.innerIterator = i = a(r.call(t))), (n.innerNext = s(i.next)), u();
                                                              c(TypeError(".flatMap callback should return an iterable object"));
                                                          } catch (t) {
                                                              c(t);
                                                          }
                                                      }, c);
                                            } catch (t) {
                                                c(t);
                                            }
                                        }, c);
                                    } catch (t) {
                                        c(t);
                                    }
                                },
                                u = function () {
                                    if ((i = n.innerIterator))
                                        try {
                                            e.resolve(a(n.innerNext.call(i))).then(function (t) {
                                                try {
                                                    a(t).done ? ((n.innerIterator = n.innerNext = null), d()) : h({ done: !1, value: t.value });
                                                } catch (t) {
                                                    c(t);
                                                }
                                            }, c);
                                        } catch (t) {
                                            c(t);
                                        }
                                    else d();
                                };
                            u();
                        });
                    });
                r(
                    { target: "AsyncIterator", proto: !0, real: !0 },
                    {
                        flatMap: function (t) {
                            return new l({ iterator: a(this), mapper: s(t), innerIterator: null, innerNext: null });
                        },
                    }
                );
            },
            46419: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(60316).forEach;
                r(
                    { target: "AsyncIterator", proto: !0, real: !0 },
                    {
                        forEach: function (t) {
                            return s(this, t);
                        },
                    }
                );
            },
            45097: (t, e, i) => {
                var r = i(37263),
                    s = i(21287),
                    a = i(96163),
                    n = i(92569),
                    o = i(61324),
                    l = i(17562),
                    h = i(36630),
                    c = s.AsyncIterator,
                    d = l(function (t) {
                        return n(this.next.call(this.iterator, t));
                    }, !0);
                r(
                    { target: "AsyncIterator", stat: !0 },
                    {
                        from: function (t) {
                            var e,
                                i = o(t),
                                r = h(i);
                            if (null != r) {
                                if ((e = a(r).call(i)) instanceof c) return e;
                            } else e = i;
                            return new d({ iterator: e });
                        },
                    }
                );
            },
            32855: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96163),
                    a = i(92569),
                    n = i(17562)(function (t, e) {
                        var i = this,
                            r = i.mapper;
                        return e.resolve(a(i.next.call(i.iterator, t))).then(function (t) {
                            return a(t).done
                                ? ((i.done = !0), { done: !0, value: void 0 })
                                : e.resolve(r(t.value)).then(function (t) {
                                      return { done: !1, value: t };
                                  });
                        });
                    });
                r(
                    { target: "AsyncIterator", proto: !0, real: !0 },
                    {
                        map: function (t) {
                            return new n({ iterator: a(this), mapper: s(t) });
                        },
                    }
                );
            },
            88304: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96163),
                    a = i(92569),
                    n = i(35897)("Promise");
                r(
                    { target: "AsyncIterator", proto: !0, real: !0 },
                    {
                        reduce: function (t) {
                            var e = a(this),
                                i = s(e.next),
                                r = arguments.length < 2,
                                o = r ? void 0 : arguments[1];
                            return (
                                s(t),
                                new n(function (s, l) {
                                    !(function h() {
                                        try {
                                            n.resolve(a(i.call(e))).then(function (e) {
                                                try {
                                                    if (a(e).done) r ? l(TypeError("Reduce of empty iterator with no initial value")) : s(o);
                                                    else {
                                                        var i = e.value;
                                                        r
                                                            ? ((r = !1), (o = i), h())
                                                            : n.resolve(t(o, i)).then(function (t) {
                                                                  (o = t), h();
                                                              }, l);
                                                    }
                                                } catch (t) {
                                                    l(t);
                                                }
                                            }, l);
                                        } catch (t) {
                                            l(t);
                                        }
                                    })();
                                })
                            );
                        },
                    }
                );
            },
            97246: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(60316).some;
                r(
                    { target: "AsyncIterator", proto: !0, real: !0 },
                    {
                        some: function (t) {
                            return s(this, t);
                        },
                    }
                );
            },
            32865: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(92569),
                    a = i(42955),
                    n = i(17562)(function (t, e) {
                        var i,
                            r,
                            s = this.iterator;
                        return this.remaining--
                            ? this.next.call(s, t)
                            : ((r = { done: !0, value: void 0 }),
                              (this.done = !0),
                              void 0 !== (i = s.return)
                                  ? e.resolve(i.call(s)).then(function () {
                                        return r;
                                    })
                                  : r);
                    });
                r(
                    { target: "AsyncIterator", proto: !0, real: !0 },
                    {
                        take: function (t) {
                            return new n({ iterator: s(this), remaining: a(t) });
                        },
                    }
                );
            },
            49866: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(60316).toArray;
                r(
                    { target: "AsyncIterator", proto: !0, real: !0 },
                    {
                        toArray: function () {
                            return s(this);
                        },
                    }
                );
            },
            79548: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(94106);
                "function" == typeof BigInt &&
                    r(
                        { target: "BigInt", stat: !0 },
                        {
                            range: function (t, e, i) {
                                return new s(t, e, i, "bigint", BigInt(0), BigInt(1));
                            },
                        }
                    );
            },
            69527: (t, e, i) => {
                var r = i(37263),
                    s = i(3246),
                    a = i(35897),
                    n = i(3590),
                    o = function () {
                        var t = a("Object", "freeze");
                        return t ? t(n(null)) : n(null);
                    };
                r(
                    { global: !0 },
                    {
                        compositeKey: function () {
                            return s.apply(Object, arguments).get("object", o);
                        },
                    }
                );
            },
            85835: (t, e, i) => {
                var r = i(37263),
                    s = i(3246),
                    a = i(35897);
                r(
                    { global: !0 },
                    {
                        compositeSymbol: function () {
                            return 1 === arguments.length && "string" == typeof arguments[0] ? a("Symbol").for(arguments[0]) : s.apply(null, arguments).get("symbol", a("Symbol"));
                        },
                    }
                );
            },
            96691: (t, e, i) => {
                i(76169);
            },
            3949: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(92569),
                    a = i(72471)(function (t) {
                        var e = s(this.next.call(this.iterator, t));
                        if (!(this.done = !!e.done)) return [this.index++, e.value];
                    });
                r(
                    { target: "Iterator", proto: !0, real: !0 },
                    {
                        asIndexedPairs: function () {
                            return new a({ iterator: s(this), index: 0 });
                        },
                    }
                );
            },
            97420: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(47583),
                    a = i(44761),
                    n = i(57),
                    o = i(16544),
                    l = i(34402),
                    h = i(3649),
                    c = i(72365).IteratorPrototype,
                    d = i(86268),
                    u = h("iterator"),
                    p = h("toStringTag"),
                    m = s.Iterator,
                    f =
                        d ||
                        "function" != typeof m ||
                        m.prototype !== c ||
                        !o(function () {
                            m({});
                        }),
                    g = function () {
                        a(this, g);
                    };
                d &&
                    n((c = {}), u, function () {
                        return this;
                    }),
                    l(c, p) || n(c, p, "Iterator"),
                    (!f && l(c, "constructor") && c.constructor !== Object) || n(c, "constructor", g),
                    (g.prototype = c),
                    r({ global: !0, forced: f }, { Iterator: g });
            },
            26921: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(92569),
                    a = i(42955),
                    n = i(72471)(function (t) {
                        for (var e, i = this.iterator, r = this.next; this.remaining; ) if ((this.remaining--, (e = s(r.call(i))), (this.done = !!e.done))) return;
                        if (((e = s(r.call(i, t))), !(this.done = !!e.done))) return e.value;
                    });
                r(
                    { target: "Iterator", proto: !0, real: !0 },
                    {
                        drop: function (t) {
                            return new n({ iterator: s(this), remaining: a(t) });
                        },
                    }
                );
            },
            21594: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(54026),
                    a = i(96163),
                    n = i(92569);
                r(
                    { target: "Iterator", proto: !0, real: !0 },
                    {
                        every: function (t) {
                            return (
                                n(this),
                                a(t),
                                !s(
                                    this,
                                    function (e, i) {
                                        if (!t(e)) return i();
                                    },
                                    { IS_ITERATOR: !0, INTERRUPTED: !0 }
                                ).stopped
                            );
                        },
                    }
                );
            },
            72311: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96163),
                    a = i(92569),
                    n = i(72471),
                    o = i(65294),
                    l = n(function (t) {
                        for (var e, i, r = this.iterator, s = this.filterer, n = this.next; ; ) {
                            if (((e = a(n.call(r, t))), (this.done = !!e.done))) return;
                            if (((i = e.value), o(r, s, i))) return i;
                        }
                    });
                r(
                    { target: "Iterator", proto: !0, real: !0 },
                    {
                        filter: function (t) {
                            return new l({ iterator: a(this), filterer: s(t) });
                        },
                    }
                );
            },
            63917: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(54026),
                    a = i(96163),
                    n = i(92569);
                r(
                    { target: "Iterator", proto: !0, real: !0 },
                    {
                        find: function (t) {
                            return (
                                n(this),
                                a(t),
                                s(
                                    this,
                                    function (e, i) {
                                        if (t(e)) return i(e);
                                    },
                                    { IS_ITERATOR: !0, INTERRUPTED: !0 }
                                ).result
                            );
                        },
                    }
                );
            },
            23406: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96163),
                    a = i(92569),
                    n = i(38272),
                    o = i(72471),
                    l = i(47093),
                    h = o(function (t) {
                        for (var e, i, r, o, h = this.iterator, c = this.mapper; ; )
                            try {
                                if ((o = this.innerIterator)) {
                                    if (!(e = a(this.innerNext.call(o))).done) return e.value;
                                    this.innerIterator = this.innerNext = null;
                                }
                                if (((e = a(this.next.call(h, t))), (this.done = !!e.done))) return;
                                if (((i = c(e.value)), void 0 === (r = n(i)))) throw TypeError(".flatMap callback should return an iterable object");
                                (this.innerIterator = o = a(r.call(i))), (this.innerNext = s(o.next));
                            } catch (t) {
                                throw (l(h), t);
                            }
                    });
                r(
                    { target: "Iterator", proto: !0, real: !0 },
                    {
                        flatMap: function (t) {
                            return new h({ iterator: a(this), mapper: s(t), innerIterator: null, innerNext: null });
                        },
                    }
                );
            },
            10581: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(54026),
                    a = i(92569);
                r(
                    { target: "Iterator", proto: !0, real: !0 },
                    {
                        forEach: function (t) {
                            s(a(this), t, { IS_ITERATOR: !0 });
                        },
                    }
                );
            },
            14912: (t, e, i) => {
                var r = i(37263),
                    s = i(21287),
                    a = i(96163),
                    n = i(92569),
                    o = i(61324),
                    l = i(72471),
                    h = i(38272),
                    c = s.Iterator,
                    d = l(function (t) {
                        var e = n(this.next.call(this.iterator, t));
                        if (!(this.done = !!e.done)) return e.value;
                    }, !0);
                r(
                    { target: "Iterator", stat: !0 },
                    {
                        from: function (t) {
                            var e,
                                i = o(t),
                                r = h(i);
                            if (null != r) {
                                if ((e = a(r).call(i)) instanceof c) return e;
                            } else e = i;
                            return new d({ iterator: e });
                        },
                    }
                );
            },
            15544: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96163),
                    a = i(92569),
                    n = i(72471),
                    o = i(65294),
                    l = n(function (t) {
                        var e = this.iterator,
                            i = a(this.next.call(e, t));
                        if (!(this.done = !!i.done)) return o(e, this.mapper, i.value);
                    });
                r(
                    { target: "Iterator", proto: !0, real: !0 },
                    {
                        map: function (t) {
                            return new l({ iterator: a(this), mapper: s(t) });
                        },
                    }
                );
            },
            39271: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(54026),
                    a = i(96163),
                    n = i(92569);
                r(
                    { target: "Iterator", proto: !0, real: !0 },
                    {
                        reduce: function (t) {
                            n(this), a(t);
                            var e = arguments.length < 2,
                                i = e ? void 0 : arguments[1];
                            if (
                                (s(
                                    this,
                                    function (r) {
                                        e ? ((e = !1), (i = r)) : (i = t(i, r));
                                    },
                                    { IS_ITERATOR: !0 }
                                ),
                                e)
                            )
                                throw TypeError("Reduce of empty iterator with no initial value");
                            return i;
                        },
                    }
                );
            },
            60943: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(54026),
                    a = i(96163),
                    n = i(92569);
                r(
                    { target: "Iterator", proto: !0, real: !0 },
                    {
                        some: function (t) {
                            return (
                                n(this),
                                a(t),
                                s(
                                    this,
                                    function (e, i) {
                                        if (t(e)) return i();
                                    },
                                    { IS_ITERATOR: !0, INTERRUPTED: !0 }
                                ).stopped
                            );
                        },
                    }
                );
            },
            15765: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(92569),
                    a = i(42955),
                    n = i(72471),
                    o = i(47093),
                    l = n(function (t) {
                        var e = this.iterator;
                        if (!this.remaining--) return (this.done = !0), o(e);
                        var i = s(this.next.call(e, t));
                        return (this.done = !!i.done) ? void 0 : i.value;
                    });
                r(
                    { target: "Iterator", proto: !0, real: !0 },
                    {
                        take: function (t) {
                            return new l({ iterator: s(this), remaining: a(t) });
                        },
                    }
                );
            },
            21292: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(54026),
                    a = i(92569),
                    n = [].push;
                r(
                    { target: "Iterator", proto: !0, real: !0 },
                    {
                        toArray: function () {
                            var t = [];
                            return s(a(this), n, { that: t, IS_ITERATOR: !0 }), t;
                        },
                    }
                );
            },
            8068: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(85337);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        deleteAll: function () {
                            return a.apply(this, arguments);
                        },
                    }
                );
            },
            1310: (t, e, i) => {
                "use strict";
                i(37263)({ target: "Map", proto: !0, real: !0, forced: i(86268) }, { emplace: i(53069) });
            },
            29913: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(12938),
                    o = i(53780),
                    l = i(54026);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        every: function (t) {
                            var e = a(this),
                                i = o(e),
                                r = n(t, arguments.length > 1 ? arguments[1] : void 0, 3);
                            return !l(
                                i,
                                function (t, i, s) {
                                    if (!r(i, t, e)) return s();
                                },
                                { AS_ENTRIES: !0, IS_ITERATOR: !0, INTERRUPTED: !0 }
                            ).stopped;
                        },
                    }
                );
            },
            96003: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(35897),
                    n = i(92569),
                    o = i(96163),
                    l = i(12938),
                    h = i(40564),
                    c = i(53780),
                    d = i(54026);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        filter: function (t) {
                            var e = n(this),
                                i = c(e),
                                r = l(t, arguments.length > 1 ? arguments[1] : void 0, 3),
                                s = new (h(e, a("Map")))(),
                                u = o(s.set);
                            return (
                                d(
                                    i,
                                    function (t, i) {
                                        r(i, t, e) && u.call(s, t, i);
                                    },
                                    { AS_ENTRIES: !0, IS_ITERATOR: !0 }
                                ),
                                s
                            );
                        },
                    }
                );
            },
            73826: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(12938),
                    o = i(53780),
                    l = i(54026);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        findKey: function (t) {
                            var e = a(this),
                                i = o(e),
                                r = n(t, arguments.length > 1 ? arguments[1] : void 0, 3);
                            return l(
                                i,
                                function (t, i, s) {
                                    if (r(i, t, e)) return s(t);
                                },
                                { AS_ENTRIES: !0, IS_ITERATOR: !0, INTERRUPTED: !0 }
                            ).result;
                        },
                    }
                );
            },
            37709: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(12938),
                    o = i(53780),
                    l = i(54026);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        find: function (t) {
                            var e = a(this),
                                i = o(e),
                                r = n(t, arguments.length > 1 ? arguments[1] : void 0, 3);
                            return l(
                                i,
                                function (t, i, s) {
                                    if (r(i, t, e)) return s(i);
                                },
                                { AS_ENTRIES: !0, IS_ITERATOR: !0, INTERRUPTED: !0 }
                            ).result;
                        },
                    }
                );
            },
            52510: (t, e, i) => {
                i(37263)({ target: "Map", stat: !0 }, { from: i(46123) });
            },
            43092: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(54026),
                    a = i(96163);
                r(
                    { target: "Map", stat: !0 },
                    {
                        groupBy: function (t, e) {
                            var i = new this();
                            a(e);
                            var r = a(i.has),
                                n = a(i.get),
                                o = a(i.set);
                            return (
                                s(t, function (t) {
                                    var s = e(t);
                                    r.call(i, s) ? n.call(i, s).push(t) : o.call(i, s, [t]);
                                }),
                                i
                            );
                        },
                    }
                );
            },
            39960: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(53780),
                    o = i(40994),
                    l = i(54026);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        includes: function (t) {
                            return l(
                                n(a(this)),
                                function (e, i, r) {
                                    if (o(i, t)) return r();
                                },
                                { AS_ENTRIES: !0, IS_ITERATOR: !0, INTERRUPTED: !0 }
                            ).stopped;
                        },
                    }
                );
            },
            98536: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(54026),
                    a = i(96163);
                r(
                    { target: "Map", stat: !0 },
                    {
                        keyBy: function (t, e) {
                            var i = new this();
                            a(e);
                            var r = a(i.set);
                            return (
                                s(t, function (t) {
                                    r.call(i, e(t), t);
                                }),
                                i
                            );
                        },
                    }
                );
            },
            94061: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(53780),
                    o = i(54026);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        keyOf: function (t) {
                            return o(
                                n(a(this)),
                                function (e, i, r) {
                                    if (i === t) return r(e);
                                },
                                { AS_ENTRIES: !0, IS_ITERATOR: !0, INTERRUPTED: !0 }
                            ).result;
                        },
                    }
                );
            },
            84173: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(35897),
                    n = i(92569),
                    o = i(96163),
                    l = i(12938),
                    h = i(40564),
                    c = i(53780),
                    d = i(54026);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        mapKeys: function (t) {
                            var e = n(this),
                                i = c(e),
                                r = l(t, arguments.length > 1 ? arguments[1] : void 0, 3),
                                s = new (h(e, a("Map")))(),
                                u = o(s.set);
                            return (
                                d(
                                    i,
                                    function (t, i) {
                                        u.call(s, r(i, t, e), i);
                                    },
                                    { AS_ENTRIES: !0, IS_ITERATOR: !0 }
                                ),
                                s
                            );
                        },
                    }
                );
            },
            32787: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(35897),
                    n = i(92569),
                    o = i(96163),
                    l = i(12938),
                    h = i(40564),
                    c = i(53780),
                    d = i(54026);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        mapValues: function (t) {
                            var e = n(this),
                                i = c(e),
                                r = l(t, arguments.length > 1 ? arguments[1] : void 0, 3),
                                s = new (h(e, a("Map")))(),
                                u = o(s.set);
                            return (
                                d(
                                    i,
                                    function (t, i) {
                                        u.call(s, t, r(i, t, e));
                                    },
                                    { AS_ENTRIES: !0, IS_ITERATOR: !0 }
                                ),
                                s
                            );
                        },
                    }
                );
            },
            99151: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(96163),
                    o = i(54026);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        merge: function (t) {
                            for (var e = a(this), i = n(e.set), r = 0; r < arguments.length; ) o(arguments[r++], i, { that: e, AS_ENTRIES: !0 });
                            return e;
                        },
                    }
                );
            },
            95664: (t, e, i) => {
                i(37263)({ target: "Map", stat: !0 }, { of: i(59284) });
            },
            63502: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(96163),
                    o = i(53780),
                    l = i(54026);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        reduce: function (t) {
                            var e = a(this),
                                i = o(e),
                                r = arguments.length < 2,
                                s = r ? void 0 : arguments[1];
                            if (
                                (n(t),
                                l(
                                    i,
                                    function (i, a) {
                                        r ? ((r = !1), (s = a)) : (s = t(s, a, i, e));
                                    },
                                    { AS_ENTRIES: !0, IS_ITERATOR: !0 }
                                ),
                                r)
                            )
                                throw TypeError("Reduce of empty map with no initial value");
                            return s;
                        },
                    }
                );
            },
            30924: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(12938),
                    o = i(53780),
                    l = i(54026);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        some: function (t) {
                            var e = a(this),
                                i = o(e),
                                r = n(t, arguments.length > 1 ? arguments[1] : void 0, 3);
                            return l(
                                i,
                                function (t, i, s) {
                                    if (r(i, t, e)) return s();
                                },
                                { AS_ENTRIES: !0, IS_ITERATOR: !0, INTERRUPTED: !0 }
                            ).stopped;
                        },
                    }
                );
            },
            63053: (t, e, i) => {
                "use strict";
                i(37263)({ target: "Map", proto: !0, real: !0, forced: i(86268) }, { updateOrInsert: i(48080) });
            },
            8990: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(96163);
                r(
                    { target: "Map", proto: !0, real: !0, forced: s },
                    {
                        update: function (t, e) {
                            var i = a(this),
                                r = arguments.length;
                            n(e);
                            var s = i.has(t);
                            if (!s && r < 3) throw TypeError("Updating absent value");
                            var o = s ? i.get(t) : n(r > 2 ? arguments[2] : void 0)(t, i);
                            return i.set(t, e(o, t, i)), i;
                        },
                    }
                );
            },
            16705: (t, e, i) => {
                "use strict";
                i(37263)({ target: "Map", proto: !0, real: !0, forced: i(86268) }, { upsert: i(48080) });
            },
            97146: (t, e, i) => {
                var r = i(37263),
                    s = Math.min,
                    a = Math.max;
                r(
                    { target: "Math", stat: !0 },
                    {
                        clamp: function (t, e, i) {
                            return s(i, a(e, t));
                        },
                    }
                );
            },
            22503: (t, e, i) => {
                i(37263)({ target: "Math", stat: !0 }, { DEG_PER_RAD: Math.PI / 180 });
            },
            92414: (t, e, i) => {
                var r = i(37263),
                    s = 180 / Math.PI;
                r(
                    { target: "Math", stat: !0 },
                    {
                        degrees: function (t) {
                            return t * s;
                        },
                    }
                );
            },
            84890: (t, e, i) => {
                var r = i(37263),
                    s = i(86617),
                    a = i(75661);
                r(
                    { target: "Math", stat: !0 },
                    {
                        fscale: function (t, e, i, r, n) {
                            return a(s(t, e, i, r, n));
                        },
                    }
                );
            },
            88023: (t, e, i) => {
                i(37263)(
                    { target: "Math", stat: !0 },
                    {
                        iaddh: function (t, e, i, r) {
                            var s = t >>> 0,
                                a = i >>> 0;
                            return ((e >>> 0) + (r >>> 0) + (((s & a) | ((s | a) & ~((s + a) >>> 0))) >>> 31)) | 0;
                        },
                    }
                );
            },
            93278: (t, e, i) => {
                i(37263)(
                    { target: "Math", stat: !0 },
                    {
                        imulh: function (t, e) {
                            var i = 65535,
                                r = +t,
                                s = +e,
                                a = r & i,
                                n = s & i,
                                o = r >> 16,
                                l = s >> 16,
                                h = ((o * n) >>> 0) + ((a * n) >>> 16);
                            return o * l + (h >> 16) + ((((a * l) >>> 0) + (h & i)) >> 16);
                        },
                    }
                );
            },
            24951: (t, e, i) => {
                i(37263)(
                    { target: "Math", stat: !0 },
                    {
                        isubh: function (t, e, i, r) {
                            var s = t >>> 0,
                                a = i >>> 0;
                            return ((e >>> 0) - (r >>> 0) - (((~s & a) | (~(s ^ a) & ((s - a) >>> 0))) >>> 31)) | 0;
                        },
                    }
                );
            },
            40374: (t, e, i) => {
                i(37263)({ target: "Math", stat: !0 }, { RAD_PER_DEG: 180 / Math.PI });
            },
            37770: (t, e, i) => {
                var r = i(37263),
                    s = Math.PI / 180;
                r(
                    { target: "Math", stat: !0 },
                    {
                        radians: function (t) {
                            return t * s;
                        },
                    }
                );
            },
            94305: (t, e, i) => {
                i(37263)({ target: "Math", stat: !0 }, { scale: i(86617) });
            },
            64251: (t, e, i) => {
                var r = i(37263),
                    s = i(92569),
                    a = i(79606),
                    n = i(24683),
                    o = i(42743),
                    l = "Seeded Random",
                    h = l + " Generator",
                    c = o.set,
                    d = o.getterFor(h),
                    u = n(
                        function (t) {
                            c(this, { type: h, seed: t % 2147483647 });
                        },
                        l,
                        function () {
                            var t = d(this);
                            return { value: (1073741823 & (t.seed = (1103515245 * t.seed + 12345) % 2147483647)) / 1073741823, done: !1 };
                        }
                    );
                r(
                    { target: "Math", stat: !0, forced: !0 },
                    {
                        seededPRNG: function (t) {
                            var e = s(t).seed;
                            if (!a(e)) throw TypeError('Math.seededPRNG() argument should have a "seed" field with a finite value.');
                            return new u(e);
                        },
                    }
                );
            },
            99175: (t, e, i) => {
                i(37263)(
                    { target: "Math", stat: !0 },
                    {
                        signbit: function (t) {
                            return (t = +t) == t && 0 == t ? 1 / t == -1 / 0 : t < 0;
                        },
                    }
                );
            },
            86945: (t, e, i) => {
                i(37263)(
                    { target: "Math", stat: !0 },
                    {
                        umulh: function (t, e) {
                            var i = 65535,
                                r = +t,
                                s = +e,
                                a = r & i,
                                n = s & i,
                                o = r >>> 16,
                                l = s >>> 16,
                                h = ((o * n) >>> 0) + ((a * n) >>> 16);
                            return o * l + (h >>> 16) + ((((a * l) >>> 0) + (h & i)) >>> 16);
                        },
                    }
                );
            },
            64114: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(75089),
                    a = i(35407),
                    n = "Invalid number representation",
                    o = /^[\da-z]+$/;
                r(
                    { target: "Number", stat: !0 },
                    {
                        fromString: function (t, e) {
                            var i,
                                r,
                                l = 1;
                            if ("string" != typeof t) throw TypeError(n);
                            if (!t.length) throw SyntaxError(n);
                            if ("-" == t.charAt(0) && ((l = -1), !(t = t.slice(1)).length)) throw SyntaxError(n);
                            if ((i = void 0 === e ? 10 : s(e)) < 2 || i > 36) throw RangeError("Invalid radix");
                            if (!o.test(t) || (r = a(t, i)).toString(i) !== t) throw SyntaxError(n);
                            return l * r;
                        },
                    }
                );
            },
            14960: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(94106);
                r(
                    { target: "Number", stat: !0 },
                    {
                        range: function (t, e, i) {
                            return new s(t, e, i, "number", 0, 1);
                        },
                    }
                );
            },
            15306: (t, e, i) => {
                i(37263)({ target: "Object", stat: !0 }, { hasOwn: i(34402) });
            },
            31183: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(40927);
                r(
                    { target: "Object", stat: !0 },
                    {
                        iterateEntries: function (t) {
                            return new s(t, "entries");
                        },
                    }
                );
            },
            42106: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(40927);
                r(
                    { target: "Object", stat: !0 },
                    {
                        iterateKeys: function (t) {
                            return new s(t, "keys");
                        },
                    }
                );
            },
            53261: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(40927);
                r(
                    { target: "Object", stat: !0 },
                    {
                        iterateValues: function (t) {
                            return new s(t, "values");
                        },
                    }
                );
            },
            43637: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(18494),
                    a = i(7730),
                    n = i(96163),
                    o = i(92569),
                    l = i(90794),
                    h = i(44761),
                    c = i(94615).f,
                    d = i(57),
                    u = i(96893),
                    p = i(36307),
                    m = i(54026),
                    f = i(92716),
                    g = i(3649),
                    v = i(42743),
                    b = g("observable"),
                    y = v.get,
                    w = v.set,
                    x = function (t) {
                        return null == t ? void 0 : n(t);
                    },
                    E = function (t) {
                        var e = t.cleanup;
                        if (e) {
                            t.cleanup = void 0;
                            try {
                                e();
                            } catch (t) {
                                f(t);
                            }
                        }
                    },
                    C = function (t) {
                        return void 0 === t.observer;
                    },
                    S = function (t) {
                        var e = t.facade;
                        if (!s) {
                            e.closed = !0;
                            var i = t.subscriptionObserver;
                            i && (i.closed = !0);
                        }
                        t.observer = void 0;
                    },
                    T = function (t, e) {
                        var i,
                            r = w(this, { cleanup: void 0, observer: o(t), subscriptionObserver: void 0 });
                        s || (this.closed = !1);
                        try {
                            (i = x(t.start)) && i.call(t, this);
                        } catch (t) {
                            f(t);
                        }
                        if (!C(r)) {
                            var a = (r.subscriptionObserver = new _(this));
                            try {
                                var l = e(a),
                                    h = l;
                                null != l &&
                                    (r.cleanup =
                                        "function" == typeof l.unsubscribe
                                            ? function () {
                                                  h.unsubscribe();
                                              }
                                            : n(l));
                            } catch (t) {
                                return void a.error(t);
                            }
                            C(r) && E(r);
                        }
                    };
                (T.prototype = u(
                    {},
                    {
                        unsubscribe: function () {
                            var t = y(this);
                            C(t) || (S(t), E(t));
                        },
                    }
                )),
                    s &&
                        c(T.prototype, "closed", {
                            configurable: !0,
                            get: function () {
                                return C(y(this));
                            },
                        });
                var _ = function (t) {
                    w(this, { subscription: t }), s || (this.closed = !1);
                };
                (_.prototype = u(
                    {},
                    {
                        next: function (t) {
                            var e = y(y(this).subscription);
                            if (!C(e)) {
                                var i = e.observer;
                                try {
                                    var r = x(i.next);
                                    r && r.call(i, t);
                                } catch (t) {
                                    f(t);
                                }
                            }
                        },
                        error: function (t) {
                            var e = y(y(this).subscription);
                            if (!C(e)) {
                                var i = e.observer;
                                S(e);
                                try {
                                    var r = x(i.error);
                                    r ? r.call(i, t) : f(t);
                                } catch (t) {
                                    f(t);
                                }
                                E(e);
                            }
                        },
                        complete: function () {
                            var t = y(y(this).subscription);
                            if (!C(t)) {
                                var e = t.observer;
                                S(t);
                                try {
                                    var i = x(e.complete);
                                    i && i.call(e);
                                } catch (t) {
                                    f(t);
                                }
                                E(t);
                            }
                        },
                    }
                )),
                    s &&
                        c(_.prototype, "closed", {
                            configurable: !0,
                            get: function () {
                                return C(y(y(this).subscription));
                            },
                        });
                var M = function (t) {
                    h(this, M, "Observable"), w(this, { subscriber: n(t) });
                };
                u(M.prototype, {
                    subscribe: function (t) {
                        var e = arguments.length;
                        return new T("function" == typeof t ? { next: t, error: e > 1 ? arguments[1] : void 0, complete: e > 2 ? arguments[2] : void 0 } : l(t) ? t : {}, y(this).subscriber);
                    },
                }),
                    u(M, {
                        from: function (t) {
                            var e = "function" == typeof this ? this : M,
                                i = x(o(t)[b]);
                            if (i) {
                                var r = o(i.call(t));
                                return r.constructor === e
                                    ? r
                                    : new e(function (t) {
                                          return r.subscribe(t);
                                      });
                            }
                            var s = p(t);
                            return new e(function (t) {
                                m(
                                    s,
                                    function (e, i) {
                                        if ((t.next(e), t.closed)) return i();
                                    },
                                    { IS_ITERATOR: !0, INTERRUPTED: !0 }
                                ),
                                    t.complete();
                            });
                        },
                        of: function () {
                            for (var t = "function" == typeof this ? this : M, e = arguments.length, i = new Array(e), r = 0; r < e; ) i[r] = arguments[r++];
                            return new t(function (t) {
                                for (var r = 0; r < e; r++) if ((t.next(i[r]), t.closed)) return;
                                t.complete();
                            });
                        },
                    }),
                    d(M.prototype, b, function () {
                        return this;
                    }),
                    r({ global: !0 }, { Observable: M }),
                    a("Observable");
            },
            75045: (t, e, i) => {
                i(86969);
            },
            51092: (t, e, i) => {
                i(32021);
            },
            58936: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(5084),
                    a = i(80544);
                r(
                    { target: "Promise", stat: !0 },
                    {
                        try: function (t) {
                            var e = s.f(this),
                                i = a(t);
                            return (i.error ? e.reject : e.resolve)(i.value), e.promise;
                        },
                    }
                );
            },
            28041: (t, e, i) => {
                var r = i(37263),
                    s = i(67802),
                    a = i(92569),
                    n = s.toKey,
                    o = s.set;
                r(
                    { target: "Reflect", stat: !0 },
                    {
                        defineMetadata: function (t, e, i) {
                            var r = arguments.length < 4 ? void 0 : n(arguments[3]);
                            o(t, e, a(i), r);
                        },
                    }
                );
            },
            85748: (t, e, i) => {
                var r = i(37263),
                    s = i(67802),
                    a = i(92569),
                    n = s.toKey,
                    o = s.getMap,
                    l = s.store;
                r(
                    { target: "Reflect", stat: !0 },
                    {
                        deleteMetadata: function (t, e) {
                            var i = arguments.length < 3 ? void 0 : n(arguments[2]),
                                r = o(a(e), i, !1);
                            if (void 0 === r || !r.delete(t)) return !1;
                            if (r.size) return !0;
                            var s = l.get(e);
                            return s.delete(i), !!s.size || l.delete(e);
                        },
                    }
                );
            },
            5646: (t, e, i) => {
                var r = i(37263),
                    s = i(26922),
                    a = i(67802),
                    n = i(92569),
                    o = i(80729),
                    l = i(54026),
                    h = a.keys,
                    c = a.toKey,
                    d = function t(e, i) {
                        var r = h(e, i),
                            a = o(e);
                        if (null === a) return r;
                        var n,
                            c,
                            d = t(a, i);
                        return d.length ? (r.length ? ((n = new s(r.concat(d))), l(n, (c = []).push, { that: c }), c) : d) : r;
                    };
                r(
                    { target: "Reflect", stat: !0 },
                    {
                        getMetadataKeys: function (t) {
                            var e = arguments.length < 2 ? void 0 : c(arguments[1]);
                            return d(n(t), e);
                        },
                    }
                );
            },
            78193: (t, e, i) => {
                var r = i(37263),
                    s = i(67802),
                    a = i(92569),
                    n = i(80729),
                    o = s.has,
                    l = s.get,
                    h = s.toKey,
                    c = function t(e, i, r) {
                        if (o(e, i, r)) return l(e, i, r);
                        var s = n(i);
                        return null !== s ? t(e, s, r) : void 0;
                    };
                r(
                    { target: "Reflect", stat: !0 },
                    {
                        getMetadata: function (t, e) {
                            var i = arguments.length < 3 ? void 0 : h(arguments[2]);
                            return c(t, a(e), i);
                        },
                    }
                );
            },
            17525: (t, e, i) => {
                var r = i(37263),
                    s = i(67802),
                    a = i(92569),
                    n = s.keys,
                    o = s.toKey;
                r(
                    { target: "Reflect", stat: !0 },
                    {
                        getOwnMetadataKeys: function (t) {
                            var e = arguments.length < 2 ? void 0 : o(arguments[1]);
                            return n(a(t), e);
                        },
                    }
                );
            },
            9250: (t, e, i) => {
                var r = i(37263),
                    s = i(67802),
                    a = i(92569),
                    n = s.get,
                    o = s.toKey;
                r(
                    { target: "Reflect", stat: !0 },
                    {
                        getOwnMetadata: function (t, e) {
                            var i = arguments.length < 3 ? void 0 : o(arguments[2]);
                            return n(t, a(e), i);
                        },
                    }
                );
            },
            50519: (t, e, i) => {
                var r = i(37263),
                    s = i(67802),
                    a = i(92569),
                    n = i(80729),
                    o = s.has,
                    l = s.toKey,
                    h = function t(e, i, r) {
                        if (o(e, i, r)) return !0;
                        var s = n(i);
                        return null !== s && t(e, s, r);
                    };
                r(
                    { target: "Reflect", stat: !0 },
                    {
                        hasMetadata: function (t, e) {
                            var i = arguments.length < 3 ? void 0 : l(arguments[2]);
                            return h(t, a(e), i);
                        },
                    }
                );
            },
            20613: (t, e, i) => {
                var r = i(37263),
                    s = i(67802),
                    a = i(92569),
                    n = s.has,
                    o = s.toKey;
                r(
                    { target: "Reflect", stat: !0 },
                    {
                        hasOwnMetadata: function (t, e) {
                            var i = arguments.length < 3 ? void 0 : o(arguments[2]);
                            return n(t, a(e), i);
                        },
                    }
                );
            },
            6905: (t, e, i) => {
                var r = i(37263),
                    s = i(67802),
                    a = i(92569),
                    n = s.toKey,
                    o = s.set;
                r(
                    { target: "Reflect", stat: !0 },
                    {
                        metadata: function (t, e) {
                            return function (i, r) {
                                o(t, e, a(i), n(r));
                            };
                        },
                    }
                );
            },
            83868: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(99390);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        addAll: function () {
                            return a.apply(this, arguments);
                        },
                    }
                );
            },
            54651: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(85337);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        deleteAll: function () {
                            return a.apply(this, arguments);
                        },
                    }
                );
            },
            14846: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(35897),
                    n = i(92569),
                    o = i(96163),
                    l = i(40564),
                    h = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        difference: function (t) {
                            var e = n(this),
                                i = new (l(e, a("Set")))(e),
                                r = o(i.delete);
                            return (
                                h(t, function (t) {
                                    r.call(i, t);
                                }),
                                i
                            );
                        },
                    }
                );
            },
            14488: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(12938),
                    o = i(91206),
                    l = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        every: function (t) {
                            var e = a(this),
                                i = o(e),
                                r = n(t, arguments.length > 1 ? arguments[1] : void 0, 3);
                            return !l(
                                i,
                                function (t, i) {
                                    if (!r(t, t, e)) return i();
                                },
                                { IS_ITERATOR: !0, INTERRUPTED: !0 }
                            ).stopped;
                        },
                    }
                );
            },
            91327: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(35897),
                    n = i(92569),
                    o = i(96163),
                    l = i(12938),
                    h = i(40564),
                    c = i(91206),
                    d = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        filter: function (t) {
                            var e = n(this),
                                i = c(e),
                                r = l(t, arguments.length > 1 ? arguments[1] : void 0, 3),
                                s = new (h(e, a("Set")))(),
                                u = o(s.add);
                            return (
                                d(
                                    i,
                                    function (t) {
                                        r(t, t, e) && u.call(s, t);
                                    },
                                    { IS_ITERATOR: !0 }
                                ),
                                s
                            );
                        },
                    }
                );
            },
            43970: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(12938),
                    o = i(91206),
                    l = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        find: function (t) {
                            var e = a(this),
                                i = o(e),
                                r = n(t, arguments.length > 1 ? arguments[1] : void 0, 3);
                            return l(
                                i,
                                function (t, i) {
                                    if (r(t, t, e)) return i(t);
                                },
                                { IS_ITERATOR: !0, INTERRUPTED: !0 }
                            ).result;
                        },
                    }
                );
            },
            65030: (t, e, i) => {
                i(37263)({ target: "Set", stat: !0 }, { from: i(46123) });
            },
            48698: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(35897),
                    n = i(92569),
                    o = i(96163),
                    l = i(40564),
                    h = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        intersection: function (t) {
                            var e = n(this),
                                i = new (l(e, a("Set")))(),
                                r = o(e.has),
                                s = o(i.add);
                            return (
                                h(t, function (t) {
                                    r.call(e, t) && s.call(i, t);
                                }),
                                i
                            );
                        },
                    }
                );
            },
            73123: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(96163),
                    o = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        isDisjointFrom: function (t) {
                            var e = a(this),
                                i = n(e.has);
                            return !o(
                                t,
                                function (t, r) {
                                    if (!0 === i.call(e, t)) return r();
                                },
                                { INTERRUPTED: !0 }
                            ).stopped;
                        },
                    }
                );
            },
            90634: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(35897),
                    n = i(92569),
                    o = i(96163),
                    l = i(36307),
                    h = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        isSubsetOf: function (t) {
                            var e = l(this),
                                i = n(t),
                                r = i.has;
                            return (
                                "function" != typeof r && ((i = new (a("Set"))(t)), (r = o(i.has))),
                                !h(
                                    e,
                                    function (t, e) {
                                        if (!1 === r.call(i, t)) return e();
                                    },
                                    { IS_ITERATOR: !0, INTERRUPTED: !0 }
                                ).stopped
                            );
                        },
                    }
                );
            },
            7820: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(96163),
                    o = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        isSupersetOf: function (t) {
                            var e = a(this),
                                i = n(e.has);
                            return !o(
                                t,
                                function (t, r) {
                                    if (!1 === i.call(e, t)) return r();
                                },
                                { INTERRUPTED: !0 }
                            ).stopped;
                        },
                    }
                );
            },
            93022: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(91206),
                    o = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        join: function (t) {
                            var e = a(this),
                                i = n(e),
                                r = void 0 === t ? "," : String(t),
                                s = [];
                            return o(i, s.push, { that: s, IS_ITERATOR: !0 }), s.join(r);
                        },
                    }
                );
            },
            85927: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(35897),
                    n = i(92569),
                    o = i(96163),
                    l = i(12938),
                    h = i(40564),
                    c = i(91206),
                    d = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        map: function (t) {
                            var e = n(this),
                                i = c(e),
                                r = l(t, arguments.length > 1 ? arguments[1] : void 0, 3),
                                s = new (h(e, a("Set")))(),
                                u = o(s.add);
                            return (
                                d(
                                    i,
                                    function (t) {
                                        u.call(s, r(t, t, e));
                                    },
                                    { IS_ITERATOR: !0 }
                                ),
                                s
                            );
                        },
                    }
                );
            },
            13163: (t, e, i) => {
                i(37263)({ target: "Set", stat: !0 }, { of: i(59284) });
            },
            39027: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(96163),
                    o = i(91206),
                    l = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        reduce: function (t) {
                            var e = a(this),
                                i = o(e),
                                r = arguments.length < 2,
                                s = r ? void 0 : arguments[1];
                            if (
                                (n(t),
                                l(
                                    i,
                                    function (i) {
                                        r ? ((r = !1), (s = i)) : (s = t(s, i, i, e));
                                    },
                                    { IS_ITERATOR: !0 }
                                ),
                                r)
                            )
                                throw TypeError("Reduce of empty set with no initial value");
                            return s;
                        },
                    }
                );
            },
            33299: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(92569),
                    n = i(12938),
                    o = i(91206),
                    l = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        some: function (t) {
                            var e = a(this),
                                i = o(e),
                                r = n(t, arguments.length > 1 ? arguments[1] : void 0, 3);
                            return l(
                                i,
                                function (t, i) {
                                    if (r(t, t, e)) return i();
                                },
                                { IS_ITERATOR: !0, INTERRUPTED: !0 }
                            ).stopped;
                        },
                    }
                );
            },
            44644: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(35897),
                    n = i(92569),
                    o = i(96163),
                    l = i(40564),
                    h = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        symmetricDifference: function (t) {
                            var e = n(this),
                                i = new (l(e, a("Set")))(e),
                                r = o(i.delete),
                                s = o(i.add);
                            return (
                                h(t, function (t) {
                                    r.call(i, t) || s.call(i, t);
                                }),
                                i
                            );
                        },
                    }
                );
            },
            85942: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(35897),
                    n = i(92569),
                    o = i(96163),
                    l = i(40564),
                    h = i(54026);
                r(
                    { target: "Set", proto: !0, real: !0, forced: s },
                    {
                        union: function (t) {
                            var e = n(this),
                                i = new (l(e, a("Set")))(e);
                            return h(t, o(i.add), { that: i }), i;
                        },
                    }
                );
            },
            9063: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(96389).charAt;
                r(
                    {
                        target: "String",
                        proto: !0,
                        forced: i(16544)(function () {
                            return "ð ®·" !== "ð ®·".at(0);
                        }),
                    },
                    {
                        at: function (t) {
                            return s(this, t);
                        },
                    }
                );
            },
            91437: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(24683),
                    a = i(63955),
                    n = i(42743),
                    o = i(96389),
                    l = o.codeAt,
                    h = o.charAt,
                    c = "String Iterator",
                    d = n.set,
                    u = n.getterFor(c),
                    p = s(
                        function (t) {
                            d(this, { type: c, string: t, index: 0 });
                        },
                        "String",
                        function () {
                            var t,
                                e = u(this),
                                i = e.string,
                                r = e.index;
                            return r >= i.length ? { value: void 0, done: !0 } : ((t = h(i, r)), (e.index += t.length), { value: { codePoint: l(t, 0), position: r }, done: !1 });
                        }
                    );
                r(
                    { target: "String", proto: !0 },
                    {
                        codePoints: function () {
                            return new p(String(a(this)));
                        },
                    }
                );
            },
            63278: (t, e, i) => {
                i(70698);
            },
            13607: (t, e, i) => {
                i(66553);
            },
            95685: (t, e, i) => {
                i(82219)("asyncDispose");
            },
            92034: (t, e, i) => {
                i(82219)("dispose");
            },
            4365: (t, e, i) => {
                i(82219)("matcher");
            },
            52826: (t, e, i) => {
                i(82219)("metadata");
            },
            59371: (t, e, i) => {
                i(82219)("observable");
            },
            48132: (t, e, i) => {
                i(82219)("patternMatch");
            },
            985: (t, e, i) => {
                i(82219)("replaceAll");
            },
            10377: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(70097),
                    a = i(75089),
                    n = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("at", function (t) {
                    var e = n(this),
                        i = s(e.length),
                        r = a(t),
                        o = r >= 0 ? r : i + r;
                    return o < 0 || o >= i ? void 0 : e[o];
                });
            },
            31086: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(24805).filterOut,
                    a = i(49741),
                    n = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("filterOut", function (t) {
                    var e = s(n(this), t, arguments.length > 1 ? arguments[1] : void 0);
                    return a(this, e);
                });
            },
            6316: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(32544).findLastIndex,
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("findLastIndex", function (t) {
                    return s(a(this), t, arguments.length > 1 ? arguments[1] : void 0);
                });
            },
            68694: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(32544).findLast,
                    a = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("findLast", function (t) {
                    return s(a(this), t, arguments.length > 1 ? arguments[1] : void 0);
                });
            },
            24192: (t, e, i) => {
                "use strict";
                var r = i(13977),
                    s = i(33878),
                    a = i(49741),
                    n = r.aTypedArray;
                (0, r.exportTypedArrayMethod)("uniqueBy", function (t) {
                    return a(this, s.call(n(this), t));
                });
            },
            73884: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(85337);
                r(
                    { target: "WeakMap", proto: !0, real: !0, forced: s },
                    {
                        deleteAll: function () {
                            return a.apply(this, arguments);
                        },
                    }
                );
            },
            3020: (t, e, i) => {
                "use strict";
                i(37263)({ target: "WeakMap", proto: !0, real: !0, forced: i(86268) }, { emplace: i(53069) });
            },
            11649: (t, e, i) => {
                i(37263)({ target: "WeakMap", stat: !0 }, { from: i(46123) });
            },
            90925: (t, e, i) => {
                i(37263)({ target: "WeakMap", stat: !0 }, { of: i(59284) });
            },
            48462: (t, e, i) => {
                "use strict";
                i(37263)({ target: "WeakMap", proto: !0, real: !0, forced: i(86268) }, { upsert: i(48080) });
            },
            98501: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(99390);
                r(
                    { target: "WeakSet", proto: !0, real: !0, forced: s },
                    {
                        addAll: function () {
                            return a.apply(this, arguments);
                        },
                    }
                );
            },
            95869: (t, e, i) => {
                "use strict";
                var r = i(37263),
                    s = i(86268),
                    a = i(85337);
                r(
                    { target: "WeakSet", proto: !0, real: !0, forced: s },
                    {
                        deleteAll: function () {
                            return a.apply(this, arguments);
                        },
                    }
                );
            },
            59686: (t, e, i) => {
                i(37263)({ target: "WeakSet", stat: !0 }, { from: i(46123) });
            },
            95175: (t, e, i) => {
                i(37263)({ target: "WeakSet", stat: !0 }, { of: i(59284) });
            },
            55090: (t, e, i) => {
                var r = i(47583),
                    s = i(86778),
                    a = i(63200),
                    n = i(57);
                for (var o in s) {
                    var l = r[o],
                        h = l && l.prototype;
                    if (h && h.forEach !== a)
                        try {
                            n(h, "forEach", a);
                        } catch (t) {
                            h.forEach = a;
                        }
                }
            },
            24655: (t, e, i) => {
                var r = i(47583),
                    s = i(86778),
                    a = i(55677),
                    n = i(57),
                    o = i(3649),
                    l = o("iterator"),
                    h = o("toStringTag"),
                    c = a.values;
                for (var d in s) {
                    var u = r[d],
                        p = u && u.prototype;
                    if (p) {
                        if (p[l] !== c)
                            try {
                                n(p, l, c);
                            } catch (t) {
                                p[l] = c;
                            }
                        if ((p[h] || n(p, h, d), s[d]))
                            for (var m in a)
                                if (p[m] !== a[m])
                                    try {
                                        n(p, m, a[m]);
                                    } catch (t) {
                                        p[m] = a[m];
                                    }
                    }
                }
            },
            68192: (t, e, i) => {
                var r = i(37263),
                    s = i(47583),
                    a = i(48117);
                r({ global: !0, bind: !0, enumerable: !0, forced: !s.setImmediate || !s.clearImmediate }, { setImmediate: a.set, clearImmediate: a.clear });
            },
            39201: (t, e, i) => {
                var r = i(37263),
                    s = i(47583),
                    a = i(92095),
                    n = i(45354),
                    o = s.process;
                r(
                    { global: !0, enumerable: !0, noTargetGet: !0 },
                    {
                        queueMicrotask: function (t) {
                            var e = n && o.domain;
                            a(e ? e.bind(t) : t);
                        },
                    }
                );
            },
            60151: (t, e, i) => {
                var r = i(37263),
                    s = i(47583),
                    a = i(46918),
                    n = [].slice,
                    o = function (t) {
                        return function (e, i) {
                            var r = arguments.length > 2,
                                s = r ? n.call(arguments, 2) : void 0;
                            return t(
                                r
                                    ? function () {
                                          ("function" == typeof e ? e : Function(e)).apply(this, s);
                                      }
                                    : e,
                                i
                            );
                        };
                    };
                r({ global: !0, bind: !0, forced: /MSIE .\./.test(a) }, { setTimeout: o(s.setTimeout), setInterval: o(s.setInterval) });
            },
            46549: (t, e, i) => {
                "use strict";
                i(55677);
                var r = i(37263),
                    s = i(35897),
                    a = i(77664),
                    n = i(61270),
                    o = i(96893),
                    l = i(98821),
                    h = i(24683),
                    c = i(42743),
                    d = i(44761),
                    u = i(34402),
                    p = i(12938),
                    m = i(33058),
                    f = i(92569),
                    g = i(90794),
                    v = i(3590),
                    b = i(54677),
                    y = i(36307),
                    w = i(38272),
                    x = i(3649),
                    E = s("fetch"),
                    C = s("Headers"),
                    S = x("iterator"),
                    T = "URLSearchParams",
                    _ = T + "Iterator",
                    M = c.set,
                    P = c.getterFor(T),
                    k = c.getterFor(_),
                    A = /\+/g,
                    D = Array(4),
                    L = function (t) {
                        return D[t - 1] || (D[t - 1] = RegExp("((?:%[\\da-f]{2}){" + t + "})", "gi"));
                    },
                    I = function (t) {
                        try {
                            return decodeURIComponent(t);
                        } catch (e) {
                            return t;
                        }
                    },
                    R = function (t) {
                        var e = t.replace(A, " "),
                            i = 4;
                        try {
                            return decodeURIComponent(e);
                        } catch (t) {
                            for (; i; ) e = e.replace(L(i--), I);
                            return e;
                        }
                    },
                    O = /[!'()~]|%20/g,
                    F = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+" },
                    B = function (t) {
                        return F[t];
                    },
                    z = function (t) {
                        return encodeURIComponent(t).replace(O, B);
                    },
                    N = function (t, e) {
                        if (e) for (var i, r, s = e.split("&"), a = 0; a < s.length; ) (i = s[a++]).length && ((r = i.split("=")), t.push({ key: R(r.shift()), value: R(r.join("=")) }));
                    },
                    V = function (t) {
                        (this.entries.length = 0), N(this.entries, t);
                    },
                    H = function (t, e) {
                        if (t < e) throw TypeError("Not enough arguments");
                    },
                    j = h(
                        function (t, e) {
                            M(this, { type: _, iterator: y(P(t).entries), kind: e });
                        },
                        "Iterator",
                        function () {
                            var t = k(this),
                                e = t.kind,
                                i = t.iterator.next(),
                                r = i.value;
                            return i.done || (i.value = "keys" === e ? r.key : "values" === e ? r.value : [r.key, r.value]), i;
                        }
                    ),
                    W = function () {
                        d(this, W, T);
                        var t,
                            e,
                            i,
                            r,
                            s,
                            a,
                            n,
                            o,
                            l,
                            h = arguments.length > 0 ? arguments[0] : void 0,
                            c = [];
                        if ((M(this, { type: T, entries: c, updateURL: function () {}, updateSearchParams: V }), void 0 !== h))
                            if (g(h))
                                if ("function" == typeof (t = w(h)))
                                    for (i = (e = t.call(h)).next; !(r = i.call(e)).done; ) {
                                        if ((n = (a = (s = y(f(r.value))).next).call(s)).done || (o = a.call(s)).done || !a.call(s).done) throw TypeError("Expected sequence with length 2");
                                        c.push({ key: n.value + "", value: o.value + "" });
                                    }
                                else for (l in h) u(h, l) && c.push({ key: l, value: h[l] + "" });
                            else N(c, "string" == typeof h ? ("?" === h.charAt(0) ? h.slice(1) : h) : h + "");
                    },
                    G = W.prototype;
                o(
                    G,
                    {
                        append: function (t, e) {
                            H(arguments.length, 2);
                            var i = P(this);
                            i.entries.push({ key: t + "", value: e + "" }), i.updateURL();
                        },
                        delete: function (t) {
                            H(arguments.length, 1);
                            for (var e = P(this), i = e.entries, r = t + "", s = 0; s < i.length; ) i[s].key === r ? i.splice(s, 1) : s++;
                            e.updateURL();
                        },
                        get: function (t) {
                            H(arguments.length, 1);
                            for (var e = P(this).entries, i = t + "", r = 0; r < e.length; r++) if (e[r].key === i) return e[r].value;
                            return null;
                        },
                        getAll: function (t) {
                            H(arguments.length, 1);
                            for (var e = P(this).entries, i = t + "", r = [], s = 0; s < e.length; s++) e[s].key === i && r.push(e[s].value);
                            return r;
                        },
                        has: function (t) {
                            H(arguments.length, 1);
                            for (var e = P(this).entries, i = t + "", r = 0; r < e.length; ) if (e[r++].key === i) return !0;
                            return !1;
                        },
                        set: function (t, e) {
                            H(arguments.length, 1);
                            for (var i, r = P(this), s = r.entries, a = !1, n = t + "", o = e + "", l = 0; l < s.length; l++) (i = s[l]).key === n && (a ? s.splice(l--, 1) : ((a = !0), (i.value = o)));
                            a || s.push({ key: n, value: o }), r.updateURL();
                        },
                        sort: function () {
                            var t,
                                e,
                                i,
                                r = P(this),
                                s = r.entries,
                                a = s.slice();
                            for (s.length = 0, i = 0; i < a.length; i++) {
                                for (t = a[i], e = 0; e < i; e++)
                                    if (s[e].key > t.key) {
                                        s.splice(e, 0, t);
                                        break;
                                    }
                                e === i && s.push(t);
                            }
                            r.updateURL();
                        },
                        forEach: function (t) {
                            for (var e, i = P(this).entries, r = p(t, arguments.length > 1 ? arguments[1] : void 0, 3), s = 0; s < i.length; ) r((e = i[s++]).value, e.key, this);
                        },
                        keys: function () {
                            return new j(this, "keys");
                        },
                        values: function () {
                            return new j(this, "values");
                        },
                        entries: function () {
                            return new j(this, "entries");
                        },
                    },
                    { enumerable: !0 }
                ),
                    n(G, S, G.entries),
                    n(
                        G,
                        "toString",
                        function () {
                            for (var t, e = P(this).entries, i = [], r = 0; r < e.length; ) (t = e[r++]), i.push(z(t.key) + "=" + z(t.value));
                            return i.join("&");
                        },
                        { enumerable: !0 }
                    ),
                    l(W, T),
                    r({ global: !0, forced: !a }, { URLSearchParams: W }),
                    a ||
                        "function" != typeof E ||
                        "function" != typeof C ||
                        r(
                            { global: !0, enumerable: !0, forced: !0 },
                            {
                                fetch: function (t) {
                                    var e,
                                        i,
                                        r,
                                        s = [t];
                                    return (
                                        arguments.length > 1 &&
                                            (g((e = arguments[1])) &&
                                                ((i = e.body),
                                                m(i) === T &&
                                                    ((r = e.headers ? new C(e.headers) : new C()).has("content-type") || r.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"),
                                                    (e = v(e, { body: b(0, String(i)), headers: b(0, r) })))),
                                            s.push(e)),
                                        E.apply(this, s)
                                    );
                                },
                            }
                        ),
                    (t.exports = { URLSearchParams: W, getState: P });
            },
            76453: (t, e, i) => {
                "use strict";
                i(92129);
                var r,
                    s = i(37263),
                    a = i(18494),
                    n = i(77664),
                    o = i(47583),
                    l = i(28728),
                    h = i(61270),
                    c = i(44761),
                    d = i(34402),
                    u = i(79304),
                    p = i(35513),
                    m = i(96389).codeAt,
                    f = i(58304),
                    g = i(98821),
                    v = i(46549),
                    b = i(42743),
                    y = o.URL,
                    w = v.URLSearchParams,
                    x = v.getState,
                    E = b.set,
                    C = b.getterFor("URL"),
                    S = Math.floor,
                    T = Math.pow,
                    _ = "Invalid scheme",
                    M = "Invalid host",
                    P = "Invalid port",
                    k = /[A-Za-z]/,
                    A = /[\d+-.A-Za-z]/,
                    D = /\d/,
                    L = /^0x/i,
                    I = /^[0-7]+$/,
                    R = /^\d+$/,
                    O = /^[\dA-Fa-f]+$/,
                    F = /[\0\t\n\r #%/:<>?@[\\\]^|]/,
                    B = /[\0\t\n\r #/:<>?@[\\\]^|]/,
                    z = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,
                    N = /[\t\n\r]/g,
                    V = function (t, e) {
                        var i, r, s;
                        if ("[" == e.charAt(0)) {
                            if ("]" != e.charAt(e.length - 1)) return M;
                            if (!(i = j(e.slice(1, -1)))) return M;
                            t.host = i;
                        } else if (K(t)) {
                            if (((e = f(e)), F.test(e))) return M;
                            if (null === (i = H(e))) return M;
                            t.host = i;
                        } else {
                            if (B.test(e)) return M;
                            for (i = "", r = p(e), s = 0; s < r.length; s++) i += Y(r[s], G);
                            t.host = i;
                        }
                    },
                    H = function (t) {
                        var e,
                            i,
                            r,
                            s,
                            a,
                            n,
                            o,
                            l = t.split(".");
                        if ((l.length && "" == l[l.length - 1] && l.pop(), (e = l.length) > 4)) return t;
                        for (i = [], r = 0; r < e; r++) {
                            if ("" == (s = l[r])) return t;
                            if (((a = 10), s.length > 1 && "0" == s.charAt(0) && ((a = L.test(s) ? 16 : 8), (s = s.slice(8 == a ? 1 : 2))), "" === s)) n = 0;
                            else {
                                if (!(10 == a ? R : 8 == a ? I : O).test(s)) return t;
                                n = parseInt(s, a);
                            }
                            i.push(n);
                        }
                        for (r = 0; r < e; r++)
                            if (((n = i[r]), r == e - 1)) {
                                if (n >= T(256, 5 - e)) return null;
                            } else if (n > 255) return null;
                        for (o = i.pop(), r = 0; r < i.length; r++) o += i[r] * T(256, 3 - r);
                        return o;
                    },
                    j = function (t) {
                        var e,
                            i,
                            r,
                            s,
                            a,
                            n,
                            o,
                            l = [0, 0, 0, 0, 0, 0, 0, 0],
                            h = 0,
                            c = null,
                            d = 0,
                            u = function () {
                                return t.charAt(d);
                            };
                        if (":" == u()) {
                            if (":" != t.charAt(1)) return;
                            (d += 2), (c = ++h);
                        }
                        for (; u(); ) {
                            if (8 == h) return;
                            if (":" != u()) {
                                for (e = i = 0; i < 4 && O.test(u()); ) (e = 16 * e + parseInt(u(), 16)), d++, i++;
                                if ("." == u()) {
                                    if (0 == i) return;
                                    if (((d -= i), h > 6)) return;
                                    for (r = 0; u(); ) {
                                        if (((s = null), r > 0)) {
                                            if (!("." == u() && r < 4)) return;
                                            d++;
                                        }
                                        if (!D.test(u())) return;
                                        for (; D.test(u()); ) {
                                            if (((a = parseInt(u(), 10)), null === s)) s = a;
                                            else {
                                                if (0 == s) return;
                                                s = 10 * s + a;
                                            }
                                            if (s > 255) return;
                                            d++;
                                        }
                                        (l[h] = 256 * l[h] + s), (2 != ++r && 4 != r) || h++;
                                    }
                                    if (4 != r) return;
                                    break;
                                }
                                if (":" == u()) {
                                    if ((d++, !u())) return;
                                } else if (u()) return;
                                l[h++] = e;
                            } else {
                                if (null !== c) return;
                                d++, (c = ++h);
                            }
                        }
                        if (null !== c) for (n = h - c, h = 7; 0 != h && n > 0; ) (o = l[h]), (l[h--] = l[c + n - 1]), (l[c + --n] = o);
                        else if (8 != h) return;
                        return l;
                    },
                    W = function (t) {
                        var e, i, r, s;
                        if ("number" == typeof t) {
                            for (e = [], i = 0; i < 4; i++) e.unshift(t % 256), (t = S(t / 256));
                            return e.join(".");
                        }
                        if ("object" == typeof t) {
                            for (
                                e = "",
                                    r = (function (t) {
                                        for (var e = null, i = 1, r = null, s = 0, a = 0; a < 8; a++) 0 !== t[a] ? (s > i && ((e = r), (i = s)), (r = null), (s = 0)) : (null === r && (r = a), ++s);
                                        return s > i && ((e = r), (i = s)), e;
                                    })(t),
                                    i = 0;
                                i < 8;
                                i++
                            )
                                (s && 0 === t[i]) || (s && (s = !1), r === i ? ((e += i ? ":" : "::"), (s = !0)) : ((e += t[i].toString(16)), i < 7 && (e += ":")));
                            return "[" + e + "]";
                        }
                        return t;
                    },
                    G = {},
                    q = u({}, G, { " ": 1, '"': 1, "<": 1, ">": 1, "`": 1 }),
                    $ = u({}, q, { "#": 1, "?": 1, "{": 1, "}": 1 }),
                    U = u({}, $, { "/": 1, ":": 1, ";": 1, "=": 1, "@": 1, "[": 1, "\\": 1, "]": 1, "^": 1, "|": 1 }),
                    Y = function (t, e) {
                        var i = m(t, 0);
                        return i > 32 && i < 127 && !d(e, t) ? t : encodeURIComponent(t);
                    },
                    X = { ftp: 21, file: null, http: 80, https: 443, ws: 80, wss: 443 },
                    K = function (t) {
                        return d(X, t.scheme);
                    },
                    Z = function (t) {
                        return "" != t.username || "" != t.password;
                    },
                    J = function (t) {
                        return !t.host || t.cannotBeABaseURL || "file" == t.scheme;
                    },
                    Q = function (t, e) {
                        var i;
                        return 2 == t.length && k.test(t.charAt(0)) && (":" == (i = t.charAt(1)) || (!e && "|" == i));
                    },
                    tt = function (t) {
                        var e;
                        return t.length > 1 && Q(t.slice(0, 2)) && (2 == t.length || "/" === (e = t.charAt(2)) || "\\" === e || "?" === e || "#" === e);
                    },
                    et = function (t) {
                        var e = t.path,
                            i = e.length;
                        !i || ("file" == t.scheme && 1 == i && Q(e[0], !0)) || e.pop();
                    },
                    it = function (t) {
                        return "." === t || "%2e" === t.toLowerCase();
                    },
                    rt = {},
                    st = {},
                    at = {},
                    nt = {},
                    ot = {},
                    lt = {},
                    ht = {},
                    ct = {},
                    dt = {},
                    ut = {},
                    pt = {},
                    mt = {},
                    ft = {},
                    gt = {},
                    vt = {},
                    bt = {},
                    yt = {},
                    wt = {},
                    xt = {},
                    Et = {},
                    Ct = {},
                    St = function (t, e, i, s) {
                        var a,
                            n,
                            o,
                            l,
                            h,
                            c = i || rt,
                            u = 0,
                            m = "",
                            f = !1,
                            g = !1,
                            v = !1;
                        for (
                            i || ((t.scheme = ""), (t.username = ""), (t.password = ""), (t.host = null), (t.port = null), (t.path = []), (t.query = null), (t.fragment = null), (t.cannotBeABaseURL = !1), (e = e.replace(z, ""))),
                                e = e.replace(N, ""),
                                a = p(e);
                            u <= a.length;

                        ) {
                            switch (((n = a[u]), c)) {
                                case rt:
                                    if (!n || !k.test(n)) {
                                        if (i) return _;
                                        c = at;
                                        continue;
                                    }
                                    (m += n.toLowerCase()), (c = st);
                                    break;
                                case st:
                                    if (n && (A.test(n) || "+" == n || "-" == n || "." == n)) m += n.toLowerCase();
                                    else {
                                        if (":" != n) {
                                            if (i) return _;
                                            (m = ""), (c = at), (u = 0);
                                            continue;
                                        }
                                        if (i && (K(t) != d(X, m) || ("file" == m && (Z(t) || null !== t.port)) || ("file" == t.scheme && !t.host))) return;
                                        if (((t.scheme = m), i)) return void (K(t) && X[t.scheme] == t.port && (t.port = null));
                                        (m = ""), "file" == t.scheme ? (c = gt) : K(t) && s && s.scheme == t.scheme ? (c = nt) : K(t) ? (c = ct) : "/" == a[u + 1] ? ((c = ot), u++) : ((t.cannotBeABaseURL = !0), t.path.push(""), (c = xt));
                                    }
                                    break;
                                case at:
                                    if (!s || (s.cannotBeABaseURL && "#" != n)) return _;
                                    if (s.cannotBeABaseURL && "#" == n) {
                                        (t.scheme = s.scheme), (t.path = s.path.slice()), (t.query = s.query), (t.fragment = ""), (t.cannotBeABaseURL = !0), (c = Ct);
                                        break;
                                    }
                                    c = "file" == s.scheme ? gt : lt;
                                    continue;
                                case nt:
                                    if ("/" != n || "/" != a[u + 1]) {
                                        c = lt;
                                        continue;
                                    }
                                    (c = dt), u++;
                                    break;
                                case ot:
                                    if ("/" == n) {
                                        c = ut;
                                        break;
                                    }
                                    c = wt;
                                    continue;
                                case lt:
                                    if (((t.scheme = s.scheme), n == r)) (t.username = s.username), (t.password = s.password), (t.host = s.host), (t.port = s.port), (t.path = s.path.slice()), (t.query = s.query);
                                    else if ("/" == n || ("\\" == n && K(t))) c = ht;
                                    else if ("?" == n) (t.username = s.username), (t.password = s.password), (t.host = s.host), (t.port = s.port), (t.path = s.path.slice()), (t.query = ""), (c = Et);
                                    else {
                                        if ("#" != n) {
                                            (t.username = s.username), (t.password = s.password), (t.host = s.host), (t.port = s.port), (t.path = s.path.slice()), t.path.pop(), (c = wt);
                                            continue;
                                        }
                                        (t.username = s.username), (t.password = s.password), (t.host = s.host), (t.port = s.port), (t.path = s.path.slice()), (t.query = s.query), (t.fragment = ""), (c = Ct);
                                    }
                                    break;
                                case ht:
                                    if (!K(t) || ("/" != n && "\\" != n)) {
                                        if ("/" != n) {
                                            (t.username = s.username), (t.password = s.password), (t.host = s.host), (t.port = s.port), (c = wt);
                                            continue;
                                        }
                                        c = ut;
                                    } else c = dt;
                                    break;
                                case ct:
                                    if (((c = dt), "/" != n || "/" != m.charAt(u + 1))) continue;
                                    u++;
                                    break;
                                case dt:
                                    if ("/" != n && "\\" != n) {
                                        c = ut;
                                        continue;
                                    }
                                    break;
                                case ut:
                                    if ("@" == n) {
                                        f && (m = "%40" + m), (f = !0), (o = p(m));
                                        for (var b = 0; b < o.length; b++) {
                                            var y = o[b];
                                            if (":" != y || v) {
                                                var w = Y(y, U);
                                                v ? (t.password += w) : (t.username += w);
                                            } else v = !0;
                                        }
                                        m = "";
                                    } else if (n == r || "/" == n || "?" == n || "#" == n || ("\\" == n && K(t))) {
                                        if (f && "" == m) return "Invalid authority";
                                        (u -= p(m).length + 1), (m = ""), (c = pt);
                                    } else m += n;
                                    break;
                                case pt:
                                case mt:
                                    if (i && "file" == t.scheme) {
                                        c = bt;
                                        continue;
                                    }
                                    if (":" != n || g) {
                                        if (n == r || "/" == n || "?" == n || "#" == n || ("\\" == n && K(t))) {
                                            if (K(t) && "" == m) return M;
                                            if (i && "" == m && (Z(t) || null !== t.port)) return;
                                            if ((l = V(t, m))) return l;
                                            if (((m = ""), (c = yt), i)) return;
                                            continue;
                                        }
                                        "[" == n ? (g = !0) : "]" == n && (g = !1), (m += n);
                                    } else {
                                        if ("" == m) return M;
                                        if ((l = V(t, m))) return l;
                                        if (((m = ""), (c = ft), i == mt)) return;
                                    }
                                    break;
                                case ft:
                                    if (!D.test(n)) {
                                        if (n == r || "/" == n || "?" == n || "#" == n || ("\\" == n && K(t)) || i) {
                                            if ("" != m) {
                                                var x = parseInt(m, 10);
                                                if (x > 65535) return P;
                                                (t.port = K(t) && x === X[t.scheme] ? null : x), (m = "");
                                            }
                                            if (i) return;
                                            c = yt;
                                            continue;
                                        }
                                        return P;
                                    }
                                    m += n;
                                    break;
                                case gt:
                                    if (((t.scheme = "file"), "/" == n || "\\" == n)) c = vt;
                                    else {
                                        if (!s || "file" != s.scheme) {
                                            c = wt;
                                            continue;
                                        }
                                        if (n == r) (t.host = s.host), (t.path = s.path.slice()), (t.query = s.query);
                                        else if ("?" == n) (t.host = s.host), (t.path = s.path.slice()), (t.query = ""), (c = Et);
                                        else {
                                            if ("#" != n) {
                                                tt(a.slice(u).join("")) || ((t.host = s.host), (t.path = s.path.slice()), et(t)), (c = wt);
                                                continue;
                                            }
                                            (t.host = s.host), (t.path = s.path.slice()), (t.query = s.query), (t.fragment = ""), (c = Ct);
                                        }
                                    }
                                    break;
                                case vt:
                                    if ("/" == n || "\\" == n) {
                                        c = bt;
                                        break;
                                    }
                                    s && "file" == s.scheme && !tt(a.slice(u).join("")) && (Q(s.path[0], !0) ? t.path.push(s.path[0]) : (t.host = s.host)), (c = wt);
                                    continue;
                                case bt:
                                    if (n == r || "/" == n || "\\" == n || "?" == n || "#" == n) {
                                        if (!i && Q(m)) c = wt;
                                        else if ("" == m) {
                                            if (((t.host = ""), i)) return;
                                            c = yt;
                                        } else {
                                            if ((l = V(t, m))) return l;
                                            if (("localhost" == t.host && (t.host = ""), i)) return;
                                            (m = ""), (c = yt);
                                        }
                                        continue;
                                    }
                                    m += n;
                                    break;
                                case yt:
                                    if (K(t)) {
                                        if (((c = wt), "/" != n && "\\" != n)) continue;
                                    } else if (i || "?" != n)
                                        if (i || "#" != n) {
                                            if (n != r && ((c = wt), "/" != n)) continue;
                                        } else (t.fragment = ""), (c = Ct);
                                    else (t.query = ""), (c = Et);
                                    break;
                                case wt:
                                    if (n == r || "/" == n || ("\\" == n && K(t)) || (!i && ("?" == n || "#" == n))) {
                                        if (
                                            (".." === (h = (h = m).toLowerCase()) || "%2e." === h || ".%2e" === h || "%2e%2e" === h
                                                ? (et(t), "/" == n || ("\\" == n && K(t)) || t.path.push(""))
                                                : it(m)
                                                ? "/" == n || ("\\" == n && K(t)) || t.path.push("")
                                                : ("file" == t.scheme && !t.path.length && Q(m) && (t.host && (t.host = ""), (m = m.charAt(0) + ":")), t.path.push(m)),
                                            (m = ""),
                                            "file" == t.scheme && (n == r || "?" == n || "#" == n))
                                        )
                                            for (; t.path.length > 1 && "" === t.path[0]; ) t.path.shift();
                                        "?" == n ? ((t.query = ""), (c = Et)) : "#" == n && ((t.fragment = ""), (c = Ct));
                                    } else m += Y(n, $);
                                    break;
                                case xt:
                                    "?" == n ? ((t.query = ""), (c = Et)) : "#" == n ? ((t.fragment = ""), (c = Ct)) : n != r && (t.path[0] += Y(n, G));
                                    break;
                                case Et:
                                    i || "#" != n ? n != r && ("'" == n && K(t) ? (t.query += "%27") : (t.query += "#" == n ? "%23" : Y(n, G))) : ((t.fragment = ""), (c = Ct));
                                    break;
                                case Ct:
                                    n != r && (t.fragment += Y(n, q));
                            }
                            u++;
                        }
                    },
                    Tt = function (t) {
                        var e,
                            i,
                            r = c(this, Tt, "URL"),
                            s = arguments.length > 1 ? arguments[1] : void 0,
                            n = String(t),
                            o = E(r, { type: "URL" });
                        if (void 0 !== s)
                            if (s instanceof Tt) e = C(s);
                            else if ((i = St((e = {}), String(s)))) throw TypeError(i);
                        if ((i = St(o, n, null, e))) throw TypeError(i);
                        var l = (o.searchParams = new w()),
                            h = x(l);
                        h.updateSearchParams(o.query),
                            (h.updateURL = function () {
                                o.query = String(l) || null;
                            }),
                            a ||
                                ((r.href = Mt.call(r)),
                                (r.origin = Pt.call(r)),
                                (r.protocol = kt.call(r)),
                                (r.username = At.call(r)),
                                (r.password = Dt.call(r)),
                                (r.host = Lt.call(r)),
                                (r.hostname = It.call(r)),
                                (r.port = Rt.call(r)),
                                (r.pathname = Ot.call(r)),
                                (r.search = Ft.call(r)),
                                (r.searchParams = Bt.call(r)),
                                (r.hash = zt.call(r)));
                    },
                    _t = Tt.prototype,
                    Mt = function () {
                        var t = C(this),
                            e = t.scheme,
                            i = t.username,
                            r = t.password,
                            s = t.host,
                            a = t.port,
                            n = t.path,
                            o = t.query,
                            l = t.fragment,
                            h = e + ":";
                        return (
                            null !== s ? ((h += "//"), Z(t) && (h += i + (r ? ":" + r : "") + "@"), (h += W(s)), null !== a && (h += ":" + a)) : "file" == e && (h += "//"),
                            (h += t.cannotBeABaseURL ? n[0] : n.length ? "/" + n.join("/") : ""),
                            null !== o && (h += "?" + o),
                            null !== l && (h += "#" + l),
                            h
                        );
                    },
                    Pt = function () {
                        var t = C(this),
                            e = t.scheme,
                            i = t.port;
                        if ("blob" == e)
                            try {
                                return new Tt(e.path[0]).origin;
                            } catch (t) {
                                return "null";
                            }
                        return "file" != e && K(t) ? e + "://" + W(t.host) + (null !== i ? ":" + i : "") : "null";
                    },
                    kt = function () {
                        return C(this).scheme + ":";
                    },
                    At = function () {
                        return C(this).username;
                    },
                    Dt = function () {
                        return C(this).password;
                    },
                    Lt = function () {
                        var t = C(this),
                            e = t.host,
                            i = t.port;
                        return null === e ? "" : null === i ? W(e) : W(e) + ":" + i;
                    },
                    It = function () {
                        var t = C(this).host;
                        return null === t ? "" : W(t);
                    },
                    Rt = function () {
                        var t = C(this).port;
                        return null === t ? "" : String(t);
                    },
                    Ot = function () {
                        var t = C(this),
                            e = t.path;
                        return t.cannotBeABaseURL ? e[0] : e.length ? "/" + e.join("/") : "";
                    },
                    Ft = function () {
                        var t = C(this).query;
                        return t ? "?" + t : "";
                    },
                    Bt = function () {
                        return C(this).searchParams;
                    },
                    zt = function () {
                        var t = C(this).fragment;
                        return t ? "#" + t : "";
                    },
                    Nt = function (t, e) {
                        return { get: t, set: e, configurable: !0, enumerable: !0 };
                    };
                if (
                    (a &&
                        l(_t, {
                            href: Nt(Mt, function (t) {
                                var e = C(this),
                                    i = String(t),
                                    r = St(e, i);
                                if (r) throw TypeError(r);
                                x(e.searchParams).updateSearchParams(e.query);
                            }),
                            origin: Nt(Pt),
                            protocol: Nt(kt, function (t) {
                                var e = C(this);
                                St(e, String(t) + ":", rt);
                            }),
                            username: Nt(At, function (t) {
                                var e = C(this),
                                    i = p(String(t));
                                if (!J(e)) {
                                    e.username = "";
                                    for (var r = 0; r < i.length; r++) e.username += Y(i[r], U);
                                }
                            }),
                            password: Nt(Dt, function (t) {
                                var e = C(this),
                                    i = p(String(t));
                                if (!J(e)) {
                                    e.password = "";
                                    for (var r = 0; r < i.length; r++) e.password += Y(i[r], U);
                                }
                            }),
                            host: Nt(Lt, function (t) {
                                var e = C(this);
                                e.cannotBeABaseURL || St(e, String(t), pt);
                            }),
                            hostname: Nt(It, function (t) {
                                var e = C(this);
                                e.cannotBeABaseURL || St(e, String(t), mt);
                            }),
                            port: Nt(Rt, function (t) {
                                var e = C(this);
                                J(e) || ("" == (t = String(t)) ? (e.port = null) : St(e, t, ft));
                            }),
                            pathname: Nt(Ot, function (t) {
                                var e = C(this);
                                e.cannotBeABaseURL || ((e.path = []), St(e, t + "", yt));
                            }),
                            search: Nt(Ft, function (t) {
                                var e = C(this);
                                "" == (t = String(t)) ? (e.query = null) : ("?" == t.charAt(0) && (t = t.slice(1)), (e.query = ""), St(e, t, Et)), x(e.searchParams).updateSearchParams(e.query);
                            }),
                            searchParams: Nt(Bt),
                            hash: Nt(zt, function (t) {
                                var e = C(this);
                                "" != (t = String(t)) ? ("#" == t.charAt(0) && (t = t.slice(1)), (e.fragment = ""), St(e, t, Ct)) : (e.fragment = null);
                            }),
                        }),
                    h(
                        _t,
                        "toJSON",
                        function () {
                            return Mt.call(this);
                        },
                        { enumerable: !0 }
                    ),
                    h(
                        _t,
                        "toString",
                        function () {
                            return Mt.call(this);
                        },
                        { enumerable: !0 }
                    ),
                    y)
                ) {
                    var Vt = y.createObjectURL,
                        Ht = y.revokeObjectURL;
                    Vt &&
                        h(Tt, "createObjectURL", function (t) {
                            return Vt.apply(y, arguments);
                        }),
                        Ht &&
                            h(Tt, "revokeObjectURL", function (t) {
                                return Ht.apply(y, arguments);
                            });
                }
                g(Tt, "URL"), s({ global: !0, forced: !n, sham: !a }, { URL: Tt });
            },
            58138: (t, e, i) => {
                "use strict";
                i(37263)(
                    { target: "URL", proto: !0, enumerable: !0 },
                    {
                        toJSON: function () {
                            return URL.prototype.toString.call(this);
                        },
                    }
                );
            },
            5421: function (module, exports, __webpack_require__) {
                var factory;
                "undefined" != typeof navigator &&
                    ((factory = function () {
                        "use strict";
                        var svgNS = "http://www.w3.org/2000/svg",
                            locationHref = "",
                            _useWebWorker = !1,
                            initialDefaultFrame = -999999,
                            setWebWorker = function (t) {
                                _useWebWorker = !!t;
                            },
                            getWebWorker = function () {
                                return _useWebWorker;
                            },
                            setLocationHref = function (t) {
                                locationHref = t;
                            },
                            getLocationHref = function () {
                                return locationHref;
                            };
                        function createTag(t) {
                            return document.createElement(t);
                        }
                        function extendPrototype(t, e) {
                            var i,
                                r,
                                s = t.length;
                            for (i = 0; i < s; i += 1) for (var a in (r = t[i].prototype)) Object.prototype.hasOwnProperty.call(r, a) && (e.prototype[a] = r[a]);
                        }
                        function getDescriptor(t, e) {
                            return Object.getOwnPropertyDescriptor(t, e);
                        }
                        function createProxyFunction(t) {
                            function e() {}
                            return (e.prototype = t), e;
                        }
                        var audioControllerFactory = (function () {
                                function t(t) {
                                    (this.audios = []), (this.audioFactory = t), (this._volume = 1), (this._isMuted = !1);
                                }
                                return (
                                    (t.prototype = {
                                        addAudio: function (t) {
                                            this.audios.push(t);
                                        },
                                        pause: function () {
                                            var t,
                                                e = this.audios.length;
                                            for (t = 0; t < e; t += 1) this.audios[t].pause();
                                        },
                                        resume: function () {
                                            var t,
                                                e = this.audios.length;
                                            for (t = 0; t < e; t += 1) this.audios[t].resume();
                                        },
                                        setRate: function (t) {
                                            var e,
                                                i = this.audios.length;
                                            for (e = 0; e < i; e += 1) this.audios[e].setRate(t);
                                        },
                                        createAudio: function (t) {
                                            return this.audioFactory
                                                ? this.audioFactory(t)
                                                : window.Howl
                                                ? new window.Howl({ src: [t] })
                                                : {
                                                      isPlaying: !1,
                                                      play: function () {
                                                          this.isPlaying = !0;
                                                      },
                                                      seek: function () {
                                                          this.isPlaying = !1;
                                                      },
                                                      playing: function () {},
                                                      rate: function () {},
                                                      setVolume: function () {},
                                                  };
                                        },
                                        setAudioFactory: function (t) {
                                            this.audioFactory = t;
                                        },
                                        setVolume: function (t) {
                                            (this._volume = t), this._updateVolume();
                                        },
                                        mute: function () {
                                            (this._isMuted = !0), this._updateVolume();
                                        },
                                        unmute: function () {
                                            (this._isMuted = !1), this._updateVolume();
                                        },
                                        getVolume: function () {
                                            return this._volume;
                                        },
                                        _updateVolume: function () {
                                            var t,
                                                e = this.audios.length;
                                            for (t = 0; t < e; t += 1) this.audios[t].volume(this._volume * (this._isMuted ? 0 : 1));
                                        },
                                    }),
                                    function () {
                                        return new t();
                                    }
                                );
                            })(),
                            createTypedArray = (function () {
                                function t(t, e) {
                                    var i,
                                        r = 0,
                                        s = [];
                                    switch (t) {
                                        case "int16":
                                        case "uint8c":
                                            i = 1;
                                            break;
                                        default:
                                            i = 1.1;
                                    }
                                    for (r = 0; r < e; r += 1) s.push(i);
                                    return s;
                                }
                                return "function" == typeof Uint8ClampedArray && "function" == typeof Float32Array
                                    ? function (e, i) {
                                          return "float32" === e ? new Float32Array(i) : "int16" === e ? new Int16Array(i) : "uint8c" === e ? new Uint8ClampedArray(i) : t(e, i);
                                      }
                                    : t;
                            })();
                        function createSizedArray(t) {
                            return Array.apply(null, { length: t });
                        }
                        function _typeof$6(t) {
                            return (
                                (_typeof$6 =
                                    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                        ? function (t) {
                                              return typeof t;
                                          }
                                        : function (t) {
                                              return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                          }),
                                _typeof$6(t)
                            );
                        }
                        var subframeEnabled = !0,
                            expressionsPlugin = null,
                            expressionsInterfaces = null,
                            idPrefix$1 = "",
                            isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent),
                            _shouldRoundValues = !1,
                            bmPow = Math.pow,
                            bmSqrt = Math.sqrt,
                            bmFloor = Math.floor,
                            bmMax = Math.max,
                            bmMin = Math.min,
                            BMMath = {};
                        function ProjectInterface$1() {
                            return {};
                        }
                        !(function () {
                            var t,
                                e = [
                                    "abs",
                                    "acos",
                                    "acosh",
                                    "asin",
                                    "asinh",
                                    "atan",
                                    "atanh",
                                    "atan2",
                                    "ceil",
                                    "cbrt",
                                    "expm1",
                                    "clz32",
                                    "cos",
                                    "cosh",
                                    "exp",
                                    "floor",
                                    "fround",
                                    "hypot",
                                    "imul",
                                    "log",
                                    "log1p",
                                    "log2",
                                    "log10",
                                    "max",
                                    "min",
                                    "pow",
                                    "random",
                                    "round",
                                    "sign",
                                    "sin",
                                    "sinh",
                                    "sqrt",
                                    "tan",
                                    "tanh",
                                    "trunc",
                                    "E",
                                    "LN10",
                                    "LN2",
                                    "LOG10E",
                                    "LOG2E",
                                    "PI",
                                    "SQRT1_2",
                                    "SQRT2",
                                ],
                                i = e.length;
                            for (t = 0; t < i; t += 1) BMMath[e[t]] = Math[e[t]];
                        })(),
                            (BMMath.random = Math.random),
                            (BMMath.abs = function (t) {
                                if ("object" === _typeof$6(t) && t.length) {
                                    var e,
                                        i = createSizedArray(t.length),
                                        r = t.length;
                                    for (e = 0; e < r; e += 1) i[e] = Math.abs(t[e]);
                                    return i;
                                }
                                return Math.abs(t);
                            });
                        var defaultCurveSegments = 150,
                            degToRads = Math.PI / 180,
                            roundCorner = 0.5519;
                        function roundValues(t) {
                            _shouldRoundValues = !!t;
                        }
                        function bmRnd(t) {
                            return _shouldRoundValues ? Math.round(t) : t;
                        }
                        function styleDiv(t) {
                            (t.style.position = "absolute"),
                                (t.style.top = 0),
                                (t.style.left = 0),
                                (t.style.display = "block"),
                                (t.style.transformOrigin = "0 0"),
                                (t.style.webkitTransformOrigin = "0 0"),
                                (t.style.backfaceVisibility = "visible"),
                                (t.style.webkitBackfaceVisibility = "visible"),
                                (t.style.transformStyle = "preserve-3d"),
                                (t.style.webkitTransformStyle = "preserve-3d"),
                                (t.style.mozTransformStyle = "preserve-3d");
                        }
                        function BMEnterFrameEvent(t, e, i, r) {
                            (this.type = t), (this.currentTime = e), (this.totalTime = i), (this.direction = r < 0 ? -1 : 1);
                        }
                        function BMCompleteEvent(t, e) {
                            (this.type = t), (this.direction = e < 0 ? -1 : 1);
                        }
                        function BMCompleteLoopEvent(t, e, i, r) {
                            (this.type = t), (this.currentLoop = i), (this.totalLoops = e), (this.direction = r < 0 ? -1 : 1);
                        }
                        function BMSegmentStartEvent(t, e, i) {
                            (this.type = t), (this.firstFrame = e), (this.totalFrames = i);
                        }
                        function BMDestroyEvent(t, e) {
                            (this.type = t), (this.target = e);
                        }
                        function BMRenderFrameErrorEvent(t, e) {
                            (this.type = "renderFrameError"), (this.nativeError = t), (this.currentTime = e);
                        }
                        function BMConfigErrorEvent(t) {
                            (this.type = "configError"), (this.nativeError = t);
                        }
                        function BMAnimationConfigErrorEvent(t, e) {
                            (this.type = t), (this.nativeError = e);
                        }
                        var createElementID =
                                ((_count = 0),
                                function () {
                                    return idPrefix$1 + "__lottie_element_" + (_count += 1);
                                }),
                            _count;
                        function HSVtoRGB(t, e, i) {
                            var r, s, a, n, o, l, h, c;
                            switch (((l = i * (1 - e)), (h = i * (1 - (o = 6 * t - (n = Math.floor(6 * t))) * e)), (c = i * (1 - (1 - o) * e)), n % 6)) {
                                case 0:
                                    (r = i), (s = c), (a = l);
                                    break;
                                case 1:
                                    (r = h), (s = i), (a = l);
                                    break;
                                case 2:
                                    (r = l), (s = i), (a = c);
                                    break;
                                case 3:
                                    (r = l), (s = h), (a = i);
                                    break;
                                case 4:
                                    (r = c), (s = l), (a = i);
                                    break;
                                case 5:
                                    (r = i), (s = l), (a = h);
                            }
                            return [r, s, a];
                        }
                        function RGBtoHSV(t, e, i) {
                            var r,
                                s = Math.max(t, e, i),
                                a = Math.min(t, e, i),
                                n = s - a,
                                o = 0 === s ? 0 : n / s,
                                l = s / 255;
                            switch (s) {
                                case a:
                                    r = 0;
                                    break;
                                case t:
                                    (r = e - i + n * (e < i ? 6 : 0)), (r /= 6 * n);
                                    break;
                                case e:
                                    (r = i - t + 2 * n), (r /= 6 * n);
                                    break;
                                case i:
                                    (r = t - e + 4 * n), (r /= 6 * n);
                            }
                            return [r, o, l];
                        }
                        function addSaturationToRGB(t, e) {
                            var i = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
                            return (i[1] += e), i[1] > 1 ? (i[1] = 1) : i[1] <= 0 && (i[1] = 0), HSVtoRGB(i[0], i[1], i[2]);
                        }
                        function addBrightnessToRGB(t, e) {
                            var i = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
                            return (i[2] += e), i[2] > 1 ? (i[2] = 1) : i[2] < 0 && (i[2] = 0), HSVtoRGB(i[0], i[1], i[2]);
                        }
                        function addHueToRGB(t, e) {
                            var i = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
                            return (i[0] += e / 360), i[0] > 1 ? (i[0] -= 1) : i[0] < 0 && (i[0] += 1), HSVtoRGB(i[0], i[1], i[2]);
                        }
                        var rgbToHex = (function () {
                                var t,
                                    e,
                                    i = [];
                                for (t = 0; t < 256; t += 1) (e = t.toString(16)), (i[t] = 1 === e.length ? "0" + e : e);
                                return function (t, e, r) {
                                    return t < 0 && (t = 0), e < 0 && (e = 0), r < 0 && (r = 0), "#" + i[t] + i[e] + i[r];
                                };
                            })(),
                            setSubframeEnabled = function (t) {
                                subframeEnabled = !!t;
                            },
                            getSubframeEnabled = function () {
                                return subframeEnabled;
                            },
                            setExpressionsPlugin = function (t) {
                                expressionsPlugin = t;
                            },
                            getExpressionsPlugin = function () {
                                return expressionsPlugin;
                            },
                            setExpressionInterfaces = function (t) {
                                expressionsInterfaces = t;
                            },
                            getExpressionInterfaces = function () {
                                return expressionsInterfaces;
                            },
                            setDefaultCurveSegments = function (t) {
                                defaultCurveSegments = t;
                            },
                            getDefaultCurveSegments = function () {
                                return defaultCurveSegments;
                            },
                            setIdPrefix = function (t) {
                                idPrefix$1 = t;
                            },
                            getIdPrefix = function () {
                                return idPrefix$1;
                            };
                        function createNS(t) {
                            return document.createElementNS(svgNS, t);
                        }
                        function _typeof$5(t) {
                            return (
                                (_typeof$5 =
                                    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                        ? function (t) {
                                              return typeof t;
                                          }
                                        : function (t) {
                                              return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                          }),
                                _typeof$5(t)
                            );
                        }
                        var dataManager = (function () {
                                var t,
                                    e,
                                    i = 1,
                                    r = [],
                                    s = {
                                        onmessage: function () {},
                                        postMessage: function (e) {
                                            t({ data: e });
                                        },
                                    },
                                    a = {
                                        postMessage: function (t) {
                                            s.onmessage({ data: t });
                                        },
                                    };
                                function n() {
                                    e ||
                                        ((e = (function (e) {
                                            if (window.Worker && window.Blob && getWebWorker()) {
                                                var i = new Blob(["var _workerSelf = self; self.onmessage = ", e.toString()], { type: "text/javascript" }),
                                                    r = URL.createObjectURL(i);
                                                return new Worker(r);
                                            }
                                            return (t = e), s;
                                        })(function (t) {
                                            if (
                                                (a.dataManager ||
                                                    (a.dataManager = (function () {
                                                        function t(s, a) {
                                                            var n,
                                                                o,
                                                                l,
                                                                h,
                                                                c,
                                                                u,
                                                                p = s.length;
                                                            for (o = 0; o < p; o += 1)
                                                                if ("ks" in (n = s[o]) && !n.completed) {
                                                                    if (((n.completed = !0), n.hasMask)) {
                                                                        var m = n.masksProperties;
                                                                        for (h = m.length, l = 0; l < h; l += 1)
                                                                            if (m[l].pt.k.i) r(m[l].pt.k);
                                                                            else for (u = m[l].pt.k.length, c = 0; c < u; c += 1) m[l].pt.k[c].s && r(m[l].pt.k[c].s[0]), m[l].pt.k[c].e && r(m[l].pt.k[c].e[0]);
                                                                    }
                                                                    0 === n.ty ? ((n.layers = e(n.refId, a)), t(n.layers, a)) : 4 === n.ty ? i(n.shapes) : 5 === n.ty && d(n);
                                                                }
                                                        }
                                                        function e(t, e) {
                                                            var i = (function (t, e) {
                                                                for (var i = 0, r = e.length; i < r; ) {
                                                                    if (e[i].id === t) return e[i];
                                                                    i += 1;
                                                                }
                                                                return null;
                                                            })(t, e);
                                                            return i ? (i.layers.__used ? JSON.parse(JSON.stringify(i.layers)) : ((i.layers.__used = !0), i.layers)) : null;
                                                        }
                                                        function i(t) {
                                                            var e, s, a;
                                                            for (e = t.length - 1; e >= 0; e -= 1)
                                                                if ("sh" === t[e].ty)
                                                                    if (t[e].ks.k.i) r(t[e].ks.k);
                                                                    else for (a = t[e].ks.k.length, s = 0; s < a; s += 1) t[e].ks.k[s].s && r(t[e].ks.k[s].s[0]), t[e].ks.k[s].e && r(t[e].ks.k[s].e[0]);
                                                                else "gr" === t[e].ty && i(t[e].it);
                                                        }
                                                        function r(t) {
                                                            var e,
                                                                i = t.i.length;
                                                            for (e = 0; e < i; e += 1) (t.i[e][0] += t.v[e][0]), (t.i[e][1] += t.v[e][1]), (t.o[e][0] += t.v[e][0]), (t.o[e][1] += t.v[e][1]);
                                                        }
                                                        function s(t, e) {
                                                            var i = e ? e.split(".") : [100, 100, 100];
                                                            return t[0] > i[0] || (!(i[0] > t[0]) && (t[1] > i[1] || (!(i[1] > t[1]) && (t[2] > i[2] || (!(i[2] > t[2]) && null)))));
                                                        }
                                                        var a,
                                                            n = (function () {
                                                                var t = [4, 4, 14];
                                                                function e(t) {
                                                                    var e,
                                                                        i,
                                                                        r,
                                                                        s = t.length;
                                                                    for (e = 0; e < s; e += 1) 5 === t[e].ty && ((r = void 0), (r = (i = t[e]).t.d), (i.t.d = { k: [{ s: r, t: 0 }] }));
                                                                }
                                                                return function (i) {
                                                                    if (s(t, i.v) && (e(i.layers), i.assets)) {
                                                                        var r,
                                                                            a = i.assets.length;
                                                                        for (r = 0; r < a; r += 1) i.assets[r].layers && e(i.assets[r].layers);
                                                                    }
                                                                };
                                                            })(),
                                                            o =
                                                                ((a = [4, 7, 99]),
                                                                function (t) {
                                                                    if (t.chars && !s(a, t.v)) {
                                                                        var e,
                                                                            r = t.chars.length;
                                                                        for (e = 0; e < r; e += 1) {
                                                                            var n = t.chars[e];
                                                                            n.data &&
                                                                                n.data.shapes &&
                                                                                (i(n.data.shapes),
                                                                                (n.data.ip = 0),
                                                                                (n.data.op = 99999),
                                                                                (n.data.st = 0),
                                                                                (n.data.sr = 1),
                                                                                (n.data.ks = { p: { k: [0, 0], a: 0 }, s: { k: [100, 100], a: 0 }, a: { k: [0, 0], a: 0 }, r: { k: 0, a: 0 }, o: { k: 100, a: 0 } }),
                                                                                t.chars[e].t ||
                                                                                    (n.data.shapes.push({ ty: "no" }),
                                                                                    n.data.shapes[0].it.push({
                                                                                        p: { k: [0, 0], a: 0 },
                                                                                        s: { k: [100, 100], a: 0 },
                                                                                        a: { k: [0, 0], a: 0 },
                                                                                        r: { k: 0, a: 0 },
                                                                                        o: { k: 100, a: 0 },
                                                                                        sk: { k: 0, a: 0 },
                                                                                        sa: { k: 0, a: 0 },
                                                                                        ty: "tr",
                                                                                    })));
                                                                        }
                                                                    }
                                                                }),
                                                            l = (function () {
                                                                var t = [5, 7, 15];
                                                                function e(t) {
                                                                    var e,
                                                                        i,
                                                                        r = t.length;
                                                                    for (e = 0; e < r; e += 1)
                                                                        5 === t[e].ty &&
                                                                            ((i = void 0),
                                                                            "number" == typeof (i = t[e].t.p).a && (i.a = { a: 0, k: i.a }),
                                                                            "number" == typeof i.p && (i.p = { a: 0, k: i.p }),
                                                                            "number" == typeof i.r && (i.r = { a: 0, k: i.r }));
                                                                }
                                                                return function (i) {
                                                                    if (s(t, i.v) && (e(i.layers), i.assets)) {
                                                                        var r,
                                                                            a = i.assets.length;
                                                                        for (r = 0; r < a; r += 1) i.assets[r].layers && e(i.assets[r].layers);
                                                                    }
                                                                };
                                                            })(),
                                                            h = (function () {
                                                                var t = [4, 1, 9];
                                                                function e(t) {
                                                                    var i,
                                                                        r,
                                                                        s,
                                                                        a = t.length;
                                                                    for (i = 0; i < a; i += 1)
                                                                        if ("gr" === t[i].ty) e(t[i].it);
                                                                        else if ("fl" === t[i].ty || "st" === t[i].ty)
                                                                            if (t[i].c.k && t[i].c.k[0].i)
                                                                                for (s = t[i].c.k.length, r = 0; r < s; r += 1)
                                                                                    t[i].c.k[r].s && ((t[i].c.k[r].s[0] /= 255), (t[i].c.k[r].s[1] /= 255), (t[i].c.k[r].s[2] /= 255), (t[i].c.k[r].s[3] /= 255)),
                                                                                        t[i].c.k[r].e && ((t[i].c.k[r].e[0] /= 255), (t[i].c.k[r].e[1] /= 255), (t[i].c.k[r].e[2] /= 255), (t[i].c.k[r].e[3] /= 255));
                                                                            else (t[i].c.k[0] /= 255), (t[i].c.k[1] /= 255), (t[i].c.k[2] /= 255), (t[i].c.k[3] /= 255);
                                                                }
                                                                function i(t) {
                                                                    var i,
                                                                        r = t.length;
                                                                    for (i = 0; i < r; i += 1) 4 === t[i].ty && e(t[i].shapes);
                                                                }
                                                                return function (e) {
                                                                    if (s(t, e.v) && (i(e.layers), e.assets)) {
                                                                        var r,
                                                                            a = e.assets.length;
                                                                        for (r = 0; r < a; r += 1) e.assets[r].layers && i(e.assets[r].layers);
                                                                    }
                                                                };
                                                            })(),
                                                            c = (function () {
                                                                var t = [4, 4, 18];
                                                                function e(t) {
                                                                    var i, r, s;
                                                                    for (i = t.length - 1; i >= 0; i -= 1)
                                                                        if ("sh" === t[i].ty)
                                                                            if (t[i].ks.k.i) t[i].ks.k.c = t[i].closed;
                                                                            else for (s = t[i].ks.k.length, r = 0; r < s; r += 1) t[i].ks.k[r].s && (t[i].ks.k[r].s[0].c = t[i].closed), t[i].ks.k[r].e && (t[i].ks.k[r].e[0].c = t[i].closed);
                                                                        else "gr" === t[i].ty && e(t[i].it);
                                                                }
                                                                function i(t) {
                                                                    var i,
                                                                        r,
                                                                        s,
                                                                        a,
                                                                        n,
                                                                        o,
                                                                        l = t.length;
                                                                    for (r = 0; r < l; r += 1) {
                                                                        if ((i = t[r]).hasMask) {
                                                                            var h = i.masksProperties;
                                                                            for (a = h.length, s = 0; s < a; s += 1)
                                                                                if (h[s].pt.k.i) h[s].pt.k.c = h[s].cl;
                                                                                else for (o = h[s].pt.k.length, n = 0; n < o; n += 1) h[s].pt.k[n].s && (h[s].pt.k[n].s[0].c = h[s].cl), h[s].pt.k[n].e && (h[s].pt.k[n].e[0].c = h[s].cl);
                                                                        }
                                                                        4 === i.ty && e(i.shapes);
                                                                    }
                                                                }
                                                                return function (e) {
                                                                    if (s(t, e.v) && (i(e.layers), e.assets)) {
                                                                        var r,
                                                                            a = e.assets.length;
                                                                        for (r = 0; r < a; r += 1) e.assets[r].layers && i(e.assets[r].layers);
                                                                    }
                                                                };
                                                            })();
                                                        function d(t) {
                                                            0 === t.t.a.length && t.t.p;
                                                        }
                                                        var u = {
                                                            completeData: function (i) {
                                                                i.__complete ||
                                                                    (h(i),
                                                                    n(i),
                                                                    o(i),
                                                                    l(i),
                                                                    c(i),
                                                                    t(i.layers, i.assets),
                                                                    (function (i, r) {
                                                                        if (i) {
                                                                            var s = 0,
                                                                                a = i.length;
                                                                            for (s = 0; s < a; s += 1) 1 === i[s].t && ((i[s].data.layers = e(i[s].data.refId, r)), t(i[s].data.layers, r));
                                                                        }
                                                                    })(i.chars, i.assets),
                                                                    (i.__complete = !0));
                                                            },
                                                        };
                                                        return (u.checkColors = h), (u.checkChars = o), (u.checkPathProperties = l), (u.checkShapes = c), (u.completeLayers = t), u;
                                                    })()),
                                                a.assetLoader ||
                                                    (a.assetLoader = (function () {
                                                        function t(t) {
                                                            var e = t.getResponseHeader("content-type");
                                                            return (e && "json" === t.responseType && -1 !== e.indexOf("json")) || (t.response && "object" === _typeof$5(t.response))
                                                                ? t.response
                                                                : t.response && "string" == typeof t.response
                                                                ? JSON.parse(t.response)
                                                                : t.responseText
                                                                ? JSON.parse(t.responseText)
                                                                : null;
                                                        }
                                                        return {
                                                            load: function (e, i, r, s) {
                                                                var a,
                                                                    n = new XMLHttpRequest();
                                                                try {
                                                                    n.responseType = "json";
                                                                } catch (t) {}
                                                                n.onreadystatechange = function () {
                                                                    if (4 === n.readyState)
                                                                        if (200 === n.status) (a = t(n)), r(a);
                                                                        else
                                                                            try {
                                                                                (a = t(n)), r(a);
                                                                            } catch (t) {
                                                                                s && s(t);
                                                                            }
                                                                };
                                                                try {
                                                                    n.open(["G", "E", "T"].join(""), e, !0);
                                                                } catch (t) {
                                                                    n.open(["G", "E", "T"].join(""), i + "/" + e, !0);
                                                                }
                                                                n.send();
                                                            },
                                                        };
                                                    })()),
                                                "loadAnimation" === t.data.type)
                                            )
                                                a.assetLoader.load(
                                                    t.data.path,
                                                    t.data.fullPath,
                                                    function (e) {
                                                        a.dataManager.completeData(e), a.postMessage({ id: t.data.id, payload: e, status: "success" });
                                                    },
                                                    function () {
                                                        a.postMessage({ id: t.data.id, status: "error" });
                                                    }
                                                );
                                            else if ("complete" === t.data.type) {
                                                var e = t.data.animation;
                                                a.dataManager.completeData(e), a.postMessage({ id: t.data.id, payload: e, status: "success" });
                                            } else
                                                "loadData" === t.data.type &&
                                                    a.assetLoader.load(
                                                        t.data.path,
                                                        t.data.fullPath,
                                                        function (e) {
                                                            a.postMessage({ id: t.data.id, payload: e, status: "success" });
                                                        },
                                                        function () {
                                                            a.postMessage({ id: t.data.id, status: "error" });
                                                        }
                                                    );
                                        })),
                                        (e.onmessage = function (t) {
                                            var e = t.data,
                                                i = e.id,
                                                s = r[i];
                                            (r[i] = null), "success" === e.status ? s.onComplete(e.payload) : s.onError && s.onError();
                                        }));
                                }
                                function o(t, e) {
                                    var s = "processId_" + (i += 1);
                                    return (r[s] = { onComplete: t, onError: e }), s;
                                }
                                return {
                                    loadAnimation: function (t, i, r) {
                                        n();
                                        var s = o(i, r);
                                        e.postMessage({ type: "loadAnimation", path: t, fullPath: window.location.origin + window.location.pathname, id: s });
                                    },
                                    loadData: function (t, i, r) {
                                        n();
                                        var s = o(i, r);
                                        e.postMessage({ type: "loadData", path: t, fullPath: window.location.origin + window.location.pathname, id: s });
                                    },
                                    completeAnimation: function (t, i, r) {
                                        n();
                                        var s = o(i, r);
                                        e.postMessage({ type: "complete", animation: t, id: s });
                                    },
                                };
                            })(),
                            ImagePreloader = (function () {
                                var t = (function () {
                                    var t = createTag("canvas");
                                    (t.width = 1), (t.height = 1);
                                    var e = t.getContext("2d");
                                    return (e.fillStyle = "rgba(0,0,0,0)"), e.fillRect(0, 0, 1, 1), t;
                                })();
                                function e() {
                                    (this.loadedAssets += 1), this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null);
                                }
                                function i() {
                                    (this.loadedFootagesCount += 1), this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null);
                                }
                                function r(t, e, i) {
                                    var r = "";
                                    if (t.e) r = t.p;
                                    else if (e) {
                                        var s = t.p;
                                        -1 !== s.indexOf("images/") && (s = s.split("/")[1]), (r = e + s);
                                    } else (r = i), (r += t.u ? t.u : ""), (r += t.p);
                                    return r;
                                }
                                function s(t) {
                                    var e = 0,
                                        i = setInterval(
                                            function () {
                                                (t.getBBox().width || e > 500) && (this._imageLoaded(), clearInterval(i)), (e += 1);
                                            }.bind(this),
                                            50
                                        );
                                }
                                function a(t) {
                                    var e = { assetData: t },
                                        i = r(t, this.assetsPath, this.path);
                                    return (
                                        dataManager.loadData(
                                            i,
                                            function (t) {
                                                (e.img = t), this._footageLoaded();
                                            }.bind(this),
                                            function () {
                                                (e.img = {}), this._footageLoaded();
                                            }.bind(this)
                                        ),
                                        e
                                    );
                                }
                                function n() {
                                    (this._imageLoaded = e.bind(this)),
                                        (this._footageLoaded = i.bind(this)),
                                        (this.testImageLoaded = s.bind(this)),
                                        (this.createFootageData = a.bind(this)),
                                        (this.assetsPath = ""),
                                        (this.path = ""),
                                        (this.totalImages = 0),
                                        (this.totalFootages = 0),
                                        (this.loadedAssets = 0),
                                        (this.loadedFootagesCount = 0),
                                        (this.imagesLoadedCb = null),
                                        (this.images = []);
                                }
                                return (
                                    (n.prototype = {
                                        loadAssets: function (t, e) {
                                            var i;
                                            this.imagesLoadedCb = e;
                                            var r = t.length;
                                            for (i = 0; i < r; i += 1)
                                                t[i].layers ||
                                                    (t[i].t && "seq" !== t[i].t
                                                        ? 3 === t[i].t && ((this.totalFootages += 1), this.images.push(this.createFootageData(t[i])))
                                                        : ((this.totalImages += 1), this.images.push(this._createImageData(t[i]))));
                                        },
                                        setAssetsPath: function (t) {
                                            this.assetsPath = t || "";
                                        },
                                        setPath: function (t) {
                                            this.path = t || "";
                                        },
                                        loadedImages: function () {
                                            return this.totalImages === this.loadedAssets;
                                        },
                                        loadedFootages: function () {
                                            return this.totalFootages === this.loadedFootagesCount;
                                        },
                                        destroy: function () {
                                            (this.imagesLoadedCb = null), (this.images.length = 0);
                                        },
                                        getAsset: function (t) {
                                            for (var e = 0, i = this.images.length; e < i; ) {
                                                if (this.images[e].assetData === t) return this.images[e].img;
                                                e += 1;
                                            }
                                            return null;
                                        },
                                        createImgData: function (e) {
                                            var i = r(e, this.assetsPath, this.path),
                                                s = createTag("img");
                                            (s.crossOrigin = "anonymous"),
                                                s.addEventListener("load", this._imageLoaded, !1),
                                                s.addEventListener(
                                                    "error",
                                                    function () {
                                                        (a.img = t), this._imageLoaded();
                                                    }.bind(this),
                                                    !1
                                                ),
                                                (s.src = i);
                                            var a = { img: s, assetData: e };
                                            return a;
                                        },
                                        createImageData: function (e) {
                                            var i = r(e, this.assetsPath, this.path),
                                                s = createNS("image");
                                            isSafari ? this.testImageLoaded(s) : s.addEventListener("load", this._imageLoaded, !1),
                                                s.addEventListener(
                                                    "error",
                                                    function () {
                                                        (a.img = t), this._imageLoaded();
                                                    }.bind(this),
                                                    !1
                                                ),
                                                s.setAttributeNS("http://www.w3.org/1999/xlink", "href", i),
                                                this._elementHelper.append ? this._elementHelper.append(s) : this._elementHelper.appendChild(s);
                                            var a = { img: s, assetData: e };
                                            return a;
                                        },
                                        imageLoaded: e,
                                        footageLoaded: i,
                                        setCacheType: function (t, e) {
                                            "svg" === t ? ((this._elementHelper = e), (this._createImageData = this.createImageData.bind(this))) : (this._createImageData = this.createImgData.bind(this));
                                        },
                                    }),
                                    n
                                );
                            })();
                        function BaseEvent() {}
                        BaseEvent.prototype = {
                            triggerEvent: function (t, e) {
                                if (this._cbs[t]) for (var i = this._cbs[t], r = 0; r < i.length; r += 1) i[r](e);
                            },
                            addEventListener: function (t, e) {
                                return (
                                    this._cbs[t] || (this._cbs[t] = []),
                                    this._cbs[t].push(e),
                                    function () {
                                        this.removeEventListener(t, e);
                                    }.bind(this)
                                );
                            },
                            removeEventListener: function (t, e) {
                                if (e) {
                                    if (this._cbs[t]) {
                                        for (var i = 0, r = this._cbs[t].length; i < r; ) this._cbs[t][i] === e && (this._cbs[t].splice(i, 1), (i -= 1), (r -= 1)), (i += 1);
                                        this._cbs[t].length || (this._cbs[t] = null);
                                    }
                                } else this._cbs[t] = null;
                            },
                        };
                        var markerParser = (function () {
                                function t(t) {
                                    for (var e, i = t.split("\r\n"), r = {}, s = 0, a = 0; a < i.length; a += 1) 2 === (e = i[a].split(":")).length && ((r[e[0]] = e[1].trim()), (s += 1));
                                    if (0 === s) throw new Error();
                                    return r;
                                }
                                return function (e) {
                                    for (var i = [], r = 0; r < e.length; r += 1) {
                                        var s = e[r],
                                            a = { time: s.tm, duration: s.dr };
                                        try {
                                            a.payload = JSON.parse(e[r].cm);
                                        } catch (i) {
                                            try {
                                                a.payload = t(e[r].cm);
                                            } catch (t) {
                                                a.payload = { name: e[r].cm };
                                            }
                                        }
                                        i.push(a);
                                    }
                                    return i;
                                };
                            })(),
                            ProjectInterface = (function () {
                                function t(t) {
                                    this.compositions.push(t);
                                }
                                return function () {
                                    function e(t) {
                                        for (var e = 0, i = this.compositions.length; e < i; ) {
                                            if (this.compositions[e].data && this.compositions[e].data.nm === t)
                                                return this.compositions[e].prepareFrame && this.compositions[e].data.xt && this.compositions[e].prepareFrame(this.currentFrame), this.compositions[e].compInterface;
                                            e += 1;
                                        }
                                        return null;
                                    }
                                    return (e.compositions = []), (e.currentFrame = 0), (e.registerComposition = t), e;
                                };
                            })(),
                            renderers = {},
                            registerRenderer = function (t, e) {
                                renderers[t] = e;
                            };
                        function getRenderer(t) {
                            return renderers[t];
                        }
                        function getRegisteredRenderer() {
                            if (renderers.canvas) return "canvas";
                            for (var t in renderers) if (renderers[t]) return t;
                            return "";
                        }
                        function _typeof$4(t) {
                            return (
                                (_typeof$4 =
                                    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                        ? function (t) {
                                              return typeof t;
                                          }
                                        : function (t) {
                                              return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                          }),
                                _typeof$4(t)
                            );
                        }
                        var AnimationItem = function () {
                            (this._cbs = []),
                                (this.name = ""),
                                (this.path = ""),
                                (this.isLoaded = !1),
                                (this.currentFrame = 0),
                                (this.currentRawFrame = 0),
                                (this.firstFrame = 0),
                                (this.totalFrames = 0),
                                (this.frameRate = 0),
                                (this.frameMult = 0),
                                (this.playSpeed = 1),
                                (this.playDirection = 1),
                                (this.playCount = 0),
                                (this.animationData = {}),
                                (this.assets = []),
                                (this.isPaused = !0),
                                (this.autoplay = !1),
                                (this.loop = !0),
                                (this.renderer = null),
                                (this.animationID = createElementID()),
                                (this.assetsPath = ""),
                                (this.timeCompleted = 0),
                                (this.segmentPos = 0),
                                (this.isSubframeEnabled = getSubframeEnabled()),
                                (this.segments = []),
                                (this._idle = !0),
                                (this._completedLoop = !1),
                                (this.projectInterface = ProjectInterface()),
                                (this.imagePreloader = new ImagePreloader()),
                                (this.audioController = audioControllerFactory()),
                                (this.markers = []),
                                (this.configAnimation = this.configAnimation.bind(this)),
                                (this.onSetupError = this.onSetupError.bind(this)),
                                (this.onSegmentComplete = this.onSegmentComplete.bind(this)),
                                (this.drawnFrameEvent = new BMEnterFrameEvent("drawnFrame", 0, 0, 0)),
                                (this.expressionsPlugin = getExpressionsPlugin());
                        };
                        extendPrototype([BaseEvent], AnimationItem),
                            (AnimationItem.prototype.setParams = function (t) {
                                (t.wrapper || t.container) && (this.wrapper = t.wrapper || t.container);
                                var e = "svg";
                                t.animType ? (e = t.animType) : t.renderer && (e = t.renderer);
                                var i = getRenderer(e);
                                (this.renderer = new i(this, t.rendererSettings)),
                                    this.imagePreloader.setCacheType(e, this.renderer.globalData.defs),
                                    this.renderer.setProjectInterface(this.projectInterface),
                                    (this.animType = e),
                                    "" === t.loop || null === t.loop || void 0 === t.loop || !0 === t.loop ? (this.loop = !0) : !1 === t.loop ? (this.loop = !1) : (this.loop = parseInt(t.loop, 10)),
                                    (this.autoplay = !("autoplay" in t) || t.autoplay),
                                    (this.name = t.name ? t.name : ""),
                                    (this.autoloadSegments = !Object.prototype.hasOwnProperty.call(t, "autoloadSegments") || t.autoloadSegments),
                                    (this.assetsPath = t.assetsPath),
                                    (this.initialSegment = t.initialSegment),
                                    t.audioFactory && this.audioController.setAudioFactory(t.audioFactory),
                                    t.animationData
                                        ? this.setupAnimation(t.animationData)
                                        : t.path &&
                                          (-1 !== t.path.lastIndexOf("\\") ? (this.path = t.path.substr(0, t.path.lastIndexOf("\\") + 1)) : (this.path = t.path.substr(0, t.path.lastIndexOf("/") + 1)),
                                          (this.fileName = t.path.substr(t.path.lastIndexOf("/") + 1)),
                                          (this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json"))),
                                          dataManager.loadAnimation(t.path, this.configAnimation, this.onSetupError));
                            }),
                            (AnimationItem.prototype.onSetupError = function () {
                                this.trigger("data_failed");
                            }),
                            (AnimationItem.prototype.setupAnimation = function (t) {
                                dataManager.completeAnimation(t, this.configAnimation);
                            }),
                            (AnimationItem.prototype.setData = function (t, e) {
                                e && "object" !== _typeof$4(e) && (e = JSON.parse(e));
                                var i = { wrapper: t, animationData: e },
                                    r = t.attributes;
                                (i.path = r.getNamedItem("data-animation-path")
                                    ? r.getNamedItem("data-animation-path").value
                                    : r.getNamedItem("data-bm-path")
                                    ? r.getNamedItem("data-bm-path").value
                                    : r.getNamedItem("bm-path")
                                    ? r.getNamedItem("bm-path").value
                                    : ""),
                                    (i.animType = r.getNamedItem("data-anim-type")
                                        ? r.getNamedItem("data-anim-type").value
                                        : r.getNamedItem("data-bm-type")
                                        ? r.getNamedItem("data-bm-type").value
                                        : r.getNamedItem("bm-type")
                                        ? r.getNamedItem("bm-type").value
                                        : r.getNamedItem("data-bm-renderer")
                                        ? r.getNamedItem("data-bm-renderer").value
                                        : r.getNamedItem("bm-renderer")
                                        ? r.getNamedItem("bm-renderer").value
                                        : getRegisteredRenderer() || "canvas");
                                var s = r.getNamedItem("data-anim-loop")
                                    ? r.getNamedItem("data-anim-loop").value
                                    : r.getNamedItem("data-bm-loop")
                                    ? r.getNamedItem("data-bm-loop").value
                                    : r.getNamedItem("bm-loop")
                                    ? r.getNamedItem("bm-loop").value
                                    : "";
                                "false" === s ? (i.loop = !1) : "true" === s ? (i.loop = !0) : "" !== s && (i.loop = parseInt(s, 10));
                                var a = r.getNamedItem("data-anim-autoplay")
                                    ? r.getNamedItem("data-anim-autoplay").value
                                    : r.getNamedItem("data-bm-autoplay")
                                    ? r.getNamedItem("data-bm-autoplay").value
                                    : !r.getNamedItem("bm-autoplay") || r.getNamedItem("bm-autoplay").value;
                                (i.autoplay = "false" !== a),
                                    (i.name = r.getNamedItem("data-name")
                                        ? r.getNamedItem("data-name").value
                                        : r.getNamedItem("data-bm-name")
                                        ? r.getNamedItem("data-bm-name").value
                                        : r.getNamedItem("bm-name")
                                        ? r.getNamedItem("bm-name").value
                                        : ""),
                                    "false" ===
                                        (r.getNamedItem("data-anim-prerender")
                                            ? r.getNamedItem("data-anim-prerender").value
                                            : r.getNamedItem("data-bm-prerender")
                                            ? r.getNamedItem("data-bm-prerender").value
                                            : r.getNamedItem("bm-prerender")
                                            ? r.getNamedItem("bm-prerender").value
                                            : "") && (i.prerender = !1),
                                    i.path ? this.setParams(i) : this.trigger("destroy");
                            }),
                            (AnimationItem.prototype.includeLayers = function (t) {
                                t.op > this.animationData.op && ((this.animationData.op = t.op), (this.totalFrames = Math.floor(t.op - this.animationData.ip)));
                                var e,
                                    i,
                                    r = this.animationData.layers,
                                    s = r.length,
                                    a = t.layers,
                                    n = a.length;
                                for (i = 0; i < n; i += 1)
                                    for (e = 0; e < s; ) {
                                        if (r[e].id === a[i].id) {
                                            r[e] = a[i];
                                            break;
                                        }
                                        e += 1;
                                    }
                                if (((t.chars || t.fonts) && (this.renderer.globalData.fontManager.addChars(t.chars), this.renderer.globalData.fontManager.addFonts(t.fonts, this.renderer.globalData.defs)), t.assets))
                                    for (s = t.assets.length, e = 0; e < s; e += 1) this.animationData.assets.push(t.assets[e]);
                                (this.animationData.__complete = !1), dataManager.completeAnimation(this.animationData, this.onSegmentComplete);
                            }),
                            (AnimationItem.prototype.onSegmentComplete = function (t) {
                                this.animationData = t;
                                var e = getExpressionsPlugin();
                                e && e.initExpressions(this), this.loadNextSegment();
                            }),
                            (AnimationItem.prototype.loadNextSegment = function () {
                                var t = this.animationData.segments;
                                if (!t || 0 === t.length || !this.autoloadSegments) return this.trigger("data_ready"), void (this.timeCompleted = this.totalFrames);
                                var e = t.shift();
                                this.timeCompleted = e.time * this.frameRate;
                                var i = this.path + this.fileName + "_" + this.segmentPos + ".json";
                                (this.segmentPos += 1),
                                    dataManager.loadData(
                                        i,
                                        this.includeLayers.bind(this),
                                        function () {
                                            this.trigger("data_failed");
                                        }.bind(this)
                                    );
                            }),
                            (AnimationItem.prototype.loadSegments = function () {
                                this.animationData.segments || (this.timeCompleted = this.totalFrames), this.loadNextSegment();
                            }),
                            (AnimationItem.prototype.imagesLoaded = function () {
                                this.trigger("loaded_images"), this.checkLoaded();
                            }),
                            (AnimationItem.prototype.preloadImages = function () {
                                this.imagePreloader.setAssetsPath(this.assetsPath), this.imagePreloader.setPath(this.path), this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));
                            }),
                            (AnimationItem.prototype.configAnimation = function (t) {
                                if (this.renderer)
                                    try {
                                        (this.animationData = t),
                                            this.initialSegment
                                                ? ((this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0])), (this.firstFrame = Math.round(this.initialSegment[0])))
                                                : ((this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip)), (this.firstFrame = Math.round(this.animationData.ip))),
                                            this.renderer.configAnimation(t),
                                            t.assets || (t.assets = []),
                                            (this.assets = this.animationData.assets),
                                            (this.frameRate = this.animationData.fr),
                                            (this.frameMult = this.animationData.fr / 1e3),
                                            this.renderer.searchExtraCompositions(t.assets),
                                            (this.markers = markerParser(t.markers || [])),
                                            this.trigger("config_ready"),
                                            this.preloadImages(),
                                            this.loadSegments(),
                                            this.updaFrameModifier(),
                                            this.waitForFontsLoaded(),
                                            this.isPaused && this.audioController.pause();
                                    } catch (t) {
                                        this.triggerConfigError(t);
                                    }
                            }),
                            (AnimationItem.prototype.waitForFontsLoaded = function () {
                                this.renderer && (this.renderer.globalData.fontManager.isLoaded ? this.checkLoaded() : setTimeout(this.waitForFontsLoaded.bind(this), 20));
                            }),
                            (AnimationItem.prototype.checkLoaded = function () {
                                if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || "canvas" !== this.renderer.rendererType) && this.imagePreloader.loadedFootages()) {
                                    this.isLoaded = !0;
                                    var t = getExpressionsPlugin();
                                    t && t.initExpressions(this),
                                        this.renderer.initItems(),
                                        setTimeout(
                                            function () {
                                                this.trigger("DOMLoaded");
                                            }.bind(this),
                                            0
                                        ),
                                        this.gotoFrame(),
                                        this.autoplay && this.play();
                                }
                            }),
                            (AnimationItem.prototype.resize = function (t, e) {
                                var i = "number" == typeof t ? t : void 0,
                                    r = "number" == typeof e ? e : void 0;
                                this.renderer.updateContainerSize(i, r);
                            }),
                            (AnimationItem.prototype.setSubframe = function (t) {
                                this.isSubframeEnabled = !!t;
                            }),
                            (AnimationItem.prototype.gotoFrame = function () {
                                (this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame),
                                    this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted && (this.currentFrame = this.timeCompleted),
                                    this.trigger("enterFrame"),
                                    this.renderFrame(),
                                    this.trigger("drawnFrame");
                            }),
                            (AnimationItem.prototype.renderFrame = function () {
                                if (!1 !== this.isLoaded && this.renderer)
                                    try {
                                        this.expressionsPlugin && this.expressionsPlugin.resetFrame(), this.renderer.renderFrame(this.currentFrame + this.firstFrame);
                                    } catch (t) {
                                        this.triggerRenderFrameError(t);
                                    }
                            }),
                            (AnimationItem.prototype.play = function (t) {
                                (t && this.name !== t) || (!0 === this.isPaused && ((this.isPaused = !1), this.trigger("_play"), this.audioController.resume(), this._idle && ((this._idle = !1), this.trigger("_active"))));
                            }),
                            (AnimationItem.prototype.pause = function (t) {
                                (t && this.name !== t) || (!1 === this.isPaused && ((this.isPaused = !0), this.trigger("_pause"), (this._idle = !0), this.trigger("_idle"), this.audioController.pause()));
                            }),
                            (AnimationItem.prototype.togglePause = function (t) {
                                (t && this.name !== t) || (!0 === this.isPaused ? this.play() : this.pause());
                            }),
                            (AnimationItem.prototype.stop = function (t) {
                                (t && this.name !== t) || (this.pause(), (this.playCount = 0), (this._completedLoop = !1), this.setCurrentRawFrameValue(0));
                            }),
                            (AnimationItem.prototype.getMarkerData = function (t) {
                                for (var e, i = 0; i < this.markers.length; i += 1) if ((e = this.markers[i]).payload && e.payload.name === t) return e;
                                return null;
                            }),
                            (AnimationItem.prototype.goToAndStop = function (t, e, i) {
                                if (!i || this.name === i) {
                                    var r = Number(t);
                                    if (isNaN(r)) {
                                        var s = this.getMarkerData(t);
                                        s && this.goToAndStop(s.time, !0);
                                    } else e ? this.setCurrentRawFrameValue(t) : this.setCurrentRawFrameValue(t * this.frameModifier);
                                    this.pause();
                                }
                            }),
                            (AnimationItem.prototype.goToAndPlay = function (t, e, i) {
                                if (!i || this.name === i) {
                                    var r = Number(t);
                                    if (isNaN(r)) {
                                        var s = this.getMarkerData(t);
                                        s && (s.duration ? this.playSegments([s.time, s.time + s.duration], !0) : this.goToAndStop(s.time, !0));
                                    } else this.goToAndStop(r, e, i);
                                    this.play();
                                }
                            }),
                            (AnimationItem.prototype.advanceTime = function (t) {
                                if (!0 !== this.isPaused && !1 !== this.isLoaded) {
                                    var e = this.currentRawFrame + t * this.frameModifier,
                                        i = !1;
                                    e >= this.totalFrames - 1 && this.frameModifier > 0
                                        ? this.loop && this.playCount !== this.loop
                                            ? e >= this.totalFrames
                                                ? ((this.playCount += 1), this.checkSegments(e % this.totalFrames) || (this.setCurrentRawFrameValue(e % this.totalFrames), (this._completedLoop = !0), this.trigger("loopComplete")))
                                                : this.setCurrentRawFrameValue(e)
                                            : this.checkSegments(e > this.totalFrames ? e % this.totalFrames : 0) || ((i = !0), (e = this.totalFrames - 1))
                                        : e < 0
                                        ? this.checkSegments(e % this.totalFrames) ||
                                          (!this.loop || (this.playCount-- <= 0 && !0 !== this.loop)
                                              ? ((i = !0), (e = 0))
                                              : (this.setCurrentRawFrameValue(this.totalFrames + (e % this.totalFrames)), this._completedLoop ? this.trigger("loopComplete") : (this._completedLoop = !0)))
                                        : this.setCurrentRawFrameValue(e),
                                        i && (this.setCurrentRawFrameValue(e), this.pause(), this.trigger("complete"));
                                }
                            }),
                            (AnimationItem.prototype.adjustSegment = function (t, e) {
                                (this.playCount = 0),
                                    t[1] < t[0]
                                        ? (this.frameModifier > 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(-1)),
                                          (this.totalFrames = t[0] - t[1]),
                                          (this.timeCompleted = this.totalFrames),
                                          (this.firstFrame = t[1]),
                                          this.setCurrentRawFrameValue(this.totalFrames - 0.001 - e))
                                        : t[1] > t[0] &&
                                          (this.frameModifier < 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(1)),
                                          (this.totalFrames = t[1] - t[0]),
                                          (this.timeCompleted = this.totalFrames),
                                          (this.firstFrame = t[0]),
                                          this.setCurrentRawFrameValue(0.001 + e)),
                                    this.trigger("segmentStart");
                            }),
                            (AnimationItem.prototype.setSegment = function (t, e) {
                                var i = -1;
                                this.isPaused && (this.currentRawFrame + this.firstFrame < t ? (i = t) : this.currentRawFrame + this.firstFrame > e && (i = e - t)),
                                    (this.firstFrame = t),
                                    (this.totalFrames = e - t),
                                    (this.timeCompleted = this.totalFrames),
                                    -1 !== i && this.goToAndStop(i, !0);
                            }),
                            (AnimationItem.prototype.playSegments = function (t, e) {
                                if ((e && (this.segments.length = 0), "object" === _typeof$4(t[0]))) {
                                    var i,
                                        r = t.length;
                                    for (i = 0; i < r; i += 1) this.segments.push(t[i]);
                                } else this.segments.push(t);
                                this.segments.length && e && this.adjustSegment(this.segments.shift(), 0), this.isPaused && this.play();
                            }),
                            (AnimationItem.prototype.resetSegments = function (t) {
                                (this.segments.length = 0), this.segments.push([this.animationData.ip, this.animationData.op]), t && this.checkSegments(0);
                            }),
                            (AnimationItem.prototype.checkSegments = function (t) {
                                return !!this.segments.length && (this.adjustSegment(this.segments.shift(), t), !0);
                            }),
                            (AnimationItem.prototype.destroy = function (t) {
                                (t && this.name !== t) ||
                                    !this.renderer ||
                                    (this.renderer.destroy(),
                                    this.imagePreloader.destroy(),
                                    this.trigger("destroy"),
                                    (this._cbs = null),
                                    (this.onEnterFrame = null),
                                    (this.onLoopComplete = null),
                                    (this.onComplete = null),
                                    (this.onSegmentStart = null),
                                    (this.onDestroy = null),
                                    (this.renderer = null),
                                    (this.expressionsPlugin = null),
                                    (this.imagePreloader = null),
                                    (this.projectInterface = null));
                            }),
                            (AnimationItem.prototype.setCurrentRawFrameValue = function (t) {
                                (this.currentRawFrame = t), this.gotoFrame();
                            }),
                            (AnimationItem.prototype.setSpeed = function (t) {
                                (this.playSpeed = t), this.updaFrameModifier();
                            }),
                            (AnimationItem.prototype.setDirection = function (t) {
                                (this.playDirection = t < 0 ? -1 : 1), this.updaFrameModifier();
                            }),
                            (AnimationItem.prototype.setLoop = function (t) {
                                this.loop = t;
                            }),
                            (AnimationItem.prototype.setVolume = function (t, e) {
                                (e && this.name !== e) || this.audioController.setVolume(t);
                            }),
                            (AnimationItem.prototype.getVolume = function () {
                                return this.audioController.getVolume();
                            }),
                            (AnimationItem.prototype.mute = function (t) {
                                (t && this.name !== t) || this.audioController.mute();
                            }),
                            (AnimationItem.prototype.unmute = function (t) {
                                (t && this.name !== t) || this.audioController.unmute();
                            }),
                            (AnimationItem.prototype.updaFrameModifier = function () {
                                (this.frameModifier = this.frameMult * this.playSpeed * this.playDirection), this.audioController.setRate(this.playSpeed * this.playDirection);
                            }),
                            (AnimationItem.prototype.getPath = function () {
                                return this.path;
                            }),
                            (AnimationItem.prototype.getAssetsPath = function (t) {
                                var e = "";
                                if (t.e) e = t.p;
                                else if (this.assetsPath) {
                                    var i = t.p;
                                    -1 !== i.indexOf("images/") && (i = i.split("/")[1]), (e = this.assetsPath + i);
                                } else (e = this.path), (e += t.u ? t.u : ""), (e += t.p);
                                return e;
                            }),
                            (AnimationItem.prototype.getAssetData = function (t) {
                                for (var e = 0, i = this.assets.length; e < i; ) {
                                    if (t === this.assets[e].id) return this.assets[e];
                                    e += 1;
                                }
                                return null;
                            }),
                            (AnimationItem.prototype.hide = function () {
                                this.renderer.hide();
                            }),
                            (AnimationItem.prototype.show = function () {
                                this.renderer.show();
                            }),
                            (AnimationItem.prototype.getDuration = function (t) {
                                return t ? this.totalFrames : this.totalFrames / this.frameRate;
                            }),
                            (AnimationItem.prototype.updateDocumentData = function (t, e, i) {
                                try {
                                    this.renderer.getElementByPath(t).updateDocumentData(e, i);
                                } catch (t) {}
                            }),
                            (AnimationItem.prototype.trigger = function (t) {
                                if (this._cbs && this._cbs[t])
                                    switch (t) {
                                        case "enterFrame":
                                            this.triggerEvent(t, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameModifier));
                                            break;
                                        case "drawnFrame":
                                            (this.drawnFrameEvent.currentTime = this.currentFrame),
                                                (this.drawnFrameEvent.totalTime = this.totalFrames),
                                                (this.drawnFrameEvent.direction = this.frameModifier),
                                                this.triggerEvent(t, this.drawnFrameEvent);
                                            break;
                                        case "loopComplete":
                                            this.triggerEvent(t, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult));
                                            break;
                                        case "complete":
                                            this.triggerEvent(t, new BMCompleteEvent(t, this.frameMult));
                                            break;
                                        case "segmentStart":
                                            this.triggerEvent(t, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames));
                                            break;
                                        case "destroy":
                                            this.triggerEvent(t, new BMDestroyEvent(t, this));
                                            break;
                                        default:
                                            this.triggerEvent(t);
                                    }
                                "enterFrame" === t && this.onEnterFrame && this.onEnterFrame.call(this, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameMult)),
                                    "loopComplete" === t && this.onLoopComplete && this.onLoopComplete.call(this, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult)),
                                    "complete" === t && this.onComplete && this.onComplete.call(this, new BMCompleteEvent(t, this.frameMult)),
                                    "segmentStart" === t && this.onSegmentStart && this.onSegmentStart.call(this, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames)),
                                    "destroy" === t && this.onDestroy && this.onDestroy.call(this, new BMDestroyEvent(t, this));
                            }),
                            (AnimationItem.prototype.triggerRenderFrameError = function (t) {
                                var e = new BMRenderFrameErrorEvent(t, this.currentFrame);
                                this.triggerEvent("error", e), this.onError && this.onError.call(this, e);
                            }),
                            (AnimationItem.prototype.triggerConfigError = function (t) {
                                var e = new BMConfigErrorEvent(t, this.currentFrame);
                                this.triggerEvent("error", e), this.onError && this.onError.call(this, e);
                            });
                        var animationManager = (function () {
                                var t = {},
                                    e = [],
                                    i = 0,
                                    r = 0,
                                    s = 0,
                                    a = !0,
                                    n = !1;
                                function o(t) {
                                    for (var i = 0, s = t.target; i < r; ) e[i].animation === s && (e.splice(i, 1), (i -= 1), (r -= 1), s.isPaused || c()), (i += 1);
                                }
                                function l(t, i) {
                                    if (!t) return null;
                                    for (var s = 0; s < r; ) {
                                        if (e[s].elem === t && null !== e[s].elem) return e[s].animation;
                                        s += 1;
                                    }
                                    var a = new AnimationItem();
                                    return d(a, t), a.setData(t, i), a;
                                }
                                function h() {
                                    (s += 1), m();
                                }
                                function c() {
                                    s -= 1;
                                }
                                function d(t, i) {
                                    t.addEventListener("destroy", o), t.addEventListener("_active", h), t.addEventListener("_idle", c), e.push({ elem: i, animation: t }), (r += 1);
                                }
                                function u(t) {
                                    var o,
                                        l = t - i;
                                    for (o = 0; o < r; o += 1) e[o].animation.advanceTime(l);
                                    (i = t), s && !n ? window.requestAnimationFrame(u) : (a = !0);
                                }
                                function p(t) {
                                    (i = t), window.requestAnimationFrame(u);
                                }
                                function m() {
                                    !n && s && a && (window.requestAnimationFrame(p), (a = !1));
                                }
                                return (
                                    (t.registerAnimation = l),
                                    (t.loadAnimation = function (t) {
                                        var e = new AnimationItem();
                                        return d(e, null), e.setParams(t), e;
                                    }),
                                    (t.setSpeed = function (t, i) {
                                        var s;
                                        for (s = 0; s < r; s += 1) e[s].animation.setSpeed(t, i);
                                    }),
                                    (t.setDirection = function (t, i) {
                                        var s;
                                        for (s = 0; s < r; s += 1) e[s].animation.setDirection(t, i);
                                    }),
                                    (t.play = function (t) {
                                        var i;
                                        for (i = 0; i < r; i += 1) e[i].animation.play(t);
                                    }),
                                    (t.pause = function (t) {
                                        var i;
                                        for (i = 0; i < r; i += 1) e[i].animation.pause(t);
                                    }),
                                    (t.stop = function (t) {
                                        var i;
                                        for (i = 0; i < r; i += 1) e[i].animation.stop(t);
                                    }),
                                    (t.togglePause = function (t) {
                                        var i;
                                        for (i = 0; i < r; i += 1) e[i].animation.togglePause(t);
                                    }),
                                    (t.searchAnimations = function (t, e, i) {
                                        var r,
                                            s = [].concat([].slice.call(document.getElementsByClassName("lottie")), [].slice.call(document.getElementsByClassName("bodymovin"))),
                                            a = s.length;
                                        for (r = 0; r < a; r += 1) i && s[r].setAttribute("data-bm-type", i), l(s[r], t);
                                        if (e && 0 === a) {
                                            i || (i = "svg");
                                            var n = document.getElementsByTagName("body")[0];
                                            n.innerText = "";
                                            var o = createTag("div");
                                            (o.style.width = "100%"), (o.style.height = "100%"), o.setAttribute("data-bm-type", i), n.appendChild(o), l(o, t);
                                        }
                                    }),
                                    (t.resize = function () {
                                        var t;
                                        for (t = 0; t < r; t += 1) e[t].animation.resize();
                                    }),
                                    (t.goToAndStop = function (t, i, s) {
                                        var a;
                                        for (a = 0; a < r; a += 1) e[a].animation.goToAndStop(t, i, s);
                                    }),
                                    (t.destroy = function (t) {
                                        var i;
                                        for (i = r - 1; i >= 0; i -= 1) e[i].animation.destroy(t);
                                    }),
                                    (t.freeze = function () {
                                        n = !0;
                                    }),
                                    (t.unfreeze = function () {
                                        (n = !1), m();
                                    }),
                                    (t.setVolume = function (t, i) {
                                        var s;
                                        for (s = 0; s < r; s += 1) e[s].animation.setVolume(t, i);
                                    }),
                                    (t.mute = function (t) {
                                        var i;
                                        for (i = 0; i < r; i += 1) e[i].animation.mute(t);
                                    }),
                                    (t.unmute = function (t) {
                                        var i;
                                        for (i = 0; i < r; i += 1) e[i].animation.unmute(t);
                                    }),
                                    (t.getRegisteredAnimations = function () {
                                        var t,
                                            i = e.length,
                                            r = [];
                                        for (t = 0; t < i; t += 1) r.push(e[t].animation);
                                        return r;
                                    }),
                                    t
                                );
                            })(),
                            BezierFactory = (function () {
                                var t = {
                                        getBezierEasing: function (t, i, r, s, a) {
                                            var n = a || ("bez_" + t + "_" + i + "_" + r + "_" + s).replace(/\./g, "p");
                                            if (e[n]) return e[n];
                                            var o = new c([t, i, r, s]);
                                            return (e[n] = o), o;
                                        },
                                    },
                                    e = {},
                                    i = 11,
                                    r = 1 / (i - 1),
                                    s = "function" == typeof Float32Array;
                                function a(t, e) {
                                    return 1 - 3 * e + 3 * t;
                                }
                                function n(t, e) {
                                    return 3 * e - 6 * t;
                                }
                                function o(t) {
                                    return 3 * t;
                                }
                                function l(t, e, i) {
                                    return ((a(e, i) * t + n(e, i)) * t + o(e)) * t;
                                }
                                function h(t, e, i) {
                                    return 3 * a(e, i) * t * t + 2 * n(e, i) * t + o(e);
                                }
                                function c(t) {
                                    (this._p = t), (this._mSampleValues = s ? new Float32Array(i) : new Array(i)), (this._precomputed = !1), (this.get = this.get.bind(this));
                                }
                                return (
                                    (c.prototype = {
                                        get: function (t) {
                                            var e = this._p[0],
                                                i = this._p[1],
                                                r = this._p[2],
                                                s = this._p[3];
                                            return this._precomputed || this._precompute(), e === i && r === s ? t : 0 === t ? 0 : 1 === t ? 1 : l(this._getTForX(t), i, s);
                                        },
                                        _precompute: function () {
                                            var t = this._p[0],
                                                e = this._p[1],
                                                i = this._p[2],
                                                r = this._p[3];
                                            (this._precomputed = !0), (t === e && i === r) || this._calcSampleValues();
                                        },
                                        _calcSampleValues: function () {
                                            for (var t = this._p[0], e = this._p[2], s = 0; s < i; ++s) this._mSampleValues[s] = l(s * r, t, e);
                                        },
                                        _getTForX: function (t) {
                                            for (var e = this._p[0], s = this._p[2], a = this._mSampleValues, n = 0, o = 1, c = i - 1; o !== c && a[o] <= t; ++o) n += r;
                                            var d = n + ((t - a[--o]) / (a[o + 1] - a[o])) * r,
                                                u = h(d, e, s);
                                            return u >= 0.001
                                                ? (function (t, e, i, r) {
                                                      for (var s = 0; s < 4; ++s) {
                                                          var a = h(e, i, r);
                                                          if (0 === a) return e;
                                                          e -= (l(e, i, r) - t) / a;
                                                      }
                                                      return e;
                                                  })(t, d, e, s)
                                                : 0 === u
                                                ? d
                                                : (function (t, e, i, r, s) {
                                                      var a,
                                                          n,
                                                          o = 0;
                                                      do {
                                                          (a = l((n = e + (i - e) / 2), r, s) - t) > 0 ? (i = n) : (e = n);
                                                      } while (Math.abs(a) > 1e-7 && ++o < 10);
                                                      return n;
                                                  })(t, n, n + r, e, s);
                                        },
                                    }),
                                    t
                                );
                            })(),
                            pooling = {
                                double: function (t) {
                                    return t.concat(createSizedArray(t.length));
                                },
                            },
                            poolFactory = function (t, e, i) {
                                var r = 0,
                                    s = t,
                                    a = createSizedArray(s);
                                return {
                                    newElement: function () {
                                        return r ? a[(r -= 1)] : e();
                                    },
                                    release: function (t) {
                                        r === s && ((a = pooling.double(a)), (s *= 2)), i && i(t), (a[r] = t), (r += 1);
                                    },
                                };
                            },
                            bezierLengthPool = poolFactory(8, function () {
                                return { addedLength: 0, percents: createTypedArray("float32", getDefaultCurveSegments()), lengths: createTypedArray("float32", getDefaultCurveSegments()) };
                            }),
                            segmentsLengthPool = poolFactory(
                                8,
                                function () {
                                    return { lengths: [], totalLength: 0 };
                                },
                                function (t) {
                                    var e,
                                        i = t.lengths.length;
                                    for (e = 0; e < i; e += 1) bezierLengthPool.release(t.lengths[e]);
                                    t.lengths.length = 0;
                                }
                            );
                        function bezFunction() {
                            var t = Math;
                            function e(t, e, i, r, s, a) {
                                var n = t * r + e * s + i * a - s * r - a * t - i * e;
                                return n > -0.001 && n < 0.001;
                            }
                            var i = function (t, e, i, r) {
                                var s,
                                    a,
                                    n,
                                    o,
                                    l,
                                    h,
                                    c = getDefaultCurveSegments(),
                                    d = 0,
                                    u = [],
                                    p = [],
                                    m = bezierLengthPool.newElement();
                                for (n = i.length, s = 0; s < c; s += 1) {
                                    for (l = s / (c - 1), h = 0, a = 0; a < n; a += 1)
                                        (o = bmPow(1 - l, 3) * t[a] + 3 * bmPow(1 - l, 2) * l * i[a] + 3 * (1 - l) * bmPow(l, 2) * r[a] + bmPow(l, 3) * e[a]), (u[a] = o), null !== p[a] && (h += bmPow(u[a] - p[a], 2)), (p[a] = u[a]);
                                    h && (d += h = bmSqrt(h)), (m.percents[s] = l), (m.lengths[s] = d);
                                }
                                return (m.addedLength = d), m;
                            };
                            function r(t) {
                                (this.segmentLength = 0), (this.points = new Array(t));
                            }
                            function s(t, e) {
                                (this.partialLength = t), (this.point = e);
                            }
                            var a,
                                n =
                                    ((a = {}),
                                    function (t, i, n, o) {
                                        var l = (t[0] + "_" + t[1] + "_" + i[0] + "_" + i[1] + "_" + n[0] + "_" + n[1] + "_" + o[0] + "_" + o[1]).replace(/\./g, "p");
                                        if (!a[l]) {
                                            var h,
                                                c,
                                                d,
                                                u,
                                                p,
                                                m,
                                                f,
                                                g = getDefaultCurveSegments(),
                                                v = 0,
                                                b = null;
                                            2 === t.length && (t[0] !== i[0] || t[1] !== i[1]) && e(t[0], t[1], i[0], i[1], t[0] + n[0], t[1] + n[1]) && e(t[0], t[1], i[0], i[1], i[0] + o[0], i[1] + o[1]) && (g = 2);
                                            var y = new r(g);
                                            for (d = n.length, h = 0; h < g; h += 1) {
                                                for (f = createSizedArray(d), p = h / (g - 1), m = 0, c = 0; c < d; c += 1)
                                                    (u = bmPow(1 - p, 3) * t[c] + 3 * bmPow(1 - p, 2) * p * (t[c] + n[c]) + 3 * (1 - p) * bmPow(p, 2) * (i[c] + o[c]) + bmPow(p, 3) * i[c]),
                                                        (f[c] = u),
                                                        null !== b && (m += bmPow(f[c] - b[c], 2));
                                                (v += m = bmSqrt(m)), (y.points[h] = new s(m, f)), (b = f);
                                            }
                                            (y.segmentLength = v), (a[l] = y);
                                        }
                                        return a[l];
                                    });
                            function o(t, e) {
                                var i = e.percents,
                                    r = e.lengths,
                                    s = i.length,
                                    a = bmFloor((s - 1) * t),
                                    n = t * e.addedLength,
                                    o = 0;
                                if (a === s - 1 || 0 === a || n === r[a]) return i[a];
                                for (var l = r[a] > n ? -1 : 1, h = !0; h; )
                                    if ((r[a] <= n && r[a + 1] > n ? ((o = (n - r[a]) / (r[a + 1] - r[a])), (h = !1)) : (a += l), a < 0 || a >= s - 1)) {
                                        if (a === s - 1) return i[a];
                                        h = !1;
                                    }
                                return i[a] + (i[a + 1] - i[a]) * o;
                            }
                            var l = createTypedArray("float32", 8);
                            return {
                                getSegmentsLength: function (t) {
                                    var e,
                                        r = segmentsLengthPool.newElement(),
                                        s = t.c,
                                        a = t.v,
                                        n = t.o,
                                        o = t.i,
                                        l = t._length,
                                        h = r.lengths,
                                        c = 0;
                                    for (e = 0; e < l - 1; e += 1) (h[e] = i(a[e], a[e + 1], n[e], o[e + 1])), (c += h[e].addedLength);
                                    return s && l && ((h[e] = i(a[e], a[0], n[e], o[0])), (c += h[e].addedLength)), (r.totalLength = c), r;
                                },
                                getNewSegment: function (e, i, r, s, a, n, h) {
                                    a < 0 ? (a = 0) : a > 1 && (a = 1);
                                    var c,
                                        d = o(a, h),
                                        u = o((n = n > 1 ? 1 : n), h),
                                        p = e.length,
                                        m = 1 - d,
                                        f = 1 - u,
                                        g = m * m * m,
                                        v = d * m * m * 3,
                                        b = d * d * m * 3,
                                        y = d * d * d,
                                        w = m * m * f,
                                        x = d * m * f + m * d * f + m * m * u,
                                        E = d * d * f + m * d * u + d * m * u,
                                        C = d * d * u,
                                        S = m * f * f,
                                        T = d * f * f + m * u * f + m * f * u,
                                        _ = d * u * f + m * u * u + d * f * u,
                                        M = d * u * u,
                                        P = f * f * f,
                                        k = u * f * f + f * u * f + f * f * u,
                                        A = u * u * f + f * u * u + u * f * u,
                                        D = u * u * u;
                                    for (c = 0; c < p; c += 1)
                                        (l[4 * c] = t.round(1e3 * (g * e[c] + v * r[c] + b * s[c] + y * i[c])) / 1e3),
                                            (l[4 * c + 1] = t.round(1e3 * (w * e[c] + x * r[c] + E * s[c] + C * i[c])) / 1e3),
                                            (l[4 * c + 2] = t.round(1e3 * (S * e[c] + T * r[c] + _ * s[c] + M * i[c])) / 1e3),
                                            (l[4 * c + 3] = t.round(1e3 * (P * e[c] + k * r[c] + A * s[c] + D * i[c])) / 1e3);
                                    return l;
                                },
                                getPointInSegment: function (e, i, r, s, a, n) {
                                    var l = o(a, n),
                                        h = 1 - l;
                                    return [
                                        t.round(1e3 * (h * h * h * e[0] + (l * h * h + h * l * h + h * h * l) * r[0] + (l * l * h + h * l * l + l * h * l) * s[0] + l * l * l * i[0])) / 1e3,
                                        t.round(1e3 * (h * h * h * e[1] + (l * h * h + h * l * h + h * h * l) * r[1] + (l * l * h + h * l * l + l * h * l) * s[1] + l * l * l * i[1])) / 1e3,
                                    ];
                                },
                                buildBezierData: n,
                                pointOnLine2D: e,
                                pointOnLine3D: function (i, r, s, a, n, o, l, h, c) {
                                    if (0 === s && 0 === o && 0 === c) return e(i, r, a, n, l, h);
                                    var d,
                                        u = t.sqrt(t.pow(a - i, 2) + t.pow(n - r, 2) + t.pow(o - s, 2)),
                                        p = t.sqrt(t.pow(l - i, 2) + t.pow(h - r, 2) + t.pow(c - s, 2)),
                                        m = t.sqrt(t.pow(l - a, 2) + t.pow(h - n, 2) + t.pow(c - o, 2));
                                    return (d = u > p ? (u > m ? u - p - m : m - p - u) : m > p ? m - p - u : p - u - m) > -1e-4 && d < 1e-4;
                                },
                            };
                        }
                        var bez = bezFunction(),
                            initFrame = initialDefaultFrame,
                            mathAbs = Math.abs;
                        function interpolateValue(t, e) {
                            var i,
                                r = this.offsetTime;
                            "multidimensional" === this.propType && (i = createTypedArray("float32", this.pv.length));
                            for (var s, a, n, o, l, h, c, d, u, p = e.lastIndex, m = p, f = this.keyframes.length - 1, g = !0; g; ) {
                                if (((s = this.keyframes[m]), (a = this.keyframes[m + 1]), m === f - 1 && t >= a.t - r)) {
                                    s.h && (s = a), (p = 0);
                                    break;
                                }
                                if (a.t - r > t) {
                                    p = m;
                                    break;
                                }
                                m < f - 1 ? (m += 1) : ((p = 0), (g = !1));
                            }
                            n = this.keyframesMetadata[m] || {};
                            var v,
                                b = a.t - r,
                                y = s.t - r;
                            if (s.to) {
                                n.bezierData || (n.bezierData = bez.buildBezierData(s.s, a.s || s.e, s.to, s.ti));
                                var w = n.bezierData;
                                if (t >= b || t < y) {
                                    var x = t >= b ? w.points.length - 1 : 0;
                                    for (l = w.points[x].point.length, o = 0; o < l; o += 1) i[o] = w.points[x].point[o];
                                } else {
                                    n.__fnct ? (u = n.__fnct) : ((u = BezierFactory.getBezierEasing(s.o.x, s.o.y, s.i.x, s.i.y, s.n).get), (n.__fnct = u)), (h = u((t - y) / (b - y)));
                                    var E,
                                        C = w.segmentLength * h,
                                        S = e.lastFrame < t && e._lastKeyframeIndex === m ? e._lastAddedLength : 0;
                                    for (d = e.lastFrame < t && e._lastKeyframeIndex === m ? e._lastPoint : 0, g = !0, c = w.points.length; g; ) {
                                        if (((S += w.points[d].partialLength), 0 === C || 0 === h || d === w.points.length - 1)) {
                                            for (l = w.points[d].point.length, o = 0; o < l; o += 1) i[o] = w.points[d].point[o];
                                            break;
                                        }
                                        if (C >= S && C < S + w.points[d + 1].partialLength) {
                                            for (E = (C - S) / w.points[d + 1].partialLength, l = w.points[d].point.length, o = 0; o < l; o += 1) i[o] = w.points[d].point[o] + (w.points[d + 1].point[o] - w.points[d].point[o]) * E;
                                            break;
                                        }
                                        d < c - 1 ? (d += 1) : (g = !1);
                                    }
                                    (e._lastPoint = d), (e._lastAddedLength = S - w.points[d].partialLength), (e._lastKeyframeIndex = m);
                                }
                            } else {
                                var T, _, M, P, k;
                                if (((f = s.s.length), (v = a.s || s.e), this.sh && 1 !== s.h))
                                    t >= b
                                        ? ((i[0] = v[0]), (i[1] = v[1]), (i[2] = v[2]))
                                        : t <= y
                                        ? ((i[0] = s.s[0]), (i[1] = s.s[1]), (i[2] = s.s[2]))
                                        : quaternionToEuler(i, slerp(createQuaternion(s.s), createQuaternion(v), (t - y) / (b - y)));
                                else
                                    for (m = 0; m < f; m += 1)
                                        1 !== s.h &&
                                            (t >= b
                                                ? (h = 1)
                                                : t < y
                                                ? (h = 0)
                                                : (s.o.x.constructor === Array
                                                      ? (n.__fnct || (n.__fnct = []),
                                                        n.__fnct[m]
                                                            ? (u = n.__fnct[m])
                                                            : ((T = void 0 === s.o.x[m] ? s.o.x[0] : s.o.x[m]),
                                                              (_ = void 0 === s.o.y[m] ? s.o.y[0] : s.o.y[m]),
                                                              (M = void 0 === s.i.x[m] ? s.i.x[0] : s.i.x[m]),
                                                              (P = void 0 === s.i.y[m] ? s.i.y[0] : s.i.y[m]),
                                                              (u = BezierFactory.getBezierEasing(T, _, M, P).get),
                                                              (n.__fnct[m] = u)))
                                                      : n.__fnct
                                                      ? (u = n.__fnct)
                                                      : ((T = s.o.x), (_ = s.o.y), (M = s.i.x), (P = s.i.y), (u = BezierFactory.getBezierEasing(T, _, M, P).get), (s.keyframeMetadata = u)),
                                                  (h = u((t - y) / (b - y))))),
                                            (v = a.s || s.e),
                                            (k = 1 === s.h ? s.s[m] : s.s[m] + (v[m] - s.s[m]) * h),
                                            "multidimensional" === this.propType ? (i[m] = k) : (i = k);
                            }
                            return (e.lastIndex = p), i;
                        }
                        function slerp(t, e, i) {
                            var r,
                                s,
                                a,
                                n,
                                o,
                                l = [],
                                h = t[0],
                                c = t[1],
                                d = t[2],
                                u = t[3],
                                p = e[0],
                                m = e[1],
                                f = e[2],
                                g = e[3];
                            return (
                                (s = h * p + c * m + d * f + u * g) < 0 && ((s = -s), (p = -p), (m = -m), (f = -f), (g = -g)),
                                1 - s > 1e-6 ? ((r = Math.acos(s)), (a = Math.sin(r)), (n = Math.sin((1 - i) * r) / a), (o = Math.sin(i * r) / a)) : ((n = 1 - i), (o = i)),
                                (l[0] = n * h + o * p),
                                (l[1] = n * c + o * m),
                                (l[2] = n * d + o * f),
                                (l[3] = n * u + o * g),
                                l
                            );
                        }
                        function quaternionToEuler(t, e) {
                            var i = e[0],
                                r = e[1],
                                s = e[2],
                                a = e[3],
                                n = Math.atan2(2 * r * a - 2 * i * s, 1 - 2 * r * r - 2 * s * s),
                                o = Math.asin(2 * i * r + 2 * s * a),
                                l = Math.atan2(2 * i * a - 2 * r * s, 1 - 2 * i * i - 2 * s * s);
                            (t[0] = n / degToRads), (t[1] = o / degToRads), (t[2] = l / degToRads);
                        }
                        function createQuaternion(t) {
                            var e = t[0] * degToRads,
                                i = t[1] * degToRads,
                                r = t[2] * degToRads,
                                s = Math.cos(e / 2),
                                a = Math.cos(i / 2),
                                n = Math.cos(r / 2),
                                o = Math.sin(e / 2),
                                l = Math.sin(i / 2),
                                h = Math.sin(r / 2);
                            return [o * l * n + s * a * h, o * a * n + s * l * h, s * l * n - o * a * h, s * a * n - o * l * h];
                        }
                        function getValueAtCurrentTime() {
                            var t = this.comp.renderedFrame - this.offsetTime,
                                e = this.keyframes[0].t - this.offsetTime,
                                i = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
                            if (!(t === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= i && t >= i) || (this._caching.lastFrame < e && t < e))))) {
                                this._caching.lastFrame >= t && ((this._caching._lastKeyframeIndex = -1), (this._caching.lastIndex = 0));
                                var r = this.interpolateValue(t, this._caching);
                                this.pv = r;
                            }
                            return (this._caching.lastFrame = t), this.pv;
                        }
                        function setVValue(t) {
                            var e;
                            if ("unidimensional" === this.propType) (e = t * this.mult), mathAbs(this.v - e) > 1e-5 && ((this.v = e), (this._mdf = !0));
                            else for (var i = 0, r = this.v.length; i < r; ) (e = t[i] * this.mult), mathAbs(this.v[i] - e) > 1e-5 && ((this.v[i] = e), (this._mdf = !0)), (i += 1);
                        }
                        function processEffectsSequence() {
                            if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length)
                                if (this.lock) this.setVValue(this.pv);
                                else {
                                    var t;
                                    (this.lock = !0), (this._mdf = this._isFirstFrame);
                                    var e = this.effectsSequence.length,
                                        i = this.kf ? this.pv : this.data.k;
                                    for (t = 0; t < e; t += 1) i = this.effectsSequence[t](i);
                                    this.setVValue(i), (this._isFirstFrame = !1), (this.lock = !1), (this.frameId = this.elem.globalData.frameId);
                                }
                        }
                        function addEffect(t) {
                            this.effectsSequence.push(t), this.container.addDynamicProperty(this);
                        }
                        function ValueProperty(t, e, i, r) {
                            (this.propType = "unidimensional"),
                                (this.mult = i || 1),
                                (this.data = e),
                                (this.v = i ? e.k * i : e.k),
                                (this.pv = e.k),
                                (this._mdf = !1),
                                (this.elem = t),
                                (this.container = r),
                                (this.comp = t.comp),
                                (this.k = !1),
                                (this.kf = !1),
                                (this.vel = 0),
                                (this.effectsSequence = []),
                                (this._isFirstFrame = !0),
                                (this.getValue = processEffectsSequence),
                                (this.setVValue = setVValue),
                                (this.addEffect = addEffect);
                        }
                        function MultiDimensionalProperty(t, e, i, r) {
                            var s;
                            (this.propType = "multidimensional"), (this.mult = i || 1), (this.data = e), (this._mdf = !1), (this.elem = t), (this.container = r), (this.comp = t.comp), (this.k = !1), (this.kf = !1), (this.frameId = -1);
                            var a = e.k.length;
                            for (this.v = createTypedArray("float32", a), this.pv = createTypedArray("float32", a), this.vel = createTypedArray("float32", a), s = 0; s < a; s += 1) (this.v[s] = e.k[s] * this.mult), (this.pv[s] = e.k[s]);
                            (this._isFirstFrame = !0), (this.effectsSequence = []), (this.getValue = processEffectsSequence), (this.setVValue = setVValue), (this.addEffect = addEffect);
                        }
                        function KeyframedValueProperty(t, e, i, r) {
                            (this.propType = "unidimensional"),
                                (this.keyframes = e.k),
                                (this.keyframesMetadata = []),
                                (this.offsetTime = t.data.st),
                                (this.frameId = -1),
                                (this._caching = { lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1 }),
                                (this.k = !0),
                                (this.kf = !0),
                                (this.data = e),
                                (this.mult = i || 1),
                                (this.elem = t),
                                (this.container = r),
                                (this.comp = t.comp),
                                (this.v = initFrame),
                                (this.pv = initFrame),
                                (this._isFirstFrame = !0),
                                (this.getValue = processEffectsSequence),
                                (this.setVValue = setVValue),
                                (this.interpolateValue = interpolateValue),
                                (this.effectsSequence = [getValueAtCurrentTime.bind(this)]),
                                (this.addEffect = addEffect);
                        }
                        function KeyframedMultidimensionalProperty(t, e, i, r) {
                            var s;
                            this.propType = "multidimensional";
                            var a,
                                n,
                                o,
                                l,
                                h = e.k.length;
                            for (s = 0; s < h - 1; s += 1)
                                e.k[s].to &&
                                    e.k[s].s &&
                                    e.k[s + 1] &&
                                    e.k[s + 1].s &&
                                    ((a = e.k[s].s),
                                    (n = e.k[s + 1].s),
                                    (o = e.k[s].to),
                                    (l = e.k[s].ti),
                                    ((2 === a.length && (a[0] !== n[0] || a[1] !== n[1]) && bez.pointOnLine2D(a[0], a[1], n[0], n[1], a[0] + o[0], a[1] + o[1]) && bez.pointOnLine2D(a[0], a[1], n[0], n[1], n[0] + l[0], n[1] + l[1])) ||
                                        (3 === a.length &&
                                            (a[0] !== n[0] || a[1] !== n[1] || a[2] !== n[2]) &&
                                            bez.pointOnLine3D(a[0], a[1], a[2], n[0], n[1], n[2], a[0] + o[0], a[1] + o[1], a[2] + o[2]) &&
                                            bez.pointOnLine3D(a[0], a[1], a[2], n[0], n[1], n[2], n[0] + l[0], n[1] + l[1], n[2] + l[2]))) &&
                                        ((e.k[s].to = null), (e.k[s].ti = null)),
                                    a[0] === n[0] && a[1] === n[1] && 0 === o[0] && 0 === o[1] && 0 === l[0] && 0 === l[1] && (2 === a.length || (a[2] === n[2] && 0 === o[2] && 0 === l[2])) && ((e.k[s].to = null), (e.k[s].ti = null)));
                            (this.effectsSequence = [getValueAtCurrentTime.bind(this)]),
                                (this.data = e),
                                (this.keyframes = e.k),
                                (this.keyframesMetadata = []),
                                (this.offsetTime = t.data.st),
                                (this.k = !0),
                                (this.kf = !0),
                                (this._isFirstFrame = !0),
                                (this.mult = i || 1),
                                (this.elem = t),
                                (this.container = r),
                                (this.comp = t.comp),
                                (this.getValue = processEffectsSequence),
                                (this.setVValue = setVValue),
                                (this.interpolateValue = interpolateValue),
                                (this.frameId = -1);
                            var c = e.k[0].s.length;
                            for (this.v = createTypedArray("float32", c), this.pv = createTypedArray("float32", c), s = 0; s < c; s += 1) (this.v[s] = initFrame), (this.pv[s] = initFrame);
                            (this._caching = { lastFrame: initFrame, lastIndex: 0, value: createTypedArray("float32", c) }), (this.addEffect = addEffect);
                        }
                        var PropertyFactory = {
                            getProp: function (t, e, i, r, s) {
                                var a;
                                if ((e.sid && (e = t.globalData.slotManager.getProp(e)), e.k.length))
                                    if ("number" == typeof e.k[0]) a = new MultiDimensionalProperty(t, e, r, s);
                                    else
                                        switch (i) {
                                            case 0:
                                                a = new KeyframedValueProperty(t, e, r, s);
                                                break;
                                            case 1:
                                                a = new KeyframedMultidimensionalProperty(t, e, r, s);
                                        }
                                else a = new ValueProperty(t, e, r, s);
                                return a.effectsSequence.length && s.addDynamicProperty(a), a;
                            },
                        };
                        function DynamicPropertyContainer() {}
                        DynamicPropertyContainer.prototype = {
                            addDynamicProperty: function (t) {
                                -1 === this.dynamicProperties.indexOf(t) && (this.dynamicProperties.push(t), this.container.addDynamicProperty(this), (this._isAnimated = !0));
                            },
                            iterateDynamicProperties: function () {
                                var t;
                                this._mdf = !1;
                                var e = this.dynamicProperties.length;
                                for (t = 0; t < e; t += 1) this.dynamicProperties[t].getValue(), this.dynamicProperties[t]._mdf && (this._mdf = !0);
                            },
                            initDynamicPropertyContainer: function (t) {
                                (this.container = t), (this.dynamicProperties = []), (this._mdf = !1), (this._isAnimated = !1);
                            },
                        };
                        var pointPool = poolFactory(8, function () {
                            return createTypedArray("float32", 2);
                        });
                        function ShapePath() {
                            (this.c = !1), (this._length = 0), (this._maxLength = 8), (this.v = createSizedArray(this._maxLength)), (this.o = createSizedArray(this._maxLength)), (this.i = createSizedArray(this._maxLength));
                        }
                        (ShapePath.prototype.setPathData = function (t, e) {
                            (this.c = t), this.setLength(e);
                            for (var i = 0; i < e; ) (this.v[i] = pointPool.newElement()), (this.o[i] = pointPool.newElement()), (this.i[i] = pointPool.newElement()), (i += 1);
                        }),
                            (ShapePath.prototype.setLength = function (t) {
                                for (; this._maxLength < t; ) this.doubleArrayLength();
                                this._length = t;
                            }),
                            (ShapePath.prototype.doubleArrayLength = function () {
                                (this.v = this.v.concat(createSizedArray(this._maxLength))), (this.i = this.i.concat(createSizedArray(this._maxLength))), (this.o = this.o.concat(createSizedArray(this._maxLength))), (this._maxLength *= 2);
                            }),
                            (ShapePath.prototype.setXYAt = function (t, e, i, r, s) {
                                var a;
                                switch (((this._length = Math.max(this._length, r + 1)), this._length >= this._maxLength && this.doubleArrayLength(), i)) {
                                    case "v":
                                        a = this.v;
                                        break;
                                    case "i":
                                        a = this.i;
                                        break;
                                    case "o":
                                        a = this.o;
                                        break;
                                    default:
                                        a = [];
                                }
                                (!a[r] || (a[r] && !s)) && (a[r] = pointPool.newElement()), (a[r][0] = t), (a[r][1] = e);
                            }),
                            (ShapePath.prototype.setTripleAt = function (t, e, i, r, s, a, n, o) {
                                this.setXYAt(t, e, "v", n, o), this.setXYAt(i, r, "o", n, o), this.setXYAt(s, a, "i", n, o);
                            }),
                            (ShapePath.prototype.reverse = function () {
                                var t = new ShapePath();
                                t.setPathData(this.c, this._length);
                                var e = this.v,
                                    i = this.o,
                                    r = this.i,
                                    s = 0;
                                this.c && (t.setTripleAt(e[0][0], e[0][1], r[0][0], r[0][1], i[0][0], i[0][1], 0, !1), (s = 1));
                                var a,
                                    n = this._length - 1,
                                    o = this._length;
                                for (a = s; a < o; a += 1) t.setTripleAt(e[n][0], e[n][1], r[n][0], r[n][1], i[n][0], i[n][1], a, !1), (n -= 1);
                                return t;
                            }),
                            (ShapePath.prototype.length = function () {
                                return this._length;
                            });
                        var shapePool =
                                ((factory = poolFactory(
                                    4,
                                    function () {
                                        return new ShapePath();
                                    },
                                    function (t) {
                                        var e,
                                            i = t._length;
                                        for (e = 0; e < i; e += 1) pointPool.release(t.v[e]), pointPool.release(t.i[e]), pointPool.release(t.o[e]), (t.v[e] = null), (t.i[e] = null), (t.o[e] = null);
                                        (t._length = 0), (t.c = !1);
                                    }
                                )),
                                (factory.clone = function (t) {
                                    var e,
                                        i = factory.newElement(),
                                        r = void 0 === t._length ? t.v.length : t._length;
                                    for (i.setLength(r), i.c = t.c, e = 0; e < r; e += 1) i.setTripleAt(t.v[e][0], t.v[e][1], t.o[e][0], t.o[e][1], t.i[e][0], t.i[e][1], e);
                                    return i;
                                }),
                                factory),
                            factory;
                        function ShapeCollection() {
                            (this._length = 0), (this._maxLength = 4), (this.shapes = createSizedArray(this._maxLength));
                        }
                        (ShapeCollection.prototype.addShape = function (t) {
                            this._length === this._maxLength && ((this.shapes = this.shapes.concat(createSizedArray(this._maxLength))), (this._maxLength *= 2)), (this.shapes[this._length] = t), (this._length += 1);
                        }),
                            (ShapeCollection.prototype.releaseShapes = function () {
                                var t;
                                for (t = 0; t < this._length; t += 1) shapePool.release(this.shapes[t]);
                                this._length = 0;
                            });
                        var shapeCollectionPool =
                                ((ob = {
                                    newShapeCollection: function () {
                                        return _length ? pool[(_length -= 1)] : new ShapeCollection();
                                    },
                                    release: function (t) {
                                        var e,
                                            i = t._length;
                                        for (e = 0; e < i; e += 1) shapePool.release(t.shapes[e]);
                                        (t._length = 0), _length === _maxLength && ((pool = pooling.double(pool)), (_maxLength *= 2)), (pool[_length] = t), (_length += 1);
                                    },
                                }),
                                (_length = 0),
                                (_maxLength = 4),
                                (pool = createSizedArray(_maxLength)),
                                ob),
                            ob,
                            _length,
                            _maxLength,
                            pool,
                            ShapePropertyFactory = (function () {
                                var t = -999999;
                                function e(t, e, i) {
                                    var r,
                                        s,
                                        a,
                                        n,
                                        o,
                                        l,
                                        h,
                                        c,
                                        d,
                                        u = i.lastIndex,
                                        p = this.keyframes;
                                    if (t < p[0].t - this.offsetTime) (r = p[0].s[0]), (a = !0), (u = 0);
                                    else if (t >= p[p.length - 1].t - this.offsetTime) (r = p[p.length - 1].s ? p[p.length - 1].s[0] : p[p.length - 2].e[0]), (a = !0);
                                    else {
                                        for (var m, f, g, v = u, b = p.length - 1, y = !0; y && ((m = p[v]), !((f = p[v + 1]).t - this.offsetTime > t)); ) v < b - 1 ? (v += 1) : (y = !1);
                                        if (((g = this.keyframesMetadata[v] || {}), (u = v), !(a = 1 === m.h))) {
                                            if (t >= f.t - this.offsetTime) c = 1;
                                            else if (t < m.t - this.offsetTime) c = 0;
                                            else {
                                                var w;
                                                g.__fnct ? (w = g.__fnct) : ((w = BezierFactory.getBezierEasing(m.o.x, m.o.y, m.i.x, m.i.y).get), (g.__fnct = w)),
                                                    (c = w((t - (m.t - this.offsetTime)) / (f.t - this.offsetTime - (m.t - this.offsetTime))));
                                            }
                                            s = f.s ? f.s[0] : m.e[0];
                                        }
                                        r = m.s[0];
                                    }
                                    for (l = e._length, h = r.i[0].length, i.lastIndex = u, n = 0; n < l; n += 1)
                                        for (o = 0; o < h; o += 1)
                                            (d = a ? r.i[n][o] : r.i[n][o] + (s.i[n][o] - r.i[n][o]) * c),
                                                (e.i[n][o] = d),
                                                (d = a ? r.o[n][o] : r.o[n][o] + (s.o[n][o] - r.o[n][o]) * c),
                                                (e.o[n][o] = d),
                                                (d = a ? r.v[n][o] : r.v[n][o] + (s.v[n][o] - r.v[n][o]) * c),
                                                (e.v[n][o] = d);
                                }
                                function i() {
                                    var e = this.comp.renderedFrame - this.offsetTime,
                                        i = this.keyframes[0].t - this.offsetTime,
                                        r = this.keyframes[this.keyframes.length - 1].t - this.offsetTime,
                                        s = this._caching.lastFrame;
                                    return (
                                        (s !== t && ((s < i && e < i) || (s > r && e > r))) || ((this._caching.lastIndex = s < e ? this._caching.lastIndex : 0), this.interpolateShape(e, this.pv, this._caching)),
                                        (this._caching.lastFrame = e),
                                        this.pv
                                    );
                                }
                                function r() {
                                    this.paths = this.localShapeCollection;
                                }
                                function s(t) {
                                    (function (t, e) {
                                        if (t._length !== e._length || t.c !== e.c) return !1;
                                        var i,
                                            r = t._length;
                                        for (i = 0; i < r; i += 1)
                                            if (t.v[i][0] !== e.v[i][0] || t.v[i][1] !== e.v[i][1] || t.o[i][0] !== e.o[i][0] || t.o[i][1] !== e.o[i][1] || t.i[i][0] !== e.i[i][0] || t.i[i][1] !== e.i[i][1]) return !1;
                                        return !0;
                                    })(this.v, t) || ((this.v = shapePool.clone(t)), this.localShapeCollection.releaseShapes(), this.localShapeCollection.addShape(this.v), (this._mdf = !0), (this.paths = this.localShapeCollection));
                                }
                                function a() {
                                    if (this.elem.globalData.frameId !== this.frameId)
                                        if (this.effectsSequence.length)
                                            if (this.lock) this.setVValue(this.pv);
                                            else {
                                                var t, e;
                                                (this.lock = !0), (this._mdf = !1), (t = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k);
                                                var i = this.effectsSequence.length;
                                                for (e = 0; e < i; e += 1) t = this.effectsSequence[e](t);
                                                this.setVValue(t), (this.lock = !1), (this.frameId = this.elem.globalData.frameId);
                                            }
                                        else this._mdf = !1;
                                }
                                function n(t, e, i) {
                                    (this.propType = "shape"), (this.comp = t.comp), (this.container = t), (this.elem = t), (this.data = e), (this.k = !1), (this.kf = !1), (this._mdf = !1);
                                    var s = 3 === i ? e.pt.k : e.ks.k;
                                    (this.v = shapePool.clone(s)),
                                        (this.pv = shapePool.clone(this.v)),
                                        (this.localShapeCollection = shapeCollectionPool.newShapeCollection()),
                                        (this.paths = this.localShapeCollection),
                                        this.paths.addShape(this.v),
                                        (this.reset = r),
                                        (this.effectsSequence = []);
                                }
                                function o(t) {
                                    this.effectsSequence.push(t), this.container.addDynamicProperty(this);
                                }
                                function l(e, s, a) {
                                    (this.propType = "shape"),
                                        (this.comp = e.comp),
                                        (this.elem = e),
                                        (this.container = e),
                                        (this.offsetTime = e.data.st),
                                        (this.keyframes = 3 === a ? s.pt.k : s.ks.k),
                                        (this.keyframesMetadata = []),
                                        (this.k = !0),
                                        (this.kf = !0);
                                    var n = this.keyframes[0].s[0].i.length;
                                    (this.v = shapePool.newElement()),
                                        this.v.setPathData(this.keyframes[0].s[0].c, n),
                                        (this.pv = shapePool.clone(this.v)),
                                        (this.localShapeCollection = shapeCollectionPool.newShapeCollection()),
                                        (this.paths = this.localShapeCollection),
                                        this.paths.addShape(this.v),
                                        (this.lastFrame = t),
                                        (this.reset = r),
                                        (this._caching = { lastFrame: t, lastIndex: 0 }),
                                        (this.effectsSequence = [i.bind(this)]);
                                }
                                (n.prototype.interpolateShape = e),
                                    (n.prototype.getValue = a),
                                    (n.prototype.setVValue = s),
                                    (n.prototype.addEffect = o),
                                    (l.prototype.getValue = a),
                                    (l.prototype.interpolateShape = e),
                                    (l.prototype.setVValue = s),
                                    (l.prototype.addEffect = o);
                                var h = (function () {
                                        var t = roundCorner;
                                        function e(t, e) {
                                            (this.v = shapePool.newElement()),
                                                this.v.setPathData(!0, 4),
                                                (this.localShapeCollection = shapeCollectionPool.newShapeCollection()),
                                                (this.paths = this.localShapeCollection),
                                                this.localShapeCollection.addShape(this.v),
                                                (this.d = e.d),
                                                (this.elem = t),
                                                (this.comp = t.comp),
                                                (this.frameId = -1),
                                                this.initDynamicPropertyContainer(t),
                                                (this.p = PropertyFactory.getProp(t, e.p, 1, 0, this)),
                                                (this.s = PropertyFactory.getProp(t, e.s, 1, 0, this)),
                                                this.dynamicProperties.length ? (this.k = !0) : ((this.k = !1), this.convertEllToPath());
                                        }
                                        return (
                                            (e.prototype = {
                                                reset: r,
                                                getValue: function () {
                                                    this.elem.globalData.frameId !== this.frameId && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties(), this._mdf && this.convertEllToPath());
                                                },
                                                convertEllToPath: function () {
                                                    var e = this.p.v[0],
                                                        i = this.p.v[1],
                                                        r = this.s.v[0] / 2,
                                                        s = this.s.v[1] / 2,
                                                        a = 3 !== this.d,
                                                        n = this.v;
                                                    (n.v[0][0] = e),
                                                        (n.v[0][1] = i - s),
                                                        (n.v[1][0] = a ? e + r : e - r),
                                                        (n.v[1][1] = i),
                                                        (n.v[2][0] = e),
                                                        (n.v[2][1] = i + s),
                                                        (n.v[3][0] = a ? e - r : e + r),
                                                        (n.v[3][1] = i),
                                                        (n.i[0][0] = a ? e - r * t : e + r * t),
                                                        (n.i[0][1] = i - s),
                                                        (n.i[1][0] = a ? e + r : e - r),
                                                        (n.i[1][1] = i - s * t),
                                                        (n.i[2][0] = a ? e + r * t : e - r * t),
                                                        (n.i[2][1] = i + s),
                                                        (n.i[3][0] = a ? e - r : e + r),
                                                        (n.i[3][1] = i + s * t),
                                                        (n.o[0][0] = a ? e + r * t : e - r * t),
                                                        (n.o[0][1] = i - s),
                                                        (n.o[1][0] = a ? e + r : e - r),
                                                        (n.o[1][1] = i + s * t),
                                                        (n.o[2][0] = a ? e - r * t : e + r * t),
                                                        (n.o[2][1] = i + s),
                                                        (n.o[3][0] = a ? e - r : e + r),
                                                        (n.o[3][1] = i - s * t);
                                                },
                                            }),
                                            extendPrototype([DynamicPropertyContainer], e),
                                            e
                                        );
                                    })(),
                                    c = (function () {
                                        function t(t, e) {
                                            (this.v = shapePool.newElement()),
                                                this.v.setPathData(!0, 0),
                                                (this.elem = t),
                                                (this.comp = t.comp),
                                                (this.data = e),
                                                (this.frameId = -1),
                                                (this.d = e.d),
                                                this.initDynamicPropertyContainer(t),
                                                1 === e.sy
                                                    ? ((this.ir = PropertyFactory.getProp(t, e.ir, 0, 0, this)), (this.is = PropertyFactory.getProp(t, e.is, 0, 0.01, this)), (this.convertToPath = this.convertStarToPath))
                                                    : (this.convertToPath = this.convertPolygonToPath),
                                                (this.pt = PropertyFactory.getProp(t, e.pt, 0, 0, this)),
                                                (this.p = PropertyFactory.getProp(t, e.p, 1, 0, this)),
                                                (this.r = PropertyFactory.getProp(t, e.r, 0, degToRads, this)),
                                                (this.or = PropertyFactory.getProp(t, e.or, 0, 0, this)),
                                                (this.os = PropertyFactory.getProp(t, e.os, 0, 0.01, this)),
                                                (this.localShapeCollection = shapeCollectionPool.newShapeCollection()),
                                                this.localShapeCollection.addShape(this.v),
                                                (this.paths = this.localShapeCollection),
                                                this.dynamicProperties.length ? (this.k = !0) : ((this.k = !1), this.convertToPath());
                                        }
                                        return (
                                            (t.prototype = {
                                                reset: r,
                                                getValue: function () {
                                                    this.elem.globalData.frameId !== this.frameId && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties(), this._mdf && this.convertToPath());
                                                },
                                                convertStarToPath: function () {
                                                    var t,
                                                        e,
                                                        i,
                                                        r,
                                                        s = 2 * Math.floor(this.pt.v),
                                                        a = (2 * Math.PI) / s,
                                                        n = !0,
                                                        o = this.or.v,
                                                        l = this.ir.v,
                                                        h = this.os.v,
                                                        c = this.is.v,
                                                        d = (2 * Math.PI * o) / (2 * s),
                                                        u = (2 * Math.PI * l) / (2 * s),
                                                        p = -Math.PI / 2;
                                                    p += this.r.v;
                                                    var m = 3 === this.data.d ? -1 : 1;
                                                    for (this.v._length = 0, t = 0; t < s; t += 1) {
                                                        (i = n ? h : c), (r = n ? d : u);
                                                        var f = (e = n ? o : l) * Math.cos(p),
                                                            g = e * Math.sin(p),
                                                            v = 0 === f && 0 === g ? 0 : g / Math.sqrt(f * f + g * g),
                                                            b = 0 === f && 0 === g ? 0 : -f / Math.sqrt(f * f + g * g);
                                                        (f += +this.p.v[0]), (g += +this.p.v[1]), this.v.setTripleAt(f, g, f - v * r * i * m, g - b * r * i * m, f + v * r * i * m, g + b * r * i * m, t, !0), (n = !n), (p += a * m);
                                                    }
                                                },
                                                convertPolygonToPath: function () {
                                                    var t,
                                                        e = Math.floor(this.pt.v),
                                                        i = (2 * Math.PI) / e,
                                                        r = this.or.v,
                                                        s = this.os.v,
                                                        a = (2 * Math.PI * r) / (4 * e),
                                                        n = 0.5 * -Math.PI,
                                                        o = 3 === this.data.d ? -1 : 1;
                                                    for (n += this.r.v, this.v._length = 0, t = 0; t < e; t += 1) {
                                                        var l = r * Math.cos(n),
                                                            h = r * Math.sin(n),
                                                            c = 0 === l && 0 === h ? 0 : h / Math.sqrt(l * l + h * h),
                                                            d = 0 === l && 0 === h ? 0 : -l / Math.sqrt(l * l + h * h);
                                                        (l += +this.p.v[0]), (h += +this.p.v[1]), this.v.setTripleAt(l, h, l - c * a * s * o, h - d * a * s * o, l + c * a * s * o, h + d * a * s * o, t, !0), (n += i * o);
                                                    }
                                                    (this.paths.length = 0), (this.paths[0] = this.v);
                                                },
                                            }),
                                            extendPrototype([DynamicPropertyContainer], t),
                                            t
                                        );
                                    })(),
                                    d = (function () {
                                        function t(t, e) {
                                            (this.v = shapePool.newElement()),
                                                (this.v.c = !0),
                                                (this.localShapeCollection = shapeCollectionPool.newShapeCollection()),
                                                this.localShapeCollection.addShape(this.v),
                                                (this.paths = this.localShapeCollection),
                                                (this.elem = t),
                                                (this.comp = t.comp),
                                                (this.frameId = -1),
                                                (this.d = e.d),
                                                this.initDynamicPropertyContainer(t),
                                                (this.p = PropertyFactory.getProp(t, e.p, 1, 0, this)),
                                                (this.s = PropertyFactory.getProp(t, e.s, 1, 0, this)),
                                                (this.r = PropertyFactory.getProp(t, e.r, 0, 0, this)),
                                                this.dynamicProperties.length ? (this.k = !0) : ((this.k = !1), this.convertRectToPath());
                                        }
                                        return (
                                            (t.prototype = {
                                                convertRectToPath: function () {
                                                    var t = this.p.v[0],
                                                        e = this.p.v[1],
                                                        i = this.s.v[0] / 2,
                                                        r = this.s.v[1] / 2,
                                                        s = bmMin(i, r, this.r.v),
                                                        a = s * (1 - roundCorner);
                                                    (this.v._length = 0),
                                                        2 === this.d || 1 === this.d
                                                            ? (this.v.setTripleAt(t + i, e - r + s, t + i, e - r + s, t + i, e - r + a, 0, !0),
                                                              this.v.setTripleAt(t + i, e + r - s, t + i, e + r - a, t + i, e + r - s, 1, !0),
                                                              0 !== s
                                                                  ? (this.v.setTripleAt(t + i - s, e + r, t + i - s, e + r, t + i - a, e + r, 2, !0),
                                                                    this.v.setTripleAt(t - i + s, e + r, t - i + a, e + r, t - i + s, e + r, 3, !0),
                                                                    this.v.setTripleAt(t - i, e + r - s, t - i, e + r - s, t - i, e + r - a, 4, !0),
                                                                    this.v.setTripleAt(t - i, e - r + s, t - i, e - r + a, t - i, e - r + s, 5, !0),
                                                                    this.v.setTripleAt(t - i + s, e - r, t - i + s, e - r, t - i + a, e - r, 6, !0),
                                                                    this.v.setTripleAt(t + i - s, e - r, t + i - a, e - r, t + i - s, e - r, 7, !0))
                                                                  : (this.v.setTripleAt(t - i, e + r, t - i + a, e + r, t - i, e + r, 2), this.v.setTripleAt(t - i, e - r, t - i, e - r + a, t - i, e - r, 3)))
                                                            : (this.v.setTripleAt(t + i, e - r + s, t + i, e - r + a, t + i, e - r + s, 0, !0),
                                                              0 !== s
                                                                  ? (this.v.setTripleAt(t + i - s, e - r, t + i - s, e - r, t + i - a, e - r, 1, !0),
                                                                    this.v.setTripleAt(t - i + s, e - r, t - i + a, e - r, t - i + s, e - r, 2, !0),
                                                                    this.v.setTripleAt(t - i, e - r + s, t - i, e - r + s, t - i, e - r + a, 3, !0),
                                                                    this.v.setTripleAt(t - i, e + r - s, t - i, e + r - a, t - i, e + r - s, 4, !0),
                                                                    this.v.setTripleAt(t - i + s, e + r, t - i + s, e + r, t - i + a, e + r, 5, !0),
                                                                    this.v.setTripleAt(t + i - s, e + r, t + i - a, e + r, t + i - s, e + r, 6, !0),
                                                                    this.v.setTripleAt(t + i, e + r - s, t + i, e + r - s, t + i, e + r - a, 7, !0))
                                                                  : (this.v.setTripleAt(t - i, e - r, t - i + a, e - r, t - i, e - r, 1, !0),
                                                                    this.v.setTripleAt(t - i, e + r, t - i, e + r - a, t - i, e + r, 2, !0),
                                                                    this.v.setTripleAt(t + i, e + r, t + i - a, e + r, t + i, e + r, 3, !0)));
                                                },
                                                getValue: function () {
                                                    this.elem.globalData.frameId !== this.frameId && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties(), this._mdf && this.convertRectToPath());
                                                },
                                                reset: r,
                                            }),
                                            extendPrototype([DynamicPropertyContainer], t),
                                            t
                                        );
                                    })(),
                                    u = {
                                        getShapeProp: function (t, e, i) {
                                            var r;
                                            return (
                                                3 === i || 4 === i ? (r = (3 === i ? e.pt : e.ks).k.length ? new l(t, e, i) : new n(t, e, i)) : 5 === i ? (r = new d(t, e)) : 6 === i ? (r = new h(t, e)) : 7 === i && (r = new c(t, e)),
                                                r.k && t.addDynamicProperty(r),
                                                r
                                            );
                                        },
                                        getConstructorFunction: function () {
                                            return n;
                                        },
                                        getKeyframedConstructorFunction: function () {
                                            return l;
                                        },
                                    };
                                return u;
                            })(),
                            Matrix = (function () {
                                var t = Math.cos,
                                    e = Math.sin,
                                    i = Math.tan,
                                    r = Math.round;
                                function s() {
                                    return (
                                        (this.props[0] = 1),
                                        (this.props[1] = 0),
                                        (this.props[2] = 0),
                                        (this.props[3] = 0),
                                        (this.props[4] = 0),
                                        (this.props[5] = 1),
                                        (this.props[6] = 0),
                                        (this.props[7] = 0),
                                        (this.props[8] = 0),
                                        (this.props[9] = 0),
                                        (this.props[10] = 1),
                                        (this.props[11] = 0),
                                        (this.props[12] = 0),
                                        (this.props[13] = 0),
                                        (this.props[14] = 0),
                                        (this.props[15] = 1),
                                        this
                                    );
                                }
                                function a(i) {
                                    if (0 === i) return this;
                                    var r = t(i),
                                        s = e(i);
                                    return this._t(r, -s, 0, 0, s, r, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
                                }
                                function n(i) {
                                    if (0 === i) return this;
                                    var r = t(i),
                                        s = e(i);
                                    return this._t(1, 0, 0, 0, 0, r, -s, 0, 0, s, r, 0, 0, 0, 0, 1);
                                }
                                function o(i) {
                                    if (0 === i) return this;
                                    var r = t(i),
                                        s = e(i);
                                    return this._t(r, 0, s, 0, 0, 1, 0, 0, -s, 0, r, 0, 0, 0, 0, 1);
                                }
                                function l(i) {
                                    if (0 === i) return this;
                                    var r = t(i),
                                        s = e(i);
                                    return this._t(r, -s, 0, 0, s, r, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
                                }
                                function h(t, e) {
                                    return this._t(1, e, t, 1, 0, 0);
                                }
                                function c(t, e) {
                                    return this.shear(i(t), i(e));
                                }
                                function d(r, s) {
                                    var a = t(s),
                                        n = e(s);
                                    return this._t(a, n, 0, 0, -n, a, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, i(r), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(a, -n, 0, 0, n, a, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
                                }
                                function u(t, e, i) {
                                    return i || 0 === i || (i = 1), 1 === t && 1 === e && 1 === i ? this : this._t(t, 0, 0, 0, 0, e, 0, 0, 0, 0, i, 0, 0, 0, 0, 1);
                                }
                                function p(t, e, i, r, s, a, n, o, l, h, c, d, u, p, m, f) {
                                    return (
                                        (this.props[0] = t),
                                        (this.props[1] = e),
                                        (this.props[2] = i),
                                        (this.props[3] = r),
                                        (this.props[4] = s),
                                        (this.props[5] = a),
                                        (this.props[6] = n),
                                        (this.props[7] = o),
                                        (this.props[8] = l),
                                        (this.props[9] = h),
                                        (this.props[10] = c),
                                        (this.props[11] = d),
                                        (this.props[12] = u),
                                        (this.props[13] = p),
                                        (this.props[14] = m),
                                        (this.props[15] = f),
                                        this
                                    );
                                }
                                function m(t, e, i) {
                                    return (i = i || 0), 0 !== t || 0 !== e || 0 !== i ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, t, e, i, 1) : this;
                                }
                                function f(t, e, i, r, s, a, n, o, l, h, c, d, u, p, m, f) {
                                    var g = this.props;
                                    if (1 === t && 0 === e && 0 === i && 0 === r && 0 === s && 1 === a && 0 === n && 0 === o && 0 === l && 0 === h && 1 === c && 0 === d)
                                        return (g[12] = g[12] * t + g[15] * u), (g[13] = g[13] * a + g[15] * p), (g[14] = g[14] * c + g[15] * m), (g[15] *= f), (this._identityCalculated = !1), this;
                                    var v = g[0],
                                        b = g[1],
                                        y = g[2],
                                        w = g[3],
                                        x = g[4],
                                        E = g[5],
                                        C = g[6],
                                        S = g[7],
                                        T = g[8],
                                        _ = g[9],
                                        M = g[10],
                                        P = g[11],
                                        k = g[12],
                                        A = g[13],
                                        D = g[14],
                                        L = g[15];
                                    return (
                                        (g[0] = v * t + b * s + y * l + w * u),
                                        (g[1] = v * e + b * a + y * h + w * p),
                                        (g[2] = v * i + b * n + y * c + w * m),
                                        (g[3] = v * r + b * o + y * d + w * f),
                                        (g[4] = x * t + E * s + C * l + S * u),
                                        (g[5] = x * e + E * a + C * h + S * p),
                                        (g[6] = x * i + E * n + C * c + S * m),
                                        (g[7] = x * r + E * o + C * d + S * f),
                                        (g[8] = T * t + _ * s + M * l + P * u),
                                        (g[9] = T * e + _ * a + M * h + P * p),
                                        (g[10] = T * i + _ * n + M * c + P * m),
                                        (g[11] = T * r + _ * o + M * d + P * f),
                                        (g[12] = k * t + A * s + D * l + L * u),
                                        (g[13] = k * e + A * a + D * h + L * p),
                                        (g[14] = k * i + A * n + D * c + L * m),
                                        (g[15] = k * r + A * o + D * d + L * f),
                                        (this._identityCalculated = !1),
                                        this
                                    );
                                }
                                function g(t) {
                                    var e = t.props;
                                    return this.transform(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15]);
                                }
                                function v() {
                                    return (
                                        this._identityCalculated ||
                                            ((this._identity = !(
                                                1 !== this.props[0] ||
                                                0 !== this.props[1] ||
                                                0 !== this.props[2] ||
                                                0 !== this.props[3] ||
                                                0 !== this.props[4] ||
                                                1 !== this.props[5] ||
                                                0 !== this.props[6] ||
                                                0 !== this.props[7] ||
                                                0 !== this.props[8] ||
                                                0 !== this.props[9] ||
                                                1 !== this.props[10] ||
                                                0 !== this.props[11] ||
                                                0 !== this.props[12] ||
                                                0 !== this.props[13] ||
                                                0 !== this.props[14] ||
                                                1 !== this.props[15]
                                            )),
                                            (this._identityCalculated = !0)),
                                        this._identity
                                    );
                                }
                                function b(t) {
                                    for (var e = 0; e < 16; ) {
                                        if (t.props[e] !== this.props[e]) return !1;
                                        e += 1;
                                    }
                                    return !0;
                                }
                                function y(t) {
                                    var e;
                                    for (e = 0; e < 16; e += 1) t.props[e] = this.props[e];
                                    return t;
                                }
                                function w(t) {
                                    var e;
                                    for (e = 0; e < 16; e += 1) this.props[e] = t[e];
                                }
                                function x(t, e, i) {
                                    return {
                                        x: t * this.props[0] + e * this.props[4] + i * this.props[8] + this.props[12],
                                        y: t * this.props[1] + e * this.props[5] + i * this.props[9] + this.props[13],
                                        z: t * this.props[2] + e * this.props[6] + i * this.props[10] + this.props[14],
                                    };
                                }
                                function E(t, e, i) {
                                    return t * this.props[0] + e * this.props[4] + i * this.props[8] + this.props[12];
                                }
                                function C(t, e, i) {
                                    return t * this.props[1] + e * this.props[5] + i * this.props[9] + this.props[13];
                                }
                                function S(t, e, i) {
                                    return t * this.props[2] + e * this.props[6] + i * this.props[10] + this.props[14];
                                }
                                function T() {
                                    var t = this.props[0] * this.props[5] - this.props[1] * this.props[4],
                                        e = this.props[5] / t,
                                        i = -this.props[1] / t,
                                        r = -this.props[4] / t,
                                        s = this.props[0] / t,
                                        a = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / t,
                                        n = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / t,
                                        o = new Matrix();
                                    return (o.props[0] = e), (o.props[1] = i), (o.props[4] = r), (o.props[5] = s), (o.props[12] = a), (o.props[13] = n), o;
                                }
                                function _(t) {
                                    return this.getInverseMatrix().applyToPointArray(t[0], t[1], t[2] || 0);
                                }
                                function M(t) {
                                    var e,
                                        i = t.length,
                                        r = [];
                                    for (e = 0; e < i; e += 1) r[e] = _(t[e]);
                                    return r;
                                }
                                function P(t, e, i) {
                                    var r = createTypedArray("float32", 6);
                                    if (this.isIdentity()) (r[0] = t[0]), (r[1] = t[1]), (r[2] = e[0]), (r[3] = e[1]), (r[4] = i[0]), (r[5] = i[1]);
                                    else {
                                        var s = this.props[0],
                                            a = this.props[1],
                                            n = this.props[4],
                                            o = this.props[5],
                                            l = this.props[12],
                                            h = this.props[13];
                                        (r[0] = t[0] * s + t[1] * n + l),
                                            (r[1] = t[0] * a + t[1] * o + h),
                                            (r[2] = e[0] * s + e[1] * n + l),
                                            (r[3] = e[0] * a + e[1] * o + h),
                                            (r[4] = i[0] * s + i[1] * n + l),
                                            (r[5] = i[0] * a + i[1] * o + h);
                                    }
                                    return r;
                                }
                                function k(t, e, i) {
                                    return this.isIdentity()
                                        ? [t, e, i]
                                        : [
                                              t * this.props[0] + e * this.props[4] + i * this.props[8] + this.props[12],
                                              t * this.props[1] + e * this.props[5] + i * this.props[9] + this.props[13],
                                              t * this.props[2] + e * this.props[6] + i * this.props[10] + this.props[14],
                                          ];
                                }
                                function A(t, e) {
                                    if (this.isIdentity()) return t + "," + e;
                                    var i = this.props;
                                    return Math.round(100 * (t * i[0] + e * i[4] + i[12])) / 100 + "," + Math.round(100 * (t * i[1] + e * i[5] + i[13])) / 100;
                                }
                                function D() {
                                    for (var t = 0, e = this.props, i = "matrix3d("; t < 16; ) (i += r(1e4 * e[t]) / 1e4), (i += 15 === t ? ")" : ","), (t += 1);
                                    return i;
                                }
                                function L(t) {
                                    return (t < 1e-6 && t > 0) || (t > -1e-6 && t < 0) ? r(1e4 * t) / 1e4 : t;
                                }
                                function I() {
                                    var t = this.props;
                                    return "matrix(" + L(t[0]) + "," + L(t[1]) + "," + L(t[4]) + "," + L(t[5]) + "," + L(t[12]) + "," + L(t[13]) + ")";
                                }
                                return function () {
                                    (this.reset = s),
                                        (this.rotate = a),
                                        (this.rotateX = n),
                                        (this.rotateY = o),
                                        (this.rotateZ = l),
                                        (this.skew = c),
                                        (this.skewFromAxis = d),
                                        (this.shear = h),
                                        (this.scale = u),
                                        (this.setTransform = p),
                                        (this.translate = m),
                                        (this.transform = f),
                                        (this.multiply = g),
                                        (this.applyToPoint = x),
                                        (this.applyToX = E),
                                        (this.applyToY = C),
                                        (this.applyToZ = S),
                                        (this.applyToPointArray = k),
                                        (this.applyToTriplePoints = P),
                                        (this.applyToPointStringified = A),
                                        (this.toCSS = D),
                                        (this.to2dCSS = I),
                                        (this.clone = y),
                                        (this.cloneFromProps = w),
                                        (this.equals = b),
                                        (this.inversePoints = M),
                                        (this.inversePoint = _),
                                        (this.getInverseMatrix = T),
                                        (this._t = this.transform),
                                        (this.isIdentity = v),
                                        (this._identity = !0),
                                        (this._identityCalculated = !1),
                                        (this.props = createTypedArray("float32", 16)),
                                        this.reset();
                                };
                            })();
                        function _typeof$3(t) {
                            return (
                                (_typeof$3 =
                                    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                        ? function (t) {
                                              return typeof t;
                                          }
                                        : function (t) {
                                              return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                          }),
                                _typeof$3(t)
                            );
                        }
                        var lottie = {},
                            standalone = "__[STANDALONE]__",
                            animationData = "__[ANIMATIONDATA]__",
                            renderer = "";
                        function setLocation(t) {
                            setLocationHref(t);
                        }
                        function searchAnimations() {
                            !0 === standalone ? animationManager.searchAnimations(animationData, standalone, renderer) : animationManager.searchAnimations();
                        }
                        function setSubframeRendering(t) {
                            setSubframeEnabled(t);
                        }
                        function setPrefix(t) {
                            setIdPrefix(t);
                        }
                        function loadAnimation(t) {
                            return !0 === standalone && (t.animationData = JSON.parse(animationData)), animationManager.loadAnimation(t);
                        }
                        function setQuality(t) {
                            if ("string" == typeof t)
                                switch (t) {
                                    case "high":
                                        setDefaultCurveSegments(200);
                                        break;
                                    default:
                                    case "medium":
                                        setDefaultCurveSegments(50);
                                        break;
                                    case "low":
                                        setDefaultCurveSegments(10);
                                }
                            else !isNaN(t) && t > 1 && setDefaultCurveSegments(t);
                            getDefaultCurveSegments() >= 50 ? roundValues(!1) : roundValues(!0);
                        }
                        function inBrowser() {
                            return "undefined" != typeof navigator;
                        }
                        function installPlugin(t, e) {
                            "expressions" === t && setExpressionsPlugin(e);
                        }
                        function getFactory(t) {
                            switch (t) {
                                case "propertyFactory":
                                    return PropertyFactory;
                                case "shapePropertyFactory":
                                    return ShapePropertyFactory;
                                case "matrix":
                                    return Matrix;
                                default:
                                    return null;
                            }
                        }
                        function checkReady() {
                            "complete" === document.readyState && (clearInterval(readyStateCheckInterval), searchAnimations());
                        }
                        function getQueryVariable(t) {
                            for (var e = queryString.split("&"), i = 0; i < e.length; i += 1) {
                                var r = e[i].split("=");
                                if (decodeURIComponent(r[0]) == t) return decodeURIComponent(r[1]);
                            }
                            return null;
                        }
                        (lottie.play = animationManager.play),
                            (lottie.pause = animationManager.pause),
                            (lottie.setLocationHref = setLocation),
                            (lottie.togglePause = animationManager.togglePause),
                            (lottie.setSpeed = animationManager.setSpeed),
                            (lottie.setDirection = animationManager.setDirection),
                            (lottie.stop = animationManager.stop),
                            (lottie.searchAnimations = searchAnimations),
                            (lottie.registerAnimation = animationManager.registerAnimation),
                            (lottie.loadAnimation = loadAnimation),
                            (lottie.setSubframeRendering = setSubframeRendering),
                            (lottie.resize = animationManager.resize),
                            (lottie.goToAndStop = animationManager.goToAndStop),
                            (lottie.destroy = animationManager.destroy),
                            (lottie.setQuality = setQuality),
                            (lottie.inBrowser = inBrowser),
                            (lottie.installPlugin = installPlugin),
                            (lottie.freeze = animationManager.freeze),
                            (lottie.unfreeze = animationManager.unfreeze),
                            (lottie.setVolume = animationManager.setVolume),
                            (lottie.mute = animationManager.mute),
                            (lottie.unmute = animationManager.unmute),
                            (lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations),
                            (lottie.useWebWorker = setWebWorker),
                            (lottie.setIDPrefix = setPrefix),
                            (lottie.__getFactory = getFactory),
                            (lottie.version = "5.12.2");
                        var queryString = "";
                        if (standalone) {
                            var scripts = document.getElementsByTagName("script"),
                                index = scripts.length - 1,
                                myScript = scripts[index] || { src: "" };
                            (queryString = myScript.src ? myScript.src.replace(/^[^\?]+\??/, "") : ""), (renderer = getQueryVariable("renderer"));
                        }
                        var readyStateCheckInterval = setInterval(checkReady, 100);
                        try {
                            "object" !== _typeof$3(exports) && __webpack_require__.amdO;
                        } catch (t) {}
                        var ShapeModifiers = (function () {
                            var t = {},
                                e = {};
                            return (
                                (t.registerModifier = function (t, i) {
                                    e[t] || (e[t] = i);
                                }),
                                (t.getModifier = function (t, i, r) {
                                    return new e[t](i, r);
                                }),
                                t
                            );
                        })();
                        function ShapeModifier() {}
                        function TrimModifier() {}
                        function PuckerAndBloatModifier() {}
                        (ShapeModifier.prototype.initModifierProperties = function () {}),
                            (ShapeModifier.prototype.addShapeToModifier = function () {}),
                            (ShapeModifier.prototype.addShape = function (t) {
                                if (!this.closed) {
                                    t.sh.container.addDynamicProperty(t.sh);
                                    var e = { shape: t.sh, data: t, localShapeCollection: shapeCollectionPool.newShapeCollection() };
                                    this.shapes.push(e), this.addShapeToModifier(e), this._isAnimated && t.setAsAnimated();
                                }
                            }),
                            (ShapeModifier.prototype.init = function (t, e) {
                                (this.shapes = []),
                                    (this.elem = t),
                                    this.initDynamicPropertyContainer(t),
                                    this.initModifierProperties(t, e),
                                    (this.frameId = initialDefaultFrame),
                                    (this.closed = !1),
                                    (this.k = !1),
                                    this.dynamicProperties.length ? (this.k = !0) : this.getValue(!0);
                            }),
                            (ShapeModifier.prototype.processKeys = function () {
                                this.elem.globalData.frameId !== this.frameId && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties());
                            }),
                            extendPrototype([DynamicPropertyContainer], ShapeModifier),
                            extendPrototype([ShapeModifier], TrimModifier),
                            (TrimModifier.prototype.initModifierProperties = function (t, e) {
                                (this.s = PropertyFactory.getProp(t, e.s, 0, 0.01, this)),
                                    (this.e = PropertyFactory.getProp(t, e.e, 0, 0.01, this)),
                                    (this.o = PropertyFactory.getProp(t, e.o, 0, 0, this)),
                                    (this.sValue = 0),
                                    (this.eValue = 0),
                                    (this.getValue = this.processKeys),
                                    (this.m = e.m),
                                    (this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length);
                            }),
                            (TrimModifier.prototype.addShapeToModifier = function (t) {
                                t.pathsData = [];
                            }),
                            (TrimModifier.prototype.calculateShapeEdges = function (t, e, i, r, s) {
                                var a = [];
                                e <= 1 ? a.push({ s: t, e }) : t >= 1 ? a.push({ s: t - 1, e: e - 1 }) : (a.push({ s: t, e: 1 }), a.push({ s: 0, e: e - 1 }));
                                var n,
                                    o,
                                    l = [],
                                    h = a.length;
                                for (n = 0; n < h; n += 1) {
                                    var c, d;
                                    (o = a[n]).e * s < r || o.s * s > r + i || ((c = o.s * s <= r ? 0 : (o.s * s - r) / i), (d = o.e * s >= r + i ? 1 : (o.e * s - r) / i), l.push([c, d]));
                                }
                                return l.length || l.push([0, 0]), l;
                            }),
                            (TrimModifier.prototype.releasePathsData = function (t) {
                                var e,
                                    i = t.length;
                                for (e = 0; e < i; e += 1) segmentsLengthPool.release(t[e]);
                                return (t.length = 0), t;
                            }),
                            (TrimModifier.prototype.processShapes = function (t) {
                                var e, i, r, s;
                                if (this._mdf || t) {
                                    var a = (this.o.v % 360) / 360;
                                    if ((a < 0 && (a += 1), (e = this.s.v > 1 ? 1 + a : this.s.v < 0 ? 0 + a : this.s.v + a) > (i = this.e.v > 1 ? 1 + a : this.e.v < 0 ? 0 + a : this.e.v + a))) {
                                        var n = e;
                                        (e = i), (i = n);
                                    }
                                    (e = 1e-4 * Math.round(1e4 * e)), (i = 1e-4 * Math.round(1e4 * i)), (this.sValue = e), (this.eValue = i);
                                } else (e = this.sValue), (i = this.eValue);
                                var o,
                                    l,
                                    h,
                                    c,
                                    d,
                                    u = this.shapes.length,
                                    p = 0;
                                if (i === e)
                                    for (s = 0; s < u; s += 1)
                                        this.shapes[s].localShapeCollection.releaseShapes(),
                                            (this.shapes[s].shape._mdf = !0),
                                            (this.shapes[s].shape.paths = this.shapes[s].localShapeCollection),
                                            this._mdf && (this.shapes[s].pathsData.length = 0);
                                else if ((1 === i && 0 === e) || (0 === i && 1 === e)) {
                                    if (this._mdf) for (s = 0; s < u; s += 1) (this.shapes[s].pathsData.length = 0), (this.shapes[s].shape._mdf = !0);
                                } else {
                                    var m,
                                        f,
                                        g = [];
                                    for (s = 0; s < u; s += 1)
                                        if ((m = this.shapes[s]).shape._mdf || this._mdf || t || 2 === this.m) {
                                            if (((l = (r = m.shape.paths)._length), (d = 0), !m.shape._mdf && m.pathsData.length)) d = m.totalShapeLength;
                                            else {
                                                for (h = this.releasePathsData(m.pathsData), o = 0; o < l; o += 1) (c = bez.getSegmentsLength(r.shapes[o])), h.push(c), (d += c.totalLength);
                                                (m.totalShapeLength = d), (m.pathsData = h);
                                            }
                                            (p += d), (m.shape._mdf = !0);
                                        } else m.shape.paths = m.localShapeCollection;
                                    var v,
                                        b = e,
                                        y = i,
                                        w = 0;
                                    for (s = u - 1; s >= 0; s -= 1)
                                        if ((m = this.shapes[s]).shape._mdf) {
                                            for (
                                                (f = m.localShapeCollection).releaseShapes(),
                                                    2 === this.m && u > 1 ? ((v = this.calculateShapeEdges(e, i, m.totalShapeLength, w, p)), (w += m.totalShapeLength)) : (v = [[b, y]]),
                                                    l = v.length,
                                                    o = 0;
                                                o < l;
                                                o += 1
                                            ) {
                                                (b = v[o][0]),
                                                    (y = v[o][1]),
                                                    (g.length = 0),
                                                    y <= 1
                                                        ? g.push({ s: m.totalShapeLength * b, e: m.totalShapeLength * y })
                                                        : b >= 1
                                                        ? g.push({ s: m.totalShapeLength * (b - 1), e: m.totalShapeLength * (y - 1) })
                                                        : (g.push({ s: m.totalShapeLength * b, e: m.totalShapeLength }), g.push({ s: 0, e: m.totalShapeLength * (y - 1) }));
                                                var x = this.addShapes(m, g[0]);
                                                if (g[0].s !== g[0].e) {
                                                    if (g.length > 1)
                                                        if (m.shape.paths.shapes[m.shape.paths._length - 1].c) {
                                                            var E = x.pop();
                                                            this.addPaths(x, f), (x = this.addShapes(m, g[1], E));
                                                        } else this.addPaths(x, f), (x = this.addShapes(m, g[1]));
                                                    this.addPaths(x, f);
                                                }
                                            }
                                            m.shape.paths = f;
                                        }
                                }
                            }),
                            (TrimModifier.prototype.addPaths = function (t, e) {
                                var i,
                                    r = t.length;
                                for (i = 0; i < r; i += 1) e.addShape(t[i]);
                            }),
                            (TrimModifier.prototype.addSegment = function (t, e, i, r, s, a, n) {
                                s.setXYAt(e[0], e[1], "o", a), s.setXYAt(i[0], i[1], "i", a + 1), n && s.setXYAt(t[0], t[1], "v", a), s.setXYAt(r[0], r[1], "v", a + 1);
                            }),
                            (TrimModifier.prototype.addSegmentFromArray = function (t, e, i, r) {
                                e.setXYAt(t[1], t[5], "o", i), e.setXYAt(t[2], t[6], "i", i + 1), r && e.setXYAt(t[0], t[4], "v", i), e.setXYAt(t[3], t[7], "v", i + 1);
                            }),
                            (TrimModifier.prototype.addShapes = function (t, e, i) {
                                var r,
                                    s,
                                    a,
                                    n,
                                    o,
                                    l,
                                    h,
                                    c,
                                    d = t.pathsData,
                                    u = t.shape.paths.shapes,
                                    p = t.shape.paths._length,
                                    m = 0,
                                    f = [],
                                    g = !0;
                                for (i ? ((o = i._length), (c = i._length)) : ((i = shapePool.newElement()), (o = 0), (c = 0)), f.push(i), r = 0; r < p; r += 1) {
                                    for (l = d[r].lengths, i.c = u[r].c, a = u[r].c ? l.length : l.length + 1, s = 1; s < a; s += 1)
                                        if (m + (n = l[s - 1]).addedLength < e.s) (m += n.addedLength), (i.c = !1);
                                        else {
                                            if (m > e.e) {
                                                i.c = !1;
                                                break;
                                            }
                                            e.s <= m && e.e >= m + n.addedLength
                                                ? (this.addSegment(u[r].v[s - 1], u[r].o[s - 1], u[r].i[s], u[r].v[s], i, o, g), (g = !1))
                                                : ((h = bez.getNewSegment(u[r].v[s - 1], u[r].v[s], u[r].o[s - 1], u[r].i[s], (e.s - m) / n.addedLength, (e.e - m) / n.addedLength, l[s - 1])),
                                                  this.addSegmentFromArray(h, i, o, g),
                                                  (g = !1),
                                                  (i.c = !1)),
                                                (m += n.addedLength),
                                                (o += 1);
                                        }
                                    if (u[r].c && l.length) {
                                        if (((n = l[s - 1]), m <= e.e)) {
                                            var v = l[s - 1].addedLength;
                                            e.s <= m && e.e >= m + v
                                                ? (this.addSegment(u[r].v[s - 1], u[r].o[s - 1], u[r].i[0], u[r].v[0], i, o, g), (g = !1))
                                                : ((h = bez.getNewSegment(u[r].v[s - 1], u[r].v[0], u[r].o[s - 1], u[r].i[0], (e.s - m) / v, (e.e - m) / v, l[s - 1])), this.addSegmentFromArray(h, i, o, g), (g = !1), (i.c = !1));
                                        } else i.c = !1;
                                        (m += n.addedLength), (o += 1);
                                    }
                                    if ((i._length && (i.setXYAt(i.v[c][0], i.v[c][1], "i", c), i.setXYAt(i.v[i._length - 1][0], i.v[i._length - 1][1], "o", i._length - 1)), m > e.e)) break;
                                    r < p - 1 && ((i = shapePool.newElement()), (g = !0), f.push(i), (o = 0));
                                }
                                return f;
                            }),
                            extendPrototype([ShapeModifier], PuckerAndBloatModifier),
                            (PuckerAndBloatModifier.prototype.initModifierProperties = function (t, e) {
                                (this.getValue = this.processKeys), (this.amount = PropertyFactory.getProp(t, e.a, 0, null, this)), (this._isAnimated = !!this.amount.effectsSequence.length);
                            }),
                            (PuckerAndBloatModifier.prototype.processPath = function (t, e) {
                                var i = e / 100,
                                    r = [0, 0],
                                    s = t._length,
                                    a = 0;
                                for (a = 0; a < s; a += 1) (r[0] += t.v[a][0]), (r[1] += t.v[a][1]);
                                (r[0] /= s), (r[1] /= s);
                                var n,
                                    o,
                                    l,
                                    h,
                                    c,
                                    d,
                                    u = shapePool.newElement();
                                for (u.c = t.c, a = 0; a < s; a += 1)
                                    (n = t.v[a][0] + (r[0] - t.v[a][0]) * i),
                                        (o = t.v[a][1] + (r[1] - t.v[a][1]) * i),
                                        (l = t.o[a][0] + (r[0] - t.o[a][0]) * -i),
                                        (h = t.o[a][1] + (r[1] - t.o[a][1]) * -i),
                                        (c = t.i[a][0] + (r[0] - t.i[a][0]) * -i),
                                        (d = t.i[a][1] + (r[1] - t.i[a][1]) * -i),
                                        u.setTripleAt(n, o, l, h, c, d, a);
                                return u;
                            }),
                            (PuckerAndBloatModifier.prototype.processShapes = function (t) {
                                var e,
                                    i,
                                    r,
                                    s,
                                    a,
                                    n,
                                    o = this.shapes.length,
                                    l = this.amount.v;
                                if (0 !== l)
                                    for (i = 0; i < o; i += 1) {
                                        if (((n = (a = this.shapes[i]).localShapeCollection), a.shape._mdf || this._mdf || t))
                                            for (n.releaseShapes(), a.shape._mdf = !0, e = a.shape.paths.shapes, s = a.shape.paths._length, r = 0; r < s; r += 1) n.addShape(this.processPath(e[r], l));
                                        a.shape.paths = a.localShapeCollection;
                                    }
                                this.dynamicProperties.length || (this._mdf = !1);
                            });
                        var TransformPropertyFactory = (function () {
                            var t = [0, 0];
                            function e(t, e, i) {
                                if (
                                    ((this.elem = t),
                                    (this.frameId = -1),
                                    (this.propType = "transform"),
                                    (this.data = e),
                                    (this.v = new Matrix()),
                                    (this.pre = new Matrix()),
                                    (this.appliedTransformations = 0),
                                    this.initDynamicPropertyContainer(i || t),
                                    e.p && e.p.s
                                        ? ((this.px = PropertyFactory.getProp(t, e.p.x, 0, 0, this)), (this.py = PropertyFactory.getProp(t, e.p.y, 0, 0, this)), e.p.z && (this.pz = PropertyFactory.getProp(t, e.p.z, 0, 0, this)))
                                        : (this.p = PropertyFactory.getProp(t, e.p || { k: [0, 0, 0] }, 1, 0, this)),
                                    e.rx)
                                ) {
                                    if (
                                        ((this.rx = PropertyFactory.getProp(t, e.rx, 0, degToRads, this)),
                                        (this.ry = PropertyFactory.getProp(t, e.ry, 0, degToRads, this)),
                                        (this.rz = PropertyFactory.getProp(t, e.rz, 0, degToRads, this)),
                                        e.or.k[0].ti)
                                    ) {
                                        var r,
                                            s = e.or.k.length;
                                        for (r = 0; r < s; r += 1) (e.or.k[r].to = null), (e.or.k[r].ti = null);
                                    }
                                    (this.or = PropertyFactory.getProp(t, e.or, 1, degToRads, this)), (this.or.sh = !0);
                                } else this.r = PropertyFactory.getProp(t, e.r || { k: 0 }, 0, degToRads, this);
                                e.sk && ((this.sk = PropertyFactory.getProp(t, e.sk, 0, degToRads, this)), (this.sa = PropertyFactory.getProp(t, e.sa, 0, degToRads, this))),
                                    (this.a = PropertyFactory.getProp(t, e.a || { k: [0, 0, 0] }, 1, 0, this)),
                                    (this.s = PropertyFactory.getProp(t, e.s || { k: [100, 100, 100] }, 1, 0.01, this)),
                                    e.o ? (this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, t)) : (this.o = { _mdf: !1, v: 1 }),
                                    (this._isDirty = !0),
                                    this.dynamicProperties.length || this.getValue(!0);
                            }
                            return (
                                (e.prototype = {
                                    applyToMatrix: function (t) {
                                        var e = this._mdf;
                                        this.iterateDynamicProperties(),
                                            (this._mdf = this._mdf || e),
                                            this.a && t.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                                            this.s && t.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                                            this.sk && t.skewFromAxis(-this.sk.v, this.sa.v),
                                            this.r ? t.rotate(-this.r.v) : t.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                                            this.data.p.s ? (this.data.p.z ? t.translate(this.px.v, this.py.v, -this.pz.v) : t.translate(this.px.v, this.py.v, 0)) : t.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
                                    },
                                    getValue: function (e) {
                                        if (this.elem.globalData.frameId !== this.frameId) {
                                            if ((this._isDirty && (this.precalculateMatrix(), (this._isDirty = !1)), this.iterateDynamicProperties(), this._mdf || e)) {
                                                var i;
                                                if (
                                                    (this.v.cloneFromProps(this.pre.props),
                                                    this.appliedTransformations < 1 && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                                                    this.appliedTransformations < 2 && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                                                    this.sk && this.appliedTransformations < 3 && this.v.skewFromAxis(-this.sk.v, this.sa.v),
                                                    this.r && this.appliedTransformations < 4
                                                        ? this.v.rotate(-this.r.v)
                                                        : !this.r && this.appliedTransformations < 4 && this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                                                    this.autoOriented)
                                                ) {
                                                    var r, s;
                                                    if (((i = this.elem.globalData.frameRate), this.p && this.p.keyframes && this.p.getValueAtTime))
                                                        this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t
                                                            ? ((r = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / i, 0)), (s = this.p.getValueAtTime(this.p.keyframes[0].t / i, 0)))
                                                            : this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t
                                                            ? ((r = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / i, 0)),
                                                              (s = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / i, 0)))
                                                            : ((r = this.p.pv), (s = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / i, this.p.offsetTime)));
                                                    else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                                                        (r = []), (s = []);
                                                        var a = this.px,
                                                            n = this.py;
                                                        a._caching.lastFrame + a.offsetTime <= a.keyframes[0].t
                                                            ? ((r[0] = a.getValueAtTime((a.keyframes[0].t + 0.01) / i, 0)),
                                                              (r[1] = n.getValueAtTime((n.keyframes[0].t + 0.01) / i, 0)),
                                                              (s[0] = a.getValueAtTime(a.keyframes[0].t / i, 0)),
                                                              (s[1] = n.getValueAtTime(n.keyframes[0].t / i, 0)))
                                                            : a._caching.lastFrame + a.offsetTime >= a.keyframes[a.keyframes.length - 1].t
                                                            ? ((r[0] = a.getValueAtTime(a.keyframes[a.keyframes.length - 1].t / i, 0)),
                                                              (r[1] = n.getValueAtTime(n.keyframes[n.keyframes.length - 1].t / i, 0)),
                                                              (s[0] = a.getValueAtTime((a.keyframes[a.keyframes.length - 1].t - 0.01) / i, 0)),
                                                              (s[1] = n.getValueAtTime((n.keyframes[n.keyframes.length - 1].t - 0.01) / i, 0)))
                                                            : ((r = [a.pv, n.pv]),
                                                              (s[0] = a.getValueAtTime((a._caching.lastFrame + a.offsetTime - 0.01) / i, a.offsetTime)),
                                                              (s[1] = n.getValueAtTime((n._caching.lastFrame + n.offsetTime - 0.01) / i, n.offsetTime)));
                                                    } else r = s = t;
                                                    this.v.rotate(-Math.atan2(r[1] - s[1], r[0] - s[0]));
                                                }
                                                this.data.p && this.data.p.s
                                                    ? this.data.p.z
                                                        ? this.v.translate(this.px.v, this.py.v, -this.pz.v)
                                                        : this.v.translate(this.px.v, this.py.v, 0)
                                                    : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
                                            }
                                            this.frameId = this.elem.globalData.frameId;
                                        }
                                    },
                                    precalculateMatrix: function () {
                                        if (
                                            ((this.appliedTransformations = 0),
                                            this.pre.reset(),
                                            !this.a.effectsSequence.length && (this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), (this.appliedTransformations = 1), !this.s.effectsSequence.length))
                                        ) {
                                            if ((this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]), (this.appliedTransformations = 2), this.sk)) {
                                                if (this.sk.effectsSequence.length || this.sa.effectsSequence.length) return;
                                                this.pre.skewFromAxis(-this.sk.v, this.sa.v), (this.appliedTransformations = 3);
                                            }
                                            this.r
                                                ? this.r.effectsSequence.length || (this.pre.rotate(-this.r.v), (this.appliedTransformations = 4))
                                                : this.rz.effectsSequence.length ||
                                                  this.ry.effectsSequence.length ||
                                                  this.rx.effectsSequence.length ||
                                                  this.or.effectsSequence.length ||
                                                  (this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), (this.appliedTransformations = 4));
                                        }
                                    },
                                    autoOrient: function () {},
                                }),
                                extendPrototype([DynamicPropertyContainer], e),
                                (e.prototype.addDynamicProperty = function (t) {
                                    this._addDynamicProperty(t), this.elem.addDynamicProperty(t), (this._isDirty = !0);
                                }),
                                (e.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty),
                                {
                                    getTransformProperty: function (t, i, r) {
                                        return new e(t, i, r);
                                    },
                                }
                            );
                        })();
                        function RepeaterModifier() {}
                        function RoundCornersModifier() {}
                        function floatEqual(t, e) {
                            return 1e5 * Math.abs(t - e) <= Math.min(Math.abs(t), Math.abs(e));
                        }
                        function floatZero(t) {
                            return Math.abs(t) <= 1e-5;
                        }
                        function lerp(t, e, i) {
                            return t * (1 - i) + e * i;
                        }
                        function lerpPoint(t, e, i) {
                            return [lerp(t[0], e[0], i), lerp(t[1], e[1], i)];
                        }
                        function quadRoots(t, e, i) {
                            if (0 === t) return [];
                            var r = e * e - 4 * t * i;
                            if (r < 0) return [];
                            var s = -e / (2 * t);
                            if (0 === r) return [s];
                            var a = Math.sqrt(r) / (2 * t);
                            return [s - a, s + a];
                        }
                        function polynomialCoefficients(t, e, i, r) {
                            return [3 * e - t - 3 * i + r, 3 * t - 6 * e + 3 * i, -3 * t + 3 * e, t];
                        }
                        function singlePoint(t) {
                            return new PolynomialBezier(t, t, t, t, !1);
                        }
                        function PolynomialBezier(t, e, i, r, s) {
                            s && pointEqual(t, e) && (e = lerpPoint(t, r, 1 / 3)), s && pointEqual(i, r) && (i = lerpPoint(t, r, 2 / 3));
                            var a = polynomialCoefficients(t[0], e[0], i[0], r[0]),
                                n = polynomialCoefficients(t[1], e[1], i[1], r[1]);
                            (this.a = [a[0], n[0]]), (this.b = [a[1], n[1]]), (this.c = [a[2], n[2]]), (this.d = [a[3], n[3]]), (this.points = [t, e, i, r]);
                        }
                        function extrema(t, e) {
                            var i = t.points[0][e],
                                r = t.points[t.points.length - 1][e];
                            if (i > r) {
                                var s = r;
                                (r = i), (i = s);
                            }
                            for (var a = quadRoots(3 * t.a[e], 2 * t.b[e], t.c[e]), n = 0; n < a.length; n += 1)
                                if (a[n] > 0 && a[n] < 1) {
                                    var o = t.point(a[n])[e];
                                    o < i ? (i = o) : o > r && (r = o);
                                }
                            return { min: i, max: r };
                        }
                        function intersectData(t, e, i) {
                            var r = t.boundingBox();
                            return { cx: r.cx, cy: r.cy, width: r.width, height: r.height, bez: t, t: (e + i) / 2, t1: e, t2: i };
                        }
                        function splitData(t) {
                            var e = t.bez.split(0.5);
                            return [intersectData(e[0], t.t1, t.t), intersectData(e[1], t.t, t.t2)];
                        }
                        function boxIntersect(t, e) {
                            return 2 * Math.abs(t.cx - e.cx) < t.width + e.width && 2 * Math.abs(t.cy - e.cy) < t.height + e.height;
                        }
                        function intersectsImpl(t, e, i, r, s, a) {
                            if (boxIntersect(t, e))
                                if (i >= a || (t.width <= r && t.height <= r && e.width <= r && e.height <= r)) s.push([t.t, e.t]);
                                else {
                                    var n = splitData(t),
                                        o = splitData(e);
                                    intersectsImpl(n[0], o[0], i + 1, r, s, a), intersectsImpl(n[0], o[1], i + 1, r, s, a), intersectsImpl(n[1], o[0], i + 1, r, s, a), intersectsImpl(n[1], o[1], i + 1, r, s, a);
                                }
                        }
                        function crossProduct(t, e) {
                            return [t[1] * e[2] - t[2] * e[1], t[2] * e[0] - t[0] * e[2], t[0] * e[1] - t[1] * e[0]];
                        }
                        function lineIntersection(t, e, i, r) {
                            var s = [t[0], t[1], 1],
                                a = [e[0], e[1], 1],
                                n = [i[0], i[1], 1],
                                o = [r[0], r[1], 1],
                                l = crossProduct(crossProduct(s, a), crossProduct(n, o));
                            return floatZero(l[2]) ? null : [l[0] / l[2], l[1] / l[2]];
                        }
                        function polarOffset(t, e, i) {
                            return [t[0] + Math.cos(e) * i, t[1] - Math.sin(e) * i];
                        }
                        function pointDistance(t, e) {
                            return Math.hypot(t[0] - e[0], t[1] - e[1]);
                        }
                        function pointEqual(t, e) {
                            return floatEqual(t[0], e[0]) && floatEqual(t[1], e[1]);
                        }
                        function ZigZagModifier() {}
                        function setPoint(t, e, i, r, s, a, n) {
                            var o = i - Math.PI / 2,
                                l = i + Math.PI / 2,
                                h = e[0] + Math.cos(i) * r * s,
                                c = e[1] - Math.sin(i) * r * s;
                            t.setTripleAt(h, c, h + Math.cos(o) * a, c - Math.sin(o) * a, h + Math.cos(l) * n, c - Math.sin(l) * n, t.length());
                        }
                        function getPerpendicularVector(t, e) {
                            var i = [e[0] - t[0], e[1] - t[1]],
                                r = 0.5 * -Math.PI;
                            return [Math.cos(r) * i[0] - Math.sin(r) * i[1], Math.sin(r) * i[0] + Math.cos(r) * i[1]];
                        }
                        function getProjectingAngle(t, e) {
                            var i = 0 === e ? t.length() - 1 : e - 1,
                                r = (e + 1) % t.length(),
                                s = getPerpendicularVector(t.v[i], t.v[r]);
                            return Math.atan2(0, 1) - Math.atan2(s[1], s[0]);
                        }
                        function zigZagCorner(t, e, i, r, s, a, n) {
                            var o = getProjectingAngle(e, i),
                                l = e.v[i % e._length],
                                h = e.v[0 === i ? e._length - 1 : i - 1],
                                c = e.v[(i + 1) % e._length],
                                d = 2 === a ? Math.sqrt(Math.pow(l[0] - h[0], 2) + Math.pow(l[1] - h[1], 2)) : 0,
                                u = 2 === a ? Math.sqrt(Math.pow(l[0] - c[0], 2) + Math.pow(l[1] - c[1], 2)) : 0;
                            setPoint(t, e.v[i % e._length], o, n, r, u / (2 * (s + 1)), d / (2 * (s + 1)), a);
                        }
                        function zigZagSegment(t, e, i, r, s, a) {
                            for (var n = 0; n < r; n += 1) {
                                var o = (n + 1) / (r + 1),
                                    l = 2 === s ? Math.sqrt(Math.pow(e.points[3][0] - e.points[0][0], 2) + Math.pow(e.points[3][1] - e.points[0][1], 2)) : 0,
                                    h = e.normalAngle(o);
                                setPoint(t, e.point(o), h, a, i, l / (2 * (r + 1)), l / (2 * (r + 1)), s), (a = -a);
                            }
                            return a;
                        }
                        function linearOffset(t, e, i) {
                            var r = Math.atan2(e[0] - t[0], e[1] - t[1]);
                            return [polarOffset(t, r, i), polarOffset(e, r, i)];
                        }
                        function offsetSegment(t, e) {
                            var i, r, s, a, n, o, l;
                            (i = (l = linearOffset(t.points[0], t.points[1], e))[0]), (r = l[1]), (s = (l = linearOffset(t.points[1], t.points[2], e))[0]), (a = l[1]), (n = (l = linearOffset(t.points[2], t.points[3], e))[0]), (o = l[1]);
                            var h = lineIntersection(i, r, s, a);
                            null === h && (h = r);
                            var c = lineIntersection(n, o, s, a);
                            return null === c && (c = n), new PolynomialBezier(i, h, c, o);
                        }
                        function joinLines(t, e, i, r, s) {
                            var a = e.points[3],
                                n = i.points[0];
                            if (3 === r) return a;
                            if (pointEqual(a, n)) return a;
                            if (2 === r) {
                                var o = -e.tangentAngle(1),
                                    l = -i.tangentAngle(0) + Math.PI,
                                    h = lineIntersection(a, polarOffset(a, o + Math.PI / 2, 100), n, polarOffset(n, o + Math.PI / 2, 100)),
                                    c = h ? pointDistance(h, a) : pointDistance(a, n) / 2,
                                    d = polarOffset(a, o, 2 * c * roundCorner);
                                return t.setXYAt(d[0], d[1], "o", t.length() - 1), (d = polarOffset(n, l, 2 * c * roundCorner)), t.setTripleAt(n[0], n[1], n[0], n[1], d[0], d[1], t.length()), n;
                            }
                            var u = lineIntersection(pointEqual(a, e.points[2]) ? e.points[0] : e.points[2], a, n, pointEqual(n, i.points[1]) ? i.points[3] : i.points[1]);
                            return u && pointDistance(u, a) < s ? (t.setTripleAt(u[0], u[1], u[0], u[1], u[0], u[1], t.length()), u) : a;
                        }
                        function getIntersection(t, e) {
                            var i = t.intersections(e);
                            return i.length && floatEqual(i[0][0], 1) && i.shift(), i.length ? i[0] : null;
                        }
                        function pruneSegmentIntersection(t, e) {
                            var i = t.slice(),
                                r = e.slice(),
                                s = getIntersection(t[t.length - 1], e[0]);
                            return (
                                s && ((i[t.length - 1] = t[t.length - 1].split(s[0])[0]), (r[0] = e[0].split(s[1])[1])),
                                t.length > 1 && e.length > 1 && (s = getIntersection(t[0], e[e.length - 1])) ? [[t[0].split(s[0])[0]], [e[e.length - 1].split(s[1])[1]]] : [i, r]
                            );
                        }
                        function pruneIntersections(t) {
                            for (var e, i = 1; i < t.length; i += 1) (e = pruneSegmentIntersection(t[i - 1], t[i])), (t[i - 1] = e[0]), (t[i] = e[1]);
                            return t.length > 1 && ((e = pruneSegmentIntersection(t[t.length - 1], t[0])), (t[t.length - 1] = e[0]), (t[0] = e[1])), t;
                        }
                        function offsetSegmentSplit(t, e) {
                            var i,
                                r,
                                s,
                                a,
                                n = t.inflectionPoints();
                            if (0 === n.length) return [offsetSegment(t, e)];
                            if (1 === n.length || floatEqual(n[1], 1)) return (i = (s = t.split(n[0]))[0]), (r = s[1]), [offsetSegment(i, e), offsetSegment(r, e)];
                            i = (s = t.split(n[0]))[0];
                            var o = (n[1] - n[0]) / (1 - n[0]);
                            return (a = (s = s[1].split(o))[0]), (r = s[1]), [offsetSegment(i, e), offsetSegment(a, e), offsetSegment(r, e)];
                        }
                        function OffsetPathModifier() {}
                        function getFontProperties(t) {
                            for (var e = t.fStyle ? t.fStyle.split(" ") : [], i = "normal", r = "normal", s = e.length, a = 0; a < s; a += 1)
                                switch (e[a].toLowerCase()) {
                                    case "italic":
                                        r = "italic";
                                        break;
                                    case "bold":
                                        i = "700";
                                        break;
                                    case "black":
                                        i = "900";
                                        break;
                                    case "medium":
                                        i = "500";
                                        break;
                                    case "regular":
                                    case "normal":
                                        i = "400";
                                        break;
                                    case "light":
                                    case "thin":
                                        i = "200";
                                }
                            return { style: r, weight: t.fWeight || i };
                        }
                        extendPrototype([ShapeModifier], RepeaterModifier),
                            (RepeaterModifier.prototype.initModifierProperties = function (t, e) {
                                (this.getValue = this.processKeys),
                                    (this.c = PropertyFactory.getProp(t, e.c, 0, null, this)),
                                    (this.o = PropertyFactory.getProp(t, e.o, 0, null, this)),
                                    (this.tr = TransformPropertyFactory.getTransformProperty(t, e.tr, this)),
                                    (this.so = PropertyFactory.getProp(t, e.tr.so, 0, 0.01, this)),
                                    (this.eo = PropertyFactory.getProp(t, e.tr.eo, 0, 0.01, this)),
                                    (this.data = e),
                                    this.dynamicProperties.length || this.getValue(!0),
                                    (this._isAnimated = !!this.dynamicProperties.length),
                                    (this.pMatrix = new Matrix()),
                                    (this.rMatrix = new Matrix()),
                                    (this.sMatrix = new Matrix()),
                                    (this.tMatrix = new Matrix()),
                                    (this.matrix = new Matrix());
                            }),
                            (RepeaterModifier.prototype.applyTransforms = function (t, e, i, r, s, a) {
                                var n = a ? -1 : 1,
                                    o = r.s.v[0] + (1 - r.s.v[0]) * (1 - s),
                                    l = r.s.v[1] + (1 - r.s.v[1]) * (1 - s);
                                t.translate(r.p.v[0] * n * s, r.p.v[1] * n * s, r.p.v[2]),
                                    e.translate(-r.a.v[0], -r.a.v[1], r.a.v[2]),
                                    e.rotate(-r.r.v * n * s),
                                    e.translate(r.a.v[0], r.a.v[1], r.a.v[2]),
                                    i.translate(-r.a.v[0], -r.a.v[1], r.a.v[2]),
                                    i.scale(a ? 1 / o : o, a ? 1 / l : l),
                                    i.translate(r.a.v[0], r.a.v[1], r.a.v[2]);
                            }),
                            (RepeaterModifier.prototype.init = function (t, e, i, r) {
                                for (
                                    this.elem = t,
                                        this.arr = e,
                                        this.pos = i,
                                        this.elemsData = r,
                                        this._currentCopies = 0,
                                        this._elements = [],
                                        this._groups = [],
                                        this.frameId = -1,
                                        this.initDynamicPropertyContainer(t),
                                        this.initModifierProperties(t, e[i]);
                                    i > 0;

                                )
                                    (i -= 1), this._elements.unshift(e[i]);
                                this.dynamicProperties.length ? (this.k = !0) : this.getValue(!0);
                            }),
                            (RepeaterModifier.prototype.resetElements = function (t) {
                                var e,
                                    i = t.length;
                                for (e = 0; e < i; e += 1) (t[e]._processed = !1), "gr" === t[e].ty && this.resetElements(t[e].it);
                            }),
                            (RepeaterModifier.prototype.cloneElements = function (t) {
                                var e = JSON.parse(JSON.stringify(t));
                                return this.resetElements(e), e;
                            }),
                            (RepeaterModifier.prototype.changeGroupRender = function (t, e) {
                                var i,
                                    r = t.length;
                                for (i = 0; i < r; i += 1) (t[i]._render = e), "gr" === t[i].ty && this.changeGroupRender(t[i].it, e);
                            }),
                            (RepeaterModifier.prototype.processShapes = function (t) {
                                var e,
                                    i,
                                    r,
                                    s,
                                    a,
                                    n = !1;
                                if (this._mdf || t) {
                                    var o,
                                        l = Math.ceil(this.c.v);
                                    if (this._groups.length < l) {
                                        for (; this._groups.length < l; ) {
                                            var h = { it: this.cloneElements(this._elements), ty: "gr" };
                                            h.it.push({
                                                a: { a: 0, ix: 1, k: [0, 0] },
                                                nm: "Transform",
                                                o: { a: 0, ix: 7, k: 100 },
                                                p: { a: 0, ix: 2, k: [0, 0] },
                                                r: {
                                                    a: 1,
                                                    ix: 6,
                                                    k: [
                                                        { s: 0, e: 0, t: 0 },
                                                        { s: 0, e: 0, t: 1 },
                                                    ],
                                                },
                                                s: { a: 0, ix: 3, k: [100, 100] },
                                                sa: { a: 0, ix: 5, k: 0 },
                                                sk: { a: 0, ix: 4, k: 0 },
                                                ty: "tr",
                                            }),
                                                this.arr.splice(0, 0, h),
                                                this._groups.splice(0, 0, h),
                                                (this._currentCopies += 1);
                                        }
                                        this.elem.reloadShapes(), (n = !0);
                                    }
                                    for (a = 0, r = 0; r <= this._groups.length - 1; r += 1) {
                                        if (((o = a < l), (this._groups[r]._render = o), this.changeGroupRender(this._groups[r].it, o), !o)) {
                                            var c = this.elemsData[r].it,
                                                d = c[c.length - 1];
                                            0 !== d.transform.op.v ? ((d.transform.op._mdf = !0), (d.transform.op.v = 0)) : (d.transform.op._mdf = !1);
                                        }
                                        a += 1;
                                    }
                                    this._currentCopies = l;
                                    var u = this.o.v,
                                        p = u % 1,
                                        m = u > 0 ? Math.floor(u) : Math.ceil(u),
                                        f = this.pMatrix.props,
                                        g = this.rMatrix.props,
                                        v = this.sMatrix.props;
                                    this.pMatrix.reset(), this.rMatrix.reset(), this.sMatrix.reset(), this.tMatrix.reset(), this.matrix.reset();
                                    var b,
                                        y,
                                        w = 0;
                                    if (u > 0) {
                                        for (; w < m; ) this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1), (w += 1);
                                        p && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, p, !1), (w += p));
                                    } else if (u < 0) {
                                        for (; w > m; ) this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !0), (w -= 1);
                                        p && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -p, !0), (w -= p));
                                    }
                                    for (r = 1 === this.data.m ? 0 : this._currentCopies - 1, s = 1 === this.data.m ? 1 : -1, a = this._currentCopies; a; ) {
                                        if (
                                            ((y = (i = (e = this.elemsData[r].it)[e.length - 1].transform.mProps.v.props).length),
                                            (e[e.length - 1].transform.mProps._mdf = !0),
                                            (e[e.length - 1].transform.op._mdf = !0),
                                            (e[e.length - 1].transform.op.v = 1 === this._currentCopies ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (r / (this._currentCopies - 1))),
                                            0 !== w)
                                        ) {
                                            for (
                                                ((0 !== r && 1 === s) || (r !== this._currentCopies - 1 && -1 === s)) && this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1),
                                                    this.matrix.transform(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]),
                                                    this.matrix.transform(v[0], v[1], v[2], v[3], v[4], v[5], v[6], v[7], v[8], v[9], v[10], v[11], v[12], v[13], v[14], v[15]),
                                                    this.matrix.transform(f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], f[9], f[10], f[11], f[12], f[13], f[14], f[15]),
                                                    b = 0;
                                                b < y;
                                                b += 1
                                            )
                                                i[b] = this.matrix.props[b];
                                            this.matrix.reset();
                                        } else for (this.matrix.reset(), b = 0; b < y; b += 1) i[b] = this.matrix.props[b];
                                        (w += 1), (a -= 1), (r += s);
                                    }
                                } else
                                    for (a = this._currentCopies, r = 0, s = 1; a; )
                                        (i = (e = this.elemsData[r].it)[e.length - 1].transform.mProps.v.props), (e[e.length - 1].transform.mProps._mdf = !1), (e[e.length - 1].transform.op._mdf = !1), (a -= 1), (r += s);
                                return n;
                            }),
                            (RepeaterModifier.prototype.addShape = function () {}),
                            extendPrototype([ShapeModifier], RoundCornersModifier),
                            (RoundCornersModifier.prototype.initModifierProperties = function (t, e) {
                                (this.getValue = this.processKeys), (this.rd = PropertyFactory.getProp(t, e.r, 0, null, this)), (this._isAnimated = !!this.rd.effectsSequence.length);
                            }),
                            (RoundCornersModifier.prototype.processPath = function (t, e) {
                                var i,
                                    r = shapePool.newElement();
                                r.c = t.c;
                                var s,
                                    a,
                                    n,
                                    o,
                                    l,
                                    h,
                                    c,
                                    d,
                                    u,
                                    p,
                                    m,
                                    f,
                                    g = t._length,
                                    v = 0;
                                for (i = 0; i < g; i += 1)
                                    (s = t.v[i]),
                                        (n = t.o[i]),
                                        (a = t.i[i]),
                                        s[0] === n[0] && s[1] === n[1] && s[0] === a[0] && s[1] === a[1]
                                            ? (0 !== i && i !== g - 1) || t.c
                                                ? ((o = 0 === i ? t.v[g - 1] : t.v[i - 1]),
                                                  (h = (l = Math.sqrt(Math.pow(s[0] - o[0], 2) + Math.pow(s[1] - o[1], 2))) ? Math.min(l / 2, e) / l : 0),
                                                  (c = m = s[0] + (o[0] - s[0]) * h),
                                                  (d = f = s[1] - (s[1] - o[1]) * h),
                                                  (u = c - (c - s[0]) * roundCorner),
                                                  (p = d - (d - s[1]) * roundCorner),
                                                  r.setTripleAt(c, d, u, p, m, f, v),
                                                  (v += 1),
                                                  (o = i === g - 1 ? t.v[0] : t.v[i + 1]),
                                                  (h = (l = Math.sqrt(Math.pow(s[0] - o[0], 2) + Math.pow(s[1] - o[1], 2))) ? Math.min(l / 2, e) / l : 0),
                                                  (c = u = s[0] + (o[0] - s[0]) * h),
                                                  (d = p = s[1] + (o[1] - s[1]) * h),
                                                  (m = c - (c - s[0]) * roundCorner),
                                                  (f = d - (d - s[1]) * roundCorner),
                                                  r.setTripleAt(c, d, u, p, m, f, v),
                                                  (v += 1))
                                                : (r.setTripleAt(s[0], s[1], n[0], n[1], a[0], a[1], v), (v += 1))
                                            : (r.setTripleAt(t.v[i][0], t.v[i][1], t.o[i][0], t.o[i][1], t.i[i][0], t.i[i][1], v), (v += 1));
                                return r;
                            }),
                            (RoundCornersModifier.prototype.processShapes = function (t) {
                                var e,
                                    i,
                                    r,
                                    s,
                                    a,
                                    n,
                                    o = this.shapes.length,
                                    l = this.rd.v;
                                if (0 !== l)
                                    for (i = 0; i < o; i += 1) {
                                        if (((n = (a = this.shapes[i]).localShapeCollection), a.shape._mdf || this._mdf || t))
                                            for (n.releaseShapes(), a.shape._mdf = !0, e = a.shape.paths.shapes, s = a.shape.paths._length, r = 0; r < s; r += 1) n.addShape(this.processPath(e[r], l));
                                        a.shape.paths = a.localShapeCollection;
                                    }
                                this.dynamicProperties.length || (this._mdf = !1);
                            }),
                            (PolynomialBezier.prototype.point = function (t) {
                                return [((this.a[0] * t + this.b[0]) * t + this.c[0]) * t + this.d[0], ((this.a[1] * t + this.b[1]) * t + this.c[1]) * t + this.d[1]];
                            }),
                            (PolynomialBezier.prototype.derivative = function (t) {
                                return [(3 * t * this.a[0] + 2 * this.b[0]) * t + this.c[0], (3 * t * this.a[1] + 2 * this.b[1]) * t + this.c[1]];
                            }),
                            (PolynomialBezier.prototype.tangentAngle = function (t) {
                                var e = this.derivative(t);
                                return Math.atan2(e[1], e[0]);
                            }),
                            (PolynomialBezier.prototype.normalAngle = function (t) {
                                var e = this.derivative(t);
                                return Math.atan2(e[0], e[1]);
                            }),
                            (PolynomialBezier.prototype.inflectionPoints = function () {
                                var t = this.a[1] * this.b[0] - this.a[0] * this.b[1];
                                if (floatZero(t)) return [];
                                var e = (-0.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1])) / t,
                                    i = e * e - ((1 / 3) * (this.b[1] * this.c[0] - this.b[0] * this.c[1])) / t;
                                if (i < 0) return [];
                                var r = Math.sqrt(i);
                                return floatZero(r)
                                    ? r > 0 && r < 1
                                        ? [e]
                                        : []
                                    : [e - r, e + r].filter(function (t) {
                                          return t > 0 && t < 1;
                                      });
                            }),
                            (PolynomialBezier.prototype.split = function (t) {
                                if (t <= 0) return [singlePoint(this.points[0]), this];
                                if (t >= 1) return [this, singlePoint(this.points[this.points.length - 1])];
                                var e = lerpPoint(this.points[0], this.points[1], t),
                                    i = lerpPoint(this.points[1], this.points[2], t),
                                    r = lerpPoint(this.points[2], this.points[3], t),
                                    s = lerpPoint(e, i, t),
                                    a = lerpPoint(i, r, t),
                                    n = lerpPoint(s, a, t);
                                return [new PolynomialBezier(this.points[0], e, s, n, !0), new PolynomialBezier(n, a, r, this.points[3], !0)];
                            }),
                            (PolynomialBezier.prototype.bounds = function () {
                                return { x: extrema(this, 0), y: extrema(this, 1) };
                            }),
                            (PolynomialBezier.prototype.boundingBox = function () {
                                var t = this.bounds();
                                return { left: t.x.min, right: t.x.max, top: t.y.min, bottom: t.y.max, width: t.x.max - t.x.min, height: t.y.max - t.y.min, cx: (t.x.max + t.x.min) / 2, cy: (t.y.max + t.y.min) / 2 };
                            }),
                            (PolynomialBezier.prototype.intersections = function (t, e, i) {
                                void 0 === e && (e = 2), void 0 === i && (i = 7);
                                var r = [];
                                return intersectsImpl(intersectData(this, 0, 1), intersectData(t, 0, 1), 0, e, r, i), r;
                            }),
                            (PolynomialBezier.shapeSegment = function (t, e) {
                                var i = (e + 1) % t.length();
                                return new PolynomialBezier(t.v[e], t.o[e], t.i[i], t.v[i], !0);
                            }),
                            (PolynomialBezier.shapeSegmentInverted = function (t, e) {
                                var i = (e + 1) % t.length();
                                return new PolynomialBezier(t.v[i], t.i[i], t.o[e], t.v[e], !0);
                            }),
                            extendPrototype([ShapeModifier], ZigZagModifier),
                            (ZigZagModifier.prototype.initModifierProperties = function (t, e) {
                                (this.getValue = this.processKeys),
                                    (this.amplitude = PropertyFactory.getProp(t, e.s, 0, null, this)),
                                    (this.frequency = PropertyFactory.getProp(t, e.r, 0, null, this)),
                                    (this.pointsType = PropertyFactory.getProp(t, e.pt, 0, null, this)),
                                    (this._isAnimated = 0 !== this.amplitude.effectsSequence.length || 0 !== this.frequency.effectsSequence.length || 0 !== this.pointsType.effectsSequence.length);
                            }),
                            (ZigZagModifier.prototype.processPath = function (t, e, i, r) {
                                var s = t._length,
                                    a = shapePool.newElement();
                                if (((a.c = t.c), t.c || (s -= 1), 0 === s)) return a;
                                var n = -1,
                                    o = PolynomialBezier.shapeSegment(t, 0);
                                zigZagCorner(a, t, 0, e, i, r, n);
                                for (var l = 0; l < s; l += 1) (n = zigZagSegment(a, o, e, i, r, -n)), (o = l !== s - 1 || t.c ? PolynomialBezier.shapeSegment(t, (l + 1) % s) : null), zigZagCorner(a, t, l + 1, e, i, r, n);
                                return a;
                            }),
                            (ZigZagModifier.prototype.processShapes = function (t) {
                                var e,
                                    i,
                                    r,
                                    s,
                                    a,
                                    n,
                                    o = this.shapes.length,
                                    l = this.amplitude.v,
                                    h = Math.max(0, Math.round(this.frequency.v)),
                                    c = this.pointsType.v;
                                if (0 !== l)
                                    for (i = 0; i < o; i += 1) {
                                        if (((n = (a = this.shapes[i]).localShapeCollection), a.shape._mdf || this._mdf || t))
                                            for (n.releaseShapes(), a.shape._mdf = !0, e = a.shape.paths.shapes, s = a.shape.paths._length, r = 0; r < s; r += 1) n.addShape(this.processPath(e[r], l, h, c));
                                        a.shape.paths = a.localShapeCollection;
                                    }
                                this.dynamicProperties.length || (this._mdf = !1);
                            }),
                            extendPrototype([ShapeModifier], OffsetPathModifier),
                            (OffsetPathModifier.prototype.initModifierProperties = function (t, e) {
                                (this.getValue = this.processKeys),
                                    (this.amount = PropertyFactory.getProp(t, e.a, 0, null, this)),
                                    (this.miterLimit = PropertyFactory.getProp(t, e.ml, 0, null, this)),
                                    (this.lineJoin = e.lj),
                                    (this._isAnimated = 0 !== this.amount.effectsSequence.length);
                            }),
                            (OffsetPathModifier.prototype.processPath = function (t, e, i, r) {
                                var s = shapePool.newElement();
                                s.c = t.c;
                                var a,
                                    n,
                                    o,
                                    l = t.length();
                                t.c || (l -= 1);
                                var h = [];
                                for (a = 0; a < l; a += 1) (o = PolynomialBezier.shapeSegment(t, a)), h.push(offsetSegmentSplit(o, e));
                                if (!t.c) for (a = l - 1; a >= 0; a -= 1) (o = PolynomialBezier.shapeSegmentInverted(t, a)), h.push(offsetSegmentSplit(o, e));
                                h = pruneIntersections(h);
                                var c = null,
                                    d = null;
                                for (a = 0; a < h.length; a += 1) {
                                    var u = h[a];
                                    for (d && (c = joinLines(s, d, u[0], i, r)), d = u[u.length - 1], n = 0; n < u.length; n += 1)
                                        (o = u[n]),
                                            c && pointEqual(o.points[0], c)
                                                ? s.setXYAt(o.points[1][0], o.points[1][1], "o", s.length() - 1)
                                                : s.setTripleAt(o.points[0][0], o.points[0][1], o.points[1][0], o.points[1][1], o.points[0][0], o.points[0][1], s.length()),
                                            s.setTripleAt(o.points[3][0], o.points[3][1], o.points[3][0], o.points[3][1], o.points[2][0], o.points[2][1], s.length()),
                                            (c = o.points[3]);
                                }
                                return h.length && joinLines(s, d, h[0][0], i, r), s;
                            }),
                            (OffsetPathModifier.prototype.processShapes = function (t) {
                                var e,
                                    i,
                                    r,
                                    s,
                                    a,
                                    n,
                                    o = this.shapes.length,
                                    l = this.amount.v,
                                    h = this.miterLimit.v,
                                    c = this.lineJoin;
                                if (0 !== l)
                                    for (i = 0; i < o; i += 1) {
                                        if (((n = (a = this.shapes[i]).localShapeCollection), a.shape._mdf || this._mdf || t))
                                            for (n.releaseShapes(), a.shape._mdf = !0, e = a.shape.paths.shapes, s = a.shape.paths._length, r = 0; r < s; r += 1) n.addShape(this.processPath(e[r], l, c, h));
                                        a.shape.paths = a.localShapeCollection;
                                    }
                                this.dynamicProperties.length || (this._mdf = !1);
                            });
                        var FontManager = (function () {
                            var t = { w: 0, size: 0, shapes: [], data: { shapes: [] } },
                                e = [];
                            e = e.concat([
                                2304,
                                2305,
                                2306,
                                2307,
                                2362,
                                2363,
                                2364,
                                2364,
                                2366,
                                2367,
                                2368,
                                2369,
                                2370,
                                2371,
                                2372,
                                2373,
                                2374,
                                2375,
                                2376,
                                2377,
                                2378,
                                2379,
                                2380,
                                2381,
                                2382,
                                2383,
                                2387,
                                2388,
                                2389,
                                2390,
                                2391,
                                2402,
                                2403,
                            ]);
                            var i = 127988,
                                r = 127462,
                                s = 127487,
                                a = ["d83cdffb", "d83cdffc", "d83cdffd", "d83cdffe", "d83cdfff"];
                            function n(t, e) {
                                var i = createTag("span");
                                i.setAttribute("aria-hidden", !0), (i.style.fontFamily = e);
                                var r = createTag("span");
                                (r.innerText = "giItT1WQy@!-/#"),
                                    (i.style.position = "absolute"),
                                    (i.style.left = "-10000px"),
                                    (i.style.top = "-10000px"),
                                    (i.style.fontSize = "300px"),
                                    (i.style.fontVariant = "normal"),
                                    (i.style.fontStyle = "normal"),
                                    (i.style.fontWeight = "normal"),
                                    (i.style.letterSpacing = "0"),
                                    i.appendChild(r),
                                    document.body.appendChild(i);
                                var s = r.offsetWidth;
                                return (
                                    (r.style.fontFamily =
                                        (function (t) {
                                            var e,
                                                i = t.split(","),
                                                r = i.length,
                                                s = [];
                                            for (e = 0; e < r; e += 1) "sans-serif" !== i[e] && "monospace" !== i[e] && s.push(i[e]);
                                            return s.join(",");
                                        })(t) +
                                        ", " +
                                        e),
                                    { node: r, w: s, parent: i }
                                );
                            }
                            function o(t, e) {
                                var i,
                                    r = document.body && e ? "svg" : "canvas",
                                    s = getFontProperties(t);
                                if ("svg" === r) {
                                    var a = createNS("text");
                                    (a.style.fontSize = "100px"),
                                        a.setAttribute("font-family", t.fFamily),
                                        a.setAttribute("font-style", s.style),
                                        a.setAttribute("font-weight", s.weight),
                                        (a.textContent = "1"),
                                        t.fClass ? ((a.style.fontFamily = "inherit"), a.setAttribute("class", t.fClass)) : (a.style.fontFamily = t.fFamily),
                                        e.appendChild(a),
                                        (i = a);
                                } else {
                                    var n = new OffscreenCanvas(500, 500).getContext("2d");
                                    (n.font = s.style + " " + s.weight + " 100px " + t.fFamily), (i = n);
                                }
                                return {
                                    measureText: function (t) {
                                        return "svg" === r ? ((i.textContent = t), i.getComputedTextLength()) : i.measureText(t).width;
                                    },
                                };
                            }
                            function l(t) {
                                var e = 0,
                                    i = t.charCodeAt(0);
                                if (i >= 55296 && i <= 56319) {
                                    var r = t.charCodeAt(1);
                                    r >= 56320 && r <= 57343 && (e = 1024 * (i - 55296) + r - 56320 + 65536);
                                }
                                return e;
                            }
                            function h(t) {
                                var e = l(t);
                                return e >= r && e <= s;
                            }
                            var c = function () {
                                (this.fonts = []),
                                    (this.chars = null),
                                    (this.typekitLoaded = 0),
                                    (this.isLoaded = !1),
                                    (this._warned = !1),
                                    (this.initTime = Date.now()),
                                    (this.setIsLoadedBinded = this.setIsLoaded.bind(this)),
                                    (this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this));
                            };
                            (c.isModifier = function (t, e) {
                                var i = t.toString(16) + e.toString(16);
                                return -1 !== a.indexOf(i);
                            }),
                                (c.isZeroWidthJoiner = function (t) {
                                    return 8205 === t;
                                }),
                                (c.isFlagEmoji = function (t) {
                                    return h(t.substr(0, 2)) && h(t.substr(2, 2));
                                }),
                                (c.isRegionalCode = h),
                                (c.isCombinedCharacter = function (t) {
                                    return -1 !== e.indexOf(t);
                                }),
                                (c.isRegionalFlag = function (t, e) {
                                    var r = l(t.substr(e, 2));
                                    if (r !== i) return !1;
                                    var s = 0;
                                    for (e += 2; s < 5; ) {
                                        if ((r = l(t.substr(e, 2))) < 917601 || r > 917626) return !1;
                                        (s += 1), (e += 2);
                                    }
                                    return 917631 === l(t.substr(e, 2));
                                }),
                                (c.isVariationSelector = function (t) {
                                    return 65039 === t;
                                }),
                                (c.BLACK_FLAG_CODE_POINT = i);
                            var d = {
                                addChars: function (t) {
                                    if (t) {
                                        var e;
                                        this.chars || (this.chars = []);
                                        var i,
                                            r,
                                            s = t.length,
                                            a = this.chars.length;
                                        for (e = 0; e < s; e += 1) {
                                            for (i = 0, r = !1; i < a; ) this.chars[i].style === t[e].style && this.chars[i].fFamily === t[e].fFamily && this.chars[i].ch === t[e].ch && (r = !0), (i += 1);
                                            r || (this.chars.push(t[e]), (a += 1));
                                        }
                                    }
                                },
                                addFonts: function (t, e) {
                                    if (t) {
                                        if (this.chars) return (this.isLoaded = !0), void (this.fonts = t.list);
                                        if (!document.body)
                                            return (
                                                (this.isLoaded = !0),
                                                t.list.forEach(function (t) {
                                                    (t.helper = o(t)), (t.cache = {});
                                                }),
                                                void (this.fonts = t.list)
                                            );
                                        var i,
                                            r = t.list,
                                            s = r.length,
                                            a = s;
                                        for (i = 0; i < s; i += 1) {
                                            var l,
                                                h,
                                                c = !0;
                                            if (((r[i].loaded = !1), (r[i].monoCase = n(r[i].fFamily, "monospace")), (r[i].sansCase = n(r[i].fFamily, "sans-serif")), r[i].fPath)) {
                                                if ("p" === r[i].fOrigin || 3 === r[i].origin) {
                                                    if (((l = document.querySelectorAll('style[f-forigin="p"][f-family="' + r[i].fFamily + '"], style[f-origin="3"][f-family="' + r[i].fFamily + '"]')).length > 0 && (c = !1), c)) {
                                                        var d = createTag("style");
                                                        d.setAttribute("f-forigin", r[i].fOrigin),
                                                            d.setAttribute("f-origin", r[i].origin),
                                                            d.setAttribute("f-family", r[i].fFamily),
                                                            (d.type = "text/css"),
                                                            (d.innerText = "@font-face {font-family: " + r[i].fFamily + "; font-style: normal; src: url('" + r[i].fPath + "');}"),
                                                            e.appendChild(d);
                                                    }
                                                } else if ("g" === r[i].fOrigin || 1 === r[i].origin) {
                                                    for (l = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]'), h = 0; h < l.length; h += 1) -1 !== l[h].href.indexOf(r[i].fPath) && (c = !1);
                                                    if (c) {
                                                        var u = createTag("link");
                                                        u.setAttribute("f-forigin", r[i].fOrigin), u.setAttribute("f-origin", r[i].origin), (u.type = "text/css"), (u.rel = "stylesheet"), (u.href = r[i].fPath), document.body.appendChild(u);
                                                    }
                                                } else if ("t" === r[i].fOrigin || 2 === r[i].origin) {
                                                    for (l = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]'), h = 0; h < l.length; h += 1) r[i].fPath === l[h].src && (c = !1);
                                                    if (c) {
                                                        var p = createTag("link");
                                                        p.setAttribute("f-forigin", r[i].fOrigin), p.setAttribute("f-origin", r[i].origin), p.setAttribute("rel", "stylesheet"), p.setAttribute("href", r[i].fPath), e.appendChild(p);
                                                    }
                                                }
                                            } else (r[i].loaded = !0), (a -= 1);
                                            (r[i].helper = o(r[i], e)), (r[i].cache = {}), this.fonts.push(r[i]);
                                        }
                                        0 === a ? (this.isLoaded = !0) : setTimeout(this.checkLoadedFonts.bind(this), 100);
                                    } else this.isLoaded = !0;
                                },
                                getCharData: function (e, i, r) {
                                    for (var s = 0, a = this.chars.length; s < a; ) {
                                        if (this.chars[s].ch === e && this.chars[s].style === i && this.chars[s].fFamily === r) return this.chars[s];
                                        s += 1;
                                    }
                                    return (
                                        (("string" == typeof e && 13 !== e.charCodeAt(0)) || !e) &&
                                            console &&
                                            console.warn &&
                                            !this._warned &&
                                            ((this._warned = !0), console.warn("Missing character from exported characters list: ", e, i, r)),
                                        t
                                    );
                                },
                                getFontByName: function (t) {
                                    for (var e = 0, i = this.fonts.length; e < i; ) {
                                        if (this.fonts[e].fName === t) return this.fonts[e];
                                        e += 1;
                                    }
                                    return this.fonts[0];
                                },
                                measureText: function (t, e, i) {
                                    var r = this.getFontByName(e),
                                        s = t;
                                    if (!r.cache[s]) {
                                        var a = r.helper;
                                        if (" " === t) {
                                            var n = a.measureText("|" + t + "|"),
                                                o = a.measureText("||");
                                            r.cache[s] = (n - o) / 100;
                                        } else r.cache[s] = a.measureText(t) / 100;
                                    }
                                    return r.cache[s] * i;
                                },
                                checkLoadedFonts: function () {
                                    var t,
                                        e,
                                        i,
                                        r = this.fonts.length,
                                        s = r;
                                    for (t = 0; t < r; t += 1)
                                        this.fonts[t].loaded
                                            ? (s -= 1)
                                            : "n" === this.fonts[t].fOrigin || 0 === this.fonts[t].origin
                                            ? (this.fonts[t].loaded = !0)
                                            : ((e = this.fonts[t].monoCase.node),
                                              (i = this.fonts[t].monoCase.w),
                                              e.offsetWidth !== i
                                                  ? ((s -= 1), (this.fonts[t].loaded = !0))
                                                  : ((e = this.fonts[t].sansCase.node), (i = this.fonts[t].sansCase.w), e.offsetWidth !== i && ((s -= 1), (this.fonts[t].loaded = !0))),
                                              this.fonts[t].loaded &&
                                                  (this.fonts[t].sansCase.parent.parentNode.removeChild(this.fonts[t].sansCase.parent), this.fonts[t].monoCase.parent.parentNode.removeChild(this.fonts[t].monoCase.parent)));
                                    0 !== s && Date.now() - this.initTime < 5e3 ? setTimeout(this.checkLoadedFontsBinded, 20) : setTimeout(this.setIsLoadedBinded, 10);
                                },
                                setIsLoaded: function () {
                                    this.isLoaded = !0;
                                },
                            };
                            return (c.prototype = d), c;
                        })();
                        function SlotManager(t) {
                            this.animationData = t;
                        }
                        function slotFactory(t) {
                            return new SlotManager(t);
                        }
                        function RenderableElement() {}
                        (SlotManager.prototype.getProp = function (t) {
                            return this.animationData.slots && this.animationData.slots[t.sid] ? Object.assign(t, this.animationData.slots[t.sid].p) : t;
                        }),
                            (RenderableElement.prototype = {
                                initRenderable: function () {
                                    (this.isInRange = !1), (this.hidden = !1), (this.isTransparent = !1), (this.renderableComponents = []);
                                },
                                addRenderableComponent: function (t) {
                                    -1 === this.renderableComponents.indexOf(t) && this.renderableComponents.push(t);
                                },
                                removeRenderableComponent: function (t) {
                                    -1 !== this.renderableComponents.indexOf(t) && this.renderableComponents.splice(this.renderableComponents.indexOf(t), 1);
                                },
                                prepareRenderableFrame: function (t) {
                                    this.checkLayerLimits(t);
                                },
                                checkTransparency: function () {
                                    this.finalTransform.mProp.o.v <= 0
                                        ? !this.isTransparent && this.globalData.renderConfig.hideOnTransparent && ((this.isTransparent = !0), this.hide())
                                        : this.isTransparent && ((this.isTransparent = !1), this.show());
                                },
                                checkLayerLimits: function (t) {
                                    this.data.ip - this.data.st <= t && this.data.op - this.data.st > t
                                        ? !0 !== this.isInRange && ((this.globalData._mdf = !0), (this._mdf = !0), (this.isInRange = !0), this.show())
                                        : !1 !== this.isInRange && ((this.globalData._mdf = !0), (this.isInRange = !1), this.hide());
                                },
                                renderRenderable: function () {
                                    var t,
                                        e = this.renderableComponents.length;
                                    for (t = 0; t < e; t += 1) this.renderableComponents[t].renderFrame(this._isFirstFrame);
                                },
                                sourceRectAtTime: function () {
                                    return { top: 0, left: 0, width: 100, height: 100 };
                                },
                                getLayerSize: function () {
                                    return 5 === this.data.ty ? { w: this.data.textData.width, h: this.data.textData.height } : { w: this.data.width, h: this.data.height };
                                },
                            });
                        var getBlendMode =
                                ((blendModeEnums = {
                                    0: "source-over",
                                    1: "multiply",
                                    2: "screen",
                                    3: "overlay",
                                    4: "darken",
                                    5: "lighten",
                                    6: "color-dodge",
                                    7: "color-burn",
                                    8: "hard-light",
                                    9: "soft-light",
                                    10: "difference",
                                    11: "exclusion",
                                    12: "hue",
                                    13: "saturation",
                                    14: "color",
                                    15: "luminosity",
                                }),
                                function (t) {
                                    return blendModeEnums[t] || "";
                                }),
                            blendModeEnums;
                        function SliderEffect(t, e, i) {
                            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
                        }
                        function AngleEffect(t, e, i) {
                            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
                        }
                        function ColorEffect(t, e, i) {
                            this.p = PropertyFactory.getProp(e, t.v, 1, 0, i);
                        }
                        function PointEffect(t, e, i) {
                            this.p = PropertyFactory.getProp(e, t.v, 1, 0, i);
                        }
                        function LayerIndexEffect(t, e, i) {
                            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
                        }
                        function MaskIndexEffect(t, e, i) {
                            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
                        }
                        function CheckboxEffect(t, e, i) {
                            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
                        }
                        function NoValueEffect() {
                            this.p = {};
                        }
                        function EffectsManager(t, e) {
                            var i,
                                r = t.ef || [];
                            this.effectElements = [];
                            var s,
                                a = r.length;
                            for (i = 0; i < a; i += 1) (s = new GroupEffect(r[i], e)), this.effectElements.push(s);
                        }
                        function GroupEffect(t, e) {
                            this.init(t, e);
                        }
                        function BaseElement() {}
                        function FrameElement() {}
                        function FootageElement(t, e, i) {
                            this.initFrame(), this.initRenderable(), (this.assetData = e.getAssetData(t.refId)), (this.footageData = e.imageLoader.getAsset(this.assetData)), this.initBaseData(t, e, i);
                        }
                        function AudioElement(t, e, i) {
                            this.initFrame(), this.initRenderable(), (this.assetData = e.getAssetData(t.refId)), this.initBaseData(t, e, i), (this._isPlaying = !1), (this._canPlay = !1);
                            var r = this.globalData.getAssetsPath(this.assetData);
                            (this.audio = this.globalData.audioController.createAudio(r)),
                                (this._currentTime = 0),
                                this.globalData.audioController.addAudio(this),
                                (this._volumeMultiplier = 1),
                                (this._volume = 1),
                                (this._previousVolume = null),
                                (this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: !0 }),
                                (this.lv = PropertyFactory.getProp(this, t.au && t.au.lv ? t.au.lv : { k: [100] }, 1, 0.01, this));
                        }
                        function BaseRenderer() {}
                        extendPrototype([DynamicPropertyContainer], GroupEffect),
                            (GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties),
                            (GroupEffect.prototype.init = function (t, e) {
                                var i;
                                (this.data = t), (this.effectElements = []), this.initDynamicPropertyContainer(e);
                                var r,
                                    s = this.data.ef.length,
                                    a = this.data.ef;
                                for (i = 0; i < s; i += 1) {
                                    switch (((r = null), a[i].ty)) {
                                        case 0:
                                            r = new SliderEffect(a[i], e, this);
                                            break;
                                        case 1:
                                            r = new AngleEffect(a[i], e, this);
                                            break;
                                        case 2:
                                            r = new ColorEffect(a[i], e, this);
                                            break;
                                        case 3:
                                            r = new PointEffect(a[i], e, this);
                                            break;
                                        case 4:
                                        case 7:
                                            r = new CheckboxEffect(a[i], e, this);
                                            break;
                                        case 10:
                                            r = new LayerIndexEffect(a[i], e, this);
                                            break;
                                        case 11:
                                            r = new MaskIndexEffect(a[i], e, this);
                                            break;
                                        case 5:
                                            r = new EffectsManager(a[i], e, this);
                                            break;
                                        default:
                                            r = new NoValueEffect(a[i], e, this);
                                    }
                                    r && this.effectElements.push(r);
                                }
                            }),
                            (BaseElement.prototype = {
                                checkMasks: function () {
                                    if (!this.data.hasMask) return !1;
                                    for (var t = 0, e = this.data.masksProperties.length; t < e; ) {
                                        if ("n" !== this.data.masksProperties[t].mode && !1 !== this.data.masksProperties[t].cl) return !0;
                                        t += 1;
                                    }
                                    return !1;
                                },
                                initExpressions: function () {
                                    var t = getExpressionInterfaces();
                                    if (t) {
                                        var e = t("layer"),
                                            i = t("effects"),
                                            r = t("shape"),
                                            s = t("text"),
                                            a = t("comp");
                                        (this.layerInterface = e(this)), this.data.hasMask && this.maskManager && this.layerInterface.registerMaskInterface(this.maskManager);
                                        var n = i.createEffectsInterface(this, this.layerInterface);
                                        this.layerInterface.registerEffectsInterface(n),
                                            0 === this.data.ty || this.data.xt
                                                ? (this.compInterface = a(this))
                                                : 4 === this.data.ty
                                                ? ((this.layerInterface.shapeInterface = r(this.shapesData, this.itemsData, this.layerInterface)), (this.layerInterface.content = this.layerInterface.shapeInterface))
                                                : 5 === this.data.ty && ((this.layerInterface.textInterface = s(this)), (this.layerInterface.text = this.layerInterface.textInterface));
                                    }
                                },
                                setBlendMode: function () {
                                    var t = getBlendMode(this.data.bm);
                                    (this.baseElement || this.layerElement).style["mix-blend-mode"] = t;
                                },
                                initBaseData: function (t, e, i) {
                                    (this.globalData = e),
                                        (this.comp = i),
                                        (this.data = t),
                                        (this.layerId = createElementID()),
                                        this.data.sr || (this.data.sr = 1),
                                        (this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties));
                                },
                                getType: function () {
                                    return this.type;
                                },
                                sourceRectAtTime: function () {},
                            }),
                            (FrameElement.prototype = {
                                initFrame: function () {
                                    (this._isFirstFrame = !1), (this.dynamicProperties = []), (this._mdf = !1);
                                },
                                prepareProperties: function (t, e) {
                                    var i,
                                        r = this.dynamicProperties.length;
                                    for (i = 0; i < r; i += 1)
                                        (e || (this._isParent && "transform" === this.dynamicProperties[i].propType)) &&
                                            (this.dynamicProperties[i].getValue(), this.dynamicProperties[i]._mdf && ((this.globalData._mdf = !0), (this._mdf = !0)));
                                },
                                addDynamicProperty: function (t) {
                                    -1 === this.dynamicProperties.indexOf(t) && this.dynamicProperties.push(t);
                                },
                            }),
                            (FootageElement.prototype.prepareFrame = function () {}),
                            extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement),
                            (FootageElement.prototype.getBaseElement = function () {
                                return null;
                            }),
                            (FootageElement.prototype.renderFrame = function () {}),
                            (FootageElement.prototype.destroy = function () {}),
                            (FootageElement.prototype.initExpressions = function () {
                                var t = getExpressionInterfaces();
                                if (t) {
                                    var e = t("footage");
                                    this.layerInterface = e(this);
                                }
                            }),
                            (FootageElement.prototype.getFootageData = function () {
                                return this.footageData;
                            }),
                            (AudioElement.prototype.prepareFrame = function (t) {
                                if ((this.prepareRenderableFrame(t, !0), this.prepareProperties(t, !0), this.tm._placeholder)) this._currentTime = t / this.data.sr;
                                else {
                                    var e = this.tm.v;
                                    this._currentTime = e;
                                }
                                this._volume = this.lv.v[0];
                                var i = this._volume * this._volumeMultiplier;
                                this._previousVolume !== i && ((this._previousVolume = i), this.audio.volume(i));
                            }),
                            extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement),
                            (AudioElement.prototype.renderFrame = function () {
                                this.isInRange &&
                                    this._canPlay &&
                                    (this._isPlaying
                                        ? (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) && this.audio.seek(this._currentTime / this.globalData.frameRate)
                                        : (this.audio.play(), this.audio.seek(this._currentTime / this.globalData.frameRate), (this._isPlaying = !0)));
                            }),
                            (AudioElement.prototype.show = function () {}),
                            (AudioElement.prototype.hide = function () {
                                this.audio.pause(), (this._isPlaying = !1);
                            }),
                            (AudioElement.prototype.pause = function () {
                                this.audio.pause(), (this._isPlaying = !1), (this._canPlay = !1);
                            }),
                            (AudioElement.prototype.resume = function () {
                                this._canPlay = !0;
                            }),
                            (AudioElement.prototype.setRate = function (t) {
                                this.audio.rate(t);
                            }),
                            (AudioElement.prototype.volume = function (t) {
                                (this._volumeMultiplier = t), (this._previousVolume = t * this._volume), this.audio.volume(this._previousVolume);
                            }),
                            (AudioElement.prototype.getBaseElement = function () {
                                return null;
                            }),
                            (AudioElement.prototype.destroy = function () {}),
                            (AudioElement.prototype.sourceRectAtTime = function () {}),
                            (AudioElement.prototype.initExpressions = function () {}),
                            (BaseRenderer.prototype.checkLayers = function (t) {
                                var e,
                                    i,
                                    r = this.layers.length;
                                for (this.completeLayers = !0, e = r - 1; e >= 0; e -= 1)
                                    this.elements[e] || ((i = this.layers[e]).ip - i.st <= t - this.layers[e].st && i.op - i.st > t - this.layers[e].st && this.buildItem(e)),
                                        (this.completeLayers = !!this.elements[e] && this.completeLayers);
                                this.checkPendingElements();
                            }),
                            (BaseRenderer.prototype.createItem = function (t) {
                                switch (t.ty) {
                                    case 2:
                                        return this.createImage(t);
                                    case 0:
                                        return this.createComp(t);
                                    case 1:
                                        return this.createSolid(t);
                                    case 3:
                                    default:
                                        return this.createNull(t);
                                    case 4:
                                        return this.createShape(t);
                                    case 5:
                                        return this.createText(t);
                                    case 6:
                                        return this.createAudio(t);
                                    case 13:
                                        return this.createCamera(t);
                                    case 15:
                                        return this.createFootage(t);
                                }
                            }),
                            (BaseRenderer.prototype.createCamera = function () {
                                throw new Error("You're using a 3d camera. Try the html renderer.");
                            }),
                            (BaseRenderer.prototype.createAudio = function (t) {
                                return new AudioElement(t, this.globalData, this);
                            }),
                            (BaseRenderer.prototype.createFootage = function (t) {
                                return new FootageElement(t, this.globalData, this);
                            }),
                            (BaseRenderer.prototype.buildAllItems = function () {
                                var t,
                                    e = this.layers.length;
                                for (t = 0; t < e; t += 1) this.buildItem(t);
                                this.checkPendingElements();
                            }),
                            (BaseRenderer.prototype.includeLayers = function (t) {
                                var e;
                                this.completeLayers = !1;
                                var i,
                                    r = t.length,
                                    s = this.layers.length;
                                for (e = 0; e < r; e += 1)
                                    for (i = 0; i < s; ) {
                                        if (this.layers[i].id === t[e].id) {
                                            this.layers[i] = t[e];
                                            break;
                                        }
                                        i += 1;
                                    }
                            }),
                            (BaseRenderer.prototype.setProjectInterface = function (t) {
                                this.globalData.projectInterface = t;
                            }),
                            (BaseRenderer.prototype.initItems = function () {
                                this.globalData.progressiveLoad || this.buildAllItems();
                            }),
                            (BaseRenderer.prototype.buildElementParenting = function (t, e, i) {
                                for (var r = this.elements, s = this.layers, a = 0, n = s.length; a < n; )
                                    s[a].ind == e &&
                                        (r[a] && !0 !== r[a] ? (i.push(r[a]), r[a].setAsParent(), void 0 !== s[a].parent ? this.buildElementParenting(t, s[a].parent, i) : t.setHierarchy(i)) : (this.buildItem(a), this.addPendingElement(t))),
                                        (a += 1);
                            }),
                            (BaseRenderer.prototype.addPendingElement = function (t) {
                                this.pendingElements.push(t);
                            }),
                            (BaseRenderer.prototype.searchExtraCompositions = function (t) {
                                var e,
                                    i = t.length;
                                for (e = 0; e < i; e += 1)
                                    if (t[e].xt) {
                                        var r = this.createComp(t[e]);
                                        r.initExpressions(), this.globalData.projectInterface.registerComposition(r);
                                    }
                            }),
                            (BaseRenderer.prototype.getElementById = function (t) {
                                var e,
                                    i = this.elements.length;
                                for (e = 0; e < i; e += 1) if (this.elements[e].data.ind === t) return this.elements[e];
                                return null;
                            }),
                            (BaseRenderer.prototype.getElementByPath = function (t) {
                                var e,
                                    i = t.shift();
                                if ("number" == typeof i) e = this.elements[i];
                                else {
                                    var r,
                                        s = this.elements.length;
                                    for (r = 0; r < s; r += 1)
                                        if (this.elements[r].data.nm === i) {
                                            e = this.elements[r];
                                            break;
                                        }
                                }
                                return 0 === t.length ? e : e.getElementByPath(t);
                            }),
                            (BaseRenderer.prototype.setupGlobalData = function (t, e) {
                                (this.globalData.fontManager = new FontManager()),
                                    (this.globalData.slotManager = slotFactory(t)),
                                    this.globalData.fontManager.addChars(t.chars),
                                    this.globalData.fontManager.addFonts(t.fonts, e),
                                    (this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem)),
                                    (this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem)),
                                    (this.globalData.imageLoader = this.animationItem.imagePreloader),
                                    (this.globalData.audioController = this.animationItem.audioController),
                                    (this.globalData.frameId = 0),
                                    (this.globalData.frameRate = t.fr),
                                    (this.globalData.nm = t.nm),
                                    (this.globalData.compSize = { w: t.w, h: t.h });
                            });
                        var effectTypes = { TRANSFORM_EFFECT: "transformEFfect" };
                        function TransformElement() {}
                        function MaskElement(t, e, i) {
                            (this.data = t), (this.element = e), (this.globalData = i), (this.storedData = []), (this.masksProperties = this.data.masksProperties || []), (this.maskElement = null);
                            var r,
                                s,
                                a = this.globalData.defs,
                                n = this.masksProperties ? this.masksProperties.length : 0;
                            (this.viewData = createSizedArray(n)), (this.solidPath = "");
                            var o,
                                l,
                                h,
                                c,
                                d,
                                u,
                                p = this.masksProperties,
                                m = 0,
                                f = [],
                                g = createElementID(),
                                v = "clipPath",
                                b = "clip-path";
                            for (r = 0; r < n; r += 1)
                                if (
                                    ((("a" !== p[r].mode && "n" !== p[r].mode) || p[r].inv || 100 !== p[r].o.k || p[r].o.x) && ((v = "mask"), (b = "mask")),
                                    ("s" !== p[r].mode && "i" !== p[r].mode) || 0 !== m
                                        ? (h = null)
                                        : ((h = createNS("rect")).setAttribute("fill", "#ffffff"), h.setAttribute("width", this.element.comp.data.w || 0), h.setAttribute("height", this.element.comp.data.h || 0), f.push(h)),
                                    (s = createNS("path")),
                                    "n" === p[r].mode)
                                )
                                    (this.viewData[r] = { op: PropertyFactory.getProp(this.element, p[r].o, 0, 0.01, this.element), prop: ShapePropertyFactory.getShapeProp(this.element, p[r], 3), elem: s, lastPath: "" }), a.appendChild(s);
                                else {
                                    var y;
                                    if (
                                        ((m += 1),
                                        s.setAttribute("fill", "s" === p[r].mode ? "#000000" : "#ffffff"),
                                        s.setAttribute("clip-rule", "nonzero"),
                                        0 !== p[r].x.k
                                            ? ((v = "mask"),
                                              (b = "mask"),
                                              (u = PropertyFactory.getProp(this.element, p[r].x, 0, null, this.element)),
                                              (y = createElementID()),
                                              (c = createNS("filter")).setAttribute("id", y),
                                              (d = createNS("feMorphology")).setAttribute("operator", "erode"),
                                              d.setAttribute("in", "SourceGraphic"),
                                              d.setAttribute("radius", "0"),
                                              c.appendChild(d),
                                              a.appendChild(c),
                                              s.setAttribute("stroke", "s" === p[r].mode ? "#000000" : "#ffffff"))
                                            : ((d = null), (u = null)),
                                        (this.storedData[r] = { elem: s, x: u, expan: d, lastPath: "", lastOperator: "", filterId: y, lastRadius: 0 }),
                                        "i" === p[r].mode)
                                    ) {
                                        l = f.length;
                                        var w = createNS("g");
                                        for (o = 0; o < l; o += 1) w.appendChild(f[o]);
                                        var x = createNS("mask");
                                        x.setAttribute("mask-type", "alpha"),
                                            x.setAttribute("id", g + "_" + m),
                                            x.appendChild(s),
                                            a.appendChild(x),
                                            w.setAttribute("mask", "url(" + getLocationHref() + "#" + g + "_" + m + ")"),
                                            (f.length = 0),
                                            f.push(w);
                                    } else f.push(s);
                                    p[r].inv && !this.solidPath && (this.solidPath = this.createLayerSolidPath()),
                                        (this.viewData[r] = { elem: s, lastPath: "", op: PropertyFactory.getProp(this.element, p[r].o, 0, 0.01, this.element), prop: ShapePropertyFactory.getShapeProp(this.element, p[r], 3), invRect: h }),
                                        this.viewData[r].prop.k || this.drawPath(p[r], this.viewData[r].prop.v, this.viewData[r]);
                                }
                            for (this.maskElement = createNS(v), n = f.length, r = 0; r < n; r += 1) this.maskElement.appendChild(f[r]);
                            m > 0 && (this.maskElement.setAttribute("id", g), this.element.maskedElement.setAttribute(b, "url(" + getLocationHref() + "#" + g + ")"), a.appendChild(this.maskElement)),
                                this.viewData.length && this.element.addRenderableComponent(this);
                        }
                        (TransformElement.prototype = {
                            initTransform: function () {
                                var t = new Matrix();
                                (this.finalTransform = {
                                    mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : { o: 0 },
                                    _matMdf: !1,
                                    _localMatMdf: !1,
                                    _opMdf: !1,
                                    mat: t,
                                    localMat: t,
                                    localOpacity: 1,
                                }),
                                    this.data.ao && (this.finalTransform.mProp.autoOriented = !0),
                                    this.data.ty;
                            },
                            renderTransform: function () {
                                if (((this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame), (this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame), this.hierarchy)) {
                                    var t,
                                        e = this.finalTransform.mat,
                                        i = 0,
                                        r = this.hierarchy.length;
                                    if (!this.finalTransform._matMdf)
                                        for (; i < r; ) {
                                            if (this.hierarchy[i].finalTransform.mProp._mdf) {
                                                this.finalTransform._matMdf = !0;
                                                break;
                                            }
                                            i += 1;
                                        }
                                    if (this.finalTransform._matMdf) for (t = this.finalTransform.mProp.v.props, e.cloneFromProps(t), i = 0; i < r; i += 1) e.multiply(this.hierarchy[i].finalTransform.mProp.v);
                                }
                                this.finalTransform._matMdf && (this.finalTransform._localMatMdf = this.finalTransform._matMdf), this.finalTransform._opMdf && (this.finalTransform.localOpacity = this.finalTransform.mProp.o.v);
                            },
                            renderLocalTransform: function () {
                                if (this.localTransforms) {
                                    var t = 0,
                                        e = this.localTransforms.length;
                                    if (((this.finalTransform._localMatMdf = this.finalTransform._matMdf), !this.finalTransform._localMatMdf || !this.finalTransform._opMdf))
                                        for (; t < e; )
                                            this.localTransforms[t]._mdf && (this.finalTransform._localMatMdf = !0),
                                                this.localTransforms[t]._opMdf && !this.finalTransform._opMdf && ((this.finalTransform.localOpacity = this.finalTransform.mProp.o.v), (this.finalTransform._opMdf = !0)),
                                                (t += 1);
                                    if (this.finalTransform._localMatMdf) {
                                        var i = this.finalTransform.localMat;
                                        for (this.localTransforms[0].matrix.clone(i), t = 1; t < e; t += 1) {
                                            var r = this.localTransforms[t].matrix;
                                            i.multiply(r);
                                        }
                                        i.multiply(this.finalTransform.mat);
                                    }
                                    if (this.finalTransform._opMdf) {
                                        var s = this.finalTransform.localOpacity;
                                        for (t = 0; t < e; t += 1) s *= 0.01 * this.localTransforms[t].opacity;
                                        this.finalTransform.localOpacity = s;
                                    }
                                }
                            },
                            searchEffectTransforms: function () {
                                if (this.renderableEffectsManager) {
                                    var t = this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);
                                    if (t.length) {
                                        (this.localTransforms = []), (this.finalTransform.localMat = new Matrix());
                                        var e = 0,
                                            i = t.length;
                                        for (e = 0; e < i; e += 1) this.localTransforms.push(t[e]);
                                    }
                                }
                            },
                            globalToLocal: function (t) {
                                var e = [];
                                e.push(this.finalTransform);
                                for (var i, r = !0, s = this.comp; r; ) s.finalTransform ? (s.data.hasMask && e.splice(0, 0, s.finalTransform), (s = s.comp)) : (r = !1);
                                var a,
                                    n = e.length;
                                for (i = 0; i < n; i += 1) (a = e[i].mat.applyToPointArray(0, 0, 0)), (t = [t[0] - a[0], t[1] - a[1], 0]);
                                return t;
                            },
                            mHelper: new Matrix(),
                        }),
                            (MaskElement.prototype.getMaskProperty = function (t) {
                                return this.viewData[t].prop;
                            }),
                            (MaskElement.prototype.renderFrame = function (t) {
                                var e,
                                    i = this.element.finalTransform.mat,
                                    r = this.masksProperties.length;
                                for (e = 0; e < r; e += 1)
                                    if (
                                        ((this.viewData[e].prop._mdf || t) && this.drawPath(this.masksProperties[e], this.viewData[e].prop.v, this.viewData[e]),
                                        (this.viewData[e].op._mdf || t) && this.viewData[e].elem.setAttribute("fill-opacity", this.viewData[e].op.v),
                                        "n" !== this.masksProperties[e].mode &&
                                            (this.viewData[e].invRect && (this.element.finalTransform.mProp._mdf || t) && this.viewData[e].invRect.setAttribute("transform", i.getInverseMatrix().to2dCSS()),
                                            this.storedData[e].x && (this.storedData[e].x._mdf || t)))
                                    ) {
                                        var s = this.storedData[e].expan;
                                        this.storedData[e].x.v < 0
                                            ? ("erode" !== this.storedData[e].lastOperator &&
                                                  ((this.storedData[e].lastOperator = "erode"), this.storedData[e].elem.setAttribute("filter", "url(" + getLocationHref() + "#" + this.storedData[e].filterId + ")")),
                                              s.setAttribute("radius", -this.storedData[e].x.v))
                                            : ("dilate" !== this.storedData[e].lastOperator && ((this.storedData[e].lastOperator = "dilate"), this.storedData[e].elem.setAttribute("filter", null)),
                                              this.storedData[e].elem.setAttribute("stroke-width", 2 * this.storedData[e].x.v));
                                    }
                            }),
                            (MaskElement.prototype.getMaskelement = function () {
                                return this.maskElement;
                            }),
                            (MaskElement.prototype.createLayerSolidPath = function () {
                                var t = "M0,0 ";
                                return (t += " h" + this.globalData.compSize.w), (t += " v" + this.globalData.compSize.h), (t += " h-" + this.globalData.compSize.w), (t += " v-" + this.globalData.compSize.h + " ");
                            }),
                            (MaskElement.prototype.drawPath = function (t, e, i) {
                                var r,
                                    s,
                                    a = " M" + e.v[0][0] + "," + e.v[0][1];
                                for (s = e._length, r = 1; r < s; r += 1) a += " C" + e.o[r - 1][0] + "," + e.o[r - 1][1] + " " + e.i[r][0] + "," + e.i[r][1] + " " + e.v[r][0] + "," + e.v[r][1];
                                if ((e.c && s > 1 && (a += " C" + e.o[r - 1][0] + "," + e.o[r - 1][1] + " " + e.i[0][0] + "," + e.i[0][1] + " " + e.v[0][0] + "," + e.v[0][1]), i.lastPath !== a)) {
                                    var n = "";
                                    i.elem && (e.c && (n = t.inv ? this.solidPath + a : a), i.elem.setAttribute("d", n)), (i.lastPath = a);
                                }
                            }),
                            (MaskElement.prototype.destroy = function () {
                                (this.element = null), (this.globalData = null), (this.maskElement = null), (this.data = null), (this.masksProperties = null);
                            });
                        var filtersFactory = (function () {
                                var t = {
                                    createFilter: function (t, e) {
                                        var i = createNS("filter");
                                        return (
                                            i.setAttribute("id", t),
                                            !0 !== e && (i.setAttribute("filterUnits", "objectBoundingBox"), i.setAttribute("x", "0%"), i.setAttribute("y", "0%"), i.setAttribute("width", "100%"), i.setAttribute("height", "100%")),
                                            i
                                        );
                                    },
                                    createAlphaToLuminanceFilter: function () {
                                        var t = createNS("feColorMatrix");
                                        return t.setAttribute("type", "matrix"), t.setAttribute("color-interpolation-filters", "sRGB"), t.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"), t;
                                    },
                                };
                                return t;
                            })(),
                            featureSupport = (function () {
                                var t = { maskType: !0, svgLumaHidden: !0, offscreenCanvas: "undefined" != typeof OffscreenCanvas };
                                return (
                                    (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) && (t.maskType = !1),
                                    /firefox/i.test(navigator.userAgent) && (t.svgLumaHidden = !1),
                                    t
                                );
                            })(),
                            registeredEffects$1 = {},
                            idPrefix = "filter_result_";
                        function SVGEffects(t) {
                            var e,
                                i,
                                r = "SourceGraphic",
                                s = t.data.ef ? t.data.ef.length : 0,
                                a = createElementID(),
                                n = filtersFactory.createFilter(a, !0),
                                o = 0;
                            for (this.filters = [], e = 0; e < s; e += 1) {
                                i = null;
                                var l = t.data.ef[e].ty;
                                registeredEffects$1[l] && ((i = new (0, registeredEffects$1[l].effect)(n, t.effectsManager.effectElements[e], t, idPrefix + o, r)), (r = idPrefix + o), registeredEffects$1[l].countsAsEffect && (o += 1)),
                                    i && this.filters.push(i);
                            }
                            o && (t.globalData.defs.appendChild(n), t.layerElement.setAttribute("filter", "url(" + getLocationHref() + "#" + a + ")")), this.filters.length && t.addRenderableComponent(this);
                        }
                        function registerEffect$1(t, e, i) {
                            registeredEffects$1[t] = { effect: e, countsAsEffect: i };
                        }
                        function SVGBaseElement() {}
                        function HierarchyElement() {}
                        function RenderableDOMElement() {}
                        function IImageElement(t, e, i) {
                            (this.assetData = e.getAssetData(t.refId)),
                                this.assetData && this.assetData.sid && (this.assetData = e.slotManager.getProp(this.assetData)),
                                this.initElement(t, e, i),
                                (this.sourceRect = { top: 0, left: 0, width: this.assetData.w, height: this.assetData.h });
                        }
                        function ProcessedElement(t, e) {
                            (this.elem = t), (this.pos = e);
                        }
                        function IShapeElement() {}
                        (SVGEffects.prototype.renderFrame = function (t) {
                            var e,
                                i = this.filters.length;
                            for (e = 0; e < i; e += 1) this.filters[e].renderFrame(t);
                        }),
                            (SVGEffects.prototype.getEffects = function (t) {
                                var e,
                                    i = this.filters.length,
                                    r = [];
                                for (e = 0; e < i; e += 1) this.filters[e].type === t && r.push(this.filters[e]);
                                return r;
                            }),
                            (SVGBaseElement.prototype = {
                                initRendererElement: function () {
                                    this.layerElement = createNS("g");
                                },
                                createContainerElements: function () {
                                    (this.matteElement = createNS("g")), (this.transformedElement = this.layerElement), (this.maskedElement = this.layerElement), (this._sizeChanged = !1);
                                    var t = null;
                                    if (this.data.td) {
                                        this.matteMasks = {};
                                        var e = createNS("g");
                                        e.setAttribute("id", this.layerId), e.appendChild(this.layerElement), (t = e), this.globalData.defs.appendChild(e);
                                    } else this.data.tt ? (this.matteElement.appendChild(this.layerElement), (t = this.matteElement), (this.baseElement = this.matteElement)) : (this.baseElement = this.layerElement);
                                    if ((this.data.ln && this.layerElement.setAttribute("id", this.data.ln), this.data.cl && this.layerElement.setAttribute("class", this.data.cl), 0 === this.data.ty && !this.data.hd)) {
                                        var i = createNS("clipPath"),
                                            r = createNS("path");
                                        r.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
                                        var s = createElementID();
                                        if ((i.setAttribute("id", s), i.appendChild(r), this.globalData.defs.appendChild(i), this.checkMasks())) {
                                            var a = createNS("g");
                                            a.setAttribute("clip-path", "url(" + getLocationHref() + "#" + s + ")"),
                                                a.appendChild(this.layerElement),
                                                (this.transformedElement = a),
                                                t ? t.appendChild(this.transformedElement) : (this.baseElement = this.transformedElement);
                                        } else this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + s + ")");
                                    }
                                    0 !== this.data.bm && this.setBlendMode();
                                },
                                renderElement: function () {
                                    this.finalTransform._localMatMdf && this.transformedElement.setAttribute("transform", this.finalTransform.localMat.to2dCSS()),
                                        this.finalTransform._opMdf && this.transformedElement.setAttribute("opacity", this.finalTransform.localOpacity);
                                },
                                destroyBaseElement: function () {
                                    (this.layerElement = null), (this.matteElement = null), this.maskManager.destroy();
                                },
                                getBaseElement: function () {
                                    return this.data.hd ? null : this.baseElement;
                                },
                                createRenderableComponents: function () {
                                    (this.maskManager = new MaskElement(this.data, this, this.globalData)), (this.renderableEffectsManager = new SVGEffects(this)), this.searchEffectTransforms();
                                },
                                getMatte: function (t) {
                                    if ((this.matteMasks || (this.matteMasks = {}), !this.matteMasks[t])) {
                                        var e,
                                            i,
                                            r,
                                            s,
                                            a = this.layerId + "_" + t;
                                        if (1 === t || 3 === t) {
                                            var n = createNS("mask");
                                            n.setAttribute("id", a),
                                                n.setAttribute("mask-type", 3 === t ? "luminance" : "alpha"),
                                                (r = createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId),
                                                n.appendChild(r),
                                                this.globalData.defs.appendChild(n),
                                                featureSupport.maskType ||
                                                    1 !== t ||
                                                    (n.setAttribute("mask-type", "luminance"),
                                                    (e = createElementID()),
                                                    (i = filtersFactory.createFilter(e)),
                                                    this.globalData.defs.appendChild(i),
                                                    i.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                                                    (s = createNS("g")).appendChild(r),
                                                    n.appendChild(s),
                                                    s.setAttribute("filter", "url(" + getLocationHref() + "#" + e + ")"));
                                        } else if (2 === t) {
                                            var o = createNS("mask");
                                            o.setAttribute("id", a), o.setAttribute("mask-type", "alpha");
                                            var l = createNS("g");
                                            o.appendChild(l), (e = createElementID()), (i = filtersFactory.createFilter(e));
                                            var h = createNS("feComponentTransfer");
                                            h.setAttribute("in", "SourceGraphic"), i.appendChild(h);
                                            var c = createNS("feFuncA");
                                            c.setAttribute("type", "table"), c.setAttribute("tableValues", "1.0 0.0"), h.appendChild(c), this.globalData.defs.appendChild(i);
                                            var d = createNS("rect");
                                            d.setAttribute("width", this.comp.data.w),
                                                d.setAttribute("height", this.comp.data.h),
                                                d.setAttribute("x", "0"),
                                                d.setAttribute("y", "0"),
                                                d.setAttribute("fill", "#ffffff"),
                                                d.setAttribute("opacity", "0"),
                                                l.setAttribute("filter", "url(" + getLocationHref() + "#" + e + ")"),
                                                l.appendChild(d),
                                                (r = createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId),
                                                l.appendChild(r),
                                                featureSupport.maskType ||
                                                    (o.setAttribute("mask-type", "luminance"),
                                                    i.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                                                    (s = createNS("g")),
                                                    l.appendChild(d),
                                                    s.appendChild(this.layerElement),
                                                    l.appendChild(s)),
                                                this.globalData.defs.appendChild(o);
                                        }
                                        this.matteMasks[t] = a;
                                    }
                                    return this.matteMasks[t];
                                },
                                setMatte: function (t) {
                                    this.matteElement && this.matteElement.setAttribute("mask", "url(" + getLocationHref() + "#" + t + ")");
                                },
                            }),
                            (HierarchyElement.prototype = {
                                initHierarchy: function () {
                                    (this.hierarchy = []), (this._isParent = !1), this.checkParenting();
                                },
                                setHierarchy: function (t) {
                                    this.hierarchy = t;
                                },
                                setAsParent: function () {
                                    this._isParent = !0;
                                },
                                checkParenting: function () {
                                    void 0 !== this.data.parent && this.comp.buildElementParenting(this, this.data.parent, []);
                                },
                            }),
                            extendPrototype(
                                [
                                    RenderableElement,
                                    createProxyFunction({
                                        initElement: function (t, e, i) {
                                            this.initFrame(),
                                                this.initBaseData(t, e, i),
                                                this.initTransform(t, e, i),
                                                this.initHierarchy(),
                                                this.initRenderable(),
                                                this.initRendererElement(),
                                                this.createContainerElements(),
                                                this.createRenderableComponents(),
                                                this.createContent(),
                                                this.hide();
                                        },
                                        hide: function () {
                                            this.hidden || (this.isInRange && !this.isTransparent) || (((this.baseElement || this.layerElement).style.display = "none"), (this.hidden = !0));
                                        },
                                        show: function () {
                                            this.isInRange && !this.isTransparent && (this.data.hd || ((this.baseElement || this.layerElement).style.display = "block"), (this.hidden = !1), (this._isFirstFrame = !0));
                                        },
                                        renderFrame: function () {
                                            this.data.hd ||
                                                this.hidden ||
                                                (this.renderTransform(), this.renderRenderable(), this.renderLocalTransform(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = !1));
                                        },
                                        renderInnerContent: function () {},
                                        prepareFrame: function (t) {
                                            (this._mdf = !1), this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.checkTransparency();
                                        },
                                        destroy: function () {
                                            (this.innerElem = null), this.destroyBaseElement();
                                        },
                                    }),
                                ],
                                RenderableDOMElement
                            ),
                            extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement),
                            (IImageElement.prototype.createContent = function () {
                                var t = this.globalData.getAssetsPath(this.assetData);
                                (this.innerElem = createNS("image")),
                                    this.innerElem.setAttribute("width", this.assetData.w + "px"),
                                    this.innerElem.setAttribute("height", this.assetData.h + "px"),
                                    this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio),
                                    this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t),
                                    this.layerElement.appendChild(this.innerElem);
                            }),
                            (IImageElement.prototype.sourceRectAtTime = function () {
                                return this.sourceRect;
                            }),
                            (IShapeElement.prototype = {
                                addShapeToModifiers: function (t) {
                                    var e,
                                        i = this.shapeModifiers.length;
                                    for (e = 0; e < i; e += 1) this.shapeModifiers[e].addShape(t);
                                },
                                isShapeInAnimatedModifiers: function (t) {
                                    for (var e = this.shapeModifiers.length; 0 < e; ) if (this.shapeModifiers[0].isAnimatedWithShape(t)) return !0;
                                    return !1;
                                },
                                renderModifiers: function () {
                                    if (this.shapeModifiers.length) {
                                        var t,
                                            e = this.shapes.length;
                                        for (t = 0; t < e; t += 1) this.shapes[t].sh.reset();
                                        for (t = (e = this.shapeModifiers.length) - 1; t >= 0 && !this.shapeModifiers[t].processShapes(this._isFirstFrame); t -= 1);
                                    }
                                },
                                searchProcessedElement: function (t) {
                                    for (var e = this.processedElements, i = 0, r = e.length; i < r; ) {
                                        if (e[i].elem === t) return e[i].pos;
                                        i += 1;
                                    }
                                    return 0;
                                },
                                addProcessedElement: function (t, e) {
                                    for (var i = this.processedElements, r = i.length; r; ) if (i[(r -= 1)].elem === t) return void (i[r].pos = e);
                                    i.push(new ProcessedElement(t, e));
                                },
                                prepareFrame: function (t) {
                                    this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange);
                                },
                            });
                        var lineCapEnum = { 1: "butt", 2: "round", 3: "square" },
                            lineJoinEnum = { 1: "miter", 2: "round", 3: "bevel" };
                        function SVGShapeData(t, e, i) {
                            (this.caches = []), (this.styles = []), (this.transformers = t), (this.lStr = ""), (this.sh = i), (this.lvl = e), (this._isAnimated = !!i.k);
                            for (var r = 0, s = t.length; r < s; ) {
                                if (t[r].mProps.dynamicProperties.length) {
                                    this._isAnimated = !0;
                                    break;
                                }
                                r += 1;
                            }
                        }
                        function SVGStyleData(t, e) {
                            (this.data = t), (this.type = t.ty), (this.d = ""), (this.lvl = e), (this._mdf = !1), (this.closed = !0 === t.hd), (this.pElem = createNS("path")), (this.msElem = null);
                        }
                        function DashProperty(t, e, i, r) {
                            var s;
                            (this.elem = t),
                                (this.frameId = -1),
                                (this.dataProps = createSizedArray(e.length)),
                                (this.renderer = i),
                                (this.k = !1),
                                (this.dashStr = ""),
                                (this.dashArray = createTypedArray("float32", e.length ? e.length - 1 : 0)),
                                (this.dashoffset = createTypedArray("float32", 1)),
                                this.initDynamicPropertyContainer(r);
                            var a,
                                n = e.length || 0;
                            for (s = 0; s < n; s += 1) (a = PropertyFactory.getProp(t, e[s].v, 0, 0, this)), (this.k = a.k || this.k), (this.dataProps[s] = { n: e[s].n, p: a });
                            this.k || this.getValue(!0), (this._isAnimated = this.k);
                        }
                        function SVGStrokeStyleData(t, e, i) {
                            this.initDynamicPropertyContainer(t),
                                (this.getValue = this.iterateDynamicProperties),
                                (this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this)),
                                (this.w = PropertyFactory.getProp(t, e.w, 0, null, this)),
                                (this.d = new DashProperty(t, e.d || {}, "svg", this)),
                                (this.c = PropertyFactory.getProp(t, e.c, 1, 255, this)),
                                (this.style = i),
                                (this._isAnimated = !!this._isAnimated);
                        }
                        function SVGFillStyleData(t, e, i) {
                            this.initDynamicPropertyContainer(t),
                                (this.getValue = this.iterateDynamicProperties),
                                (this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this)),
                                (this.c = PropertyFactory.getProp(t, e.c, 1, 255, this)),
                                (this.style = i);
                        }
                        function SVGNoStyleData(t, e, i) {
                            this.initDynamicPropertyContainer(t), (this.getValue = this.iterateDynamicProperties), (this.style = i);
                        }
                        function GradientProperty(t, e, i) {
                            (this.data = e), (this.c = createTypedArray("uint8c", 4 * e.p));
                            var r = e.k.k[0].s ? e.k.k[0].s.length - 4 * e.p : e.k.k.length - 4 * e.p;
                            (this.o = createTypedArray("float32", r)),
                                (this._cmdf = !1),
                                (this._omdf = !1),
                                (this._collapsable = this.checkCollapsable()),
                                (this._hasOpacity = r),
                                this.initDynamicPropertyContainer(i),
                                (this.prop = PropertyFactory.getProp(t, e.k, 1, null, this)),
                                (this.k = this.prop.k),
                                this.getValue(!0);
                        }
                        function SVGGradientFillStyleData(t, e, i) {
                            this.initDynamicPropertyContainer(t), (this.getValue = this.iterateDynamicProperties), this.initGradientData(t, e, i);
                        }
                        function SVGGradientStrokeStyleData(t, e, i) {
                            this.initDynamicPropertyContainer(t),
                                (this.getValue = this.iterateDynamicProperties),
                                (this.w = PropertyFactory.getProp(t, e.w, 0, null, this)),
                                (this.d = new DashProperty(t, e.d || {}, "svg", this)),
                                this.initGradientData(t, e, i),
                                (this._isAnimated = !!this._isAnimated);
                        }
                        function ShapeGroupData() {
                            (this.it = []), (this.prevViewData = []), (this.gr = createNS("g"));
                        }
                        function SVGTransformData(t, e, i) {
                            (this.transform = { mProps: t, op: e, container: i }), (this.elements = []), (this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length);
                        }
                        (SVGShapeData.prototype.setAsAnimated = function () {
                            this._isAnimated = !0;
                        }),
                            (SVGStyleData.prototype.reset = function () {
                                (this.d = ""), (this._mdf = !1);
                            }),
                            (DashProperty.prototype.getValue = function (t) {
                                if ((this.elem.globalData.frameId !== this.frameId || t) && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties(), (this._mdf = this._mdf || t), this._mdf)) {
                                    var e = 0,
                                        i = this.dataProps.length;
                                    for ("svg" === this.renderer && (this.dashStr = ""), e = 0; e < i; e += 1)
                                        "o" !== this.dataProps[e].n ? ("svg" === this.renderer ? (this.dashStr += " " + this.dataProps[e].p.v) : (this.dashArray[e] = this.dataProps[e].p.v)) : (this.dashoffset[0] = this.dataProps[e].p.v);
                                }
                            }),
                            extendPrototype([DynamicPropertyContainer], DashProperty),
                            extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData),
                            extendPrototype([DynamicPropertyContainer], SVGFillStyleData),
                            extendPrototype([DynamicPropertyContainer], SVGNoStyleData),
                            (GradientProperty.prototype.comparePoints = function (t, e) {
                                for (var i = 0, r = this.o.length / 2; i < r; ) {
                                    if (Math.abs(t[4 * i] - t[4 * e + 2 * i]) > 0.01) return !1;
                                    i += 1;
                                }
                                return !0;
                            }),
                            (GradientProperty.prototype.checkCollapsable = function () {
                                if (this.o.length / 2 != this.c.length / 4) return !1;
                                if (this.data.k.k[0].s)
                                    for (var t = 0, e = this.data.k.k.length; t < e; ) {
                                        if (!this.comparePoints(this.data.k.k[t].s, this.data.p)) return !1;
                                        t += 1;
                                    }
                                else if (!this.comparePoints(this.data.k.k, this.data.p)) return !1;
                                return !0;
                            }),
                            (GradientProperty.prototype.getValue = function (t) {
                                if ((this.prop.getValue(), (this._mdf = !1), (this._cmdf = !1), (this._omdf = !1), this.prop._mdf || t)) {
                                    var e,
                                        i,
                                        r,
                                        s = 4 * this.data.p;
                                    for (e = 0; e < s; e += 1) (i = e % 4 == 0 ? 100 : 255), (r = Math.round(this.prop.v[e] * i)), this.c[e] !== r && ((this.c[e] = r), (this._cmdf = !t));
                                    if (this.o.length)
                                        for (s = this.prop.v.length, e = 4 * this.data.p; e < s; e += 1)
                                            (i = e % 2 == 0 ? 100 : 1), (r = e % 2 == 0 ? Math.round(100 * this.prop.v[e]) : this.prop.v[e]), this.o[e - 4 * this.data.p] !== r && ((this.o[e - 4 * this.data.p] = r), (this._omdf = !t));
                                    this._mdf = !t;
                                }
                            }),
                            extendPrototype([DynamicPropertyContainer], GradientProperty),
                            (SVGGradientFillStyleData.prototype.initGradientData = function (t, e, i) {
                                (this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this)),
                                    (this.s = PropertyFactory.getProp(t, e.s, 1, null, this)),
                                    (this.e = PropertyFactory.getProp(t, e.e, 1, null, this)),
                                    (this.h = PropertyFactory.getProp(t, e.h || { k: 0 }, 0, 0.01, this)),
                                    (this.a = PropertyFactory.getProp(t, e.a || { k: 0 }, 0, degToRads, this)),
                                    (this.g = new GradientProperty(t, e.g, this)),
                                    (this.style = i),
                                    (this.stops = []),
                                    this.setGradientData(i.pElem, e),
                                    this.setGradientOpacity(e, i),
                                    (this._isAnimated = !!this._isAnimated);
                            }),
                            (SVGGradientFillStyleData.prototype.setGradientData = function (t, e) {
                                var i = createElementID(),
                                    r = createNS(1 === e.t ? "linearGradient" : "radialGradient");
                                r.setAttribute("id", i), r.setAttribute("spreadMethod", "pad"), r.setAttribute("gradientUnits", "userSpaceOnUse");
                                var s,
                                    a,
                                    n,
                                    o = [];
                                for (n = 4 * e.g.p, a = 0; a < n; a += 4) (s = createNS("stop")), r.appendChild(s), o.push(s);
                                t.setAttribute("gf" === e.ty ? "fill" : "stroke", "url(" + getLocationHref() + "#" + i + ")"), (this.gf = r), (this.cst = o);
                            }),
                            (SVGGradientFillStyleData.prototype.setGradientOpacity = function (t, e) {
                                if (this.g._hasOpacity && !this.g._collapsable) {
                                    var i,
                                        r,
                                        s,
                                        a = createNS("mask"),
                                        n = createNS("path");
                                    a.appendChild(n);
                                    var o = createElementID(),
                                        l = createElementID();
                                    a.setAttribute("id", l);
                                    var h = createNS(1 === t.t ? "linearGradient" : "radialGradient");
                                    h.setAttribute("id", o), h.setAttribute("spreadMethod", "pad"), h.setAttribute("gradientUnits", "userSpaceOnUse"), (s = t.g.k.k[0].s ? t.g.k.k[0].s.length : t.g.k.k.length);
                                    var c = this.stops;
                                    for (r = 4 * t.g.p; r < s; r += 2) (i = createNS("stop")).setAttribute("stop-color", "rgb(255,255,255)"), h.appendChild(i), c.push(i);
                                    n.setAttribute("gf" === t.ty ? "fill" : "stroke", "url(" + getLocationHref() + "#" + o + ")"),
                                        "gs" === t.ty && (n.setAttribute("stroke-linecap", lineCapEnum[t.lc || 2]), n.setAttribute("stroke-linejoin", lineJoinEnum[t.lj || 2]), 1 === t.lj && n.setAttribute("stroke-miterlimit", t.ml)),
                                        (this.of = h),
                                        (this.ms = a),
                                        (this.ost = c),
                                        (this.maskId = l),
                                        (e.msElem = n);
                                }
                            }),
                            extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData),
                            extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
                        var buildShapeString = function (t, e, i, r) {
                                if (0 === e) return "";
                                var s,
                                    a = t.o,
                                    n = t.i,
                                    o = t.v,
                                    l = " M" + r.applyToPointStringified(o[0][0], o[0][1]);
                                for (s = 1; s < e; s += 1) l += " C" + r.applyToPointStringified(a[s - 1][0], a[s - 1][1]) + " " + r.applyToPointStringified(n[s][0], n[s][1]) + " " + r.applyToPointStringified(o[s][0], o[s][1]);
                                return i && e && ((l += " C" + r.applyToPointStringified(a[s - 1][0], a[s - 1][1]) + " " + r.applyToPointStringified(n[0][0], n[0][1]) + " " + r.applyToPointStringified(o[0][0], o[0][1])), (l += "z")), l;
                            },
                            SVGElementsRenderer = (function () {
                                var t = new Matrix(),
                                    e = new Matrix();
                                function i(t, e, i) {
                                    (i || e.transform.op._mdf) && e.transform.container.setAttribute("opacity", e.transform.op.v),
                                        (i || e.transform.mProps._mdf) && e.transform.container.setAttribute("transform", e.transform.mProps.v.to2dCSS());
                                }
                                function r() {}
                                function s(i, r, s) {
                                    var a,
                                        n,
                                        o,
                                        l,
                                        h,
                                        c,
                                        d,
                                        u,
                                        p,
                                        m,
                                        f = r.styles.length,
                                        g = r.lvl;
                                    for (c = 0; c < f; c += 1) {
                                        if (((l = r.sh._mdf || s), r.styles[c].lvl < g)) {
                                            for (u = e.reset(), p = g - r.styles[c].lvl, m = r.transformers.length - 1; !l && p > 0; ) (l = r.transformers[m].mProps._mdf || l), (p -= 1), (m -= 1);
                                            if (l) for (p = g - r.styles[c].lvl, m = r.transformers.length - 1; p > 0; ) u.multiply(r.transformers[m].mProps.v), (p -= 1), (m -= 1);
                                        } else u = t;
                                        if (((n = (d = r.sh.paths)._length), l)) {
                                            for (o = "", a = 0; a < n; a += 1) (h = d.shapes[a]) && h._length && (o += buildShapeString(h, h._length, h.c, u));
                                            r.caches[c] = o;
                                        } else o = r.caches[c];
                                        (r.styles[c].d += !0 === i.hd ? "" : o), (r.styles[c]._mdf = l || r.styles[c]._mdf);
                                    }
                                }
                                function a(t, e, i) {
                                    var r = e.style;
                                    (e.c._mdf || i) && r.pElem.setAttribute("fill", "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"), (e.o._mdf || i) && r.pElem.setAttribute("fill-opacity", e.o.v);
                                }
                                function n(t, e, i) {
                                    o(t, e, i), l(0, e, i);
                                }
                                function o(t, e, i) {
                                    var r,
                                        s,
                                        a,
                                        n,
                                        o,
                                        l = e.gf,
                                        h = e.g._hasOpacity,
                                        c = e.s.v,
                                        d = e.e.v;
                                    if (e.o._mdf || i) {
                                        var u = "gf" === t.ty ? "fill-opacity" : "stroke-opacity";
                                        e.style.pElem.setAttribute(u, e.o.v);
                                    }
                                    if (e.s._mdf || i) {
                                        var p = 1 === t.t ? "x1" : "cx",
                                            m = "x1" === p ? "y1" : "cy";
                                        l.setAttribute(p, c[0]), l.setAttribute(m, c[1]), h && !e.g._collapsable && (e.of.setAttribute(p, c[0]), e.of.setAttribute(m, c[1]));
                                    }
                                    if (e.g._cmdf || i) {
                                        r = e.cst;
                                        var f = e.g.c;
                                        for (a = r.length, s = 0; s < a; s += 1) (n = r[s]).setAttribute("offset", f[4 * s] + "%"), n.setAttribute("stop-color", "rgb(" + f[4 * s + 1] + "," + f[4 * s + 2] + "," + f[4 * s + 3] + ")");
                                    }
                                    if (h && (e.g._omdf || i)) {
                                        var g = e.g.o;
                                        for (a = (r = e.g._collapsable ? e.cst : e.ost).length, s = 0; s < a; s += 1) (n = r[s]), e.g._collapsable || n.setAttribute("offset", g[2 * s] + "%"), n.setAttribute("stop-opacity", g[2 * s + 1]);
                                    }
                                    if (1 === t.t) (e.e._mdf || i) && (l.setAttribute("x2", d[0]), l.setAttribute("y2", d[1]), h && !e.g._collapsable && (e.of.setAttribute("x2", d[0]), e.of.setAttribute("y2", d[1])));
                                    else if (
                                        ((e.s._mdf || e.e._mdf || i) && ((o = Math.sqrt(Math.pow(c[0] - d[0], 2) + Math.pow(c[1] - d[1], 2))), l.setAttribute("r", o), h && !e.g._collapsable && e.of.setAttribute("r", o)),
                                        e.e._mdf || e.h._mdf || e.a._mdf || i)
                                    ) {
                                        o || (o = Math.sqrt(Math.pow(c[0] - d[0], 2) + Math.pow(c[1] - d[1], 2)));
                                        var v = Math.atan2(d[1] - c[1], d[0] - c[0]),
                                            b = e.h.v;
                                        b >= 1 ? (b = 0.99) : b <= -1 && (b = -0.99);
                                        var y = o * b,
                                            w = Math.cos(v + e.a.v) * y + c[0],
                                            x = Math.sin(v + e.a.v) * y + c[1];
                                        l.setAttribute("fx", w), l.setAttribute("fy", x), h && !e.g._collapsable && (e.of.setAttribute("fx", w), e.of.setAttribute("fy", x));
                                    }
                                }
                                function l(t, e, i) {
                                    var r = e.style,
                                        s = e.d;
                                    s && (s._mdf || i) && s.dashStr && (r.pElem.setAttribute("stroke-dasharray", s.dashStr), r.pElem.setAttribute("stroke-dashoffset", s.dashoffset[0])),
                                        e.c && (e.c._mdf || i) && r.pElem.setAttribute("stroke", "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"),
                                        (e.o._mdf || i) && r.pElem.setAttribute("stroke-opacity", e.o.v),
                                        (e.w._mdf || i) && (r.pElem.setAttribute("stroke-width", e.w.v), r.msElem && r.msElem.setAttribute("stroke-width", e.w.v));
                                }
                                return {
                                    createRenderFunction: function (t) {
                                        switch (t.ty) {
                                            case "fl":
                                                return a;
                                            case "gf":
                                                return o;
                                            case "gs":
                                                return n;
                                            case "st":
                                                return l;
                                            case "sh":
                                            case "el":
                                            case "rc":
                                            case "sr":
                                                return s;
                                            case "tr":
                                                return i;
                                            case "no":
                                                return r;
                                            default:
                                                return null;
                                        }
                                    },
                                };
                            })();
                        function SVGShapeElement(t, e, i) {
                            (this.shapes = []),
                                (this.shapesData = t.shapes),
                                (this.stylesList = []),
                                (this.shapeModifiers = []),
                                (this.itemsData = []),
                                (this.processedElements = []),
                                (this.animatedContents = []),
                                this.initElement(t, e, i),
                                (this.prevViewData = []);
                        }
                        function LetterProps(t, e, i, r, s, a) {
                            (this.o = t), (this.sw = e), (this.sc = i), (this.fc = r), (this.m = s), (this.p = a), (this._mdf = { o: !0, sw: !!e, sc: !!i, fc: !!r, m: !0, p: !0 });
                        }
                        function TextProperty(t, e) {
                            (this._frameId = initialDefaultFrame),
                                (this.pv = ""),
                                (this.v = ""),
                                (this.kf = !1),
                                (this._isFirstFrame = !0),
                                (this._mdf = !1),
                                e.d && e.d.sid && (e.d = t.globalData.slotManager.getProp(e.d)),
                                (this.data = e),
                                (this.elem = t),
                                (this.comp = this.elem.comp),
                                (this.keysIndex = 0),
                                (this.canResize = !1),
                                (this.minimumFontSize = 1),
                                (this.effectsSequence = []),
                                (this.currentData = {
                                    ascent: 0,
                                    boxWidth: this.defaultBoxWidth,
                                    f: "",
                                    fStyle: "",
                                    fWeight: "",
                                    fc: "",
                                    j: "",
                                    justifyOffset: "",
                                    l: [],
                                    lh: 0,
                                    lineWidths: [],
                                    ls: "",
                                    of: "",
                                    s: "",
                                    sc: "",
                                    sw: 0,
                                    t: 0,
                                    tr: 0,
                                    sz: 0,
                                    ps: null,
                                    fillColorAnim: !1,
                                    strokeColorAnim: !1,
                                    strokeWidthAnim: !1,
                                    yOffset: 0,
                                    finalSize: 0,
                                    finalText: [],
                                    finalLineHeight: 0,
                                    __complete: !1,
                                }),
                                this.copyData(this.currentData, this.data.d.k[0].s),
                                this.searchProperty() || this.completeTextData(this.currentData);
                        }
                        extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement),
                            (SVGShapeElement.prototype.initSecondaryElement = function () {}),
                            (SVGShapeElement.prototype.identityMatrix = new Matrix()),
                            (SVGShapeElement.prototype.buildExpressionInterface = function () {}),
                            (SVGShapeElement.prototype.createContent = function () {
                                this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0), this.filterUniqueShapes();
                            }),
                            (SVGShapeElement.prototype.filterUniqueShapes = function () {
                                var t,
                                    e,
                                    i,
                                    r,
                                    s = this.shapes.length,
                                    a = this.stylesList.length,
                                    n = [],
                                    o = !1;
                                for (i = 0; i < a; i += 1) {
                                    for (r = this.stylesList[i], o = !1, n.length = 0, t = 0; t < s; t += 1) -1 !== (e = this.shapes[t]).styles.indexOf(r) && (n.push(e), (o = e._isAnimated || o));
                                    n.length > 1 && o && this.setShapesAsAnimated(n);
                                }
                            }),
                            (SVGShapeElement.prototype.setShapesAsAnimated = function (t) {
                                var e,
                                    i = t.length;
                                for (e = 0; e < i; e += 1) t[e].setAsAnimated();
                            }),
                            (SVGShapeElement.prototype.createStyleElement = function (t, e) {
                                var i,
                                    r = new SVGStyleData(t, e),
                                    s = r.pElem;
                                return (
                                    "st" === t.ty
                                        ? (i = new SVGStrokeStyleData(this, t, r))
                                        : "fl" === t.ty
                                        ? (i = new SVGFillStyleData(this, t, r))
                                        : "gf" === t.ty || "gs" === t.ty
                                        ? ((i = new ("gf" === t.ty ? SVGGradientFillStyleData : SVGGradientStrokeStyleData)(this, t, r)),
                                          this.globalData.defs.appendChild(i.gf),
                                          i.maskId && (this.globalData.defs.appendChild(i.ms), this.globalData.defs.appendChild(i.of), s.setAttribute("mask", "url(" + getLocationHref() + "#" + i.maskId + ")")))
                                        : "no" === t.ty && (i = new SVGNoStyleData(this, t, r)),
                                    ("st" !== t.ty && "gs" !== t.ty) ||
                                        (s.setAttribute("stroke-linecap", lineCapEnum[t.lc || 2]),
                                        s.setAttribute("stroke-linejoin", lineJoinEnum[t.lj || 2]),
                                        s.setAttribute("fill-opacity", "0"),
                                        1 === t.lj && s.setAttribute("stroke-miterlimit", t.ml)),
                                    2 === t.r && s.setAttribute("fill-rule", "evenodd"),
                                    t.ln && s.setAttribute("id", t.ln),
                                    t.cl && s.setAttribute("class", t.cl),
                                    t.bm && (s.style["mix-blend-mode"] = getBlendMode(t.bm)),
                                    this.stylesList.push(r),
                                    this.addToAnimatedContents(t, i),
                                    i
                                );
                            }),
                            (SVGShapeElement.prototype.createGroupElement = function (t) {
                                var e = new ShapeGroupData();
                                return t.ln && e.gr.setAttribute("id", t.ln), t.cl && e.gr.setAttribute("class", t.cl), t.bm && (e.gr.style["mix-blend-mode"] = getBlendMode(t.bm)), e;
                            }),
                            (SVGShapeElement.prototype.createTransformElement = function (t, e) {
                                var i = TransformPropertyFactory.getTransformProperty(this, t, this),
                                    r = new SVGTransformData(i, i.o, e);
                                return this.addToAnimatedContents(t, r), r;
                            }),
                            (SVGShapeElement.prototype.createShapeElement = function (t, e, i) {
                                var r = 4;
                                "rc" === t.ty ? (r = 5) : "el" === t.ty ? (r = 6) : "sr" === t.ty && (r = 7);
                                var s = new SVGShapeData(e, i, ShapePropertyFactory.getShapeProp(this, t, r, this));
                                return this.shapes.push(s), this.addShapeToModifiers(s), this.addToAnimatedContents(t, s), s;
                            }),
                            (SVGShapeElement.prototype.addToAnimatedContents = function (t, e) {
                                for (var i = 0, r = this.animatedContents.length; i < r; ) {
                                    if (this.animatedContents[i].element === e) return;
                                    i += 1;
                                }
                                this.animatedContents.push({ fn: SVGElementsRenderer.createRenderFunction(t), element: e, data: t });
                            }),
                            (SVGShapeElement.prototype.setElementStyles = function (t) {
                                var e,
                                    i = t.styles,
                                    r = this.stylesList.length;
                                for (e = 0; e < r; e += 1) this.stylesList[e].closed || i.push(this.stylesList[e]);
                            }),
                            (SVGShapeElement.prototype.reloadShapes = function () {
                                var t;
                                this._isFirstFrame = !0;
                                var e = this.itemsData.length;
                                for (t = 0; t < e; t += 1) this.prevViewData[t] = this.itemsData[t];
                                for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0), this.filterUniqueShapes(), e = this.dynamicProperties.length, t = 0; t < e; t += 1)
                                    this.dynamicProperties[t].getValue();
                                this.renderModifiers();
                            }),
                            (SVGShapeElement.prototype.searchShapes = function (t, e, i, r, s, a, n) {
                                var o,
                                    l,
                                    h,
                                    c,
                                    d,
                                    u,
                                    p = [].concat(a),
                                    m = t.length - 1,
                                    f = [],
                                    g = [];
                                for (o = m; o >= 0; o -= 1) {
                                    if (((u = this.searchProcessedElement(t[o])) ? (e[o] = i[u - 1]) : (t[o]._render = n), "fl" === t[o].ty || "st" === t[o].ty || "gf" === t[o].ty || "gs" === t[o].ty || "no" === t[o].ty))
                                        u ? (e[o].style.closed = !1) : (e[o] = this.createStyleElement(t[o], s)), t[o]._render && e[o].style.pElem.parentNode !== r && r.appendChild(e[o].style.pElem), f.push(e[o].style);
                                    else if ("gr" === t[o].ty) {
                                        if (u) for (h = e[o].it.length, l = 0; l < h; l += 1) e[o].prevViewData[l] = e[o].it[l];
                                        else e[o] = this.createGroupElement(t[o]);
                                        this.searchShapes(t[o].it, e[o].it, e[o].prevViewData, e[o].gr, s + 1, p, n), t[o]._render && e[o].gr.parentNode !== r && r.appendChild(e[o].gr);
                                    } else
                                        "tr" === t[o].ty
                                            ? (u || (e[o] = this.createTransformElement(t[o], r)), (c = e[o].transform), p.push(c))
                                            : "sh" === t[o].ty || "rc" === t[o].ty || "el" === t[o].ty || "sr" === t[o].ty
                                            ? (u || (e[o] = this.createShapeElement(t[o], p, s)), this.setElementStyles(e[o]))
                                            : "tm" === t[o].ty || "rd" === t[o].ty || "ms" === t[o].ty || "pb" === t[o].ty || "zz" === t[o].ty || "op" === t[o].ty
                                            ? (u ? ((d = e[o]).closed = !1) : ((d = ShapeModifiers.getModifier(t[o].ty)).init(this, t[o]), (e[o] = d), this.shapeModifiers.push(d)), g.push(d))
                                            : "rp" === t[o].ty && (u ? ((d = e[o]).closed = !0) : ((d = ShapeModifiers.getModifier(t[o].ty)), (e[o] = d), d.init(this, t, o, e), this.shapeModifiers.push(d), (n = !1)), g.push(d));
                                    this.addProcessedElement(t[o], o + 1);
                                }
                                for (m = f.length, o = 0; o < m; o += 1) f[o].closed = !0;
                                for (m = g.length, o = 0; o < m; o += 1) g[o].closed = !0;
                            }),
                            (SVGShapeElement.prototype.renderInnerContent = function () {
                                var t;
                                this.renderModifiers();
                                var e = this.stylesList.length;
                                for (t = 0; t < e; t += 1) this.stylesList[t].reset();
                                for (this.renderShape(), t = 0; t < e; t += 1)
                                    (this.stylesList[t]._mdf || this._isFirstFrame) &&
                                        (this.stylesList[t].msElem && (this.stylesList[t].msElem.setAttribute("d", this.stylesList[t].d), (this.stylesList[t].d = "M0 0" + this.stylesList[t].d)),
                                        this.stylesList[t].pElem.setAttribute("d", this.stylesList[t].d || "M0 0"));
                            }),
                            (SVGShapeElement.prototype.renderShape = function () {
                                var t,
                                    e,
                                    i = this.animatedContents.length;
                                for (t = 0; t < i; t += 1) (e = this.animatedContents[t]), (this._isFirstFrame || e.element._isAnimated) && !0 !== e.data && e.fn(e.data, e.element, this._isFirstFrame);
                            }),
                            (SVGShapeElement.prototype.destroy = function () {
                                this.destroyBaseElement(), (this.shapesData = null), (this.itemsData = null);
                            }),
                            (LetterProps.prototype.update = function (t, e, i, r, s, a) {
                                (this._mdf.o = !1), (this._mdf.sw = !1), (this._mdf.sc = !1), (this._mdf.fc = !1), (this._mdf.m = !1), (this._mdf.p = !1);
                                var n = !1;
                                return (
                                    this.o !== t && ((this.o = t), (this._mdf.o = !0), (n = !0)),
                                    this.sw !== e && ((this.sw = e), (this._mdf.sw = !0), (n = !0)),
                                    this.sc !== i && ((this.sc = i), (this._mdf.sc = !0), (n = !0)),
                                    this.fc !== r && ((this.fc = r), (this._mdf.fc = !0), (n = !0)),
                                    this.m !== s && ((this.m = s), (this._mdf.m = !0), (n = !0)),
                                    !a.length || (this.p[0] === a[0] && this.p[1] === a[1] && this.p[4] === a[4] && this.p[5] === a[5] && this.p[12] === a[12] && this.p[13] === a[13]) || ((this.p = a), (this._mdf.p = !0), (n = !0)),
                                    n
                                );
                            }),
                            (TextProperty.prototype.defaultBoxWidth = [0, 0]),
                            (TextProperty.prototype.copyData = function (t, e) {
                                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                                return t;
                            }),
                            (TextProperty.prototype.setCurrentData = function (t) {
                                t.__complete || this.completeTextData(t), (this.currentData = t), (this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth), (this._mdf = !0);
                            }),
                            (TextProperty.prototype.searchProperty = function () {
                                return this.searchKeyframes();
                            }),
                            (TextProperty.prototype.searchKeyframes = function () {
                                return (this.kf = this.data.d.k.length > 1), this.kf && this.addEffect(this.getKeyframeValue.bind(this)), this.kf;
                            }),
                            (TextProperty.prototype.addEffect = function (t) {
                                this.effectsSequence.push(t), this.elem.addDynamicProperty(this);
                            }),
                            (TextProperty.prototype.getValue = function (t) {
                                if ((this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length) || t) {
                                    this.currentData.t = this.data.d.k[this.keysIndex].s.t;
                                    var e = this.currentData,
                                        i = this.keysIndex;
                                    if (this.lock) this.setCurrentData(this.currentData);
                                    else {
                                        var r;
                                        (this.lock = !0), (this._mdf = !1);
                                        var s = this.effectsSequence.length,
                                            a = t || this.data.d.k[this.keysIndex].s;
                                        for (r = 0; r < s; r += 1) a = i !== this.keysIndex ? this.effectsSequence[r](a, a.t) : this.effectsSequence[r](this.currentData, a.t);
                                        e !== a && this.setCurrentData(a), (this.v = this.currentData), (this.pv = this.v), (this.lock = !1), (this.frameId = this.elem.globalData.frameId);
                                    }
                                }
                            }),
                            (TextProperty.prototype.getKeyframeValue = function () {
                                for (var t = this.data.d.k, e = this.elem.comp.renderedFrame, i = 0, r = t.length; i <= r - 1 && !(i === r - 1 || t[i + 1].t > e); ) i += 1;
                                return this.keysIndex !== i && (this.keysIndex = i), this.data.d.k[this.keysIndex].s;
                            }),
                            (TextProperty.prototype.buildFinalText = function (t) {
                                for (var e, i, r = [], s = 0, a = t.length, n = !1, o = !1, l = ""; s < a; )
                                    (n = o),
                                        (o = !1),
                                        (e = t.charCodeAt(s)),
                                        (l = t.charAt(s)),
                                        FontManager.isCombinedCharacter(e)
                                            ? (n = !0)
                                            : e >= 55296 && e <= 56319
                                            ? FontManager.isRegionalFlag(t, s)
                                                ? (l = t.substr(s, 14))
                                                : (i = t.charCodeAt(s + 1)) >= 56320 &&
                                                  i <= 57343 &&
                                                  (FontManager.isModifier(e, i) ? ((l = t.substr(s, 2)), (n = !0)) : (l = FontManager.isFlagEmoji(t.substr(s, 4)) ? t.substr(s, 4) : t.substr(s, 2)))
                                            : e > 56319
                                            ? ((i = t.charCodeAt(s + 1)), FontManager.isVariationSelector(e) && (n = !0))
                                            : FontManager.isZeroWidthJoiner(e) && ((n = !0), (o = !0)),
                                        n ? ((r[r.length - 1] += l), (n = !1)) : r.push(l),
                                        (s += l.length);
                                return r;
                            }),
                            (TextProperty.prototype.completeTextData = function (t) {
                                t.__complete = !0;
                                var e,
                                    i,
                                    r,
                                    s,
                                    a,
                                    n,
                                    o,
                                    l = this.elem.globalData.fontManager,
                                    h = this.data,
                                    c = [],
                                    d = 0,
                                    u = h.m.g,
                                    p = 0,
                                    m = 0,
                                    f = 0,
                                    g = [],
                                    v = 0,
                                    b = 0,
                                    y = l.getFontByName(t.f),
                                    w = 0,
                                    x = getFontProperties(y);
                                (t.fWeight = x.weight), (t.fStyle = x.style), (t.finalSize = t.s), (t.finalText = this.buildFinalText(t.t)), (i = t.finalText.length), (t.finalLineHeight = t.lh);
                                var E,
                                    C = (t.tr / 1e3) * t.finalSize;
                                if (t.sz)
                                    for (var S, T, _ = !0, M = t.sz[0], P = t.sz[1]; _; ) {
                                        (S = 0), (v = 0), (i = (T = this.buildFinalText(t.t)).length), (C = (t.tr / 1e3) * t.finalSize);
                                        var k = -1;
                                        for (e = 0; e < i; e += 1)
                                            (E = T[e].charCodeAt(0)),
                                                (r = !1),
                                                " " === T[e] ? (k = e) : (13 !== E && 3 !== E) || ((v = 0), (r = !0), (S += t.finalLineHeight || 1.2 * t.finalSize)),
                                                l.chars ? ((o = l.getCharData(T[e], y.fStyle, y.fFamily)), (w = r ? 0 : (o.w * t.finalSize) / 100)) : (w = l.measureText(T[e], t.f, t.finalSize)),
                                                v + w > M && " " !== T[e] ? (-1 === k ? (i += 1) : (e = k), (S += t.finalLineHeight || 1.2 * t.finalSize), T.splice(e, k === e ? 1 : 0, "\r"), (k = -1), (v = 0)) : ((v += w), (v += C));
                                        (S += (y.ascent * t.finalSize) / 100),
                                            this.canResize && t.finalSize > this.minimumFontSize && P < S ? ((t.finalSize -= 1), (t.finalLineHeight = (t.finalSize * t.lh) / t.s)) : ((t.finalText = T), (i = t.finalText.length), (_ = !1));
                                    }
                                (v = -C), (w = 0);
                                var A,
                                    D = 0;
                                for (e = 0; e < i; e += 1)
                                    if (
                                        ((r = !1),
                                        13 === (E = (A = t.finalText[e]).charCodeAt(0)) || 3 === E ? ((D = 0), g.push(v), (b = v > b ? v : b), (v = -2 * C), (s = ""), (r = !0), (f += 1)) : (s = A),
                                        l.chars ? ((o = l.getCharData(A, y.fStyle, l.getFontByName(t.f).fFamily)), (w = r ? 0 : (o.w * t.finalSize) / 100)) : (w = l.measureText(s, t.f, t.finalSize)),
                                        " " === A ? (D += w + C) : ((v += w + C + D), (D = 0)),
                                        c.push({ l: w, an: w, add: p, n: r, anIndexes: [], val: s, line: f, animatorJustifyOffset: 0 }),
                                        2 == u)
                                    ) {
                                        if (((p += w), "" === s || " " === s || e === i - 1)) {
                                            for (("" !== s && " " !== s) || (p -= w); m <= e; ) (c[m].an = p), (c[m].ind = d), (c[m].extra = w), (m += 1);
                                            (d += 1), (p = 0);
                                        }
                                    } else if (3 == u) {
                                        if (((p += w), "" === s || e === i - 1)) {
                                            for ("" === s && (p -= w); m <= e; ) (c[m].an = p), (c[m].ind = d), (c[m].extra = w), (m += 1);
                                            (p = 0), (d += 1);
                                        }
                                    } else (c[d].ind = d), (c[d].extra = 0), (d += 1);
                                if (((t.l = c), (b = v > b ? v : b), g.push(v), t.sz)) (t.boxWidth = t.sz[0]), (t.justifyOffset = 0);
                                else
                                    switch (((t.boxWidth = b), t.j)) {
                                        case 1:
                                            t.justifyOffset = -t.boxWidth;
                                            break;
                                        case 2:
                                            t.justifyOffset = -t.boxWidth / 2;
                                            break;
                                        default:
                                            t.justifyOffset = 0;
                                    }
                                t.lineWidths = g;
                                var L,
                                    I,
                                    R,
                                    O,
                                    F = h.a;
                                n = F.length;
                                var B = [];
                                for (a = 0; a < n; a += 1) {
                                    for ((L = F[a]).a.sc && (t.strokeColorAnim = !0), L.a.sw && (t.strokeWidthAnim = !0), (L.a.fc || L.a.fh || L.a.fs || L.a.fb) && (t.fillColorAnim = !0), O = 0, R = L.s.b, e = 0; e < i; e += 1)
                                        ((I = c[e]).anIndexes[a] = O),
                                            ((1 == R && "" !== I.val) || (2 == R && "" !== I.val && " " !== I.val) || (3 == R && (I.n || " " == I.val || e == i - 1)) || (4 == R && (I.n || e == i - 1))) &&
                                                (1 === L.s.rn && B.push(O), (O += 1));
                                    h.a[a].s.totalChars = O;
                                    var z,
                                        N = -1;
                                    if (1 === L.s.rn) for (e = 0; e < i; e += 1) N != (I = c[e]).anIndexes[a] && ((N = I.anIndexes[a]), (z = B.splice(Math.floor(Math.random() * B.length), 1)[0])), (I.anIndexes[a] = z);
                                }
                                (t.yOffset = t.finalLineHeight || 1.2 * t.finalSize), (t.ls = t.ls || 0), (t.ascent = (y.ascent * t.finalSize) / 100);
                            }),
                            (TextProperty.prototype.updateDocumentData = function (t, e) {
                                e = void 0 === e ? this.keysIndex : e;
                                var i = this.copyData({}, this.data.d.k[e].s);
                                (i = this.copyData(i, t)), (this.data.d.k[e].s = i), this.recalculate(e), this.setCurrentData(i), this.elem.addDynamicProperty(this);
                            }),
                            (TextProperty.prototype.recalculate = function (t) {
                                var e = this.data.d.k[t].s;
                                (e.__complete = !1), (this.keysIndex = 0), (this._isFirstFrame = !0), this.getValue(e);
                            }),
                            (TextProperty.prototype.canResizeFont = function (t) {
                                (this.canResize = t), this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this);
                            }),
                            (TextProperty.prototype.setMinimumFontSize = function (t) {
                                (this.minimumFontSize = Math.floor(t) || 1), this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this);
                            });
                        var TextSelectorProp = (function () {
                            var t = Math.max,
                                e = Math.min,
                                i = Math.floor;
                            function r(t, e) {
                                (this._currentTextLength = -1),
                                    (this.k = !1),
                                    (this.data = e),
                                    (this.elem = t),
                                    (this.comp = t.comp),
                                    (this.finalS = 0),
                                    (this.finalE = 0),
                                    this.initDynamicPropertyContainer(t),
                                    (this.s = PropertyFactory.getProp(t, e.s || { k: 0 }, 0, 0, this)),
                                    (this.e = "e" in e ? PropertyFactory.getProp(t, e.e, 0, 0, this) : { v: 100 }),
                                    (this.o = PropertyFactory.getProp(t, e.o || { k: 0 }, 0, 0, this)),
                                    (this.xe = PropertyFactory.getProp(t, e.xe || { k: 0 }, 0, 0, this)),
                                    (this.ne = PropertyFactory.getProp(t, e.ne || { k: 0 }, 0, 0, this)),
                                    (this.sm = PropertyFactory.getProp(t, e.sm || { k: 100 }, 0, 0, this)),
                                    (this.a = PropertyFactory.getProp(t, e.a, 0, 0.01, this)),
                                    this.dynamicProperties.length || this.getValue();
                            }
                            return (
                                (r.prototype = {
                                    getMult: function (r) {
                                        this._currentTextLength !== this.elem.textProperty.currentData.l.length && this.getValue();
                                        var s = 0,
                                            a = 0,
                                            n = 1,
                                            o = 1;
                                        this.ne.v > 0 ? (s = this.ne.v / 100) : (a = -this.ne.v / 100), this.xe.v > 0 ? (n = 1 - this.xe.v / 100) : (o = 1 + this.xe.v / 100);
                                        var l = BezierFactory.getBezierEasing(s, a, n, o).get,
                                            h = 0,
                                            c = this.finalS,
                                            d = this.finalE,
                                            u = this.data.sh;
                                        if (2 === u) h = l((h = d === c ? (r >= d ? 1 : 0) : t(0, e(0.5 / (d - c) + (r - c) / (d - c), 1))));
                                        else if (3 === u) h = l((h = d === c ? (r >= d ? 0 : 1) : 1 - t(0, e(0.5 / (d - c) + (r - c) / (d - c), 1))));
                                        else if (4 === u) d === c ? (h = 0) : (h = t(0, e(0.5 / (d - c) + (r - c) / (d - c), 1))) < 0.5 ? (h *= 2) : (h = 1 - 2 * (h - 0.5)), (h = l(h));
                                        else if (5 === u) {
                                            if (d === c) h = 0;
                                            else {
                                                var p = d - c,
                                                    m = -p / 2 + (r = e(t(0, r + 0.5 - c), d - c)),
                                                    f = p / 2;
                                                h = Math.sqrt(1 - (m * m) / (f * f));
                                            }
                                            h = l(h);
                                        } else
                                            6 === u
                                                ? (d === c ? (h = 0) : ((r = e(t(0, r + 0.5 - c), d - c)), (h = (1 + Math.cos(Math.PI + (2 * Math.PI * r) / (d - c))) / 2)), (h = l(h)))
                                                : (r >= i(c) && (h = t(0, e(r - c < 0 ? e(d, 1) - (c - r) : d - r, 1))), (h = l(h)));
                                        if (100 !== this.sm.v) {
                                            var g = 0.01 * this.sm.v;
                                            0 === g && (g = 1e-8);
                                            var v = 0.5 - 0.5 * g;
                                            h < v ? (h = 0) : (h = (h - v) / g) > 1 && (h = 1);
                                        }
                                        return h * this.a.v;
                                    },
                                    getValue: function (t) {
                                        this.iterateDynamicProperties(),
                                            (this._mdf = t || this._mdf),
                                            (this._currentTextLength = this.elem.textProperty.currentData.l.length || 0),
                                            t && 2 === this.data.r && (this.e.v = this._currentTextLength);
                                        var e = 2 === this.data.r ? 1 : 100 / this.data.totalChars,
                                            i = this.o.v / e,
                                            r = this.s.v / e + i,
                                            s = this.e.v / e + i;
                                        if (r > s) {
                                            var a = r;
                                            (r = s), (s = a);
                                        }
                                        (this.finalS = r), (this.finalE = s);
                                    },
                                }),
                                extendPrototype([DynamicPropertyContainer], r),
                                {
                                    getTextSelectorProp: function (t, e, i) {
                                        return new r(t, e, i);
                                    },
                                }
                            );
                        })();
                        function TextAnimatorDataProperty(t, e, i) {
                            var r = { propType: !1 },
                                s = PropertyFactory.getProp,
                                a = e.a;
                            (this.a = {
                                r: a.r ? s(t, a.r, 0, degToRads, i) : r,
                                rx: a.rx ? s(t, a.rx, 0, degToRads, i) : r,
                                ry: a.ry ? s(t, a.ry, 0, degToRads, i) : r,
                                sk: a.sk ? s(t, a.sk, 0, degToRads, i) : r,
                                sa: a.sa ? s(t, a.sa, 0, degToRads, i) : r,
                                s: a.s ? s(t, a.s, 1, 0.01, i) : r,
                                a: a.a ? s(t, a.a, 1, 0, i) : r,
                                o: a.o ? s(t, a.o, 0, 0.01, i) : r,
                                p: a.p ? s(t, a.p, 1, 0, i) : r,
                                sw: a.sw ? s(t, a.sw, 0, 0, i) : r,
                                sc: a.sc ? s(t, a.sc, 1, 0, i) : r,
                                fc: a.fc ? s(t, a.fc, 1, 0, i) : r,
                                fh: a.fh ? s(t, a.fh, 0, 0, i) : r,
                                fs: a.fs ? s(t, a.fs, 0, 0.01, i) : r,
                                fb: a.fb ? s(t, a.fb, 0, 0.01, i) : r,
                                t: a.t ? s(t, a.t, 0, 0, i) : r,
                            }),
                                (this.s = TextSelectorProp.getTextSelectorProp(t, e.s, i)),
                                (this.s.t = e.s.t);
                        }
                        function TextAnimatorProperty(t, e, i) {
                            (this._isFirstFrame = !0),
                                (this._hasMaskedPath = !1),
                                (this._frameId = -1),
                                (this._textData = t),
                                (this._renderType = e),
                                (this._elem = i),
                                (this._animatorsData = createSizedArray(this._textData.a.length)),
                                (this._pathData = {}),
                                (this._moreOptions = { alignment: {} }),
                                (this.renderedLetters = []),
                                (this.lettersChangedFlag = !1),
                                this.initDynamicPropertyContainer(i);
                        }
                        function ITextElement() {}
                        (TextAnimatorProperty.prototype.searchProperties = function () {
                            var t,
                                e,
                                i = this._textData.a.length,
                                r = PropertyFactory.getProp;
                            for (t = 0; t < i; t += 1) (e = this._textData.a[t]), (this._animatorsData[t] = new TextAnimatorDataProperty(this._elem, e, this));
                            this._textData.p && "m" in this._textData.p
                                ? ((this._pathData = {
                                      a: r(this._elem, this._textData.p.a, 0, 0, this),
                                      f: r(this._elem, this._textData.p.f, 0, 0, this),
                                      l: r(this._elem, this._textData.p.l, 0, 0, this),
                                      r: r(this._elem, this._textData.p.r, 0, 0, this),
                                      p: r(this._elem, this._textData.p.p, 0, 0, this),
                                      m: this._elem.maskManager.getMaskProperty(this._textData.p.m),
                                  }),
                                  (this._hasMaskedPath = !0))
                                : (this._hasMaskedPath = !1),
                                (this._moreOptions.alignment = r(this._elem, this._textData.m.a, 1, 0, this));
                        }),
                            (TextAnimatorProperty.prototype.getMeasures = function (t, e) {
                                if (((this.lettersChangedFlag = e), this._mdf || this._isFirstFrame || e || (this._hasMaskedPath && this._pathData.m._mdf))) {
                                    this._isFirstFrame = !1;
                                    var i,
                                        r,
                                        s,
                                        a,
                                        n,
                                        o,
                                        l,
                                        h,
                                        c,
                                        d,
                                        u,
                                        p,
                                        m,
                                        f,
                                        g,
                                        v,
                                        b,
                                        y,
                                        w,
                                        x = this._moreOptions.alignment.v,
                                        E = this._animatorsData,
                                        C = this._textData,
                                        S = this.mHelper,
                                        T = this._renderType,
                                        _ = this.renderedLetters.length,
                                        M = t.l;
                                    if (this._hasMaskedPath) {
                                        if (((w = this._pathData.m), !this._pathData.n || this._pathData._mdf)) {
                                            var P,
                                                k = w.v;
                                            for (this._pathData.r.v && (k = k.reverse()), n = { tLength: 0, segments: [] }, a = k._length - 1, v = 0, s = 0; s < a; s += 1)
                                                (P = bez.buildBezierData(k.v[s], k.v[s + 1], [k.o[s][0] - k.v[s][0], k.o[s][1] - k.v[s][1]], [k.i[s + 1][0] - k.v[s + 1][0], k.i[s + 1][1] - k.v[s + 1][1]])),
                                                    (n.tLength += P.segmentLength),
                                                    n.segments.push(P),
                                                    (v += P.segmentLength);
                                            (s = a),
                                                w.v.c &&
                                                    ((P = bez.buildBezierData(k.v[s], k.v[0], [k.o[s][0] - k.v[s][0], k.o[s][1] - k.v[s][1]], [k.i[0][0] - k.v[0][0], k.i[0][1] - k.v[0][1]])),
                                                    (n.tLength += P.segmentLength),
                                                    n.segments.push(P),
                                                    (v += P.segmentLength)),
                                                (this._pathData.pi = n);
                                        }
                                        if (((n = this._pathData.pi), (o = this._pathData.f.v), (u = 0), (d = 1), (h = 0), (c = !0), (f = n.segments), o < 0 && w.v.c))
                                            for (n.tLength < Math.abs(o) && (o = -Math.abs(o) % n.tLength), d = (m = f[(u = f.length - 1)].points).length - 1; o < 0; )
                                                (o += m[d].partialLength), (d -= 1) < 0 && (d = (m = f[(u -= 1)].points).length - 1);
                                        (p = (m = f[u].points)[d - 1]), (g = (l = m[d]).partialLength);
                                    }
                                    (a = M.length), (i = 0), (r = 0);
                                    var A,
                                        D,
                                        L,
                                        I,
                                        R,
                                        O = 1.2 * t.finalSize * 0.714,
                                        F = !0;
                                    L = E.length;
                                    var B,
                                        z,
                                        N,
                                        V,
                                        H,
                                        j,
                                        W,
                                        G,
                                        q,
                                        $,
                                        U,
                                        Y,
                                        X = -1,
                                        K = o,
                                        Z = u,
                                        J = d,
                                        Q = -1,
                                        tt = "",
                                        et = this.defaultPropsArray;
                                    if (2 === t.j || 1 === t.j) {
                                        var it = 0,
                                            rt = 0,
                                            st = 2 === t.j ? -0.5 : -1,
                                            at = 0,
                                            nt = !0;
                                        for (s = 0; s < a; s += 1)
                                            if (M[s].n) {
                                                for (it && (it += rt); at < s; ) (M[at].animatorJustifyOffset = it), (at += 1);
                                                (it = 0), (nt = !0);
                                            } else {
                                                for (D = 0; D < L; D += 1)
                                                    (A = E[D].a).t.propType &&
                                                        (nt && 2 === t.j && (rt += A.t.v * st), (R = E[D].s.getMult(M[s].anIndexes[D], C.a[D].s.totalChars)).length ? (it += A.t.v * R[0] * st) : (it += A.t.v * R * st));
                                                nt = !1;
                                            }
                                        for (it && (it += rt); at < s; ) (M[at].animatorJustifyOffset = it), (at += 1);
                                    }
                                    for (s = 0; s < a; s += 1) {
                                        if ((S.reset(), (V = 1), M[s].n))
                                            (i = 0),
                                                (r += t.yOffset),
                                                (r += F ? 1 : 0),
                                                (o = K),
                                                (F = !1),
                                                this._hasMaskedPath && ((d = J), (p = (m = f[(u = Z)].points)[d - 1]), (g = (l = m[d]).partialLength), (h = 0)),
                                                (tt = ""),
                                                (U = ""),
                                                (q = ""),
                                                (Y = ""),
                                                (et = this.defaultPropsArray);
                                        else {
                                            if (this._hasMaskedPath) {
                                                if (Q !== M[s].line) {
                                                    switch (t.j) {
                                                        case 1:
                                                            o += v - t.lineWidths[M[s].line];
                                                            break;
                                                        case 2:
                                                            o += (v - t.lineWidths[M[s].line]) / 2;
                                                    }
                                                    Q = M[s].line;
                                                }
                                                X !== M[s].ind && (M[X] && (o += M[X].extra), (o += M[s].an / 2), (X = M[s].ind)), (o += x[0] * M[s].an * 0.005);
                                                var ot = 0;
                                                for (D = 0; D < L; D += 1)
                                                    (A = E[D].a).p.propType && ((R = E[D].s.getMult(M[s].anIndexes[D], C.a[D].s.totalChars)).length ? (ot += A.p.v[0] * R[0]) : (ot += A.p.v[0] * R)),
                                                        A.a.propType && ((R = E[D].s.getMult(M[s].anIndexes[D], C.a[D].s.totalChars)).length ? (ot += A.a.v[0] * R[0]) : (ot += A.a.v[0] * R));
                                                for (c = !0, this._pathData.a.v && ((o = 0.5 * M[0].an + ((v - this._pathData.f.v - 0.5 * M[0].an - 0.5 * M[M.length - 1].an) * X) / (a - 1)), (o += this._pathData.f.v)); c; )
                                                    h + g >= o + ot || !m
                                                        ? ((b = (o + ot - h) / l.partialLength),
                                                          (z = p.point[0] + (l.point[0] - p.point[0]) * b),
                                                          (N = p.point[1] + (l.point[1] - p.point[1]) * b),
                                                          S.translate(-x[0] * M[s].an * 0.005, -x[1] * O * 0.01),
                                                          (c = !1))
                                                        : m &&
                                                          ((h += l.partialLength),
                                                          (d += 1) >= m.length && ((d = 0), f[(u += 1)] ? (m = f[u].points) : w.v.c ? ((d = 0), (m = f[(u = 0)].points)) : ((h -= l.partialLength), (m = null))),
                                                          m && ((p = l), (g = (l = m[d]).partialLength)));
                                                (B = M[s].an / 2 - M[s].add), S.translate(-B, 0, 0);
                                            } else (B = M[s].an / 2 - M[s].add), S.translate(-B, 0, 0), S.translate(-x[0] * M[s].an * 0.005, -x[1] * O * 0.01, 0);
                                            for (D = 0; D < L; D += 1)
                                                (A = E[D].a).t.propType &&
                                                    ((R = E[D].s.getMult(M[s].anIndexes[D], C.a[D].s.totalChars)),
                                                    (0 === i && 0 === t.j) || (this._hasMaskedPath ? (R.length ? (o += A.t.v * R[0]) : (o += A.t.v * R)) : R.length ? (i += A.t.v * R[0]) : (i += A.t.v * R)));
                                            for (
                                                t.strokeWidthAnim && (j = t.sw || 0), t.strokeColorAnim && (H = t.sc ? [t.sc[0], t.sc[1], t.sc[2]] : [0, 0, 0]), t.fillColorAnim && t.fc && (W = [t.fc[0], t.fc[1], t.fc[2]]), D = 0;
                                                D < L;
                                                D += 1
                                            )
                                                (A = E[D].a).a.propType &&
                                                    ((R = E[D].s.getMult(M[s].anIndexes[D], C.a[D].s.totalChars)).length
                                                        ? S.translate(-A.a.v[0] * R[0], -A.a.v[1] * R[1], A.a.v[2] * R[2])
                                                        : S.translate(-A.a.v[0] * R, -A.a.v[1] * R, A.a.v[2] * R));
                                            for (D = 0; D < L; D += 1)
                                                (A = E[D].a).s.propType &&
                                                    ((R = E[D].s.getMult(M[s].anIndexes[D], C.a[D].s.totalChars)).length
                                                        ? S.scale(1 + (A.s.v[0] - 1) * R[0], 1 + (A.s.v[1] - 1) * R[1], 1)
                                                        : S.scale(1 + (A.s.v[0] - 1) * R, 1 + (A.s.v[1] - 1) * R, 1));
                                            for (D = 0; D < L; D += 1) {
                                                if (
                                                    ((A = E[D].a),
                                                    (R = E[D].s.getMult(M[s].anIndexes[D], C.a[D].s.totalChars)),
                                                    A.sk.propType && (R.length ? S.skewFromAxis(-A.sk.v * R[0], A.sa.v * R[1]) : S.skewFromAxis(-A.sk.v * R, A.sa.v * R)),
                                                    A.r.propType && (R.length ? S.rotateZ(-A.r.v * R[2]) : S.rotateZ(-A.r.v * R)),
                                                    A.ry.propType && (R.length ? S.rotateY(A.ry.v * R[1]) : S.rotateY(A.ry.v * R)),
                                                    A.rx.propType && (R.length ? S.rotateX(A.rx.v * R[0]) : S.rotateX(A.rx.v * R)),
                                                    A.o.propType && (R.length ? (V += (A.o.v * R[0] - V) * R[0]) : (V += (A.o.v * R - V) * R)),
                                                    t.strokeWidthAnim && A.sw.propType && (R.length ? (j += A.sw.v * R[0]) : (j += A.sw.v * R)),
                                                    t.strokeColorAnim && A.sc.propType)
                                                )
                                                    for (G = 0; G < 3; G += 1) R.length ? (H[G] += (A.sc.v[G] - H[G]) * R[0]) : (H[G] += (A.sc.v[G] - H[G]) * R);
                                                if (t.fillColorAnim && t.fc) {
                                                    if (A.fc.propType) for (G = 0; G < 3; G += 1) R.length ? (W[G] += (A.fc.v[G] - W[G]) * R[0]) : (W[G] += (A.fc.v[G] - W[G]) * R);
                                                    A.fh.propType && (W = R.length ? addHueToRGB(W, A.fh.v * R[0]) : addHueToRGB(W, A.fh.v * R)),
                                                        A.fs.propType && (W = R.length ? addSaturationToRGB(W, A.fs.v * R[0]) : addSaturationToRGB(W, A.fs.v * R)),
                                                        A.fb.propType && (W = R.length ? addBrightnessToRGB(W, A.fb.v * R[0]) : addBrightnessToRGB(W, A.fb.v * R));
                                                }
                                            }
                                            for (D = 0; D < L; D += 1)
                                                (A = E[D].a).p.propType &&
                                                    ((R = E[D].s.getMult(M[s].anIndexes[D], C.a[D].s.totalChars)),
                                                    this._hasMaskedPath
                                                        ? R.length
                                                            ? S.translate(0, A.p.v[1] * R[0], -A.p.v[2] * R[1])
                                                            : S.translate(0, A.p.v[1] * R, -A.p.v[2] * R)
                                                        : R.length
                                                        ? S.translate(A.p.v[0] * R[0], A.p.v[1] * R[1], -A.p.v[2] * R[2])
                                                        : S.translate(A.p.v[0] * R, A.p.v[1] * R, -A.p.v[2] * R));
                                            if (
                                                (t.strokeWidthAnim && (q = j < 0 ? 0 : j),
                                                t.strokeColorAnim && ($ = "rgb(" + Math.round(255 * H[0]) + "," + Math.round(255 * H[1]) + "," + Math.round(255 * H[2]) + ")"),
                                                t.fillColorAnim && t.fc && (U = "rgb(" + Math.round(255 * W[0]) + "," + Math.round(255 * W[1]) + "," + Math.round(255 * W[2]) + ")"),
                                                this._hasMaskedPath)
                                            ) {
                                                if ((S.translate(0, -t.ls), S.translate(0, x[1] * O * 0.01 + r, 0), this._pathData.p.v)) {
                                                    y = (l.point[1] - p.point[1]) / (l.point[0] - p.point[0]);
                                                    var lt = (180 * Math.atan(y)) / Math.PI;
                                                    l.point[0] < p.point[0] && (lt += 180), S.rotate((-lt * Math.PI) / 180);
                                                }
                                                S.translate(z, N, 0), (o -= x[0] * M[s].an * 0.005), M[s + 1] && X !== M[s + 1].ind && ((o += M[s].an / 2), (o += 0.001 * t.tr * t.finalSize));
                                            } else {
                                                switch ((S.translate(i, r, 0), t.ps && S.translate(t.ps[0], t.ps[1] + t.ascent, 0), t.j)) {
                                                    case 1:
                                                        S.translate(M[s].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[M[s].line]), 0, 0);
                                                        break;
                                                    case 2:
                                                        S.translate(M[s].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[M[s].line]) / 2, 0, 0);
                                                }
                                                S.translate(0, -t.ls), S.translate(B, 0, 0), S.translate(x[0] * M[s].an * 0.005, x[1] * O * 0.01, 0), (i += M[s].l + 0.001 * t.tr * t.finalSize);
                                            }
                                            "html" === T
                                                ? (tt = S.toCSS())
                                                : "svg" === T
                                                ? (tt = S.to2dCSS())
                                                : (et = [
                                                      S.props[0],
                                                      S.props[1],
                                                      S.props[2],
                                                      S.props[3],
                                                      S.props[4],
                                                      S.props[5],
                                                      S.props[6],
                                                      S.props[7],
                                                      S.props[8],
                                                      S.props[9],
                                                      S.props[10],
                                                      S.props[11],
                                                      S.props[12],
                                                      S.props[13],
                                                      S.props[14],
                                                      S.props[15],
                                                  ]),
                                                (Y = V);
                                        }
                                        _ <= s
                                            ? ((I = new LetterProps(Y, q, $, U, tt, et)), this.renderedLetters.push(I), (_ += 1), (this.lettersChangedFlag = !0))
                                            : ((I = this.renderedLetters[s]), (this.lettersChangedFlag = I.update(Y, q, $, U, tt, et) || this.lettersChangedFlag));
                                    }
                                }
                            }),
                            (TextAnimatorProperty.prototype.getValue = function () {
                                this._elem.globalData.frameId !== this._frameId && ((this._frameId = this._elem.globalData.frameId), this.iterateDynamicProperties());
                            }),
                            (TextAnimatorProperty.prototype.mHelper = new Matrix()),
                            (TextAnimatorProperty.prototype.defaultPropsArray = []),
                            extendPrototype([DynamicPropertyContainer], TextAnimatorProperty),
                            (ITextElement.prototype.initElement = function (t, e, i) {
                                (this.lettersChangedFlag = !0),
                                    this.initFrame(),
                                    this.initBaseData(t, e, i),
                                    (this.textProperty = new TextProperty(this, t.t, this.dynamicProperties)),
                                    (this.textAnimator = new TextAnimatorProperty(t.t, this.renderType, this)),
                                    this.initTransform(t, e, i),
                                    this.initHierarchy(),
                                    this.initRenderable(),
                                    this.initRendererElement(),
                                    this.createContainerElements(),
                                    this.createRenderableComponents(),
                                    this.createContent(),
                                    this.hide(),
                                    this.textAnimator.searchProperties(this.dynamicProperties);
                            }),
                            (ITextElement.prototype.prepareFrame = function (t) {
                                (this._mdf = !1), this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange);
                            }),
                            (ITextElement.prototype.createPathShape = function (t, e) {
                                var i,
                                    r,
                                    s = e.length,
                                    a = "";
                                for (i = 0; i < s; i += 1) "sh" === e[i].ty && ((r = e[i].ks.k), (a += buildShapeString(r, r.i.length, !0, t)));
                                return a;
                            }),
                            (ITextElement.prototype.updateDocumentData = function (t, e) {
                                this.textProperty.updateDocumentData(t, e);
                            }),
                            (ITextElement.prototype.canResizeFont = function (t) {
                                this.textProperty.canResizeFont(t);
                            }),
                            (ITextElement.prototype.setMinimumFontSize = function (t) {
                                this.textProperty.setMinimumFontSize(t);
                            }),
                            (ITextElement.prototype.applyTextPropertiesToMatrix = function (t, e, i, r, s) {
                                switch ((t.ps && e.translate(t.ps[0], t.ps[1] + t.ascent, 0), e.translate(0, -t.ls, 0), t.j)) {
                                    case 1:
                                        e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[i]), 0, 0);
                                        break;
                                    case 2:
                                        e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[i]) / 2, 0, 0);
                                }
                                e.translate(r, s, 0);
                            }),
                            (ITextElement.prototype.buildColor = function (t) {
                                return "rgb(" + Math.round(255 * t[0]) + "," + Math.round(255 * t[1]) + "," + Math.round(255 * t[2]) + ")";
                            }),
                            (ITextElement.prototype.emptyProp = new LetterProps()),
                            (ITextElement.prototype.destroy = function () {}),
                            (ITextElement.prototype.validateText = function () {
                                (this.textProperty._mdf || this.textProperty._isFirstFrame) && (this.buildNewText(), (this.textProperty._isFirstFrame = !1), (this.textProperty._mdf = !1));
                            });
                        var emptyShapeData = { shapes: [] };
                        function SVGTextLottieElement(t, e, i) {
                            (this.textSpans = []), (this.renderType = "svg"), this.initElement(t, e, i);
                        }
                        function ISolidElement(t, e, i) {
                            this.initElement(t, e, i);
                        }
                        function NullElement(t, e, i) {
                            this.initFrame(), this.initBaseData(t, e, i), this.initFrame(), this.initTransform(t, e, i), this.initHierarchy();
                        }
                        function SVGRendererBase() {}
                        function ICompElement() {}
                        function SVGCompElement(t, e, i) {
                            (this.layers = t.layers),
                                (this.supports3d = !0),
                                (this.completeLayers = !1),
                                (this.pendingElements = []),
                                (this.elements = this.layers ? createSizedArray(this.layers.length) : []),
                                this.initElement(t, e, i),
                                (this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: !0 });
                        }
                        function SVGRenderer(t, e) {
                            (this.animationItem = t), (this.layers = null), (this.renderedFrame = -1), (this.svgElement = createNS("svg"));
                            var i = "";
                            if (e && e.title) {
                                var r = createNS("title"),
                                    s = createElementID();
                                r.setAttribute("id", s), (r.textContent = e.title), this.svgElement.appendChild(r), (i += s);
                            }
                            if (e && e.description) {
                                var a = createNS("desc"),
                                    n = createElementID();
                                a.setAttribute("id", n), (a.textContent = e.description), this.svgElement.appendChild(a), (i += " " + n);
                            }
                            i && this.svgElement.setAttribute("aria-labelledby", i);
                            var o = createNS("defs");
                            this.svgElement.appendChild(o);
                            var l = createNS("g");
                            this.svgElement.appendChild(l),
                                (this.layerElement = l),
                                (this.renderConfig = {
                                    preserveAspectRatio: (e && e.preserveAspectRatio) || "xMidYMid meet",
                                    imagePreserveAspectRatio: (e && e.imagePreserveAspectRatio) || "xMidYMid slice",
                                    contentVisibility: (e && e.contentVisibility) || "visible",
                                    progressiveLoad: (e && e.progressiveLoad) || !1,
                                    hideOnTransparent: !(e && !1 === e.hideOnTransparent),
                                    viewBoxOnly: (e && e.viewBoxOnly) || !1,
                                    viewBoxSize: (e && e.viewBoxSize) || !1,
                                    className: (e && e.className) || "",
                                    id: (e && e.id) || "",
                                    focusable: e && e.focusable,
                                    filterSize: {
                                        width: (e && e.filterSize && e.filterSize.width) || "100%",
                                        height: (e && e.filterSize && e.filterSize.height) || "100%",
                                        x: (e && e.filterSize && e.filterSize.x) || "0%",
                                        y: (e && e.filterSize && e.filterSize.y) || "0%",
                                    },
                                    width: e && e.width,
                                    height: e && e.height,
                                    runExpressions: !e || void 0 === e.runExpressions || e.runExpressions,
                                }),
                                (this.globalData = { _mdf: !1, frameNum: -1, defs: o, renderConfig: this.renderConfig }),
                                (this.elements = []),
                                (this.pendingElements = []),
                                (this.destroyed = !1),
                                (this.rendererType = "svg");
                        }
                        function ShapeTransformManager() {
                            (this.sequences = {}), (this.sequenceList = []), (this.transform_key_count = 0);
                        }
                        extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement),
                            (SVGTextLottieElement.prototype.createContent = function () {
                                this.data.singleShape && !this.globalData.fontManager.chars && (this.textContainer = createNS("text"));
                            }),
                            (SVGTextLottieElement.prototype.buildTextContents = function (t) {
                                for (var e = 0, i = t.length, r = [], s = ""; e < i; ) t[e] === String.fromCharCode(13) || t[e] === String.fromCharCode(3) ? (r.push(s), (s = "")) : (s += t[e]), (e += 1);
                                return r.push(s), r;
                            }),
                            (SVGTextLottieElement.prototype.buildShapeData = function (t, e) {
                                if (t.shapes && t.shapes.length) {
                                    var i = t.shapes[0];
                                    if (i.it) {
                                        var r = i.it[i.it.length - 1];
                                        r.s && ((r.s.k[0] = e), (r.s.k[1] = e));
                                    }
                                }
                                return t;
                            }),
                            (SVGTextLottieElement.prototype.buildNewText = function () {
                                var t, e;
                                this.addDynamicProperty(this);
                                var i = this.textProperty.currentData;
                                (this.renderedLetters = createSizedArray(i ? i.l.length : 0)),
                                    i.fc ? this.layerElement.setAttribute("fill", this.buildColor(i.fc)) : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"),
                                    i.sc && (this.layerElement.setAttribute("stroke", this.buildColor(i.sc)), this.layerElement.setAttribute("stroke-width", i.sw)),
                                    this.layerElement.setAttribute("font-size", i.finalSize);
                                var r = this.globalData.fontManager.getFontByName(i.f);
                                if (r.fClass) this.layerElement.setAttribute("class", r.fClass);
                                else {
                                    this.layerElement.setAttribute("font-family", r.fFamily);
                                    var s = i.fWeight,
                                        a = i.fStyle;
                                    this.layerElement.setAttribute("font-style", a), this.layerElement.setAttribute("font-weight", s);
                                }
                                this.layerElement.setAttribute("aria-label", i.t);
                                var n,
                                    o = i.l || [],
                                    l = !!this.globalData.fontManager.chars;
                                e = o.length;
                                var h = this.mHelper,
                                    c = this.data.singleShape,
                                    d = 0,
                                    u = 0,
                                    p = !0,
                                    m = 0.001 * i.tr * i.finalSize;
                                if (!c || l || i.sz) {
                                    var f,
                                        g = this.textSpans.length;
                                    for (t = 0; t < e; t += 1) {
                                        if ((this.textSpans[t] || (this.textSpans[t] = { span: null, childSpan: null, glyph: null }), !l || !c || 0 === t)) {
                                            if (((n = g > t ? this.textSpans[t].span : createNS(l ? "g" : "text")), g <= t)) {
                                                if ((n.setAttribute("stroke-linecap", "butt"), n.setAttribute("stroke-linejoin", "round"), n.setAttribute("stroke-miterlimit", "4"), (this.textSpans[t].span = n), l)) {
                                                    var v = createNS("g");
                                                    n.appendChild(v), (this.textSpans[t].childSpan = v);
                                                }
                                                (this.textSpans[t].span = n), this.layerElement.appendChild(n);
                                            }
                                            n.style.display = "inherit";
                                        }
                                        if ((h.reset(), c && (o[t].n && ((d = -m), (u += i.yOffset), (u += p ? 1 : 0), (p = !1)), this.applyTextPropertiesToMatrix(i, h, o[t].line, d, u), (d += o[t].l || 0), (d += m)), l)) {
                                            var b;
                                            if (1 === (f = this.globalData.fontManager.getCharData(i.finalText[t], r.fStyle, this.globalData.fontManager.getFontByName(i.f).fFamily)).t) b = new SVGCompElement(f.data, this.globalData, this);
                                            else {
                                                var y = emptyShapeData;
                                                f.data && f.data.shapes && (y = this.buildShapeData(f.data, i.finalSize)), (b = new SVGShapeElement(y, this.globalData, this));
                                            }
                                            if (this.textSpans[t].glyph) {
                                                var w = this.textSpans[t].glyph;
                                                this.textSpans[t].childSpan.removeChild(w.layerElement), w.destroy();
                                            }
                                            (this.textSpans[t].glyph = b),
                                                (b._debug = !0),
                                                b.prepareFrame(0),
                                                b.renderFrame(),
                                                this.textSpans[t].childSpan.appendChild(b.layerElement),
                                                1 === f.t && this.textSpans[t].childSpan.setAttribute("transform", "scale(" + i.finalSize / 100 + "," + i.finalSize / 100 + ")");
                                        } else
                                            c && n.setAttribute("transform", "translate(" + h.props[12] + "," + h.props[13] + ")"),
                                                (n.textContent = o[t].val),
                                                n.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve");
                                    }
                                    c && n && n.setAttribute("d", "");
                                } else {
                                    var x = this.textContainer,
                                        E = "start";
                                    switch (i.j) {
                                        case 1:
                                            E = "end";
                                            break;
                                        case 2:
                                            E = "middle";
                                            break;
                                        default:
                                            E = "start";
                                    }
                                    x.setAttribute("text-anchor", E), x.setAttribute("letter-spacing", m);
                                    var C = this.buildTextContents(i.finalText);
                                    for (e = C.length, u = i.ps ? i.ps[1] + i.ascent : 0, t = 0; t < e; t += 1)
                                        ((n = this.textSpans[t].span || createNS("tspan")).textContent = C[t]),
                                            n.setAttribute("x", 0),
                                            n.setAttribute("y", u),
                                            (n.style.display = "inherit"),
                                            x.appendChild(n),
                                            this.textSpans[t] || (this.textSpans[t] = { span: null, glyph: null }),
                                            (this.textSpans[t].span = n),
                                            (u += i.finalLineHeight);
                                    this.layerElement.appendChild(x);
                                }
                                for (; t < this.textSpans.length; ) (this.textSpans[t].span.style.display = "none"), (t += 1);
                                this._sizeChanged = !0;
                            }),
                            (SVGTextLottieElement.prototype.sourceRectAtTime = function () {
                                if ((this.prepareFrame(this.comp.renderedFrame - this.data.st), this.renderInnerContent(), this._sizeChanged)) {
                                    this._sizeChanged = !1;
                                    var t = this.layerElement.getBBox();
                                    this.bbox = { top: t.y, left: t.x, width: t.width, height: t.height };
                                }
                                return this.bbox;
                            }),
                            (SVGTextLottieElement.prototype.getValue = function () {
                                var t,
                                    e,
                                    i = this.textSpans.length;
                                for (this.renderedFrame = this.comp.renderedFrame, t = 0; t < i; t += 1) (e = this.textSpans[t].glyph) && (e.prepareFrame(this.comp.renderedFrame - this.data.st), e._mdf && (this._mdf = !0));
                            }),
                            (SVGTextLottieElement.prototype.renderInnerContent = function () {
                                if (
                                    (this.validateText(),
                                    (!this.data.singleShape || this._mdf) && (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag))
                                ) {
                                    var t, e;
                                    this._sizeChanged = !0;
                                    var i,
                                        r,
                                        s,
                                        a = this.textAnimator.renderedLetters,
                                        n = this.textProperty.currentData.l;
                                    for (e = n.length, t = 0; t < e; t += 1)
                                        n[t].n ||
                                            ((i = a[t]),
                                            (r = this.textSpans[t].span),
                                            (s = this.textSpans[t].glyph) && s.renderFrame(),
                                            i._mdf.m && r.setAttribute("transform", i.m),
                                            i._mdf.o && r.setAttribute("opacity", i.o),
                                            i._mdf.sw && r.setAttribute("stroke-width", i.sw),
                                            i._mdf.sc && r.setAttribute("stroke", i.sc),
                                            i._mdf.fc && r.setAttribute("fill", i.fc));
                                }
                            }),
                            extendPrototype([IImageElement], ISolidElement),
                            (ISolidElement.prototype.createContent = function () {
                                var t = createNS("rect");
                                t.setAttribute("width", this.data.sw), t.setAttribute("height", this.data.sh), t.setAttribute("fill", this.data.sc), this.layerElement.appendChild(t);
                            }),
                            (NullElement.prototype.prepareFrame = function (t) {
                                this.prepareProperties(t, !0);
                            }),
                            (NullElement.prototype.renderFrame = function () {}),
                            (NullElement.prototype.getBaseElement = function () {
                                return null;
                            }),
                            (NullElement.prototype.destroy = function () {}),
                            (NullElement.prototype.sourceRectAtTime = function () {}),
                            (NullElement.prototype.hide = function () {}),
                            extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement),
                            extendPrototype([BaseRenderer], SVGRendererBase),
                            (SVGRendererBase.prototype.createNull = function (t) {
                                return new NullElement(t, this.globalData, this);
                            }),
                            (SVGRendererBase.prototype.createShape = function (t) {
                                return new SVGShapeElement(t, this.globalData, this);
                            }),
                            (SVGRendererBase.prototype.createText = function (t) {
                                return new SVGTextLottieElement(t, this.globalData, this);
                            }),
                            (SVGRendererBase.prototype.createImage = function (t) {
                                return new IImageElement(t, this.globalData, this);
                            }),
                            (SVGRendererBase.prototype.createSolid = function (t) {
                                return new ISolidElement(t, this.globalData, this);
                            }),
                            (SVGRendererBase.prototype.configAnimation = function (t) {
                                this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"),
                                    this.svgElement.setAttribute("xmlns:xlink", "http://www.w3.org/1999/xlink"),
                                    this.renderConfig.viewBoxSize ? this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize) : this.svgElement.setAttribute("viewBox", "0 0 " + t.w + " " + t.h),
                                    this.renderConfig.viewBoxOnly ||
                                        (this.svgElement.setAttribute("width", t.w),
                                        this.svgElement.setAttribute("height", t.h),
                                        (this.svgElement.style.width = "100%"),
                                        (this.svgElement.style.height = "100%"),
                                        (this.svgElement.style.transform = "translate3d(0,0,0)"),
                                        (this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility)),
                                    this.renderConfig.width && this.svgElement.setAttribute("width", this.renderConfig.width),
                                    this.renderConfig.height && this.svgElement.setAttribute("height", this.renderConfig.height),
                                    this.renderConfig.className && this.svgElement.setAttribute("class", this.renderConfig.className),
                                    this.renderConfig.id && this.svgElement.setAttribute("id", this.renderConfig.id),
                                    void 0 !== this.renderConfig.focusable && this.svgElement.setAttribute("focusable", this.renderConfig.focusable),
                                    this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio),
                                    this.animationItem.wrapper.appendChild(this.svgElement);
                                var e = this.globalData.defs;
                                this.setupGlobalData(t, e), (this.globalData.progressiveLoad = this.renderConfig.progressiveLoad), (this.data = t);
                                var i = createNS("clipPath"),
                                    r = createNS("rect");
                                r.setAttribute("width", t.w), r.setAttribute("height", t.h), r.setAttribute("x", 0), r.setAttribute("y", 0);
                                var s = createElementID();
                                i.setAttribute("id", s),
                                    i.appendChild(r),
                                    this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + s + ")"),
                                    e.appendChild(i),
                                    (this.layers = t.layers),
                                    (this.elements = createSizedArray(t.layers.length));
                            }),
                            (SVGRendererBase.prototype.destroy = function () {
                                var t;
                                this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), (this.layerElement = null), (this.globalData.defs = null);
                                var e = this.layers ? this.layers.length : 0;
                                for (t = 0; t < e; t += 1) this.elements[t] && this.elements[t].destroy && this.elements[t].destroy();
                                (this.elements.length = 0), (this.destroyed = !0), (this.animationItem = null);
                            }),
                            (SVGRendererBase.prototype.updateContainerSize = function () {}),
                            (SVGRendererBase.prototype.findIndexByInd = function (t) {
                                var e = 0,
                                    i = this.layers.length;
                                for (e = 0; e < i; e += 1) if (this.layers[e].ind === t) return e;
                                return -1;
                            }),
                            (SVGRendererBase.prototype.buildItem = function (t) {
                                var e = this.elements;
                                if (!e[t] && 99 !== this.layers[t].ty) {
                                    e[t] = !0;
                                    var i = this.createItem(this.layers[t]);
                                    if (((e[t] = i), getExpressionsPlugin() && (0 === this.layers[t].ty && this.globalData.projectInterface.registerComposition(i), i.initExpressions()), this.appendElementInPos(i, t), this.layers[t].tt)) {
                                        var r = "tp" in this.layers[t] ? this.findIndexByInd(this.layers[t].tp) : t - 1;
                                        if (-1 === r) return;
                                        if (this.elements[r] && !0 !== this.elements[r]) {
                                            var s = e[r].getMatte(this.layers[t].tt);
                                            i.setMatte(s);
                                        } else this.buildItem(r), this.addPendingElement(i);
                                    }
                                }
                            }),
                            (SVGRendererBase.prototype.checkPendingElements = function () {
                                for (; this.pendingElements.length; ) {
                                    var t = this.pendingElements.pop();
                                    if ((t.checkParenting(), t.data.tt))
                                        for (var e = 0, i = this.elements.length; e < i; ) {
                                            if (this.elements[e] === t) {
                                                var r = "tp" in t.data ? this.findIndexByInd(t.data.tp) : e - 1,
                                                    s = this.elements[r].getMatte(this.layers[e].tt);
                                                t.setMatte(s);
                                                break;
                                            }
                                            e += 1;
                                        }
                                }
                            }),
                            (SVGRendererBase.prototype.renderFrame = function (t) {
                                if (this.renderedFrame !== t && !this.destroyed) {
                                    var e;
                                    null === t ? (t = this.renderedFrame) : (this.renderedFrame = t),
                                        (this.globalData.frameNum = t),
                                        (this.globalData.frameId += 1),
                                        (this.globalData.projectInterface.currentFrame = t),
                                        (this.globalData._mdf = !1);
                                    var i = this.layers.length;
                                    for (this.completeLayers || this.checkLayers(t), e = i - 1; e >= 0; e -= 1) (this.completeLayers || this.elements[e]) && this.elements[e].prepareFrame(t - this.layers[e].st);
                                    if (this.globalData._mdf) for (e = 0; e < i; e += 1) (this.completeLayers || this.elements[e]) && this.elements[e].renderFrame();
                                }
                            }),
                            (SVGRendererBase.prototype.appendElementInPos = function (t, e) {
                                var i = t.getBaseElement();
                                if (i) {
                                    for (var r, s = 0; s < e; ) this.elements[s] && !0 !== this.elements[s] && this.elements[s].getBaseElement() && (r = this.elements[s].getBaseElement()), (s += 1);
                                    r ? this.layerElement.insertBefore(i, r) : this.layerElement.appendChild(i);
                                }
                            }),
                            (SVGRendererBase.prototype.hide = function () {
                                this.layerElement.style.display = "none";
                            }),
                            (SVGRendererBase.prototype.show = function () {
                                this.layerElement.style.display = "block";
                            }),
                            extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement),
                            (ICompElement.prototype.initElement = function (t, e, i) {
                                this.initFrame(),
                                    this.initBaseData(t, e, i),
                                    this.initTransform(t, e, i),
                                    this.initRenderable(),
                                    this.initHierarchy(),
                                    this.initRendererElement(),
                                    this.createContainerElements(),
                                    this.createRenderableComponents(),
                                    (!this.data.xt && e.progressiveLoad) || this.buildAllItems(),
                                    this.hide();
                            }),
                            (ICompElement.prototype.prepareFrame = function (t) {
                                if (((this._mdf = !1), this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.isInRange || this.data.xt)) {
                                    if (this.tm._placeholder) this.renderedFrame = t / this.data.sr;
                                    else {
                                        var e = this.tm.v;
                                        e === this.data.op && (e = this.data.op - 1), (this.renderedFrame = e);
                                    }
                                    var i,
                                        r = this.elements.length;
                                    for (this.completeLayers || this.checkLayers(this.renderedFrame), i = r - 1; i >= 0; i -= 1)
                                        (this.completeLayers || this.elements[i]) && (this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st), this.elements[i]._mdf && (this._mdf = !0));
                                }
                            }),
                            (ICompElement.prototype.renderInnerContent = function () {
                                var t,
                                    e = this.layers.length;
                                for (t = 0; t < e; t += 1) (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame();
                            }),
                            (ICompElement.prototype.setElements = function (t) {
                                this.elements = t;
                            }),
                            (ICompElement.prototype.getElements = function () {
                                return this.elements;
                            }),
                            (ICompElement.prototype.destroyElements = function () {
                                var t,
                                    e = this.layers.length;
                                for (t = 0; t < e; t += 1) this.elements[t] && this.elements[t].destroy();
                            }),
                            (ICompElement.prototype.destroy = function () {
                                this.destroyElements(), this.destroyBaseElement();
                            }),
                            extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement),
                            (SVGCompElement.prototype.createComp = function (t) {
                                return new SVGCompElement(t, this.globalData, this);
                            }),
                            extendPrototype([SVGRendererBase], SVGRenderer),
                            (SVGRenderer.prototype.createComp = function (t) {
                                return new SVGCompElement(t, this.globalData, this);
                            }),
                            (ShapeTransformManager.prototype = {
                                addTransformSequence: function (t) {
                                    var e,
                                        i = t.length,
                                        r = "_";
                                    for (e = 0; e < i; e += 1) r += t[e].transform.key + "_";
                                    var s = this.sequences[r];
                                    return s || ((s = { transforms: [].concat(t), finalTransform: new Matrix(), _mdf: !1 }), (this.sequences[r] = s), this.sequenceList.push(s)), s;
                                },
                                processSequence: function (t, e) {
                                    for (var i = 0, r = t.transforms.length, s = e; i < r && !e; ) {
                                        if (t.transforms[i].transform.mProps._mdf) {
                                            s = !0;
                                            break;
                                        }
                                        i += 1;
                                    }
                                    if (s) for (t.finalTransform.reset(), i = r - 1; i >= 0; i -= 1) t.finalTransform.multiply(t.transforms[i].transform.mProps.v);
                                    t._mdf = s;
                                },
                                processSequences: function (t) {
                                    var e,
                                        i = this.sequenceList.length;
                                    for (e = 0; e < i; e += 1) this.processSequence(this.sequenceList[e], t);
                                },
                                getNewKey: function () {
                                    return (this.transform_key_count += 1), "_" + this.transform_key_count;
                                },
                            });
                        var lumaLoader = function () {
                            var t = "__lottie_element_luma_buffer",
                                e = null,
                                i = null,
                                r = null;
                            function s() {
                                var s, a, n;
                                e ||
                                    ((s = createNS("svg")),
                                    (a = createNS("filter")),
                                    (n = createNS("feColorMatrix")),
                                    a.setAttribute("id", t),
                                    n.setAttribute("type", "matrix"),
                                    n.setAttribute("color-interpolation-filters", "sRGB"),
                                    n.setAttribute("values", "0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0"),
                                    a.appendChild(n),
                                    s.appendChild(a),
                                    s.setAttribute("id", t + "_svg"),
                                    featureSupport.svgLumaHidden && (s.style.display = "none"),
                                    (r = s),
                                    document.body.appendChild(r),
                                    (e = createTag("canvas")),
                                    ((i = e.getContext("2d")).filter = "url(#" + t + ")"),
                                    (i.fillStyle = "rgba(0,0,0,0)"),
                                    i.fillRect(0, 0, 1, 1));
                            }
                            return {
                                load: s,
                                get: function (r) {
                                    return e || s(), (e.width = r.width), (e.height = r.height), (i.filter = "url(#" + t + ")"), e;
                                },
                            };
                        };
                        function createCanvas(t, e) {
                            if (featureSupport.offscreenCanvas) return new OffscreenCanvas(t, e);
                            var i = createTag("canvas");
                            return (i.width = t), (i.height = e), i;
                        }
                        var assetLoader = { loadLumaCanvas: lumaLoader.load, getLumaCanvas: lumaLoader.get, createCanvas },
                            registeredEffects = {};
                        function CVEffects(t) {
                            var e,
                                i,
                                r = t.data.ef ? t.data.ef.length : 0;
                            for (this.filters = [], e = 0; e < r; e += 1) {
                                i = null;
                                var s = t.data.ef[e].ty;
                                registeredEffects[s] && (i = new (0, registeredEffects[s].effect)(t.effectsManager.effectElements[e], t)), i && this.filters.push(i);
                            }
                            this.filters.length && t.addRenderableComponent(this);
                        }
                        function registerEffect(t, e) {
                            registeredEffects[t] = { effect: e };
                        }
                        function CVMaskElement(t, e) {
                            var i;
                            (this.data = t), (this.element = e), (this.masksProperties = this.data.masksProperties || []), (this.viewData = createSizedArray(this.masksProperties.length));
                            var r = this.masksProperties.length,
                                s = !1;
                            for (i = 0; i < r; i += 1) "n" !== this.masksProperties[i].mode && (s = !0), (this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3));
                            (this.hasMasks = s), s && this.element.addRenderableComponent(this);
                        }
                        function CVBaseElement() {}
                        (CVEffects.prototype.renderFrame = function (t) {
                            var e,
                                i = this.filters.length;
                            for (e = 0; e < i; e += 1) this.filters[e].renderFrame(t);
                        }),
                            (CVEffects.prototype.getEffects = function (t) {
                                var e,
                                    i = this.filters.length,
                                    r = [];
                                for (e = 0; e < i; e += 1) this.filters[e].type === t && r.push(this.filters[e]);
                                return r;
                            }),
                            (CVMaskElement.prototype.renderFrame = function () {
                                if (this.hasMasks) {
                                    var t,
                                        e,
                                        i,
                                        r,
                                        s = this.element.finalTransform.mat,
                                        a = this.element.canvasContext,
                                        n = this.masksProperties.length;
                                    for (a.beginPath(), t = 0; t < n; t += 1)
                                        if ("n" !== this.masksProperties[t].mode) {
                                            var o;
                                            this.masksProperties[t].inv &&
                                                (a.moveTo(0, 0),
                                                a.lineTo(this.element.globalData.compSize.w, 0),
                                                a.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h),
                                                a.lineTo(0, this.element.globalData.compSize.h),
                                                a.lineTo(0, 0)),
                                                (r = this.viewData[t].v),
                                                (e = s.applyToPointArray(r.v[0][0], r.v[0][1], 0)),
                                                a.moveTo(e[0], e[1]);
                                            var l = r._length;
                                            for (o = 1; o < l; o += 1) (i = s.applyToTriplePoints(r.o[o - 1], r.i[o], r.v[o])), a.bezierCurveTo(i[0], i[1], i[2], i[3], i[4], i[5]);
                                            (i = s.applyToTriplePoints(r.o[o - 1], r.i[0], r.v[0])), a.bezierCurveTo(i[0], i[1], i[2], i[3], i[4], i[5]);
                                        }
                                    this.element.globalData.renderer.save(!0), a.clip();
                                }
                            }),
                            (CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty),
                            (CVMaskElement.prototype.destroy = function () {
                                this.element = null;
                            });
                        var operationsMap = { 1: "source-in", 2: "source-out", 3: "source-in", 4: "source-out" };
                        function CVShapeData(t, e, i, r) {
                            (this.styledShapes = []), (this.tr = [0, 0, 0, 0, 0, 0]);
                            var s,
                                a = 4;
                            "rc" === e.ty ? (a = 5) : "el" === e.ty ? (a = 6) : "sr" === e.ty && (a = 7), (this.sh = ShapePropertyFactory.getShapeProp(t, e, a, t));
                            var n,
                                o = i.length;
                            for (s = 0; s < o; s += 1) i[s].closed || ((n = { transforms: r.addTransformSequence(i[s].transforms), trNodes: [] }), this.styledShapes.push(n), i[s].elements.push(n));
                        }
                        function CVShapeElement(t, e, i) {
                            (this.shapes = []),
                                (this.shapesData = t.shapes),
                                (this.stylesList = []),
                                (this.itemsData = []),
                                (this.prevViewData = []),
                                (this.shapeModifiers = []),
                                (this.processedElements = []),
                                (this.transformsManager = new ShapeTransformManager()),
                                this.initElement(t, e, i);
                        }
                        function CVTextElement(t, e, i) {
                            (this.textSpans = []),
                                (this.yOffset = 0),
                                (this.fillColorAnim = !1),
                                (this.strokeColorAnim = !1),
                                (this.strokeWidthAnim = !1),
                                (this.stroke = !1),
                                (this.fill = !1),
                                (this.justifyOffset = 0),
                                (this.currentRender = null),
                                (this.renderType = "canvas"),
                                (this.values = { fill: "rgba(0,0,0,0)", stroke: "rgba(0,0,0,0)", sWidth: 0, fValue: "" }),
                                this.initElement(t, e, i);
                        }
                        function CVImageElement(t, e, i) {
                            (this.assetData = e.getAssetData(t.refId)), (this.img = e.imageLoader.getAsset(this.assetData)), this.initElement(t, e, i);
                        }
                        function CVSolidElement(t, e, i) {
                            this.initElement(t, e, i);
                        }
                        function CanvasRendererBase() {}
                        function CanvasContext() {
                            (this.opacity = -1),
                                (this.transform = createTypedArray("float32", 16)),
                                (this.fillStyle = ""),
                                (this.strokeStyle = ""),
                                (this.lineWidth = ""),
                                (this.lineCap = ""),
                                (this.lineJoin = ""),
                                (this.miterLimit = ""),
                                (this.id = Math.random());
                        }
                        function CVContextData() {
                            var t;
                            for (this.stack = [], this.cArrPos = 0, this.cTr = new Matrix(), t = 0; t < 15; t += 1) {
                                var e = new CanvasContext();
                                this.stack[t] = e;
                            }
                            (this._length = 15),
                                (this.nativeContext = null),
                                (this.transformMat = new Matrix()),
                                (this.currentOpacity = 1),
                                (this.currentFillStyle = ""),
                                (this.appliedFillStyle = ""),
                                (this.currentStrokeStyle = ""),
                                (this.appliedStrokeStyle = ""),
                                (this.currentLineWidth = ""),
                                (this.appliedLineWidth = ""),
                                (this.currentLineCap = ""),
                                (this.appliedLineCap = ""),
                                (this.currentLineJoin = ""),
                                (this.appliedLineJoin = ""),
                                (this.appliedMiterLimit = ""),
                                (this.currentMiterLimit = "");
                        }
                        function CVCompElement(t, e, i) {
                            (this.completeLayers = !1),
                                (this.layers = t.layers),
                                (this.pendingElements = []),
                                (this.elements = createSizedArray(this.layers.length)),
                                this.initElement(t, e, i),
                                (this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: !0 });
                        }
                        function CanvasRenderer(t, e) {
                            (this.animationItem = t),
                                (this.renderConfig = {
                                    clearCanvas: !e || void 0 === e.clearCanvas || e.clearCanvas,
                                    context: (e && e.context) || null,
                                    progressiveLoad: (e && e.progressiveLoad) || !1,
                                    preserveAspectRatio: (e && e.preserveAspectRatio) || "xMidYMid meet",
                                    imagePreserveAspectRatio: (e && e.imagePreserveAspectRatio) || "xMidYMid slice",
                                    contentVisibility: (e && e.contentVisibility) || "visible",
                                    className: (e && e.className) || "",
                                    id: (e && e.id) || "",
                                    runExpressions: !e || void 0 === e.runExpressions || e.runExpressions,
                                }),
                                (this.renderConfig.dpr = (e && e.dpr) || 1),
                                this.animationItem.wrapper && (this.renderConfig.dpr = (e && e.dpr) || window.devicePixelRatio || 1),
                                (this.renderedFrame = -1),
                                (this.globalData = { frameNum: -1, _mdf: !1, renderConfig: this.renderConfig, currentGlobalAlpha: -1 }),
                                (this.contextData = new CVContextData()),
                                (this.elements = []),
                                (this.pendingElements = []),
                                (this.transformMat = new Matrix()),
                                (this.completeLayers = !1),
                                (this.rendererType = "canvas"),
                                this.renderConfig.clearCanvas &&
                                    ((this.ctxTransform = this.contextData.transform.bind(this.contextData)),
                                    (this.ctxOpacity = this.contextData.opacity.bind(this.contextData)),
                                    (this.ctxFillStyle = this.contextData.fillStyle.bind(this.contextData)),
                                    (this.ctxStrokeStyle = this.contextData.strokeStyle.bind(this.contextData)),
                                    (this.ctxLineWidth = this.contextData.lineWidth.bind(this.contextData)),
                                    (this.ctxLineCap = this.contextData.lineCap.bind(this.contextData)),
                                    (this.ctxLineJoin = this.contextData.lineJoin.bind(this.contextData)),
                                    (this.ctxMiterLimit = this.contextData.miterLimit.bind(this.contextData)),
                                    (this.ctxFill = this.contextData.fill.bind(this.contextData)),
                                    (this.ctxFillRect = this.contextData.fillRect.bind(this.contextData)),
                                    (this.ctxStroke = this.contextData.stroke.bind(this.contextData)),
                                    (this.save = this.contextData.save.bind(this.contextData)));
                        }
                        function HBaseElement() {}
                        function HSolidElement(t, e, i) {
                            this.initElement(t, e, i);
                        }
                        function HShapeElement(t, e, i) {
                            (this.shapes = []),
                                (this.shapesData = t.shapes),
                                (this.stylesList = []),
                                (this.shapeModifiers = []),
                                (this.itemsData = []),
                                (this.processedElements = []),
                                (this.animatedContents = []),
                                (this.shapesContainer = createNS("g")),
                                this.initElement(t, e, i),
                                (this.prevViewData = []),
                                (this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 });
                        }
                        function HTextElement(t, e, i) {
                            (this.textSpans = []), (this.textPaths = []), (this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 }), (this.renderType = "svg"), (this.isMasked = !1), this.initElement(t, e, i);
                        }
                        function HCameraElement(t, e, i) {
                            this.initFrame(), this.initBaseData(t, e, i), this.initHierarchy();
                            var r = PropertyFactory.getProp;
                            if (
                                ((this.pe = r(this, t.pe, 0, 0, this)),
                                t.ks.p.s ? ((this.px = r(this, t.ks.p.x, 1, 0, this)), (this.py = r(this, t.ks.p.y, 1, 0, this)), (this.pz = r(this, t.ks.p.z, 1, 0, this))) : (this.p = r(this, t.ks.p, 1, 0, this)),
                                t.ks.a && (this.a = r(this, t.ks.a, 1, 0, this)),
                                t.ks.or.k.length && t.ks.or.k[0].to)
                            ) {
                                var s,
                                    a = t.ks.or.k.length;
                                for (s = 0; s < a; s += 1) (t.ks.or.k[s].to = null), (t.ks.or.k[s].ti = null);
                            }
                            (this.or = r(this, t.ks.or, 1, degToRads, this)),
                                (this.or.sh = !0),
                                (this.rx = r(this, t.ks.rx, 0, degToRads, this)),
                                (this.ry = r(this, t.ks.ry, 0, degToRads, this)),
                                (this.rz = r(this, t.ks.rz, 0, degToRads, this)),
                                (this.mat = new Matrix()),
                                (this._prevMat = new Matrix()),
                                (this._isFirstFrame = !0),
                                (this.finalTransform = { mProp: this });
                        }
                        function HImageElement(t, e, i) {
                            (this.assetData = e.getAssetData(t.refId)), this.initElement(t, e, i);
                        }
                        function HybridRendererBase(t, e) {
                            (this.animationItem = t),
                                (this.layers = null),
                                (this.renderedFrame = -1),
                                (this.renderConfig = {
                                    className: (e && e.className) || "",
                                    imagePreserveAspectRatio: (e && e.imagePreserveAspectRatio) || "xMidYMid slice",
                                    hideOnTransparent: !(e && !1 === e.hideOnTransparent),
                                    filterSize: {
                                        width: (e && e.filterSize && e.filterSize.width) || "400%",
                                        height: (e && e.filterSize && e.filterSize.height) || "400%",
                                        x: (e && e.filterSize && e.filterSize.x) || "-100%",
                                        y: (e && e.filterSize && e.filterSize.y) || "-100%",
                                    },
                                }),
                                (this.globalData = { _mdf: !1, frameNum: -1, renderConfig: this.renderConfig }),
                                (this.pendingElements = []),
                                (this.elements = []),
                                (this.threeDElements = []),
                                (this.destroyed = !1),
                                (this.camera = null),
                                (this.supports3d = !0),
                                (this.rendererType = "html");
                        }
                        function HCompElement(t, e, i) {
                            (this.layers = t.layers),
                                (this.supports3d = !t.hasMask),
                                (this.completeLayers = !1),
                                (this.pendingElements = []),
                                (this.elements = this.layers ? createSizedArray(this.layers.length) : []),
                                this.initElement(t, e, i),
                                (this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: !0 });
                        }
                        function HybridRenderer(t, e) {
                            (this.animationItem = t),
                                (this.layers = null),
                                (this.renderedFrame = -1),
                                (this.renderConfig = {
                                    className: (e && e.className) || "",
                                    imagePreserveAspectRatio: (e && e.imagePreserveAspectRatio) || "xMidYMid slice",
                                    hideOnTransparent: !(e && !1 === e.hideOnTransparent),
                                    filterSize: {
                                        width: (e && e.filterSize && e.filterSize.width) || "400%",
                                        height: (e && e.filterSize && e.filterSize.height) || "400%",
                                        x: (e && e.filterSize && e.filterSize.x) || "-100%",
                                        y: (e && e.filterSize && e.filterSize.y) || "-100%",
                                    },
                                    runExpressions: !e || void 0 === e.runExpressions || e.runExpressions,
                                }),
                                (this.globalData = { _mdf: !1, frameNum: -1, renderConfig: this.renderConfig }),
                                (this.pendingElements = []),
                                (this.elements = []),
                                (this.threeDElements = []),
                                (this.destroyed = !1),
                                (this.camera = null),
                                (this.supports3d = !0),
                                (this.rendererType = "html");
                        }
                        (CVBaseElement.prototype = {
                            createElements: function () {},
                            initRendererElement: function () {},
                            createContainerElements: function () {
                                if (this.data.tt >= 1) {
                                    this.buffers = [];
                                    var t = this.globalData.canvasContext,
                                        e = assetLoader.createCanvas(t.canvas.width, t.canvas.height);
                                    this.buffers.push(e);
                                    var i = assetLoader.createCanvas(t.canvas.width, t.canvas.height);
                                    this.buffers.push(i), this.data.tt >= 3 && !document._isProxy && assetLoader.loadLumaCanvas();
                                }
                                (this.canvasContext = this.globalData.canvasContext), (this.transformCanvas = this.globalData.transformCanvas), (this.renderableEffectsManager = new CVEffects(this)), this.searchEffectTransforms();
                            },
                            createContent: function () {},
                            setBlendMode: function () {
                                var t = this.globalData;
                                if (t.blendMode !== this.data.bm) {
                                    t.blendMode = this.data.bm;
                                    var e = getBlendMode(this.data.bm);
                                    t.canvasContext.globalCompositeOperation = e;
                                }
                            },
                            createRenderableComponents: function () {
                                (this.maskManager = new CVMaskElement(this.data, this)), (this.transformEffects = this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT));
                            },
                            hideElement: function () {
                                this.hidden || (this.isInRange && !this.isTransparent) || (this.hidden = !0);
                            },
                            showElement: function () {
                                this.isInRange && !this.isTransparent && ((this.hidden = !1), (this._isFirstFrame = !0), (this.maskManager._isFirstFrame = !0));
                            },
                            clearCanvas: function (t) {
                                t.clearRect(this.transformCanvas.tx, this.transformCanvas.ty, this.transformCanvas.w * this.transformCanvas.sx, this.transformCanvas.h * this.transformCanvas.sy);
                            },
                            prepareLayer: function () {
                                if (this.data.tt >= 1) {
                                    var t = this.buffers[0].getContext("2d");
                                    this.clearCanvas(t),
                                        t.drawImage(this.canvasContext.canvas, 0, 0),
                                        (this.currentTransform = this.canvasContext.getTransform()),
                                        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                                        this.clearCanvas(this.canvasContext),
                                        this.canvasContext.setTransform(this.currentTransform);
                                }
                            },
                            exitLayer: function () {
                                if (this.data.tt >= 1) {
                                    var t = this.buffers[1],
                                        e = t.getContext("2d");
                                    if (
                                        (this.clearCanvas(e),
                                        e.drawImage(this.canvasContext.canvas, 0, 0),
                                        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                                        this.clearCanvas(this.canvasContext),
                                        this.canvasContext.setTransform(this.currentTransform),
                                        this.comp.getElementById("tp" in this.data ? this.data.tp : this.data.ind - 1).renderFrame(!0),
                                        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                                        this.data.tt >= 3 && !document._isProxy)
                                    ) {
                                        var i = assetLoader.getLumaCanvas(this.canvasContext.canvas);
                                        i.getContext("2d").drawImage(this.canvasContext.canvas, 0, 0), this.clearCanvas(this.canvasContext), this.canvasContext.drawImage(i, 0, 0);
                                    }
                                    (this.canvasContext.globalCompositeOperation = operationsMap[this.data.tt]),
                                        this.canvasContext.drawImage(t, 0, 0),
                                        (this.canvasContext.globalCompositeOperation = "destination-over"),
                                        this.canvasContext.drawImage(this.buffers[0], 0, 0),
                                        this.canvasContext.setTransform(this.currentTransform),
                                        (this.canvasContext.globalCompositeOperation = "source-over");
                                }
                            },
                            renderFrame: function (t) {
                                if (!this.hidden && !this.data.hd && (1 !== this.data.td || t)) {
                                    this.renderTransform(), this.renderRenderable(), this.renderLocalTransform(), this.setBlendMode();
                                    var e = 0 === this.data.ty;
                                    this.prepareLayer(),
                                        this.globalData.renderer.save(e),
                                        this.globalData.renderer.ctxTransform(this.finalTransform.localMat.props),
                                        this.globalData.renderer.ctxOpacity(this.finalTransform.localOpacity),
                                        this.renderInnerContent(),
                                        this.globalData.renderer.restore(e),
                                        this.exitLayer(),
                                        this.maskManager.hasMasks && this.globalData.renderer.restore(!0),
                                        this._isFirstFrame && (this._isFirstFrame = !1);
                                }
                            },
                            destroy: function () {
                                (this.canvasContext = null), (this.data = null), (this.globalData = null), this.maskManager.destroy();
                            },
                            mHelper: new Matrix(),
                        }),
                            (CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement),
                            (CVBaseElement.prototype.show = CVBaseElement.prototype.showElement),
                            (CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated),
                            extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement),
                            (CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement),
                            (CVShapeElement.prototype.transformHelper = { opacity: 1, _opMdf: !1 }),
                            (CVShapeElement.prototype.dashResetter = []),
                            (CVShapeElement.prototype.createContent = function () {
                                this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, []);
                            }),
                            (CVShapeElement.prototype.createStyleElement = function (t, e) {
                                var i = { data: t, type: t.ty, preTransforms: this.transformsManager.addTransformSequence(e), transforms: [], elements: [], closed: !0 === t.hd },
                                    r = {};
                                if (
                                    ("fl" === t.ty || "st" === t.ty
                                        ? ((r.c = PropertyFactory.getProp(this, t.c, 1, 255, this)), r.c.k || (i.co = "rgb(" + bmFloor(r.c.v[0]) + "," + bmFloor(r.c.v[1]) + "," + bmFloor(r.c.v[2]) + ")"))
                                        : ("gf" !== t.ty && "gs" !== t.ty) ||
                                          ((r.s = PropertyFactory.getProp(this, t.s, 1, null, this)),
                                          (r.e = PropertyFactory.getProp(this, t.e, 1, null, this)),
                                          (r.h = PropertyFactory.getProp(this, t.h || { k: 0 }, 0, 0.01, this)),
                                          (r.a = PropertyFactory.getProp(this, t.a || { k: 0 }, 0, degToRads, this)),
                                          (r.g = new GradientProperty(this, t.g, this))),
                                    (r.o = PropertyFactory.getProp(this, t.o, 0, 0.01, this)),
                                    "st" === t.ty || "gs" === t.ty)
                                ) {
                                    if (((i.lc = lineCapEnum[t.lc || 2]), (i.lj = lineJoinEnum[t.lj || 2]), 1 == t.lj && (i.ml = t.ml), (r.w = PropertyFactory.getProp(this, t.w, 0, null, this)), r.w.k || (i.wi = r.w.v), t.d)) {
                                        var s = new DashProperty(this, t.d, "canvas", this);
                                        (r.d = s), r.d.k || ((i.da = r.d.dashArray), (i.do = r.d.dashoffset[0]));
                                    }
                                } else i.r = 2 === t.r ? "evenodd" : "nonzero";
                                return this.stylesList.push(i), (r.style = i), r;
                            }),
                            (CVShapeElement.prototype.createGroupElement = function () {
                                return { it: [], prevViewData: [] };
                            }),
                            (CVShapeElement.prototype.createTransformElement = function (t) {
                                return {
                                    transform: { opacity: 1, _opMdf: !1, key: this.transformsManager.getNewKey(), op: PropertyFactory.getProp(this, t.o, 0, 0.01, this), mProps: TransformPropertyFactory.getTransformProperty(this, t, this) },
                                };
                            }),
                            (CVShapeElement.prototype.createShapeElement = function (t) {
                                var e = new CVShapeData(this, t, this.stylesList, this.transformsManager);
                                return this.shapes.push(e), this.addShapeToModifiers(e), e;
                            }),
                            (CVShapeElement.prototype.reloadShapes = function () {
                                var t;
                                this._isFirstFrame = !0;
                                var e = this.itemsData.length;
                                for (t = 0; t < e; t += 1) this.prevViewData[t] = this.itemsData[t];
                                for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, []), e = this.dynamicProperties.length, t = 0; t < e; t += 1) this.dynamicProperties[t].getValue();
                                this.renderModifiers(), this.transformsManager.processSequences(this._isFirstFrame);
                            }),
                            (CVShapeElement.prototype.addTransformToStyleList = function (t) {
                                var e,
                                    i = this.stylesList.length;
                                for (e = 0; e < i; e += 1) this.stylesList[e].closed || this.stylesList[e].transforms.push(t);
                            }),
                            (CVShapeElement.prototype.removeTransformFromStyleList = function () {
                                var t,
                                    e = this.stylesList.length;
                                for (t = 0; t < e; t += 1) this.stylesList[t].closed || this.stylesList[t].transforms.pop();
                            }),
                            (CVShapeElement.prototype.closeStyles = function (t) {
                                var e,
                                    i = t.length;
                                for (e = 0; e < i; e += 1) t[e].closed = !0;
                            }),
                            (CVShapeElement.prototype.searchShapes = function (t, e, i, r, s) {
                                var a,
                                    n,
                                    o,
                                    l,
                                    h,
                                    c,
                                    d = t.length - 1,
                                    u = [],
                                    p = [],
                                    m = [].concat(s);
                                for (a = d; a >= 0; a -= 1) {
                                    if (((l = this.searchProcessedElement(t[a])) ? (e[a] = i[l - 1]) : (t[a]._shouldRender = r), "fl" === t[a].ty || "st" === t[a].ty || "gf" === t[a].ty || "gs" === t[a].ty))
                                        l ? (e[a].style.closed = !1) : (e[a] = this.createStyleElement(t[a], m)), u.push(e[a].style);
                                    else if ("gr" === t[a].ty) {
                                        if (l) for (o = e[a].it.length, n = 0; n < o; n += 1) e[a].prevViewData[n] = e[a].it[n];
                                        else e[a] = this.createGroupElement(t[a]);
                                        this.searchShapes(t[a].it, e[a].it, e[a].prevViewData, r, m);
                                    } else
                                        "tr" === t[a].ty
                                            ? (l || ((c = this.createTransformElement(t[a])), (e[a] = c)), m.push(e[a]), this.addTransformToStyleList(e[a]))
                                            : "sh" === t[a].ty || "rc" === t[a].ty || "el" === t[a].ty || "sr" === t[a].ty
                                            ? l || (e[a] = this.createShapeElement(t[a]))
                                            : "tm" === t[a].ty || "rd" === t[a].ty || "pb" === t[a].ty || "zz" === t[a].ty || "op" === t[a].ty
                                            ? (l ? ((h = e[a]).closed = !1) : ((h = ShapeModifiers.getModifier(t[a].ty)).init(this, t[a]), (e[a] = h), this.shapeModifiers.push(h)), p.push(h))
                                            : "rp" === t[a].ty && (l ? ((h = e[a]).closed = !0) : ((h = ShapeModifiers.getModifier(t[a].ty)), (e[a] = h), h.init(this, t, a, e), this.shapeModifiers.push(h), (r = !1)), p.push(h));
                                    this.addProcessedElement(t[a], a + 1);
                                }
                                for (this.removeTransformFromStyleList(), this.closeStyles(u), d = p.length, a = 0; a < d; a += 1) p[a].closed = !0;
                            }),
                            (CVShapeElement.prototype.renderInnerContent = function () {
                                (this.transformHelper.opacity = 1),
                                    (this.transformHelper._opMdf = !1),
                                    this.renderModifiers(),
                                    this.transformsManager.processSequences(this._isFirstFrame),
                                    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, !0);
                            }),
                            (CVShapeElement.prototype.renderShapeTransform = function (t, e) {
                                (t._opMdf || e.op._mdf || this._isFirstFrame) && ((e.opacity = t.opacity), (e.opacity *= e.op.v), (e._opMdf = !0));
                            }),
                            (CVShapeElement.prototype.drawLayer = function () {
                                var t,
                                    e,
                                    i,
                                    r,
                                    s,
                                    a,
                                    n,
                                    o,
                                    l,
                                    h = this.stylesList.length,
                                    c = this.globalData.renderer,
                                    d = this.globalData.canvasContext;
                                for (t = 0; t < h; t += 1)
                                    if ((("st" !== (o = (l = this.stylesList[t]).type) && "gs" !== o) || 0 !== l.wi) && l.data._shouldRender && 0 !== l.coOp && 0 !== this.globalData.currentGlobalAlpha) {
                                        for (
                                            c.save(),
                                                a = l.elements,
                                                "st" === o || "gs" === o
                                                    ? (c.ctxStrokeStyle("st" === o ? l.co : l.grd), c.ctxLineWidth(l.wi), c.ctxLineCap(l.lc), c.ctxLineJoin(l.lj), c.ctxMiterLimit(l.ml || 0))
                                                    : c.ctxFillStyle("fl" === o ? l.co : l.grd),
                                                c.ctxOpacity(l.coOp),
                                                "st" !== o && "gs" !== o && d.beginPath(),
                                                c.ctxTransform(l.preTransforms.finalTransform.props),
                                                i = a.length,
                                                e = 0;
                                            e < i;
                                            e += 1
                                        ) {
                                            for (("st" !== o && "gs" !== o) || (d.beginPath(), l.da && (d.setLineDash(l.da), (d.lineDashOffset = l.do))), s = (n = a[e].trNodes).length, r = 0; r < s; r += 1)
                                                "m" === n[r].t ? d.moveTo(n[r].p[0], n[r].p[1]) : "c" === n[r].t ? d.bezierCurveTo(n[r].pts[0], n[r].pts[1], n[r].pts[2], n[r].pts[3], n[r].pts[4], n[r].pts[5]) : d.closePath();
                                            ("st" !== o && "gs" !== o) || (c.ctxStroke(), l.da && d.setLineDash(this.dashResetter));
                                        }
                                        "st" !== o && "gs" !== o && this.globalData.renderer.ctxFill(l.r), c.restore();
                                    }
                            }),
                            (CVShapeElement.prototype.renderShape = function (t, e, i, r) {
                                var s, a;
                                for (a = t, s = e.length - 1; s >= 0; s -= 1)
                                    "tr" === e[s].ty
                                        ? ((a = i[s].transform), this.renderShapeTransform(t, a))
                                        : "sh" === e[s].ty || "el" === e[s].ty || "rc" === e[s].ty || "sr" === e[s].ty
                                        ? this.renderPath(e[s], i[s])
                                        : "fl" === e[s].ty
                                        ? this.renderFill(e[s], i[s], a)
                                        : "st" === e[s].ty
                                        ? this.renderStroke(e[s], i[s], a)
                                        : "gf" === e[s].ty || "gs" === e[s].ty
                                        ? this.renderGradientFill(e[s], i[s], a)
                                        : "gr" === e[s].ty
                                        ? this.renderShape(a, e[s].it, i[s].it)
                                        : e[s].ty;
                                r && this.drawLayer();
                            }),
                            (CVShapeElement.prototype.renderStyledShape = function (t, e) {
                                if (this._isFirstFrame || e._mdf || t.transforms._mdf) {
                                    var i,
                                        r,
                                        s,
                                        a = t.trNodes,
                                        n = e.paths,
                                        o = n._length;
                                    a.length = 0;
                                    var l = t.transforms.finalTransform;
                                    for (s = 0; s < o; s += 1) {
                                        var h = n.shapes[s];
                                        if (h && h.v) {
                                            for (r = h._length, i = 1; i < r; i += 1)
                                                1 === i && a.push({ t: "m", p: l.applyToPointArray(h.v[0][0], h.v[0][1], 0) }), a.push({ t: "c", pts: l.applyToTriplePoints(h.o[i - 1], h.i[i], h.v[i]) });
                                            1 === r && a.push({ t: "m", p: l.applyToPointArray(h.v[0][0], h.v[0][1], 0) }), h.c && r && (a.push({ t: "c", pts: l.applyToTriplePoints(h.o[i - 1], h.i[0], h.v[0]) }), a.push({ t: "z" }));
                                        }
                                    }
                                    t.trNodes = a;
                                }
                            }),
                            (CVShapeElement.prototype.renderPath = function (t, e) {
                                if (!0 !== t.hd && t._shouldRender) {
                                    var i,
                                        r = e.styledShapes.length;
                                    for (i = 0; i < r; i += 1) this.renderStyledShape(e.styledShapes[i], e.sh);
                                }
                            }),
                            (CVShapeElement.prototype.renderFill = function (t, e, i) {
                                var r = e.style;
                                (e.c._mdf || this._isFirstFrame) && (r.co = "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"), (e.o._mdf || i._opMdf || this._isFirstFrame) && (r.coOp = e.o.v * i.opacity);
                            }),
                            (CVShapeElement.prototype.renderGradientFill = function (t, e, i) {
                                var r,
                                    s = e.style;
                                if (!s.grd || e.g._mdf || e.s._mdf || e.e._mdf || (1 !== t.t && (e.h._mdf || e.a._mdf))) {
                                    var a,
                                        n = this.globalData.canvasContext,
                                        o = e.s.v,
                                        l = e.e.v;
                                    if (1 === t.t) r = n.createLinearGradient(o[0], o[1], l[0], l[1]);
                                    else {
                                        var h = Math.sqrt(Math.pow(o[0] - l[0], 2) + Math.pow(o[1] - l[1], 2)),
                                            c = Math.atan2(l[1] - o[1], l[0] - o[0]),
                                            d = e.h.v;
                                        d >= 1 ? (d = 0.99) : d <= -1 && (d = -0.99);
                                        var u = h * d,
                                            p = Math.cos(c + e.a.v) * u + o[0],
                                            m = Math.sin(c + e.a.v) * u + o[1];
                                        r = n.createRadialGradient(p, m, 0, o[0], o[1], h);
                                    }
                                    var f = t.g.p,
                                        g = e.g.c,
                                        v = 1;
                                    for (a = 0; a < f; a += 1) e.g._hasOpacity && e.g._collapsable && (v = e.g.o[2 * a + 1]), r.addColorStop(g[4 * a] / 100, "rgba(" + g[4 * a + 1] + "," + g[4 * a + 2] + "," + g[4 * a + 3] + "," + v + ")");
                                    s.grd = r;
                                }
                                s.coOp = e.o.v * i.opacity;
                            }),
                            (CVShapeElement.prototype.renderStroke = function (t, e, i) {
                                var r = e.style,
                                    s = e.d;
                                s && (s._mdf || this._isFirstFrame) && ((r.da = s.dashArray), (r.do = s.dashoffset[0])),
                                    (e.c._mdf || this._isFirstFrame) && (r.co = "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"),
                                    (e.o._mdf || i._opMdf || this._isFirstFrame) && (r.coOp = e.o.v * i.opacity),
                                    (e.w._mdf || this._isFirstFrame) && (r.wi = e.w.v);
                            }),
                            (CVShapeElement.prototype.destroy = function () {
                                (this.shapesData = null), (this.globalData = null), (this.canvasContext = null), (this.stylesList.length = 0), (this.itemsData.length = 0);
                            }),
                            extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement),
                            (CVTextElement.prototype.tHelper = createTag("canvas").getContext("2d")),
                            (CVTextElement.prototype.buildNewText = function () {
                                var t = this.textProperty.currentData;
                                this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
                                var e = !1;
                                t.fc ? ((e = !0), (this.values.fill = this.buildColor(t.fc))) : (this.values.fill = "rgba(0,0,0,0)"), (this.fill = e);
                                var i = !1;
                                t.sc && ((i = !0), (this.values.stroke = this.buildColor(t.sc)), (this.values.sWidth = t.sw));
                                var r,
                                    s,
                                    a,
                                    n,
                                    o,
                                    l,
                                    h,
                                    c,
                                    d,
                                    u,
                                    p,
                                    m,
                                    f = this.globalData.fontManager.getFontByName(t.f),
                                    g = t.l,
                                    v = this.mHelper;
                                (this.stroke = i), (this.values.fValue = t.finalSize + "px " + this.globalData.fontManager.getFontByName(t.f).fFamily), (s = t.finalText.length);
                                var b = this.data.singleShape,
                                    y = 0.001 * t.tr * t.finalSize,
                                    w = 0,
                                    x = 0,
                                    E = !0,
                                    C = 0;
                                for (r = 0; r < s; r += 1) {
                                    (n = ((a = this.globalData.fontManager.getCharData(t.finalText[r], f.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily)) && a.data) || {}),
                                        v.reset(),
                                        b && g[r].n && ((w = -y), (x += t.yOffset), (x += E ? 1 : 0), (E = !1)),
                                        (d = (h = n.shapes ? n.shapes[0].it : []).length),
                                        v.scale(t.finalSize / 100, t.finalSize / 100),
                                        b && this.applyTextPropertiesToMatrix(t, v, g[r].line, w, x),
                                        (p = createSizedArray(d - 1));
                                    var S = 0;
                                    for (c = 0; c < d; c += 1)
                                        if ("sh" === h[c].ty) {
                                            for (l = h[c].ks.k.i.length, u = h[c].ks.k, m = [], o = 1; o < l; o += 1)
                                                1 === o && m.push(v.applyToX(u.v[0][0], u.v[0][1], 0), v.applyToY(u.v[0][0], u.v[0][1], 0)),
                                                    m.push(
                                                        v.applyToX(u.o[o - 1][0], u.o[o - 1][1], 0),
                                                        v.applyToY(u.o[o - 1][0], u.o[o - 1][1], 0),
                                                        v.applyToX(u.i[o][0], u.i[o][1], 0),
                                                        v.applyToY(u.i[o][0], u.i[o][1], 0),
                                                        v.applyToX(u.v[o][0], u.v[o][1], 0),
                                                        v.applyToY(u.v[o][0], u.v[o][1], 0)
                                                    );
                                            m.push(
                                                v.applyToX(u.o[o - 1][0], u.o[o - 1][1], 0),
                                                v.applyToY(u.o[o - 1][0], u.o[o - 1][1], 0),
                                                v.applyToX(u.i[0][0], u.i[0][1], 0),
                                                v.applyToY(u.i[0][0], u.i[0][1], 0),
                                                v.applyToX(u.v[0][0], u.v[0][1], 0),
                                                v.applyToY(u.v[0][0], u.v[0][1], 0)
                                            ),
                                                (p[S] = m),
                                                (S += 1);
                                        }
                                    b && ((w += g[r].l), (w += y)), this.textSpans[C] ? (this.textSpans[C].elem = p) : (this.textSpans[C] = { elem: p }), (C += 1);
                                }
                            }),
                            (CVTextElement.prototype.renderInnerContent = function () {
                                var t, e, i, r, s, a;
                                this.validateText(),
                                    (this.canvasContext.font = this.values.fValue),
                                    this.globalData.renderer.ctxLineCap("butt"),
                                    this.globalData.renderer.ctxLineJoin("miter"),
                                    this.globalData.renderer.ctxMiterLimit(4),
                                    this.data.singleShape || this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
                                var n,
                                    o = this.textAnimator.renderedLetters,
                                    l = this.textProperty.currentData.l;
                                e = l.length;
                                var h,
                                    c,
                                    d = null,
                                    u = null,
                                    p = null,
                                    m = this.globalData.renderer;
                                for (t = 0; t < e; t += 1)
                                    if (!l[t].n) {
                                        if (((n = o[t]) && (m.save(), m.ctxTransform(n.p), m.ctxOpacity(n.o)), this.fill)) {
                                            for (
                                                n && n.fc ? d !== n.fc && (m.ctxFillStyle(n.fc), (d = n.fc)) : d !== this.values.fill && ((d = this.values.fill), m.ctxFillStyle(this.values.fill)),
                                                    r = (h = this.textSpans[t].elem).length,
                                                    this.globalData.canvasContext.beginPath(),
                                                    i = 0;
                                                i < r;
                                                i += 1
                                            )
                                                for (a = (c = h[i]).length, this.globalData.canvasContext.moveTo(c[0], c[1]), s = 2; s < a; s += 6)
                                                    this.globalData.canvasContext.bezierCurveTo(c[s], c[s + 1], c[s + 2], c[s + 3], c[s + 4], c[s + 5]);
                                            this.globalData.canvasContext.closePath(), m.ctxFill();
                                        }
                                        if (this.stroke) {
                                            for (
                                                n && n.sw ? p !== n.sw && ((p = n.sw), m.ctxLineWidth(n.sw)) : p !== this.values.sWidth && ((p = this.values.sWidth), m.ctxLineWidth(this.values.sWidth)),
                                                    n && n.sc ? u !== n.sc && ((u = n.sc), m.ctxStrokeStyle(n.sc)) : u !== this.values.stroke && ((u = this.values.stroke), m.ctxStrokeStyle(this.values.stroke)),
                                                    r = (h = this.textSpans[t].elem).length,
                                                    this.globalData.canvasContext.beginPath(),
                                                    i = 0;
                                                i < r;
                                                i += 1
                                            )
                                                for (a = (c = h[i]).length, this.globalData.canvasContext.moveTo(c[0], c[1]), s = 2; s < a; s += 6)
                                                    this.globalData.canvasContext.bezierCurveTo(c[s], c[s + 1], c[s + 2], c[s + 3], c[s + 4], c[s + 5]);
                                            this.globalData.canvasContext.closePath(), m.ctxStroke();
                                        }
                                        n && this.globalData.renderer.restore();
                                    }
                            }),
                            extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement),
                            (CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement),
                            (CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame),
                            (CVImageElement.prototype.createContent = function () {
                                if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
                                    var t = createTag("canvas");
                                    (t.width = this.assetData.w), (t.height = this.assetData.h);
                                    var e,
                                        i,
                                        r = t.getContext("2d"),
                                        s = this.img.width,
                                        a = this.img.height,
                                        n = s / a,
                                        o = this.assetData.w / this.assetData.h,
                                        l = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
                                    (n > o && "xMidYMid slice" === l) || (n < o && "xMidYMid slice" !== l) ? (e = (i = a) * o) : (i = (e = s) / o),
                                        r.drawImage(this.img, (s - e) / 2, (a - i) / 2, e, i, 0, 0, this.assetData.w, this.assetData.h),
                                        (this.img = t);
                                }
                            }),
                            (CVImageElement.prototype.renderInnerContent = function () {
                                this.canvasContext.drawImage(this.img, 0, 0);
                            }),
                            (CVImageElement.prototype.destroy = function () {
                                this.img = null;
                            }),
                            extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement),
                            (CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement),
                            (CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame),
                            (CVSolidElement.prototype.renderInnerContent = function () {
                                this.globalData.renderer.ctxFillStyle(this.data.sc), this.globalData.renderer.ctxFillRect(0, 0, this.data.sw, this.data.sh);
                            }),
                            extendPrototype([BaseRenderer], CanvasRendererBase),
                            (CanvasRendererBase.prototype.createShape = function (t) {
                                return new CVShapeElement(t, this.globalData, this);
                            }),
                            (CanvasRendererBase.prototype.createText = function (t) {
                                return new CVTextElement(t, this.globalData, this);
                            }),
                            (CanvasRendererBase.prototype.createImage = function (t) {
                                return new CVImageElement(t, this.globalData, this);
                            }),
                            (CanvasRendererBase.prototype.createSolid = function (t) {
                                return new CVSolidElement(t, this.globalData, this);
                            }),
                            (CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull),
                            (CanvasRendererBase.prototype.ctxTransform = function (t) {
                                (1 === t[0] && 0 === t[1] && 0 === t[4] && 1 === t[5] && 0 === t[12] && 0 === t[13]) || this.canvasContext.transform(t[0], t[1], t[4], t[5], t[12], t[13]);
                            }),
                            (CanvasRendererBase.prototype.ctxOpacity = function (t) {
                                this.canvasContext.globalAlpha *= t < 0 ? 0 : t;
                            }),
                            (CanvasRendererBase.prototype.ctxFillStyle = function (t) {
                                this.canvasContext.fillStyle = t;
                            }),
                            (CanvasRendererBase.prototype.ctxStrokeStyle = function (t) {
                                this.canvasContext.strokeStyle = t;
                            }),
                            (CanvasRendererBase.prototype.ctxLineWidth = function (t) {
                                this.canvasContext.lineWidth = t;
                            }),
                            (CanvasRendererBase.prototype.ctxLineCap = function (t) {
                                this.canvasContext.lineCap = t;
                            }),
                            (CanvasRendererBase.prototype.ctxLineJoin = function (t) {
                                this.canvasContext.lineJoin = t;
                            }),
                            (CanvasRendererBase.prototype.ctxMiterLimit = function (t) {
                                this.canvasContext.miterLimit = t;
                            }),
                            (CanvasRendererBase.prototype.ctxFill = function (t) {
                                this.canvasContext.fill(t);
                            }),
                            (CanvasRendererBase.prototype.ctxFillRect = function (t, e, i, r) {
                                this.canvasContext.fillRect(t, e, i, r);
                            }),
                            (CanvasRendererBase.prototype.ctxStroke = function () {
                                this.canvasContext.stroke();
                            }),
                            (CanvasRendererBase.prototype.reset = function () {
                                this.renderConfig.clearCanvas ? this.contextData.reset() : this.canvasContext.restore();
                            }),
                            (CanvasRendererBase.prototype.save = function () {
                                this.canvasContext.save();
                            }),
                            (CanvasRendererBase.prototype.restore = function (t) {
                                this.renderConfig.clearCanvas ? (t && (this.globalData.blendMode = "source-over"), this.contextData.restore(t)) : this.canvasContext.restore();
                            }),
                            (CanvasRendererBase.prototype.configAnimation = function (t) {
                                if (this.animationItem.wrapper) {
                                    this.animationItem.container = createTag("canvas");
                                    var e = this.animationItem.container.style;
                                    (e.width = "100%"), (e.height = "100%");
                                    var i = "0px 0px 0px";
                                    (e.transformOrigin = i),
                                        (e.mozTransformOrigin = i),
                                        (e.webkitTransformOrigin = i),
                                        (e["-webkit-transform"] = i),
                                        (e.contentVisibility = this.renderConfig.contentVisibility),
                                        this.animationItem.wrapper.appendChild(this.animationItem.container),
                                        (this.canvasContext = this.animationItem.container.getContext("2d")),
                                        this.renderConfig.className && this.animationItem.container.setAttribute("class", this.renderConfig.className),
                                        this.renderConfig.id && this.animationItem.container.setAttribute("id", this.renderConfig.id);
                                } else this.canvasContext = this.renderConfig.context;
                                this.contextData.setContext(this.canvasContext),
                                    (this.data = t),
                                    (this.layers = t.layers),
                                    (this.transformCanvas = { w: t.w, h: t.h, sx: 0, sy: 0, tx: 0, ty: 0 }),
                                    this.setupGlobalData(t, document.body),
                                    (this.globalData.canvasContext = this.canvasContext),
                                    (this.globalData.renderer = this),
                                    (this.globalData.isDashed = !1),
                                    (this.globalData.progressiveLoad = this.renderConfig.progressiveLoad),
                                    (this.globalData.transformCanvas = this.transformCanvas),
                                    (this.elements = createSizedArray(t.layers.length)),
                                    this.updateContainerSize();
                            }),
                            (CanvasRendererBase.prototype.updateContainerSize = function (t, e) {
                                var i, r, s, a;
                                if (
                                    (this.reset(),
                                    t
                                        ? ((i = t), (r = e), (this.canvasContext.canvas.width = i), (this.canvasContext.canvas.height = r))
                                        : (this.animationItem.wrapper && this.animationItem.container
                                              ? ((i = this.animationItem.wrapper.offsetWidth), (r = this.animationItem.wrapper.offsetHeight))
                                              : ((i = this.canvasContext.canvas.width), (r = this.canvasContext.canvas.height)),
                                          (this.canvasContext.canvas.width = i * this.renderConfig.dpr),
                                          (this.canvasContext.canvas.height = r * this.renderConfig.dpr)),
                                    -1 !== this.renderConfig.preserveAspectRatio.indexOf("meet") || -1 !== this.renderConfig.preserveAspectRatio.indexOf("slice"))
                                ) {
                                    var n = this.renderConfig.preserveAspectRatio.split(" "),
                                        o = n[1] || "meet",
                                        l = n[0] || "xMidYMid",
                                        h = l.substr(0, 4),
                                        c = l.substr(4);
                                    (s = i / r),
                                        ((a = this.transformCanvas.w / this.transformCanvas.h) > s && "meet" === o) || (a < s && "slice" === o)
                                            ? ((this.transformCanvas.sx = i / (this.transformCanvas.w / this.renderConfig.dpr)), (this.transformCanvas.sy = i / (this.transformCanvas.w / this.renderConfig.dpr)))
                                            : ((this.transformCanvas.sx = r / (this.transformCanvas.h / this.renderConfig.dpr)), (this.transformCanvas.sy = r / (this.transformCanvas.h / this.renderConfig.dpr))),
                                        (this.transformCanvas.tx =
                                            "xMid" === h && ((a < s && "meet" === o) || (a > s && "slice" === o))
                                                ? ((i - this.transformCanvas.w * (r / this.transformCanvas.h)) / 2) * this.renderConfig.dpr
                                                : "xMax" === h && ((a < s && "meet" === o) || (a > s && "slice" === o))
                                                ? (i - this.transformCanvas.w * (r / this.transformCanvas.h)) * this.renderConfig.dpr
                                                : 0),
                                        (this.transformCanvas.ty =
                                            "YMid" === c && ((a > s && "meet" === o) || (a < s && "slice" === o))
                                                ? ((r - this.transformCanvas.h * (i / this.transformCanvas.w)) / 2) * this.renderConfig.dpr
                                                : "YMax" === c && ((a > s && "meet" === o) || (a < s && "slice" === o))
                                                ? (r - this.transformCanvas.h * (i / this.transformCanvas.w)) * this.renderConfig.dpr
                                                : 0);
                                } else
                                    "none" === this.renderConfig.preserveAspectRatio
                                        ? ((this.transformCanvas.sx = i / (this.transformCanvas.w / this.renderConfig.dpr)),
                                          (this.transformCanvas.sy = r / (this.transformCanvas.h / this.renderConfig.dpr)),
                                          (this.transformCanvas.tx = 0),
                                          (this.transformCanvas.ty = 0))
                                        : ((this.transformCanvas.sx = this.renderConfig.dpr), (this.transformCanvas.sy = this.renderConfig.dpr), (this.transformCanvas.tx = 0), (this.transformCanvas.ty = 0));
                                (this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1]),
                                    this.ctxTransform(this.transformCanvas.props),
                                    this.canvasContext.beginPath(),
                                    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h),
                                    this.canvasContext.closePath(),
                                    this.canvasContext.clip(),
                                    this.renderFrame(this.renderedFrame, !0);
                            }),
                            (CanvasRendererBase.prototype.destroy = function () {
                                var t;
                                for (this.renderConfig.clearCanvas && this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), t = (this.layers ? this.layers.length : 0) - 1; t >= 0; t -= 1)
                                    this.elements[t] && this.elements[t].destroy && this.elements[t].destroy();
                                (this.elements.length = 0), (this.globalData.canvasContext = null), (this.animationItem.container = null), (this.destroyed = !0);
                            }),
                            (CanvasRendererBase.prototype.renderFrame = function (t, e) {
                                if ((this.renderedFrame !== t || !0 !== this.renderConfig.clearCanvas || e) && !this.destroyed && -1 !== t) {
                                    var i;
                                    (this.renderedFrame = t),
                                        (this.globalData.frameNum = t - this.animationItem._isFirstFrame),
                                        (this.globalData.frameId += 1),
                                        (this.globalData._mdf = !this.renderConfig.clearCanvas || e),
                                        (this.globalData.projectInterface.currentFrame = t);
                                    var r = this.layers.length;
                                    for (this.completeLayers || this.checkLayers(t), i = r - 1; i >= 0; i -= 1) (this.completeLayers || this.elements[i]) && this.elements[i].prepareFrame(t - this.layers[i].st);
                                    if (this.globalData._mdf) {
                                        for (!0 === this.renderConfig.clearCanvas ? this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h) : this.save(), i = r - 1; i >= 0; i -= 1)
                                            (this.completeLayers || this.elements[i]) && this.elements[i].renderFrame();
                                        !0 !== this.renderConfig.clearCanvas && this.restore();
                                    }
                                }
                            }),
                            (CanvasRendererBase.prototype.buildItem = function (t) {
                                var e = this.elements;
                                if (!e[t] && 99 !== this.layers[t].ty) {
                                    var i = this.createItem(this.layers[t], this, this.globalData);
                                    (e[t] = i), i.initExpressions();
                                }
                            }),
                            (CanvasRendererBase.prototype.checkPendingElements = function () {
                                for (; this.pendingElements.length; ) this.pendingElements.pop().checkParenting();
                            }),
                            (CanvasRendererBase.prototype.hide = function () {
                                this.animationItem.container.style.display = "none";
                            }),
                            (CanvasRendererBase.prototype.show = function () {
                                this.animationItem.container.style.display = "block";
                            }),
                            (CVContextData.prototype.duplicate = function () {
                                var t = 2 * this._length,
                                    e = 0;
                                for (e = this._length; e < t; e += 1) this.stack[e] = new CanvasContext();
                                this._length = t;
                            }),
                            (CVContextData.prototype.reset = function () {
                                (this.cArrPos = 0), this.cTr.reset(), (this.stack[this.cArrPos].opacity = 1);
                            }),
                            (CVContextData.prototype.restore = function (t) {
                                this.cArrPos -= 1;
                                var e,
                                    i = this.stack[this.cArrPos],
                                    r = i.transform,
                                    s = this.cTr.props;
                                for (e = 0; e < 16; e += 1) s[e] = r[e];
                                if (t) {
                                    this.nativeContext.restore();
                                    var a = this.stack[this.cArrPos + 1];
                                    (this.appliedFillStyle = a.fillStyle),
                                        (this.appliedStrokeStyle = a.strokeStyle),
                                        (this.appliedLineWidth = a.lineWidth),
                                        (this.appliedLineCap = a.lineCap),
                                        (this.appliedLineJoin = a.lineJoin),
                                        (this.appliedMiterLimit = a.miterLimit);
                                }
                                this.nativeContext.setTransform(r[0], r[1], r[4], r[5], r[12], r[13]),
                                    (t || (-1 !== i.opacity && this.currentOpacity !== i.opacity)) && ((this.nativeContext.globalAlpha = i.opacity), (this.currentOpacity = i.opacity)),
                                    (this.currentFillStyle = i.fillStyle),
                                    (this.currentStrokeStyle = i.strokeStyle),
                                    (this.currentLineWidth = i.lineWidth),
                                    (this.currentLineCap = i.lineCap),
                                    (this.currentLineJoin = i.lineJoin),
                                    (this.currentMiterLimit = i.miterLimit);
                            }),
                            (CVContextData.prototype.save = function (t) {
                                t && this.nativeContext.save();
                                var e = this.cTr.props;
                                this._length <= this.cArrPos && this.duplicate();
                                var i,
                                    r = this.stack[this.cArrPos];
                                for (i = 0; i < 16; i += 1) r.transform[i] = e[i];
                                this.cArrPos += 1;
                                var s = this.stack[this.cArrPos];
                                (s.opacity = r.opacity), (s.fillStyle = r.fillStyle), (s.strokeStyle = r.strokeStyle), (s.lineWidth = r.lineWidth), (s.lineCap = r.lineCap), (s.lineJoin = r.lineJoin), (s.miterLimit = r.miterLimit);
                            }),
                            (CVContextData.prototype.setOpacity = function (t) {
                                this.stack[this.cArrPos].opacity = t;
                            }),
                            (CVContextData.prototype.setContext = function (t) {
                                this.nativeContext = t;
                            }),
                            (CVContextData.prototype.fillStyle = function (t) {
                                this.stack[this.cArrPos].fillStyle !== t && ((this.currentFillStyle = t), (this.stack[this.cArrPos].fillStyle = t));
                            }),
                            (CVContextData.prototype.strokeStyle = function (t) {
                                this.stack[this.cArrPos].strokeStyle !== t && ((this.currentStrokeStyle = t), (this.stack[this.cArrPos].strokeStyle = t));
                            }),
                            (CVContextData.prototype.lineWidth = function (t) {
                                this.stack[this.cArrPos].lineWidth !== t && ((this.currentLineWidth = t), (this.stack[this.cArrPos].lineWidth = t));
                            }),
                            (CVContextData.prototype.lineCap = function (t) {
                                this.stack[this.cArrPos].lineCap !== t && ((this.currentLineCap = t), (this.stack[this.cArrPos].lineCap = t));
                            }),
                            (CVContextData.prototype.lineJoin = function (t) {
                                this.stack[this.cArrPos].lineJoin !== t && ((this.currentLineJoin = t), (this.stack[this.cArrPos].lineJoin = t));
                            }),
                            (CVContextData.prototype.miterLimit = function (t) {
                                this.stack[this.cArrPos].miterLimit !== t && ((this.currentMiterLimit = t), (this.stack[this.cArrPos].miterLimit = t));
                            }),
                            (CVContextData.prototype.transform = function (t) {
                                this.transformMat.cloneFromProps(t);
                                var e = this.cTr;
                                this.transformMat.multiply(e), e.cloneFromProps(this.transformMat.props);
                                var i = e.props;
                                this.nativeContext.setTransform(i[0], i[1], i[4], i[5], i[12], i[13]);
                            }),
                            (CVContextData.prototype.opacity = function (t) {
                                var e = this.stack[this.cArrPos].opacity;
                                (e *= t < 0 ? 0 : t), this.stack[this.cArrPos].opacity !== e && (this.currentOpacity !== t && ((this.nativeContext.globalAlpha = t), (this.currentOpacity = t)), (this.stack[this.cArrPos].opacity = e));
                            }),
                            (CVContextData.prototype.fill = function (t) {
                                this.appliedFillStyle !== this.currentFillStyle && ((this.appliedFillStyle = this.currentFillStyle), (this.nativeContext.fillStyle = this.appliedFillStyle)), this.nativeContext.fill(t);
                            }),
                            (CVContextData.prototype.fillRect = function (t, e, i, r) {
                                this.appliedFillStyle !== this.currentFillStyle && ((this.appliedFillStyle = this.currentFillStyle), (this.nativeContext.fillStyle = this.appliedFillStyle)), this.nativeContext.fillRect(t, e, i, r);
                            }),
                            (CVContextData.prototype.stroke = function () {
                                this.appliedStrokeStyle !== this.currentStrokeStyle && ((this.appliedStrokeStyle = this.currentStrokeStyle), (this.nativeContext.strokeStyle = this.appliedStrokeStyle)),
                                    this.appliedLineWidth !== this.currentLineWidth && ((this.appliedLineWidth = this.currentLineWidth), (this.nativeContext.lineWidth = this.appliedLineWidth)),
                                    this.appliedLineCap !== this.currentLineCap && ((this.appliedLineCap = this.currentLineCap), (this.nativeContext.lineCap = this.appliedLineCap)),
                                    this.appliedLineJoin !== this.currentLineJoin && ((this.appliedLineJoin = this.currentLineJoin), (this.nativeContext.lineJoin = this.appliedLineJoin)),
                                    this.appliedMiterLimit !== this.currentMiterLimit && ((this.appliedMiterLimit = this.currentMiterLimit), (this.nativeContext.miterLimit = this.appliedMiterLimit)),
                                    this.nativeContext.stroke();
                            }),
                            extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement),
                            (CVCompElement.prototype.renderInnerContent = function () {
                                var t,
                                    e = this.canvasContext;
                                for (e.beginPath(), e.moveTo(0, 0), e.lineTo(this.data.w, 0), e.lineTo(this.data.w, this.data.h), e.lineTo(0, this.data.h), e.lineTo(0, 0), e.clip(), t = this.layers.length - 1; t >= 0; t -= 1)
                                    (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame();
                            }),
                            (CVCompElement.prototype.destroy = function () {
                                var t;
                                for (t = this.layers.length - 1; t >= 0; t -= 1) this.elements[t] && this.elements[t].destroy();
                                (this.layers = null), (this.elements = null);
                            }),
                            (CVCompElement.prototype.createComp = function (t) {
                                return new CVCompElement(t, this.globalData, this);
                            }),
                            extendPrototype([CanvasRendererBase], CanvasRenderer),
                            (CanvasRenderer.prototype.createComp = function (t) {
                                return new CVCompElement(t, this.globalData, this);
                            }),
                            (HBaseElement.prototype = {
                                checkBlendMode: function () {},
                                initRendererElement: function () {
                                    (this.baseElement = createTag(this.data.tg || "div")),
                                        this.data.hasMask
                                            ? ((this.svgElement = createNS("svg")),
                                              (this.layerElement = createNS("g")),
                                              (this.maskedElement = this.layerElement),
                                              this.svgElement.appendChild(this.layerElement),
                                              this.baseElement.appendChild(this.svgElement))
                                            : (this.layerElement = this.baseElement),
                                        styleDiv(this.baseElement);
                                },
                                createContainerElements: function () {
                                    (this.renderableEffectsManager = new CVEffects(this)),
                                        (this.transformedElement = this.baseElement),
                                        (this.maskedElement = this.layerElement),
                                        this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
                                        this.data.cl && this.layerElement.setAttribute("class", this.data.cl),
                                        0 !== this.data.bm && this.setBlendMode();
                                },
                                renderElement: function () {
                                    var t = this.transformedElement ? this.transformedElement.style : {};
                                    if (this.finalTransform._matMdf) {
                                        var e = this.finalTransform.mat.toCSS();
                                        (t.transform = e), (t.webkitTransform = e);
                                    }
                                    this.finalTransform._opMdf && (t.opacity = this.finalTransform.mProp.o.v);
                                },
                                renderFrame: function () {
                                    this.data.hd || this.hidden || (this.renderTransform(), this.renderRenderable(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = !1));
                                },
                                destroy: function () {
                                    (this.layerElement = null), (this.transformedElement = null), this.matteElement && (this.matteElement = null), this.maskManager && (this.maskManager.destroy(), (this.maskManager = null));
                                },
                                createRenderableComponents: function () {
                                    this.maskManager = new MaskElement(this.data, this, this.globalData);
                                },
                                addEffects: function () {},
                                setMatte: function () {},
                            }),
                            (HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement),
                            (HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy),
                            (HBaseElement.prototype.buildElementParenting = BaseRenderer.prototype.buildElementParenting),
                            extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement),
                            (HSolidElement.prototype.createContent = function () {
                                var t;
                                this.data.hasMask
                                    ? ((t = createNS("rect")).setAttribute("width", this.data.sw),
                                      t.setAttribute("height", this.data.sh),
                                      t.setAttribute("fill", this.data.sc),
                                      this.svgElement.setAttribute("width", this.data.sw),
                                      this.svgElement.setAttribute("height", this.data.sh))
                                    : (((t = createTag("div")).style.width = this.data.sw + "px"), (t.style.height = this.data.sh + "px"), (t.style.backgroundColor = this.data.sc)),
                                    this.layerElement.appendChild(t);
                            }),
                            extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement),
                            (HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent),
                            (HShapeElement.prototype.createContent = function () {
                                var t;
                                if (((this.baseElement.style.fontSize = 0), this.data.hasMask)) this.layerElement.appendChild(this.shapesContainer), (t = this.svgElement);
                                else {
                                    t = createNS("svg");
                                    var e = this.comp.data ? this.comp.data : this.globalData.compSize;
                                    t.setAttribute("width", e.w), t.setAttribute("height", e.h), t.appendChild(this.shapesContainer), this.layerElement.appendChild(t);
                                }
                                this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], !0), this.filterUniqueShapes(), (this.shapeCont = t);
                            }),
                            (HShapeElement.prototype.getTransformedPoint = function (t, e) {
                                var i,
                                    r = t.length;
                                for (i = 0; i < r; i += 1) e = t[i].mProps.v.applyToPointArray(e[0], e[1], 0);
                                return e;
                            }),
                            (HShapeElement.prototype.calculateShapeBoundingBox = function (t, e) {
                                var i,
                                    r,
                                    s,
                                    a,
                                    n,
                                    o = t.sh.v,
                                    l = t.transformers,
                                    h = o._length;
                                if (!(h <= 1)) {
                                    for (i = 0; i < h - 1; i += 1)
                                        (r = this.getTransformedPoint(l, o.v[i])),
                                            (s = this.getTransformedPoint(l, o.o[i])),
                                            (a = this.getTransformedPoint(l, o.i[i + 1])),
                                            (n = this.getTransformedPoint(l, o.v[i + 1])),
                                            this.checkBounds(r, s, a, n, e);
                                    o.c &&
                                        ((r = this.getTransformedPoint(l, o.v[i])),
                                        (s = this.getTransformedPoint(l, o.o[i])),
                                        (a = this.getTransformedPoint(l, o.i[0])),
                                        (n = this.getTransformedPoint(l, o.v[0])),
                                        this.checkBounds(r, s, a, n, e));
                                }
                            }),
                            (HShapeElement.prototype.checkBounds = function (t, e, i, r, s) {
                                this.getBoundsOfCurve(t, e, i, r);
                                var a = this.shapeBoundingBox;
                                (s.x = bmMin(a.left, s.x)), (s.xMax = bmMax(a.right, s.xMax)), (s.y = bmMin(a.top, s.y)), (s.yMax = bmMax(a.bottom, s.yMax));
                            }),
                            (HShapeElement.prototype.shapeBoundingBox = { left: 0, right: 0, top: 0, bottom: 0 }),
                            (HShapeElement.prototype.tempBoundingBox = { x: 0, xMax: 0, y: 0, yMax: 0, width: 0, height: 0 }),
                            (HShapeElement.prototype.getBoundsOfCurve = function (t, e, i, r) {
                                for (
                                    var s,
                                        a,
                                        n,
                                        o,
                                        l,
                                        h,
                                        c,
                                        d = [
                                            [t[0], r[0]],
                                            [t[1], r[1]],
                                        ],
                                        u = 0;
                                    u < 2;
                                    ++u
                                )
                                    (a = 6 * t[u] - 12 * e[u] + 6 * i[u]),
                                        (s = -3 * t[u] + 9 * e[u] - 9 * i[u] + 3 * r[u]),
                                        (n = 3 * e[u] - 3 * t[u]),
                                        (a |= 0),
                                        (n |= 0),
                                        (0 == (s |= 0) && 0 === a) ||
                                            (0 === s
                                                ? (o = -n / a) > 0 && o < 1 && d[u].push(this.calculateF(o, t, e, i, r, u))
                                                : (l = a * a - 4 * n * s) >= 0 &&
                                                  ((h = (-a + bmSqrt(l)) / (2 * s)) > 0 && h < 1 && d[u].push(this.calculateF(h, t, e, i, r, u)),
                                                  (c = (-a - bmSqrt(l)) / (2 * s)) > 0 && c < 1 && d[u].push(this.calculateF(c, t, e, i, r, u))));
                                (this.shapeBoundingBox.left = bmMin.apply(null, d[0])),
                                    (this.shapeBoundingBox.top = bmMin.apply(null, d[1])),
                                    (this.shapeBoundingBox.right = bmMax.apply(null, d[0])),
                                    (this.shapeBoundingBox.bottom = bmMax.apply(null, d[1]));
                            }),
                            (HShapeElement.prototype.calculateF = function (t, e, i, r, s, a) {
                                return bmPow(1 - t, 3) * e[a] + 3 * bmPow(1 - t, 2) * t * i[a] + 3 * (1 - t) * bmPow(t, 2) * r[a] + bmPow(t, 3) * s[a];
                            }),
                            (HShapeElement.prototype.calculateBoundingBox = function (t, e) {
                                var i,
                                    r = t.length;
                                for (i = 0; i < r; i += 1)
                                    t[i] && t[i].sh ? this.calculateShapeBoundingBox(t[i], e) : t[i] && t[i].it ? this.calculateBoundingBox(t[i].it, e) : t[i] && t[i].style && t[i].w && this.expandStrokeBoundingBox(t[i].w, e);
                            }),
                            (HShapeElement.prototype.expandStrokeBoundingBox = function (t, e) {
                                var i = 0;
                                if (t.keyframes) {
                                    for (var r = 0; r < t.keyframes.length; r += 1) {
                                        var s = t.keyframes[r].s;
                                        s > i && (i = s);
                                    }
                                    i *= t.mult;
                                } else i = t.v * t.mult;
                                (e.x -= i), (e.xMax += i), (e.y -= i), (e.yMax += i);
                            }),
                            (HShapeElement.prototype.currentBoxContains = function (t) {
                                return this.currentBBox.x <= t.x && this.currentBBox.y <= t.y && this.currentBBox.width + this.currentBBox.x >= t.x + t.width && this.currentBBox.height + this.currentBBox.y >= t.y + t.height;
                            }),
                            (HShapeElement.prototype.renderInnerContent = function () {
                                if ((this._renderShapeFrame(), !this.hidden && (this._isFirstFrame || this._mdf))) {
                                    var t = this.tempBoundingBox,
                                        e = 999999;
                                    if (
                                        ((t.x = e),
                                        (t.xMax = -e),
                                        (t.y = e),
                                        (t.yMax = -e),
                                        this.calculateBoundingBox(this.itemsData, t),
                                        (t.width = t.xMax < t.x ? 0 : t.xMax - t.x),
                                        (t.height = t.yMax < t.y ? 0 : t.yMax - t.y),
                                        this.currentBoxContains(t))
                                    )
                                        return;
                                    var i = !1;
                                    if (
                                        (this.currentBBox.w !== t.width && ((this.currentBBox.w = t.width), this.shapeCont.setAttribute("width", t.width), (i = !0)),
                                        this.currentBBox.h !== t.height && ((this.currentBBox.h = t.height), this.shapeCont.setAttribute("height", t.height), (i = !0)),
                                        i || this.currentBBox.x !== t.x || this.currentBBox.y !== t.y)
                                    ) {
                                        (this.currentBBox.w = t.width),
                                            (this.currentBBox.h = t.height),
                                            (this.currentBBox.x = t.x),
                                            (this.currentBBox.y = t.y),
                                            this.shapeCont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h);
                                        var r = this.shapeCont.style,
                                            s = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                                        (r.transform = s), (r.webkitTransform = s);
                                    }
                                }
                            }),
                            extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement),
                            (HTextElement.prototype.createContent = function () {
                                if (((this.isMasked = this.checkMasks()), this.isMasked)) {
                                    (this.renderType = "svg"), (this.compW = this.comp.data.w), (this.compH = this.comp.data.h), this.svgElement.setAttribute("width", this.compW), this.svgElement.setAttribute("height", this.compH);
                                    var t = createNS("g");
                                    this.maskedElement.appendChild(t), (this.innerElem = t);
                                } else (this.renderType = "html"), (this.innerElem = this.layerElement);
                                this.checkParenting();
                            }),
                            (HTextElement.prototype.buildNewText = function () {
                                var t = this.textProperty.currentData;
                                this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
                                var e = this.innerElem.style,
                                    i = t.fc ? this.buildColor(t.fc) : "rgba(0,0,0,0)";
                                (e.fill = i), (e.color = i), t.sc && ((e.stroke = this.buildColor(t.sc)), (e.strokeWidth = t.sw + "px"));
                                var r,
                                    s,
                                    a = this.globalData.fontManager.getFontByName(t.f);
                                if (!this.globalData.fontManager.chars)
                                    if (((e.fontSize = t.finalSize + "px"), (e.lineHeight = t.finalSize + "px"), a.fClass)) this.innerElem.className = a.fClass;
                                    else {
                                        e.fontFamily = a.fFamily;
                                        var n = t.fWeight,
                                            o = t.fStyle;
                                        (e.fontStyle = o), (e.fontWeight = n);
                                    }
                                var l,
                                    h,
                                    c,
                                    d = t.l;
                                s = d.length;
                                var u,
                                    p = this.mHelper,
                                    m = "",
                                    f = 0;
                                for (r = 0; r < s; r += 1) {
                                    if (
                                        (this.globalData.fontManager.chars
                                            ? (this.textPaths[f]
                                                  ? (l = this.textPaths[f])
                                                  : ((l = createNS("path")).setAttribute("stroke-linecap", lineCapEnum[1]), l.setAttribute("stroke-linejoin", lineJoinEnum[2]), l.setAttribute("stroke-miterlimit", "4")),
                                              this.isMasked || (this.textSpans[f] ? (c = (h = this.textSpans[f]).children[0]) : (((h = createTag("div")).style.lineHeight = 0), (c = createNS("svg")).appendChild(l), styleDiv(h))))
                                            : this.isMasked
                                            ? (l = this.textPaths[f] ? this.textPaths[f] : createNS("text"))
                                            : this.textSpans[f]
                                            ? ((h = this.textSpans[f]), (l = this.textPaths[f]))
                                            : (styleDiv((h = createTag("span"))), styleDiv((l = createTag("span"))), h.appendChild(l)),
                                        this.globalData.fontManager.chars)
                                    ) {
                                        var g,
                                            v = this.globalData.fontManager.getCharData(t.finalText[r], a.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily);
                                        if (
                                            ((g = v ? v.data : null),
                                            p.reset(),
                                            g && g.shapes && g.shapes.length && ((u = g.shapes[0].it), p.scale(t.finalSize / 100, t.finalSize / 100), (m = this.createPathShape(p, u)), l.setAttribute("d", m)),
                                            this.isMasked)
                                        )
                                            this.innerElem.appendChild(l);
                                        else {
                                            if ((this.innerElem.appendChild(h), g && g.shapes)) {
                                                document.body.appendChild(c);
                                                var b = c.getBBox();
                                                c.setAttribute("width", b.width + 2), c.setAttribute("height", b.height + 2), c.setAttribute("viewBox", b.x - 1 + " " + (b.y - 1) + " " + (b.width + 2) + " " + (b.height + 2));
                                                var y = c.style,
                                                    w = "translate(" + (b.x - 1) + "px," + (b.y - 1) + "px)";
                                                (y.transform = w), (y.webkitTransform = w), (d[r].yOffset = b.y - 1);
                                            } else c.setAttribute("width", 1), c.setAttribute("height", 1);
                                            h.appendChild(c);
                                        }
                                    } else if (((l.textContent = d[r].val), l.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"), this.isMasked)) this.innerElem.appendChild(l);
                                    else {
                                        this.innerElem.appendChild(h);
                                        var x = l.style,
                                            E = "translate3d(0," + -t.finalSize / 1.2 + "px,0)";
                                        (x.transform = E), (x.webkitTransform = E);
                                    }
                                    this.isMasked ? (this.textSpans[f] = l) : (this.textSpans[f] = h), (this.textSpans[f].style.display = "block"), (this.textPaths[f] = l), (f += 1);
                                }
                                for (; f < this.textSpans.length; ) (this.textSpans[f].style.display = "none"), (f += 1);
                            }),
                            (HTextElement.prototype.renderInnerContent = function () {
                                var t;
                                if ((this.validateText(), this.data.singleShape)) {
                                    if (!this._isFirstFrame && !this.lettersChangedFlag) return;
                                    if (this.isMasked && this.finalTransform._matMdf) {
                                        this.svgElement.setAttribute("viewBox", -this.finalTransform.mProp.p.v[0] + " " + -this.finalTransform.mProp.p.v[1] + " " + this.compW + " " + this.compH), (t = this.svgElement.style);
                                        var e = "translate(" + -this.finalTransform.mProp.p.v[0] + "px," + -this.finalTransform.mProp.p.v[1] + "px)";
                                        (t.transform = e), (t.webkitTransform = e);
                                    }
                                }
                                if ((this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag)) {
                                    var i,
                                        r,
                                        s,
                                        a,
                                        n,
                                        o = 0,
                                        l = this.textAnimator.renderedLetters,
                                        h = this.textProperty.currentData.l;
                                    for (r = h.length, i = 0; i < r; i += 1)
                                        h[i].n
                                            ? (o += 1)
                                            : ((a = this.textSpans[i]),
                                              (n = this.textPaths[i]),
                                              (s = l[o]),
                                              (o += 1),
                                              s._mdf.m && (this.isMasked ? a.setAttribute("transform", s.m) : ((a.style.webkitTransform = s.m), (a.style.transform = s.m))),
                                              (a.style.opacity = s.o),
                                              s.sw && s._mdf.sw && n.setAttribute("stroke-width", s.sw),
                                              s.sc && s._mdf.sc && n.setAttribute("stroke", s.sc),
                                              s.fc && s._mdf.fc && (n.setAttribute("fill", s.fc), (n.style.color = s.fc)));
                                    if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
                                        var c = this.innerElem.getBBox();
                                        if (
                                            (this.currentBBox.w !== c.width && ((this.currentBBox.w = c.width), this.svgElement.setAttribute("width", c.width)),
                                            this.currentBBox.h !== c.height && ((this.currentBBox.h = c.height), this.svgElement.setAttribute("height", c.height)),
                                            this.currentBBox.w !== c.width + 2 || this.currentBBox.h !== c.height + 2 || this.currentBBox.x !== c.x - 1 || this.currentBBox.y !== c.y - 1)
                                        ) {
                                            (this.currentBBox.w = c.width + 2),
                                                (this.currentBBox.h = c.height + 2),
                                                (this.currentBBox.x = c.x - 1),
                                                (this.currentBBox.y = c.y - 1),
                                                this.svgElement.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h),
                                                (t = this.svgElement.style);
                                            var d = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                                            (t.transform = d), (t.webkitTransform = d);
                                        }
                                    }
                                }
                            }),
                            extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement),
                            (HCameraElement.prototype.setup = function () {
                                var t,
                                    e,
                                    i,
                                    r,
                                    s = this.comp.threeDElements.length;
                                for (t = 0; t < s; t += 1)
                                    if ("3d" === (e = this.comp.threeDElements[t]).type) {
                                        (i = e.perspectiveElem.style), (r = e.container.style);
                                        var a = this.pe.v + "px",
                                            n = "0px 0px 0px",
                                            o = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                                        (i.perspective = a), (i.webkitPerspective = a), (r.transformOrigin = n), (r.mozTransformOrigin = n), (r.webkitTransformOrigin = n), (i.transform = o), (i.webkitTransform = o);
                                    }
                            }),
                            (HCameraElement.prototype.createElements = function () {}),
                            (HCameraElement.prototype.hide = function () {}),
                            (HCameraElement.prototype.renderFrame = function () {
                                var t,
                                    e,
                                    i = this._isFirstFrame;
                                if (this.hierarchy) for (e = this.hierarchy.length, t = 0; t < e; t += 1) i = this.hierarchy[t].finalTransform.mProp._mdf || i;
                                if (i || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {
                                    if ((this.mat.reset(), this.hierarchy))
                                        for (t = e = this.hierarchy.length - 1; t >= 0; t -= 1) {
                                            var r = this.hierarchy[t].finalTransform.mProp;
                                            this.mat.translate(-r.p.v[0], -r.p.v[1], r.p.v[2]),
                                                this.mat.rotateX(-r.or.v[0]).rotateY(-r.or.v[1]).rotateZ(r.or.v[2]),
                                                this.mat.rotateX(-r.rx.v).rotateY(-r.ry.v).rotateZ(r.rz.v),
                                                this.mat.scale(1 / r.s.v[0], 1 / r.s.v[1], 1 / r.s.v[2]),
                                                this.mat.translate(r.a.v[0], r.a.v[1], r.a.v[2]);
                                        }
                                    if ((this.p ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]) : this.mat.translate(-this.px.v, -this.py.v, this.pz.v), this.a)) {
                                        var s;
                                        s = this.p ? [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]] : [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
                                        var a = Math.sqrt(Math.pow(s[0], 2) + Math.pow(s[1], 2) + Math.pow(s[2], 2)),
                                            n = [s[0] / a, s[1] / a, s[2] / a],
                                            o = Math.sqrt(n[2] * n[2] + n[0] * n[0]),
                                            l = Math.atan2(n[1], o),
                                            h = Math.atan2(n[0], -n[2]);
                                        this.mat.rotateY(h).rotateX(-l);
                                    }
                                    this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v),
                                        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]),
                                        this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0),
                                        this.mat.translate(0, 0, this.pe.v);
                                    var c = !this._prevMat.equals(this.mat);
                                    if ((c || this.pe._mdf) && this.comp.threeDElements) {
                                        var d, u, p;
                                        for (e = this.comp.threeDElements.length, t = 0; t < e; t += 1)
                                            if ("3d" === (d = this.comp.threeDElements[t]).type) {
                                                if (c) {
                                                    var m = this.mat.toCSS();
                                                    ((p = d.container.style).transform = m), (p.webkitTransform = m);
                                                }
                                                this.pe._mdf && (((u = d.perspectiveElem.style).perspective = this.pe.v + "px"), (u.webkitPerspective = this.pe.v + "px"));
                                            }
                                        this.mat.clone(this._prevMat);
                                    }
                                }
                                this._isFirstFrame = !1;
                            }),
                            (HCameraElement.prototype.prepareFrame = function (t) {
                                this.prepareProperties(t, !0);
                            }),
                            (HCameraElement.prototype.destroy = function () {}),
                            (HCameraElement.prototype.getBaseElement = function () {
                                return null;
                            }),
                            extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement),
                            (HImageElement.prototype.createContent = function () {
                                var t = this.globalData.getAssetsPath(this.assetData),
                                    e = new Image();
                                this.data.hasMask
                                    ? ((this.imageElem = createNS("image")),
                                      this.imageElem.setAttribute("width", this.assetData.w + "px"),
                                      this.imageElem.setAttribute("height", this.assetData.h + "px"),
                                      this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t),
                                      this.layerElement.appendChild(this.imageElem),
                                      this.baseElement.setAttribute("width", this.assetData.w),
                                      this.baseElement.setAttribute("height", this.assetData.h))
                                    : this.layerElement.appendChild(e),
                                    (e.crossOrigin = "anonymous"),
                                    (e.src = t),
                                    this.data.ln && this.baseElement.setAttribute("id", this.data.ln);
                            }),
                            extendPrototype([BaseRenderer], HybridRendererBase),
                            (HybridRendererBase.prototype.buildItem = SVGRenderer.prototype.buildItem),
                            (HybridRendererBase.prototype.checkPendingElements = function () {
                                for (; this.pendingElements.length; ) this.pendingElements.pop().checkParenting();
                            }),
                            (HybridRendererBase.prototype.appendElementInPos = function (t, e) {
                                var i = t.getBaseElement();
                                if (i) {
                                    var r = this.layers[e];
                                    if (r.ddd && this.supports3d) this.addTo3dContainer(i, e);
                                    else if (this.threeDElements) this.addTo3dContainer(i, e);
                                    else {
                                        for (var s, a, n = 0; n < e; )
                                            this.elements[n] && !0 !== this.elements[n] && this.elements[n].getBaseElement && ((a = this.elements[n]), (s = (this.layers[n].ddd ? this.getThreeDContainerByPos(n) : a.getBaseElement()) || s)),
                                                (n += 1);
                                        s ? (r.ddd && this.supports3d) || this.layerElement.insertBefore(i, s) : (r.ddd && this.supports3d) || this.layerElement.appendChild(i);
                                    }
                                }
                            }),
                            (HybridRendererBase.prototype.createShape = function (t) {
                                return this.supports3d ? new HShapeElement(t, this.globalData, this) : new SVGShapeElement(t, this.globalData, this);
                            }),
                            (HybridRendererBase.prototype.createText = function (t) {
                                return this.supports3d ? new HTextElement(t, this.globalData, this) : new SVGTextLottieElement(t, this.globalData, this);
                            }),
                            (HybridRendererBase.prototype.createCamera = function (t) {
                                return (this.camera = new HCameraElement(t, this.globalData, this)), this.camera;
                            }),
                            (HybridRendererBase.prototype.createImage = function (t) {
                                return this.supports3d ? new HImageElement(t, this.globalData, this) : new IImageElement(t, this.globalData, this);
                            }),
                            (HybridRendererBase.prototype.createSolid = function (t) {
                                return this.supports3d ? new HSolidElement(t, this.globalData, this) : new ISolidElement(t, this.globalData, this);
                            }),
                            (HybridRendererBase.prototype.createNull = SVGRenderer.prototype.createNull),
                            (HybridRendererBase.prototype.getThreeDContainerByPos = function (t) {
                                for (var e = 0, i = this.threeDElements.length; e < i; ) {
                                    if (this.threeDElements[e].startPos <= t && this.threeDElements[e].endPos >= t) return this.threeDElements[e].perspectiveElem;
                                    e += 1;
                                }
                                return null;
                            }),
                            (HybridRendererBase.prototype.createThreeDContainer = function (t, e) {
                                var i,
                                    r,
                                    s = createTag("div");
                                styleDiv(s);
                                var a = createTag("div");
                                if ((styleDiv(a), "3d" === e)) {
                                    ((i = s.style).width = this.globalData.compSize.w + "px"), (i.height = this.globalData.compSize.h + "px");
                                    var n = "50% 50%";
                                    (i.webkitTransformOrigin = n), (i.mozTransformOrigin = n), (i.transformOrigin = n);
                                    var o = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                                    ((r = a.style).transform = o), (r.webkitTransform = o);
                                }
                                s.appendChild(a);
                                var l = { container: a, perspectiveElem: s, startPos: t, endPos: t, type: e };
                                return this.threeDElements.push(l), l;
                            }),
                            (HybridRendererBase.prototype.build3dContainers = function () {
                                var t,
                                    e,
                                    i = this.layers.length,
                                    r = "";
                                for (t = 0; t < i; t += 1)
                                    this.layers[t].ddd && 3 !== this.layers[t].ty
                                        ? ("3d" !== r && ((r = "3d"), (e = this.createThreeDContainer(t, "3d"))), (e.endPos = Math.max(e.endPos, t)))
                                        : ("2d" !== r && ((r = "2d"), (e = this.createThreeDContainer(t, "2d"))), (e.endPos = Math.max(e.endPos, t)));
                                for (t = (i = this.threeDElements.length) - 1; t >= 0; t -= 1) this.resizerElem.appendChild(this.threeDElements[t].perspectiveElem);
                            }),
                            (HybridRendererBase.prototype.addTo3dContainer = function (t, e) {
                                for (var i = 0, r = this.threeDElements.length; i < r; ) {
                                    if (e <= this.threeDElements[i].endPos) {
                                        for (var s, a = this.threeDElements[i].startPos; a < e; ) this.elements[a] && this.elements[a].getBaseElement && (s = this.elements[a].getBaseElement()), (a += 1);
                                        s ? this.threeDElements[i].container.insertBefore(t, s) : this.threeDElements[i].container.appendChild(t);
                                        break;
                                    }
                                    i += 1;
                                }
                            }),
                            (HybridRendererBase.prototype.configAnimation = function (t) {
                                var e = createTag("div"),
                                    i = this.animationItem.wrapper,
                                    r = e.style;
                                (r.width = t.w + "px"),
                                    (r.height = t.h + "px"),
                                    (this.resizerElem = e),
                                    styleDiv(e),
                                    (r.transformStyle = "flat"),
                                    (r.mozTransformStyle = "flat"),
                                    (r.webkitTransformStyle = "flat"),
                                    this.renderConfig.className && e.setAttribute("class", this.renderConfig.className),
                                    i.appendChild(e),
                                    (r.overflow = "hidden");
                                var s = createNS("svg");
                                s.setAttribute("width", "1"), s.setAttribute("height", "1"), styleDiv(s), this.resizerElem.appendChild(s);
                                var a = createNS("defs");
                                s.appendChild(a),
                                    (this.data = t),
                                    this.setupGlobalData(t, s),
                                    (this.globalData.defs = a),
                                    (this.layers = t.layers),
                                    (this.layerElement = this.resizerElem),
                                    this.build3dContainers(),
                                    this.updateContainerSize();
                            }),
                            (HybridRendererBase.prototype.destroy = function () {
                                var t;
                                this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), (this.animationItem.container = null), (this.globalData.defs = null);
                                var e = this.layers ? this.layers.length : 0;
                                for (t = 0; t < e; t += 1) this.elements[t] && this.elements[t].destroy && this.elements[t].destroy();
                                (this.elements.length = 0), (this.destroyed = !0), (this.animationItem = null);
                            }),
                            (HybridRendererBase.prototype.updateContainerSize = function () {
                                var t,
                                    e,
                                    i,
                                    r,
                                    s = this.animationItem.wrapper.offsetWidth,
                                    a = this.animationItem.wrapper.offsetHeight,
                                    n = s / a;
                                this.globalData.compSize.w / this.globalData.compSize.h > n
                                    ? ((t = s / this.globalData.compSize.w), (e = s / this.globalData.compSize.w), (i = 0), (r = (a - this.globalData.compSize.h * (s / this.globalData.compSize.w)) / 2))
                                    : ((t = a / this.globalData.compSize.h), (e = a / this.globalData.compSize.h), (i = (s - this.globalData.compSize.w * (a / this.globalData.compSize.h)) / 2), (r = 0));
                                var o = this.resizerElem.style;
                                (o.webkitTransform = "matrix3d(" + t + ",0,0,0,0," + e + ",0,0,0,0,1,0," + i + "," + r + ",0,1)"), (o.transform = o.webkitTransform);
                            }),
                            (HybridRendererBase.prototype.renderFrame = SVGRenderer.prototype.renderFrame),
                            (HybridRendererBase.prototype.hide = function () {
                                this.resizerElem.style.display = "none";
                            }),
                            (HybridRendererBase.prototype.show = function () {
                                this.resizerElem.style.display = "block";
                            }),
                            (HybridRendererBase.prototype.initItems = function () {
                                if ((this.buildAllItems(), this.camera)) this.camera.setup();
                                else {
                                    var t,
                                        e = this.globalData.compSize.w,
                                        i = this.globalData.compSize.h,
                                        r = this.threeDElements.length;
                                    for (t = 0; t < r; t += 1) {
                                        var s = this.threeDElements[t].perspectiveElem.style;
                                        (s.webkitPerspective = Math.sqrt(Math.pow(e, 2) + Math.pow(i, 2)) + "px"), (s.perspective = s.webkitPerspective);
                                    }
                                }
                            }),
                            (HybridRendererBase.prototype.searchExtraCompositions = function (t) {
                                var e,
                                    i = t.length,
                                    r = createTag("div");
                                for (e = 0; e < i; e += 1)
                                    if (t[e].xt) {
                                        var s = this.createComp(t[e], r, this.globalData.comp, null);
                                        s.initExpressions(), this.globalData.projectInterface.registerComposition(s);
                                    }
                            }),
                            extendPrototype([HybridRendererBase, ICompElement, HBaseElement], HCompElement),
                            (HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements),
                            (HCompElement.prototype.createContainerElements = function () {
                                this._createBaseContainerElements(),
                                    this.data.hasMask
                                        ? (this.svgElement.setAttribute("width", this.data.w), this.svgElement.setAttribute("height", this.data.h), (this.transformedElement = this.baseElement))
                                        : (this.transformedElement = this.layerElement);
                            }),
                            (HCompElement.prototype.addTo3dContainer = function (t, e) {
                                for (var i, r = 0; r < e; ) this.elements[r] && this.elements[r].getBaseElement && (i = this.elements[r].getBaseElement()), (r += 1);
                                i ? this.layerElement.insertBefore(t, i) : this.layerElement.appendChild(t);
                            }),
                            (HCompElement.prototype.createComp = function (t) {
                                return this.supports3d ? new HCompElement(t, this.globalData, this) : new SVGCompElement(t, this.globalData, this);
                            }),
                            extendPrototype([HybridRendererBase], HybridRenderer),
                            (HybridRenderer.prototype.createComp = function (t) {
                                return this.supports3d ? new HCompElement(t, this.globalData, this) : new SVGCompElement(t, this.globalData, this);
                            });
                        var CompExpressionInterface = function (t) {
                            function e(e) {
                                for (var i = 0, r = t.layers.length; i < r; ) {
                                    if (t.layers[i].nm === e || t.layers[i].ind === e) return t.elements[i].layerInterface;
                                    i += 1;
                                }
                                return null;
                            }
                            return (
                                Object.defineProperty(e, "_name", { value: t.data.nm }),
                                (e.layer = e),
                                (e.pixelAspect = 1),
                                (e.height = t.data.h || t.globalData.compSize.h),
                                (e.width = t.data.w || t.globalData.compSize.w),
                                (e.pixelAspect = 1),
                                (e.frameDuration = 1 / t.globalData.frameRate),
                                (e.displayStartTime = 0),
                                (e.numLayers = t.layers.length),
                                e
                            );
                        };
                        function _typeof$2(t) {
                            return (
                                (_typeof$2 =
                                    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                        ? function (t) {
                                              return typeof t;
                                          }
                                        : function (t) {
                                              return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                          }),
                                _typeof$2(t)
                            );
                        }
                        function seedRandom(t, e) {
                            var i,
                                r = this,
                                s = 256,
                                a = "random",
                                n = e.pow(s, 6),
                                o = e.pow(2, 52),
                                l = 2 * o,
                                h = s - 1;
                            function c(t) {
                                var e,
                                    i = t.length,
                                    r = this,
                                    a = 0,
                                    n = (r.i = r.j = 0),
                                    o = (r.S = []);
                                for (i || (t = [i++]); a < s; ) o[a] = a++;
                                for (a = 0; a < s; a++) (o[a] = o[(n = h & (n + t[a % i] + (e = o[a])))]), (o[n] = e);
                                r.g = function (t) {
                                    for (var e, i = 0, a = r.i, n = r.j, o = r.S; t--; ) (e = o[(a = h & (a + 1))]), (i = i * s + o[h & ((o[a] = o[(n = h & (n + e))]) + (o[n] = e))]);
                                    return (r.i = a), (r.j = n), i;
                                };
                            }
                            function d(t, e) {
                                return (e.i = t.i), (e.j = t.j), (e.S = t.S.slice()), e;
                            }
                            function u(t, e) {
                                var i,
                                    r = [],
                                    s = _typeof$2(t);
                                if (e && "object" == s)
                                    for (i in t)
                                        try {
                                            r.push(u(t[i], e - 1));
                                        } catch (t) {}
                                return r.length ? r : "string" == s ? t : t + "\0";
                            }
                            function p(t, e) {
                                for (var i, r = t + "", s = 0; s < r.length; ) e[h & s] = h & ((i ^= 19 * e[h & s]) + r.charCodeAt(s++));
                                return m(e);
                            }
                            function m(t) {
                                return String.fromCharCode.apply(0, t);
                            }
                            (e["seed" + a] = function (h, f, g) {
                                var v = [],
                                    b = p(
                                        u(
                                            (f = !0 === f ? { entropy: !0 } : f || {}).entropy
                                                ? [h, m(t)]
                                                : null === h
                                                ? (function () {
                                                      try {
                                                          if (i) return m(i.randomBytes(s));
                                                          var e = new Uint8Array(s);
                                                          return (r.crypto || r.msCrypto).getRandomValues(e), m(e);
                                                      } catch (e) {
                                                          var a = r.navigator,
                                                              n = a && a.plugins;
                                                          return [+new Date(), r, n, r.screen, m(t)];
                                                      }
                                                  })()
                                                : h,
                                            3
                                        ),
                                        v
                                    ),
                                    y = new c(v),
                                    w = function () {
                                        for (var t = y.g(6), e = n, i = 0; t < o; ) (t = (t + i) * s), (e *= s), (i = y.g(1));
                                        for (; t >= l; ) (t /= 2), (e /= 2), (i >>>= 1);
                                        return (t + i) / e;
                                    };
                                return (
                                    (w.int32 = function () {
                                        return 0 | y.g(4);
                                    }),
                                    (w.quick = function () {
                                        return y.g(4) / 4294967296;
                                    }),
                                    (w.double = w),
                                    p(m(y.S), t),
                                    (
                                        f.pass ||
                                        g ||
                                        function (t, i, r, s) {
                                            return (
                                                s &&
                                                    (s.S && d(s, y),
                                                    (t.state = function () {
                                                        return d(y, {});
                                                    })),
                                                r ? ((e[a] = t), i) : t
                                            );
                                        }
                                    )(w, b, "global" in f ? f.global : this == e, f.state)
                                );
                            }),
                                p(e.random(), t);
                        }
                        function initialize$2(t) {
                            seedRandom([], t);
                        }
                        var propTypes = { SHAPE: "shape" };
                        function _typeof$1(t) {
                            return (
                                (_typeof$1 =
                                    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                        ? function (t) {
                                              return typeof t;
                                          }
                                        : function (t) {
                                              return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                          }),
                                _typeof$1(t)
                            );
                        }
                        var ExpressionManager = (function () {
                                var ob = {},
                                    Math = BMMath,
                                    window = null,
                                    document = null,
                                    XMLHttpRequest = null,
                                    fetch = null,
                                    frames = null,
                                    _lottieGlobal = {};
                                function resetFrame() {
                                    _lottieGlobal = {};
                                }
                                function $bm_isInstanceOfArray(t) {
                                    return t.constructor === Array || t.constructor === Float32Array;
                                }
                                function isNumerable(t, e) {
                                    return "number" === t || e instanceof Number || "boolean" === t || "string" === t;
                                }
                                function $bm_neg(t) {
                                    var e = _typeof$1(t);
                                    if ("number" === e || t instanceof Number || "boolean" === e) return -t;
                                    if ($bm_isInstanceOfArray(t)) {
                                        var i,
                                            r = t.length,
                                            s = [];
                                        for (i = 0; i < r; i += 1) s[i] = -t[i];
                                        return s;
                                    }
                                    return t.propType ? t.v : -t;
                                }
                                initialize$2(BMMath);
                                var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, "easeIn").get,
                                    easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, "easeOut").get,
                                    easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, "easeInOut").get;
                                function sum(t, e) {
                                    var i = _typeof$1(t),
                                        r = _typeof$1(e);
                                    if ((isNumerable(i, t) && isNumerable(r, e)) || "string" === i || "string" === r) return t + e;
                                    if ($bm_isInstanceOfArray(t) && isNumerable(r, e)) return ((t = t.slice(0))[0] += e), t;
                                    if (isNumerable(i, t) && $bm_isInstanceOfArray(e)) return ((e = e.slice(0))[0] = t + e[0]), e;
                                    if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                                        for (var s = 0, a = t.length, n = e.length, o = []; s < a || s < n; )
                                            ("number" == typeof t[s] || t[s] instanceof Number) && ("number" == typeof e[s] || e[s] instanceof Number) ? (o[s] = t[s] + e[s]) : (o[s] = void 0 === e[s] ? t[s] : t[s] || e[s]), (s += 1);
                                        return o;
                                    }
                                    return 0;
                                }
                                var add = sum;
                                function sub(t, e) {
                                    var i = _typeof$1(t),
                                        r = _typeof$1(e);
                                    if (isNumerable(i, t) && isNumerable(r, e)) return "string" === i && (t = parseInt(t, 10)), "string" === r && (e = parseInt(e, 10)), t - e;
                                    if ($bm_isInstanceOfArray(t) && isNumerable(r, e)) return ((t = t.slice(0))[0] -= e), t;
                                    if (isNumerable(i, t) && $bm_isInstanceOfArray(e)) return ((e = e.slice(0))[0] = t - e[0]), e;
                                    if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                                        for (var s = 0, a = t.length, n = e.length, o = []; s < a || s < n; )
                                            ("number" == typeof t[s] || t[s] instanceof Number) && ("number" == typeof e[s] || e[s] instanceof Number) ? (o[s] = t[s] - e[s]) : (o[s] = void 0 === e[s] ? t[s] : t[s] || e[s]), (s += 1);
                                        return o;
                                    }
                                    return 0;
                                }
                                function mul(t, e) {
                                    var i,
                                        r,
                                        s,
                                        a = _typeof$1(t),
                                        n = _typeof$1(e);
                                    if (isNumerable(a, t) && isNumerable(n, e)) return t * e;
                                    if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {
                                        for (s = t.length, i = createTypedArray("float32", s), r = 0; r < s; r += 1) i[r] = t[r] * e;
                                        return i;
                                    }
                                    if (isNumerable(a, t) && $bm_isInstanceOfArray(e)) {
                                        for (s = e.length, i = createTypedArray("float32", s), r = 0; r < s; r += 1) i[r] = t * e[r];
                                        return i;
                                    }
                                    return 0;
                                }
                                function div(t, e) {
                                    var i,
                                        r,
                                        s,
                                        a = _typeof$1(t),
                                        n = _typeof$1(e);
                                    if (isNumerable(a, t) && isNumerable(n, e)) return t / e;
                                    if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {
                                        for (s = t.length, i = createTypedArray("float32", s), r = 0; r < s; r += 1) i[r] = t[r] / e;
                                        return i;
                                    }
                                    if (isNumerable(a, t) && $bm_isInstanceOfArray(e)) {
                                        for (s = e.length, i = createTypedArray("float32", s), r = 0; r < s; r += 1) i[r] = t / e[r];
                                        return i;
                                    }
                                    return 0;
                                }
                                function mod(t, e) {
                                    return "string" == typeof t && (t = parseInt(t, 10)), "string" == typeof e && (e = parseInt(e, 10)), t % e;
                                }
                                var $bm_sum = sum,
                                    $bm_sub = sub,
                                    $bm_mul = mul,
                                    $bm_div = div,
                                    $bm_mod = mod;
                                function clamp(t, e, i) {
                                    if (e > i) {
                                        var r = i;
                                        (i = e), (e = r);
                                    }
                                    return Math.min(Math.max(t, e), i);
                                }
                                function radiansToDegrees(t) {
                                    return t / degToRads;
                                }
                                var radians_to_degrees = radiansToDegrees;
                                function degreesToRadians(t) {
                                    return t * degToRads;
                                }
                                var degrees_to_radians = radiansToDegrees,
                                    helperLengthArray = [0, 0, 0, 0, 0, 0];
                                function length(t, e) {
                                    if ("number" == typeof t || t instanceof Number) return (e = e || 0), Math.abs(t - e);
                                    var i;
                                    e || (e = helperLengthArray);
                                    var r = Math.min(t.length, e.length),
                                        s = 0;
                                    for (i = 0; i < r; i += 1) s += Math.pow(e[i] - t[i], 2);
                                    return Math.sqrt(s);
                                }
                                function normalize(t) {
                                    return div(t, length(t));
                                }
                                function rgbToHsl(t) {
                                    var e,
                                        i,
                                        r = t[0],
                                        s = t[1],
                                        a = t[2],
                                        n = Math.max(r, s, a),
                                        o = Math.min(r, s, a),
                                        l = (n + o) / 2;
                                    if (n === o) (e = 0), (i = 0);
                                    else {
                                        var h = n - o;
                                        switch (((i = l > 0.5 ? h / (2 - n - o) : h / (n + o)), n)) {
                                            case r:
                                                e = (s - a) / h + (s < a ? 6 : 0);
                                                break;
                                            case s:
                                                e = (a - r) / h + 2;
                                                break;
                                            case a:
                                                e = (r - s) / h + 4;
                                        }
                                        e /= 6;
                                    }
                                    return [e, i, l, t[3]];
                                }
                                function hue2rgb(t, e, i) {
                                    return i < 0 && (i += 1), i > 1 && (i -= 1), i < 1 / 6 ? t + 6 * (e - t) * i : i < 0.5 ? e : i < 2 / 3 ? t + (e - t) * (2 / 3 - i) * 6 : t;
                                }
                                function hslToRgb(t) {
                                    var e,
                                        i,
                                        r,
                                        s = t[0],
                                        a = t[1],
                                        n = t[2];
                                    if (0 === a) (e = n), (r = n), (i = n);
                                    else {
                                        var o = n < 0.5 ? n * (1 + a) : n + a - n * a,
                                            l = 2 * n - o;
                                        (e = hue2rgb(l, o, s + 1 / 3)), (i = hue2rgb(l, o, s)), (r = hue2rgb(l, o, s - 1 / 3));
                                    }
                                    return [e, i, r, t[3]];
                                }
                                function linear(t, e, i, r, s) {
                                    if (((void 0 !== r && void 0 !== s) || ((r = e), (s = i), (e = 0), (i = 1)), i < e)) {
                                        var a = i;
                                        (i = e), (e = a);
                                    }
                                    if (t <= e) return r;
                                    if (t >= i) return s;
                                    var n,
                                        o = i === e ? 0 : (t - e) / (i - e);
                                    if (!r.length) return r + (s - r) * o;
                                    var l = r.length,
                                        h = createTypedArray("float32", l);
                                    for (n = 0; n < l; n += 1) h[n] = r[n] + (s[n] - r[n]) * o;
                                    return h;
                                }
                                function random(t, e) {
                                    if ((void 0 === e && (void 0 === t ? ((t = 0), (e = 1)) : ((e = t), (t = void 0))), e.length)) {
                                        var i,
                                            r = e.length;
                                        t || (t = createTypedArray("float32", r));
                                        var s = createTypedArray("float32", r),
                                            a = BMMath.random();
                                        for (i = 0; i < r; i += 1) s[i] = t[i] + a * (e[i] - t[i]);
                                        return s;
                                    }
                                    return void 0 === t && (t = 0), t + BMMath.random() * (e - t);
                                }
                                function createPath(t, e, i, r) {
                                    var s,
                                        a = t.length,
                                        n = shapePool.newElement();
                                    n.setPathData(!!r, a);
                                    var o,
                                        l,
                                        h = [0, 0];
                                    for (s = 0; s < a; s += 1) (o = e && e[s] ? e[s] : h), (l = i && i[s] ? i[s] : h), n.setTripleAt(t[s][0], t[s][1], l[0] + t[s][0], l[1] + t[s][1], o[0] + t[s][0], o[1] + t[s][1], s, !0);
                                    return n;
                                }
                                function initiateExpression(elem, data, property) {
                                    function noOp(t) {
                                        return t;
                                    }
                                    if (!elem.globalData.renderConfig.runExpressions) return noOp;
                                    var val = data.x,
                                        needsVelocity = /velocity(?![\w\d])/.test(val),
                                        _needsRandom = -1 !== val.indexOf("random"),
                                        elemType = elem.data.ty,
                                        transform,
                                        $bm_transform,
                                        content,
                                        effect,
                                        thisProperty = property;
                                    (thisProperty.valueAtTime = thisProperty.getValueAtTime),
                                        Object.defineProperty(thisProperty, "value", {
                                            get: function () {
                                                return thisProperty.v;
                                            },
                                        }),
                                        (elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate),
                                        (elem.comp.displayStartTime = 0);
                                    var inPoint = elem.data.ip / elem.comp.globalData.frameRate,
                                        outPoint = elem.data.op / elem.comp.globalData.frameRate,
                                        width = elem.data.sw ? elem.data.sw : 0,
                                        height = elem.data.sh ? elem.data.sh : 0,
                                        name = elem.data.nm,
                                        loopIn,
                                        loop_in,
                                        loopOut,
                                        loop_out,
                                        smooth,
                                        toWorld,
                                        fromWorld,
                                        fromComp,
                                        toComp,
                                        fromCompToSurface,
                                        position,
                                        rotation,
                                        anchorPoint,
                                        scale,
                                        thisLayer,
                                        thisComp,
                                        mask,
                                        valueAtTime,
                                        velocityAtTime,
                                        scoped_bm_rt,
                                        expression_function = eval("[function _expression_function(){" + val + ";scoped_bm_rt=$bm_rt}]")[0],
                                        numKeys = property.kf ? data.k.length : 0,
                                        active = !this.data || !0 !== this.data.hd,
                                        wiggle = function (t, e) {
                                            var i,
                                                r,
                                                s = this.pv.length ? this.pv.length : 1,
                                                a = createTypedArray("float32", s),
                                                n = Math.floor(5 * time);
                                            for (i = 0, r = 0; i < n; ) {
                                                for (r = 0; r < s; r += 1) a[r] += -e + 2 * e * BMMath.random();
                                                i += 1;
                                            }
                                            var o = 5 * time,
                                                l = o - Math.floor(o),
                                                h = createTypedArray("float32", s);
                                            if (s > 1) {
                                                for (r = 0; r < s; r += 1) h[r] = this.pv[r] + a[r] + (-e + 2 * e * BMMath.random()) * l;
                                                return h;
                                            }
                                            return this.pv + a[0] + (-e + 2 * e * BMMath.random()) * l;
                                        }.bind(this);
                                    function loopInDuration(t, e) {
                                        return loopIn(t, e, !0);
                                    }
                                    function loopOutDuration(t, e) {
                                        return loopOut(t, e, !0);
                                    }
                                    thisProperty.loopIn && ((loopIn = thisProperty.loopIn.bind(thisProperty)), (loop_in = loopIn)),
                                        thisProperty.loopOut && ((loopOut = thisProperty.loopOut.bind(thisProperty)), (loop_out = loopOut)),
                                        thisProperty.smooth && (smooth = thisProperty.smooth.bind(thisProperty)),
                                        this.getValueAtTime && (valueAtTime = this.getValueAtTime.bind(this)),
                                        this.getVelocityAtTime && (velocityAtTime = this.getVelocityAtTime.bind(this));
                                    var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface),
                                        time,
                                        velocity,
                                        value,
                                        text,
                                        textIndex,
                                        textTotal,
                                        selectorValue;
                                    function lookAt(t, e) {
                                        var i = [e[0] - t[0], e[1] - t[1], e[2] - t[2]],
                                            r = Math.atan2(i[0], Math.sqrt(i[1] * i[1] + i[2] * i[2])) / degToRads;
                                        return [-Math.atan2(i[1], i[2]) / degToRads, r, 0];
                                    }
                                    function easeOut(t, e, i, r, s) {
                                        return applyEase(easeOutBez, t, e, i, r, s);
                                    }
                                    function easeIn(t, e, i, r, s) {
                                        return applyEase(easeInBez, t, e, i, r, s);
                                    }
                                    function ease(t, e, i, r, s) {
                                        return applyEase(easeInOutBez, t, e, i, r, s);
                                    }
                                    function applyEase(t, e, i, r, s, a) {
                                        void 0 === s ? ((s = i), (a = r)) : (e = (e - i) / (r - i)), e > 1 ? (e = 1) : e < 0 && (e = 0);
                                        var n = t(e);
                                        if ($bm_isInstanceOfArray(s)) {
                                            var o,
                                                l = s.length,
                                                h = createTypedArray("float32", l);
                                            for (o = 0; o < l; o += 1) h[o] = (a[o] - s[o]) * n + s[o];
                                            return h;
                                        }
                                        return (a - s) * n + s;
                                    }
                                    function nearestKey(t) {
                                        var e,
                                            i,
                                            r,
                                            s = data.k.length;
                                        if (data.k.length && "number" != typeof data.k[0])
                                            if (((i = -1), (t *= elem.comp.globalData.frameRate) < data.k[0].t)) (i = 1), (r = data.k[0].t);
                                            else {
                                                for (e = 0; e < s - 1; e += 1) {
                                                    if (t === data.k[e].t) {
                                                        (i = e + 1), (r = data.k[e].t);
                                                        break;
                                                    }
                                                    if (t > data.k[e].t && t < data.k[e + 1].t) {
                                                        t - data.k[e].t > data.k[e + 1].t - t ? ((i = e + 2), (r = data.k[e + 1].t)) : ((i = e + 1), (r = data.k[e].t));
                                                        break;
                                                    }
                                                }
                                                -1 === i && ((i = e + 1), (r = data.k[e].t));
                                            }
                                        else (i = 0), (r = 0);
                                        var a = {};
                                        return (a.index = i), (a.time = r / elem.comp.globalData.frameRate), a;
                                    }
                                    function key(t) {
                                        var e, i, r;
                                        if (!data.k.length || "number" == typeof data.k[0]) throw new Error("The property has no keyframe at index " + t);
                                        (t -= 1), (e = { time: data.k[t].t / elem.comp.globalData.frameRate, value: [] });
                                        var s = Object.prototype.hasOwnProperty.call(data.k[t], "s") ? data.k[t].s : data.k[t - 1].e;
                                        for (r = s.length, i = 0; i < r; i += 1) (e[i] = s[i]), (e.value[i] = s[i]);
                                        return e;
                                    }
                                    function framesToTime(t, e) {
                                        return e || (e = elem.comp.globalData.frameRate), t / e;
                                    }
                                    function timeToFrames(t, e) {
                                        return t || 0 === t || (t = time), e || (e = elem.comp.globalData.frameRate), t * e;
                                    }
                                    function seedRandom(t) {
                                        BMMath.seedrandom(randSeed + t);
                                    }
                                    function sourceRectAtTime() {
                                        return elem.sourceRectAtTime();
                                    }
                                    function substring(t, e) {
                                        return "string" == typeof value ? (void 0 === e ? value.substring(t) : value.substring(t, e)) : "";
                                    }
                                    function substr(t, e) {
                                        return "string" == typeof value ? (void 0 === e ? value.substr(t) : value.substr(t, e)) : "";
                                    }
                                    function posterizeTime(t) {
                                        (time = 0 === t ? 0 : Math.floor(time * t) / t), (value = valueAtTime(time));
                                    }
                                    var index = elem.data.ind,
                                        hasParent = !(!elem.hierarchy || !elem.hierarchy.length),
                                        parent,
                                        randSeed = Math.floor(1e6 * Math.random()),
                                        globalData = elem.globalData;
                                    function executeExpression(t) {
                                        return (
                                            (value = t),
                                            this.frameExpressionId === elem.globalData.frameId && "textSelector" !== this.propType
                                                ? value
                                                : ("textSelector" === this.propType && ((textIndex = this.textIndex), (textTotal = this.textTotal), (selectorValue = this.selectorValue)),
                                                  thisLayer ||
                                                      ((text = elem.layerInterface.text),
                                                      (thisLayer = elem.layerInterface),
                                                      (thisComp = elem.comp.compInterface),
                                                      (toWorld = thisLayer.toWorld.bind(thisLayer)),
                                                      (fromWorld = thisLayer.fromWorld.bind(thisLayer)),
                                                      (fromComp = thisLayer.fromComp.bind(thisLayer)),
                                                      (toComp = thisLayer.toComp.bind(thisLayer)),
                                                      (mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null),
                                                      (fromCompToSurface = fromComp)),
                                                  transform || ((transform = elem.layerInterface("ADBE Transform Group")), ($bm_transform = transform), transform && (anchorPoint = transform.anchorPoint)),
                                                  4 !== elemType || content || (content = thisLayer("ADBE Root Vectors Group")),
                                                  effect || (effect = thisLayer(4)),
                                                  (hasParent = !(!elem.hierarchy || !elem.hierarchy.length)) && !parent && (parent = elem.hierarchy[0].layerInterface),
                                                  (time = this.comp.renderedFrame / this.comp.globalData.frameRate),
                                                  _needsRandom && seedRandom(randSeed + time),
                                                  needsVelocity && (velocity = velocityAtTime(time)),
                                                  expression_function(),
                                                  (this.frameExpressionId = elem.globalData.frameId),
                                                  (scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt))
                                        );
                                    }
                                    return (
                                        (executeExpression.__preventDeadCodeRemoval = [
                                            $bm_transform,
                                            anchorPoint,
                                            time,
                                            velocity,
                                            inPoint,
                                            outPoint,
                                            width,
                                            height,
                                            name,
                                            loop_in,
                                            loop_out,
                                            smooth,
                                            toComp,
                                            fromCompToSurface,
                                            toWorld,
                                            fromWorld,
                                            mask,
                                            position,
                                            rotation,
                                            scale,
                                            thisComp,
                                            numKeys,
                                            active,
                                            wiggle,
                                            loopInDuration,
                                            loopOutDuration,
                                            comp,
                                            lookAt,
                                            easeOut,
                                            easeIn,
                                            ease,
                                            nearestKey,
                                            key,
                                            text,
                                            textIndex,
                                            textTotal,
                                            selectorValue,
                                            framesToTime,
                                            timeToFrames,
                                            sourceRectAtTime,
                                            substring,
                                            substr,
                                            posterizeTime,
                                            index,
                                            globalData,
                                        ]),
                                        executeExpression
                                    );
                                }
                                return (
                                    (ob.initiateExpression = initiateExpression),
                                    (ob.__preventDeadCodeRemoval = [
                                        window,
                                        document,
                                        XMLHttpRequest,
                                        fetch,
                                        frames,
                                        $bm_neg,
                                        add,
                                        $bm_sum,
                                        $bm_sub,
                                        $bm_mul,
                                        $bm_div,
                                        $bm_mod,
                                        clamp,
                                        radians_to_degrees,
                                        degreesToRadians,
                                        degrees_to_radians,
                                        normalize,
                                        rgbToHsl,
                                        hslToRgb,
                                        linear,
                                        random,
                                        createPath,
                                        _lottieGlobal,
                                    ]),
                                    (ob.resetFrame = resetFrame),
                                    ob
                                );
                            })(),
                            Expressions = (function () {
                                var t = {
                                    initExpressions: function (t) {
                                        var e = 0,
                                            i = [];
                                        (t.renderer.compInterface = CompExpressionInterface(t.renderer)),
                                            t.renderer.globalData.projectInterface.registerComposition(t.renderer),
                                            (t.renderer.globalData.pushExpression = function () {
                                                e += 1;
                                            }),
                                            (t.renderer.globalData.popExpression = function () {
                                                0 == (e -= 1) &&
                                                    (function () {
                                                        var t,
                                                            e = i.length;
                                                        for (t = 0; t < e; t += 1) i[t].release();
                                                        i.length = 0;
                                                    })();
                                            }),
                                            (t.renderer.globalData.registerExpressionProperty = function (t) {
                                                -1 === i.indexOf(t) && i.push(t);
                                            });
                                    },
                                };
                                return (t.resetFrame = ExpressionManager.resetFrame), t;
                            })(),
                            MaskManagerInterface = (function () {
                                function t(t, e) {
                                    (this._mask = t), (this._data = e);
                                }
                                return (
                                    Object.defineProperty(t.prototype, "maskPath", {
                                        get: function () {
                                            return this._mask.prop.k && this._mask.prop.getValue(), this._mask.prop;
                                        },
                                    }),
                                    Object.defineProperty(t.prototype, "maskOpacity", {
                                        get: function () {
                                            return this._mask.op.k && this._mask.op.getValue(), 100 * this._mask.op.v;
                                        },
                                    }),
                                    function (e) {
                                        var i,
                                            r = createSizedArray(e.viewData.length),
                                            s = e.viewData.length;
                                        for (i = 0; i < s; i += 1) r[i] = new t(e.viewData[i], e.masksProperties[i]);
                                        return function (t) {
                                            for (i = 0; i < s; ) {
                                                if (e.masksProperties[i].nm === t) return r[i];
                                                i += 1;
                                            }
                                            return null;
                                        };
                                    }
                                );
                            })(),
                            ExpressionPropertyInterface = (function () {
                                var t = { pv: 0, v: 0, mult: 1 },
                                    e = { pv: [0, 0, 0], v: [0, 0, 0], mult: 1 };
                                function i(t, e, i) {
                                    Object.defineProperty(t, "velocity", {
                                        get: function () {
                                            return e.getVelocityAtTime(e.comp.currentFrame);
                                        },
                                    }),
                                        (t.numKeys = e.keyframes ? e.keyframes.length : 0),
                                        (t.key = function (r) {
                                            if (!t.numKeys) return 0;
                                            var s = "";
                                            s = "s" in e.keyframes[r - 1] ? e.keyframes[r - 1].s : "e" in e.keyframes[r - 2] ? e.keyframes[r - 2].e : e.keyframes[r - 2].s;
                                            var a = "unidimensional" === i ? new Number(s) : Object.assign({}, s);
                                            return (a.time = e.keyframes[r - 1].t / e.elem.comp.globalData.frameRate), (a.value = "unidimensional" === i ? s[0] : s), a;
                                        }),
                                        (t.valueAtTime = e.getValueAtTime),
                                        (t.speedAtTime = e.getSpeedAtTime),
                                        (t.velocityAtTime = e.getVelocityAtTime),
                                        (t.propertyGroup = e.propertyGroup);
                                }
                                function r() {
                                    return t;
                                }
                                return function (s) {
                                    return s
                                        ? "unidimensional" === s.propType
                                            ? (function (e) {
                                                  (e && "pv" in e) || (e = t);
                                                  var r = 1 / e.mult,
                                                      s = e.pv * r,
                                                      a = new Number(s);
                                                  return (
                                                      (a.value = s),
                                                      i(a, e, "unidimensional"),
                                                      function () {
                                                          return e.k && e.getValue(), (s = e.v * r), a.value !== s && (((a = new Number(s)).value = s), i(a, e, "unidimensional")), a;
                                                      }
                                                  );
                                              })(s)
                                            : (function (t) {
                                                  (t && "pv" in t) || (t = e);
                                                  var r = 1 / t.mult,
                                                      s = (t.data && t.data.l) || t.pv.length,
                                                      a = createTypedArray("float32", s),
                                                      n = createTypedArray("float32", s);
                                                  return (
                                                      (a.value = n),
                                                      i(a, t, "multidimensional"),
                                                      function () {
                                                          t.k && t.getValue();
                                                          for (var e = 0; e < s; e += 1) (n[e] = t.v[e] * r), (a[e] = n[e]);
                                                          return a;
                                                      }
                                                  );
                                              })(s)
                                        : r;
                                };
                            })(),
                            TransformExpressionInterface = function (t) {
                                function e(t) {
                                    switch (t) {
                                        case "scale":
                                        case "Scale":
                                        case "ADBE Scale":
                                        case 6:
                                            return e.scale;
                                        case "rotation":
                                        case "Rotation":
                                        case "ADBE Rotation":
                                        case "ADBE Rotate Z":
                                        case 10:
                                            return e.rotation;
                                        case "ADBE Rotate X":
                                            return e.xRotation;
                                        case "ADBE Rotate Y":
                                            return e.yRotation;
                                        case "position":
                                        case "Position":
                                        case "ADBE Position":
                                        case 2:
                                            return e.position;
                                        case "ADBE Position_0":
                                            return e.xPosition;
                                        case "ADBE Position_1":
                                            return e.yPosition;
                                        case "ADBE Position_2":
                                            return e.zPosition;
                                        case "anchorPoint":
                                        case "AnchorPoint":
                                        case "Anchor Point":
                                        case "ADBE AnchorPoint":
                                        case 1:
                                            return e.anchorPoint;
                                        case "opacity":
                                        case "Opacity":
                                        case 11:
                                            return e.opacity;
                                        default:
                                            return null;
                                    }
                                }
                                var i, r, s, a;
                                return (
                                    Object.defineProperty(e, "rotation", { get: ExpressionPropertyInterface(t.r || t.rz) }),
                                    Object.defineProperty(e, "zRotation", { get: ExpressionPropertyInterface(t.rz || t.r) }),
                                    Object.defineProperty(e, "xRotation", { get: ExpressionPropertyInterface(t.rx) }),
                                    Object.defineProperty(e, "yRotation", { get: ExpressionPropertyInterface(t.ry) }),
                                    Object.defineProperty(e, "scale", { get: ExpressionPropertyInterface(t.s) }),
                                    t.p ? (a = ExpressionPropertyInterface(t.p)) : ((i = ExpressionPropertyInterface(t.px)), (r = ExpressionPropertyInterface(t.py)), t.pz && (s = ExpressionPropertyInterface(t.pz))),
                                    Object.defineProperty(e, "position", {
                                        get: function () {
                                            return t.p ? a() : [i(), r(), s ? s() : 0];
                                        },
                                    }),
                                    Object.defineProperty(e, "xPosition", { get: ExpressionPropertyInterface(t.px) }),
                                    Object.defineProperty(e, "yPosition", { get: ExpressionPropertyInterface(t.py) }),
                                    Object.defineProperty(e, "zPosition", { get: ExpressionPropertyInterface(t.pz) }),
                                    Object.defineProperty(e, "anchorPoint", { get: ExpressionPropertyInterface(t.a) }),
                                    Object.defineProperty(e, "opacity", { get: ExpressionPropertyInterface(t.o) }),
                                    Object.defineProperty(e, "skew", { get: ExpressionPropertyInterface(t.sk) }),
                                    Object.defineProperty(e, "skewAxis", { get: ExpressionPropertyInterface(t.sa) }),
                                    Object.defineProperty(e, "orientation", { get: ExpressionPropertyInterface(t.or) }),
                                    e
                                );
                            },
                            LayerExpressionInterface = (function () {
                                function t(t) {
                                    var e = new Matrix();
                                    return void 0 !== t ? this._elem.finalTransform.mProp.getValueAtTime(t).clone(e) : this._elem.finalTransform.mProp.applyToMatrix(e), e;
                                }
                                function e(t, e) {
                                    var i = this.getMatrix(e);
                                    return (i.props[12] = 0), (i.props[13] = 0), (i.props[14] = 0), this.applyPoint(i, t);
                                }
                                function i(t, e) {
                                    var i = this.getMatrix(e);
                                    return this.applyPoint(i, t);
                                }
                                function r(t, e) {
                                    var i = this.getMatrix(e);
                                    return (i.props[12] = 0), (i.props[13] = 0), (i.props[14] = 0), this.invertPoint(i, t);
                                }
                                function s(t, e) {
                                    var i = this.getMatrix(e);
                                    return this.invertPoint(i, t);
                                }
                                function a(t, e) {
                                    if (this._elem.hierarchy && this._elem.hierarchy.length) {
                                        var i,
                                            r = this._elem.hierarchy.length;
                                        for (i = 0; i < r; i += 1) this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(t);
                                    }
                                    return t.applyToPointArray(e[0], e[1], e[2] || 0);
                                }
                                function n(t, e) {
                                    if (this._elem.hierarchy && this._elem.hierarchy.length) {
                                        var i,
                                            r = this._elem.hierarchy.length;
                                        for (i = 0; i < r; i += 1) this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(t);
                                    }
                                    return t.inversePoint(e);
                                }
                                function o(t) {
                                    var e = new Matrix();
                                    if ((e.reset(), this._elem.finalTransform.mProp.applyToMatrix(e), this._elem.hierarchy && this._elem.hierarchy.length)) {
                                        var i,
                                            r = this._elem.hierarchy.length;
                                        for (i = 0; i < r; i += 1) this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(e);
                                        return e.inversePoint(t);
                                    }
                                    return e.inversePoint(t);
                                }
                                function l() {
                                    return [1, 1, 1, 1];
                                }
                                return function (h) {
                                    var c;
                                    function d(t) {
                                        switch (t) {
                                            case "ADBE Root Vectors Group":
                                            case "Contents":
                                            case 2:
                                                return d.shapeInterface;
                                            case 1:
                                            case 6:
                                            case "Transform":
                                            case "transform":
                                            case "ADBE Transform Group":
                                                return c;
                                            case 4:
                                            case "ADBE Effect Parade":
                                            case "effects":
                                            case "Effects":
                                                return d.effect;
                                            case "ADBE Text Properties":
                                                return d.textInterface;
                                            default:
                                                return null;
                                        }
                                    }
                                    (d.getMatrix = t),
                                        (d.invertPoint = n),
                                        (d.applyPoint = a),
                                        (d.toWorld = i),
                                        (d.toWorldVec = e),
                                        (d.fromWorld = s),
                                        (d.fromWorldVec = r),
                                        (d.toComp = i),
                                        (d.fromComp = o),
                                        (d.sampleImage = l),
                                        (d.sourceRectAtTime = h.sourceRectAtTime.bind(h)),
                                        (d._elem = h);
                                    var u = getDescriptor((c = TransformExpressionInterface(h.finalTransform.mProp)), "anchorPoint");
                                    return (
                                        Object.defineProperties(d, {
                                            hasParent: {
                                                get: function () {
                                                    return h.hierarchy.length;
                                                },
                                            },
                                            parent: {
                                                get: function () {
                                                    return h.hierarchy[0].layerInterface;
                                                },
                                            },
                                            rotation: getDescriptor(c, "rotation"),
                                            scale: getDescriptor(c, "scale"),
                                            position: getDescriptor(c, "position"),
                                            opacity: getDescriptor(c, "opacity"),
                                            anchorPoint: u,
                                            anchor_point: u,
                                            transform: {
                                                get: function () {
                                                    return c;
                                                },
                                            },
                                            active: {
                                                get: function () {
                                                    return h.isInRange;
                                                },
                                            },
                                        }),
                                        (d.startTime = h.data.st),
                                        (d.index = h.data.ind),
                                        (d.source = h.data.refId),
                                        (d.height = 0 === h.data.ty ? h.data.h : 100),
                                        (d.width = 0 === h.data.ty ? h.data.w : 100),
                                        (d.inPoint = h.data.ip / h.comp.globalData.frameRate),
                                        (d.outPoint = h.data.op / h.comp.globalData.frameRate),
                                        (d._name = h.data.nm),
                                        (d.registerMaskInterface = function (t) {
                                            d.mask = new MaskManagerInterface(t, h);
                                        }),
                                        (d.registerEffectsInterface = function (t) {
                                            d.effect = t;
                                        }),
                                        d
                                    );
                                };
                            })(),
                            propertyGroupFactory = function (t, e) {
                                return function (i) {
                                    return (i = void 0 === i ? 1 : i) <= 0 ? t : e(i - 1);
                                };
                            },
                            PropertyInterface = function (t, e) {
                                var i = { _name: t };
                                return function (t) {
                                    return (t = void 0 === t ? 1 : t) <= 0 ? i : e(t - 1);
                                };
                            },
                            EffectsExpressionInterface = (function () {
                                function t(i, r, s, a) {
                                    function n(t) {
                                        for (var e = i.ef, r = 0, s = e.length; r < s; ) {
                                            if (t === e[r].nm || t === e[r].mn || t === e[r].ix) return 5 === e[r].ty ? h[r] : h[r]();
                                            r += 1;
                                        }
                                        throw new Error();
                                    }
                                    var o,
                                        l = propertyGroupFactory(n, s),
                                        h = [],
                                        c = i.ef.length;
                                    for (o = 0; o < c; o += 1) 5 === i.ef[o].ty ? h.push(t(i.ef[o], r.effectElements[o], r.effectElements[o].propertyGroup, a)) : h.push(e(r.effectElements[o], i.ef[o].ty, a, l));
                                    return (
                                        "ADBE Color Control" === i.mn &&
                                            Object.defineProperty(n, "color", {
                                                get: function () {
                                                    return h[0]();
                                                },
                                            }),
                                        Object.defineProperties(n, {
                                            numProperties: {
                                                get: function () {
                                                    return i.np;
                                                },
                                            },
                                            _name: { value: i.nm },
                                            propertyGroup: { value: l },
                                        }),
                                        (n.enabled = 0 !== i.en),
                                        (n.active = n.enabled),
                                        n
                                    );
                                }
                                function e(t, e, i, r) {
                                    var s = ExpressionPropertyInterface(t.p);
                                    return (
                                        t.p.setGroupProperty && t.p.setGroupProperty(PropertyInterface("", r)),
                                        function () {
                                            return 10 === e ? i.comp.compInterface(t.p.v) : s();
                                        }
                                    );
                                }
                                return {
                                    createEffectsInterface: function (e, i) {
                                        if (e.effectsManager) {
                                            var r,
                                                s = [],
                                                a = e.data.ef,
                                                n = e.effectsManager.effectElements.length;
                                            for (r = 0; r < n; r += 1) s.push(t(a[r], e.effectsManager.effectElements[r], i, e));
                                            var o = e.data.ef || [],
                                                l = function (t) {
                                                    for (r = 0, n = o.length; r < n; ) {
                                                        if (t === o[r].nm || t === o[r].mn || t === o[r].ix) return s[r];
                                                        r += 1;
                                                    }
                                                    return null;
                                                };
                                            return (
                                                Object.defineProperty(l, "numProperties", {
                                                    get: function () {
                                                        return o.length;
                                                    },
                                                }),
                                                l
                                            );
                                        }
                                        return null;
                                    },
                                };
                            })(),
                            ShapePathInterface = function (t, e, i) {
                                var r = e.sh;
                                function s(t) {
                                    return "Shape" === t || "shape" === t || "Path" === t || "path" === t || "ADBE Vector Shape" === t || 2 === t ? s.path : null;
                                }
                                var a = propertyGroupFactory(s, i);
                                return (
                                    r.setGroupProperty(PropertyInterface("Path", a)),
                                    Object.defineProperties(s, {
                                        path: {
                                            get: function () {
                                                return r.k && r.getValue(), r;
                                            },
                                        },
                                        shape: {
                                            get: function () {
                                                return r.k && r.getValue(), r;
                                            },
                                        },
                                        _name: { value: t.nm },
                                        ix: { value: t.ix },
                                        propertyIndex: { value: t.ix },
                                        mn: { value: t.mn },
                                        propertyGroup: { value: i },
                                    }),
                                    s
                                );
                            },
                            ShapeExpressionInterface = (function () {
                                function t(t, n, u) {
                                    var p,
                                        m = [],
                                        f = t ? t.length : 0;
                                    for (p = 0; p < f; p += 1)
                                        "gr" === t[p].ty
                                            ? m.push(e(t[p], n[p], u))
                                            : "fl" === t[p].ty
                                            ? m.push(i(t[p], n[p], u))
                                            : "st" === t[p].ty
                                            ? m.push(s(t[p], n[p], u))
                                            : "tm" === t[p].ty
                                            ? m.push(a(t[p], n[p], u))
                                            : "tr" === t[p].ty ||
                                              ("el" === t[p].ty
                                                  ? m.push(o(t[p], n[p], u))
                                                  : "sr" === t[p].ty
                                                  ? m.push(l(t[p], n[p], u))
                                                  : "sh" === t[p].ty
                                                  ? m.push(ShapePathInterface(t[p], n[p], u))
                                                  : "rc" === t[p].ty
                                                  ? m.push(h(t[p], n[p], u))
                                                  : "rd" === t[p].ty
                                                  ? m.push(c(t[p], n[p], u))
                                                  : "rp" === t[p].ty
                                                  ? m.push(d(t[p], n[p], u))
                                                  : "gf" === t[p].ty
                                                  ? m.push(r(t[p], n[p], u))
                                                  : m.push(
                                                        (t[p],
                                                        n[p],
                                                        function () {
                                                            return null;
                                                        })
                                                    ));
                                    return m;
                                }
                                function e(e, i, r) {
                                    var s = function (t) {
                                        switch (t) {
                                            case "ADBE Vectors Group":
                                            case "Contents":
                                            case 2:
                                                return s.content;
                                            default:
                                                return s.transform;
                                        }
                                    };
                                    s.propertyGroup = propertyGroupFactory(s, r);
                                    var a = (function (e, i, r) {
                                            var s,
                                                a = function (t) {
                                                    for (var e = 0, i = s.length; e < i; ) {
                                                        if (s[e]._name === t || s[e].mn === t || s[e].propertyIndex === t || s[e].ix === t || s[e].ind === t) return s[e];
                                                        e += 1;
                                                    }
                                                    return "number" == typeof t ? s[t - 1] : null;
                                                };
                                            (a.propertyGroup = propertyGroupFactory(a, r)), (s = t(e.it, i.it, a.propertyGroup)), (a.numProperties = s.length);
                                            var o = n(e.it[e.it.length - 1], i.it[i.it.length - 1], a.propertyGroup);
                                            return (a.transform = o), (a.propertyIndex = e.cix), (a._name = e.nm), a;
                                        })(e, i, s.propertyGroup),
                                        o = n(e.it[e.it.length - 1], i.it[i.it.length - 1], s.propertyGroup);
                                    return (
                                        (s.content = a),
                                        (s.transform = o),
                                        Object.defineProperty(s, "_name", {
                                            get: function () {
                                                return e.nm;
                                            },
                                        }),
                                        (s.numProperties = e.np),
                                        (s.propertyIndex = e.ix),
                                        (s.nm = e.nm),
                                        (s.mn = e.mn),
                                        s
                                    );
                                }
                                function i(t, e, i) {
                                    function r(t) {
                                        return "Color" === t || "color" === t ? r.color : "Opacity" === t || "opacity" === t ? r.opacity : null;
                                    }
                                    return (
                                        Object.defineProperties(r, { color: { get: ExpressionPropertyInterface(e.c) }, opacity: { get: ExpressionPropertyInterface(e.o) }, _name: { value: t.nm }, mn: { value: t.mn } }),
                                        e.c.setGroupProperty(PropertyInterface("Color", i)),
                                        e.o.setGroupProperty(PropertyInterface("Opacity", i)),
                                        r
                                    );
                                }
                                function r(t, e, i) {
                                    function r(t) {
                                        return "Start Point" === t || "start point" === t ? r.startPoint : "End Point" === t || "end point" === t ? r.endPoint : "Opacity" === t || "opacity" === t ? r.opacity : null;
                                    }
                                    return (
                                        Object.defineProperties(r, {
                                            startPoint: { get: ExpressionPropertyInterface(e.s) },
                                            endPoint: { get: ExpressionPropertyInterface(e.e) },
                                            opacity: { get: ExpressionPropertyInterface(e.o) },
                                            type: {
                                                get: function () {
                                                    return "a";
                                                },
                                            },
                                            _name: { value: t.nm },
                                            mn: { value: t.mn },
                                        }),
                                        e.s.setGroupProperty(PropertyInterface("Start Point", i)),
                                        e.e.setGroupProperty(PropertyInterface("End Point", i)),
                                        e.o.setGroupProperty(PropertyInterface("Opacity", i)),
                                        r
                                    );
                                }
                                function s(t, e, i) {
                                    var r,
                                        s = propertyGroupFactory(h, i),
                                        a = propertyGroupFactory(l, s);
                                    function n(i) {
                                        Object.defineProperty(l, t.d[i].nm, { get: ExpressionPropertyInterface(e.d.dataProps[i].p) });
                                    }
                                    var o = t.d ? t.d.length : 0,
                                        l = {};
                                    for (r = 0; r < o; r += 1) n(r), e.d.dataProps[r].p.setGroupProperty(a);
                                    function h(t) {
                                        return "Color" === t || "color" === t ? h.color : "Opacity" === t || "opacity" === t ? h.opacity : "Stroke Width" === t || "stroke width" === t ? h.strokeWidth : null;
                                    }
                                    return (
                                        Object.defineProperties(h, {
                                            color: { get: ExpressionPropertyInterface(e.c) },
                                            opacity: { get: ExpressionPropertyInterface(e.o) },
                                            strokeWidth: { get: ExpressionPropertyInterface(e.w) },
                                            dash: {
                                                get: function () {
                                                    return l;
                                                },
                                            },
                                            _name: { value: t.nm },
                                            mn: { value: t.mn },
                                        }),
                                        e.c.setGroupProperty(PropertyInterface("Color", s)),
                                        e.o.setGroupProperty(PropertyInterface("Opacity", s)),
                                        e.w.setGroupProperty(PropertyInterface("Stroke Width", s)),
                                        h
                                    );
                                }
                                function a(t, e, i) {
                                    function r(e) {
                                        return e === t.e.ix || "End" === e || "end" === e ? r.end : e === t.s.ix ? r.start : e === t.o.ix ? r.offset : null;
                                    }
                                    var s = propertyGroupFactory(r, i);
                                    return (
                                        (r.propertyIndex = t.ix),
                                        e.s.setGroupProperty(PropertyInterface("Start", s)),
                                        e.e.setGroupProperty(PropertyInterface("End", s)),
                                        e.o.setGroupProperty(PropertyInterface("Offset", s)),
                                        (r.propertyIndex = t.ix),
                                        (r.propertyGroup = i),
                                        Object.defineProperties(r, {
                                            start: { get: ExpressionPropertyInterface(e.s) },
                                            end: { get: ExpressionPropertyInterface(e.e) },
                                            offset: { get: ExpressionPropertyInterface(e.o) },
                                            _name: { value: t.nm },
                                        }),
                                        (r.mn = t.mn),
                                        r
                                    );
                                }
                                function n(t, e, i) {
                                    function r(e) {
                                        return t.a.ix === e || "Anchor Point" === e
                                            ? r.anchorPoint
                                            : t.o.ix === e || "Opacity" === e
                                            ? r.opacity
                                            : t.p.ix === e || "Position" === e
                                            ? r.position
                                            : t.r.ix === e || "Rotation" === e || "ADBE Vector Rotation" === e
                                            ? r.rotation
                                            : t.s.ix === e || "Scale" === e
                                            ? r.scale
                                            : (t.sk && t.sk.ix === e) || "Skew" === e
                                            ? r.skew
                                            : (t.sa && t.sa.ix === e) || "Skew Axis" === e
                                            ? r.skewAxis
                                            : null;
                                    }
                                    var s = propertyGroupFactory(r, i);
                                    return (
                                        e.transform.mProps.o.setGroupProperty(PropertyInterface("Opacity", s)),
                                        e.transform.mProps.p.setGroupProperty(PropertyInterface("Position", s)),
                                        e.transform.mProps.a.setGroupProperty(PropertyInterface("Anchor Point", s)),
                                        e.transform.mProps.s.setGroupProperty(PropertyInterface("Scale", s)),
                                        e.transform.mProps.r.setGroupProperty(PropertyInterface("Rotation", s)),
                                        e.transform.mProps.sk && (e.transform.mProps.sk.setGroupProperty(PropertyInterface("Skew", s)), e.transform.mProps.sa.setGroupProperty(PropertyInterface("Skew Angle", s))),
                                        e.transform.op.setGroupProperty(PropertyInterface("Opacity", s)),
                                        Object.defineProperties(r, {
                                            opacity: { get: ExpressionPropertyInterface(e.transform.mProps.o) },
                                            position: { get: ExpressionPropertyInterface(e.transform.mProps.p) },
                                            anchorPoint: { get: ExpressionPropertyInterface(e.transform.mProps.a) },
                                            scale: { get: ExpressionPropertyInterface(e.transform.mProps.s) },
                                            rotation: { get: ExpressionPropertyInterface(e.transform.mProps.r) },
                                            skew: { get: ExpressionPropertyInterface(e.transform.mProps.sk) },
                                            skewAxis: { get: ExpressionPropertyInterface(e.transform.mProps.sa) },
                                            _name: { value: t.nm },
                                        }),
                                        (r.ty = "tr"),
                                        (r.mn = t.mn),
                                        (r.propertyGroup = i),
                                        r
                                    );
                                }
                                function o(t, e, i) {
                                    function r(e) {
                                        return t.p.ix === e ? r.position : t.s.ix === e ? r.size : null;
                                    }
                                    var s = propertyGroupFactory(r, i);
                                    r.propertyIndex = t.ix;
                                    var a = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                                    return (
                                        a.s.setGroupProperty(PropertyInterface("Size", s)),
                                        a.p.setGroupProperty(PropertyInterface("Position", s)),
                                        Object.defineProperties(r, { size: { get: ExpressionPropertyInterface(a.s) }, position: { get: ExpressionPropertyInterface(a.p) }, _name: { value: t.nm } }),
                                        (r.mn = t.mn),
                                        r
                                    );
                                }
                                function l(t, e, i) {
                                    function r(e) {
                                        return t.p.ix === e
                                            ? r.position
                                            : t.r.ix === e
                                            ? r.rotation
                                            : t.pt.ix === e
                                            ? r.points
                                            : t.or.ix === e || "ADBE Vector Star Outer Radius" === e
                                            ? r.outerRadius
                                            : t.os.ix === e
                                            ? r.outerRoundness
                                            : !t.ir || (t.ir.ix !== e && "ADBE Vector Star Inner Radius" !== e)
                                            ? t.is && t.is.ix === e
                                                ? r.innerRoundness
                                                : null
                                            : r.innerRadius;
                                    }
                                    var s = propertyGroupFactory(r, i),
                                        a = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                                    return (
                                        (r.propertyIndex = t.ix),
                                        a.or.setGroupProperty(PropertyInterface("Outer Radius", s)),
                                        a.os.setGroupProperty(PropertyInterface("Outer Roundness", s)),
                                        a.pt.setGroupProperty(PropertyInterface("Points", s)),
                                        a.p.setGroupProperty(PropertyInterface("Position", s)),
                                        a.r.setGroupProperty(PropertyInterface("Rotation", s)),
                                        t.ir && (a.ir.setGroupProperty(PropertyInterface("Inner Radius", s)), a.is.setGroupProperty(PropertyInterface("Inner Roundness", s))),
                                        Object.defineProperties(r, {
                                            position: { get: ExpressionPropertyInterface(a.p) },
                                            rotation: { get: ExpressionPropertyInterface(a.r) },
                                            points: { get: ExpressionPropertyInterface(a.pt) },
                                            outerRadius: { get: ExpressionPropertyInterface(a.or) },
                                            outerRoundness: { get: ExpressionPropertyInterface(a.os) },
                                            innerRadius: { get: ExpressionPropertyInterface(a.ir) },
                                            innerRoundness: { get: ExpressionPropertyInterface(a.is) },
                                            _name: { value: t.nm },
                                        }),
                                        (r.mn = t.mn),
                                        r
                                    );
                                }
                                function h(t, e, i) {
                                    function r(e) {
                                        return t.p.ix === e ? r.position : t.r.ix === e ? r.roundness : t.s.ix === e || "Size" === e || "ADBE Vector Rect Size" === e ? r.size : null;
                                    }
                                    var s = propertyGroupFactory(r, i),
                                        a = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                                    return (
                                        (r.propertyIndex = t.ix),
                                        a.p.setGroupProperty(PropertyInterface("Position", s)),
                                        a.s.setGroupProperty(PropertyInterface("Size", s)),
                                        a.r.setGroupProperty(PropertyInterface("Rotation", s)),
                                        Object.defineProperties(r, {
                                            position: { get: ExpressionPropertyInterface(a.p) },
                                            roundness: { get: ExpressionPropertyInterface(a.r) },
                                            size: { get: ExpressionPropertyInterface(a.s) },
                                            _name: { value: t.nm },
                                        }),
                                        (r.mn = t.mn),
                                        r
                                    );
                                }
                                function c(t, e, i) {
                                    function r(e) {
                                        return t.r.ix === e || "Round Corners 1" === e ? r.radius : null;
                                    }
                                    var s = propertyGroupFactory(r, i),
                                        a = e;
                                    return (
                                        (r.propertyIndex = t.ix),
                                        a.rd.setGroupProperty(PropertyInterface("Radius", s)),
                                        Object.defineProperties(r, { radius: { get: ExpressionPropertyInterface(a.rd) }, _name: { value: t.nm } }),
                                        (r.mn = t.mn),
                                        r
                                    );
                                }
                                function d(t, e, i) {
                                    function r(e) {
                                        return t.c.ix === e || "Copies" === e ? r.copies : t.o.ix === e || "Offset" === e ? r.offset : null;
                                    }
                                    var s = propertyGroupFactory(r, i),
                                        a = e;
                                    return (
                                        (r.propertyIndex = t.ix),
                                        a.c.setGroupProperty(PropertyInterface("Copies", s)),
                                        a.o.setGroupProperty(PropertyInterface("Offset", s)),
                                        Object.defineProperties(r, { copies: { get: ExpressionPropertyInterface(a.c) }, offset: { get: ExpressionPropertyInterface(a.o) }, _name: { value: t.nm } }),
                                        (r.mn = t.mn),
                                        r
                                    );
                                }
                                return function (e, i, r) {
                                    var s;
                                    function a(t) {
                                        if ("number" == typeof t) return 0 === (t = void 0 === t ? 1 : t) ? r : s[t - 1];
                                        for (var e = 0, i = s.length; e < i; ) {
                                            if (s[e]._name === t) return s[e];
                                            e += 1;
                                        }
                                        return null;
                                    }
                                    return (
                                        (a.propertyGroup = propertyGroupFactory(a, function () {
                                            return r;
                                        })),
                                        (s = t(e, i, a.propertyGroup)),
                                        (a.numProperties = s.length),
                                        (a._name = "Contents"),
                                        a
                                    );
                                };
                            })(),
                            TextExpressionInterface = function (t) {
                                var e;
                                function i(t) {
                                    return "ADBE Text Document" === t ? i.sourceText : null;
                                }
                                return (
                                    Object.defineProperty(i, "sourceText", {
                                        get: function () {
                                            t.textProperty.getValue();
                                            var i = t.textProperty.currentData.t;
                                            return (
                                                (e && i === e.value) ||
                                                    (((e = new String(i)).value = i || new String(i)),
                                                    Object.defineProperty(e, "style", {
                                                        get: function () {
                                                            return { fillColor: t.textProperty.currentData.fc };
                                                        },
                                                    })),
                                                e
                                            );
                                        },
                                    }),
                                    i
                                );
                            };
                        function _typeof(t) {
                            return (
                                (_typeof =
                                    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                        ? function (t) {
                                              return typeof t;
                                          }
                                        : function (t) {
                                              return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                          }),
                                _typeof(t)
                            );
                        }
                        var FootageInterface =
                                ((dataInterfaceFactory = function (t) {
                                    function e(t) {
                                        return "Outline" === t ? e.outlineInterface() : null;
                                    }
                                    return (
                                        (e._name = "Outline"),
                                        (e.outlineInterface = (function (t) {
                                            var e = "",
                                                i = t.getFootageData();
                                            function r(t) {
                                                if (i[t]) return (e = t), "object" === _typeof((i = i[t])) ? r : i;
                                                var s = t.indexOf(e);
                                                if (-1 !== s) {
                                                    var a = parseInt(t.substr(s + e.length), 10);
                                                    return "object" === _typeof((i = i[a])) ? r : i;
                                                }
                                                return "";
                                            }
                                            return function () {
                                                return (e = ""), (i = t.getFootageData()), r;
                                            };
                                        })(t)),
                                        e
                                    );
                                }),
                                function (t) {
                                    function e(t) {
                                        return "Data" === t ? e.dataInterface : null;
                                    }
                                    return (e._name = "Data"), (e.dataInterface = dataInterfaceFactory(t)), e;
                                }),
                            dataInterfaceFactory,
                            interfaces = { layer: LayerExpressionInterface, effects: EffectsExpressionInterface, comp: CompExpressionInterface, shape: ShapeExpressionInterface, text: TextExpressionInterface, footage: FootageInterface };
                        function getInterface(t) {
                            return interfaces[t] || null;
                        }
                        var expressionHelpers = {
                            searchExpressions: function (t, e, i) {
                                e.x && ((i.k = !0), (i.x = !0), (i.initiateExpression = ExpressionManager.initiateExpression), i.effectsSequence.push(i.initiateExpression(t, e, i).bind(i)));
                            },
                            getSpeedAtTime: function (t) {
                                var e = this.getValueAtTime(t),
                                    i = this.getValueAtTime(t + -0.01),
                                    r = 0;
                                if (e.length) {
                                    var s;
                                    for (s = 0; s < e.length; s += 1) r += Math.pow(i[s] - e[s], 2);
                                    r = 100 * Math.sqrt(r);
                                } else r = 0;
                                return r;
                            },
                            getVelocityAtTime: function (t) {
                                if (void 0 !== this.vel) return this.vel;
                                var e,
                                    i,
                                    r = -0.001,
                                    s = this.getValueAtTime(t),
                                    a = this.getValueAtTime(t + r);
                                if (s.length) for (e = createTypedArray("float32", s.length), i = 0; i < s.length; i += 1) e[i] = (a[i] - s[i]) / r;
                                else e = (a - s) / r;
                                return e;
                            },
                            getValueAtTime: function (t) {
                                return (
                                    (t *= this.elem.globalData.frameRate),
                                    (t -= this.offsetTime) !== this._cachingAtTime.lastFrame &&
                                        ((this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < t ? this._cachingAtTime.lastIndex : 0),
                                        (this._cachingAtTime.value = this.interpolateValue(t, this._cachingAtTime)),
                                        (this._cachingAtTime.lastFrame = t)),
                                    this._cachingAtTime.value
                                );
                            },
                            getStaticValueAtTime: function () {
                                return this.pv;
                            },
                            setGroupProperty: function (t) {
                                this.propertyGroup = t;
                            },
                        };
                        function addPropertyDecorator() {
                            function t(t, e, i) {
                                if (!this.k || !this.keyframes) return this.pv;
                                t = t ? t.toLowerCase() : "";
                                var r,
                                    s,
                                    a,
                                    n,
                                    o,
                                    l = this.comp.renderedFrame,
                                    h = this.keyframes,
                                    c = h[h.length - 1].t;
                                if (l <= c) return this.pv;
                                if (
                                    (i
                                        ? (s = c - (r = e ? Math.abs(c - this.elem.comp.globalData.frameRate * e) : Math.max(0, c - this.elem.data.ip)))
                                        : ((!e || e > h.length - 1) && (e = h.length - 1), (r = c - (s = h[h.length - 1 - e].t))),
                                    "pingpong" === t)
                                ) {
                                    if (Math.floor((l - s) / r) % 2 != 0) return this.getValueAtTime((r - ((l - s) % r) + s) / this.comp.globalData.frameRate, 0);
                                } else {
                                    if ("offset" === t) {
                                        var d = this.getValueAtTime(s / this.comp.globalData.frameRate, 0),
                                            u = this.getValueAtTime(c / this.comp.globalData.frameRate, 0),
                                            p = this.getValueAtTime((((l - s) % r) + s) / this.comp.globalData.frameRate, 0),
                                            m = Math.floor((l - s) / r);
                                        if (this.pv.length) {
                                            for (n = (o = new Array(d.length)).length, a = 0; a < n; a += 1) o[a] = (u[a] - d[a]) * m + p[a];
                                            return o;
                                        }
                                        return (u - d) * m + p;
                                    }
                                    if ("continue" === t) {
                                        var f = this.getValueAtTime(c / this.comp.globalData.frameRate, 0),
                                            g = this.getValueAtTime((c - 0.001) / this.comp.globalData.frameRate, 0);
                                        if (this.pv.length) {
                                            for (n = (o = new Array(f.length)).length, a = 0; a < n; a += 1) o[a] = f[a] + ((f[a] - g[a]) * ((l - c) / this.comp.globalData.frameRate)) / 5e-4;
                                            return o;
                                        }
                                        return f + ((l - c) / 0.001) * (f - g);
                                    }
                                }
                                return this.getValueAtTime((((l - s) % r) + s) / this.comp.globalData.frameRate, 0);
                            }
                            function e(t, e, i) {
                                if (!this.k) return this.pv;
                                t = t ? t.toLowerCase() : "";
                                var r,
                                    s,
                                    a,
                                    n,
                                    o,
                                    l = this.comp.renderedFrame,
                                    h = this.keyframes,
                                    c = h[0].t;
                                if (l >= c) return this.pv;
                                if (
                                    (i ? (s = c + (r = e ? Math.abs(this.elem.comp.globalData.frameRate * e) : Math.max(0, this.elem.data.op - c))) : ((!e || e > h.length - 1) && (e = h.length - 1), (r = (s = h[e].t) - c)),
                                    "pingpong" === t)
                                ) {
                                    if (Math.floor((c - l) / r) % 2 == 0) return this.getValueAtTime((((c - l) % r) + c) / this.comp.globalData.frameRate, 0);
                                } else {
                                    if ("offset" === t) {
                                        var d = this.getValueAtTime(c / this.comp.globalData.frameRate, 0),
                                            u = this.getValueAtTime(s / this.comp.globalData.frameRate, 0),
                                            p = this.getValueAtTime((r - ((c - l) % r) + c) / this.comp.globalData.frameRate, 0),
                                            m = Math.floor((c - l) / r) + 1;
                                        if (this.pv.length) {
                                            for (n = (o = new Array(d.length)).length, a = 0; a < n; a += 1) o[a] = p[a] - (u[a] - d[a]) * m;
                                            return o;
                                        }
                                        return p - (u - d) * m;
                                    }
                                    if ("continue" === t) {
                                        var f = this.getValueAtTime(c / this.comp.globalData.frameRate, 0),
                                            g = this.getValueAtTime((c + 0.001) / this.comp.globalData.frameRate, 0);
                                        if (this.pv.length) {
                                            for (n = (o = new Array(f.length)).length, a = 0; a < n; a += 1) o[a] = f[a] + ((f[a] - g[a]) * (c - l)) / 0.001;
                                            return o;
                                        }
                                        return f + ((f - g) * (c - l)) / 0.001;
                                    }
                                }
                                return this.getValueAtTime((r - (((c - l) % r) + c)) / this.comp.globalData.frameRate, 0);
                            }
                            function i(t, e) {
                                if (!this.k) return this.pv;
                                if (((t = 0.5 * (t || 0.4)), (e = Math.floor(e || 5)) <= 1)) return this.pv;
                                var i,
                                    r,
                                    s = this.comp.renderedFrame / this.comp.globalData.frameRate,
                                    a = s - t,
                                    n = e > 1 ? (s + t - a) / (e - 1) : 1,
                                    o = 0,
                                    l = 0;
                                for (i = this.pv.length ? createTypedArray("float32", this.pv.length) : 0; o < e; ) {
                                    if (((r = this.getValueAtTime(a + o * n)), this.pv.length)) for (l = 0; l < this.pv.length; l += 1) i[l] += r[l];
                                    else i += r;
                                    o += 1;
                                }
                                if (this.pv.length) for (l = 0; l < this.pv.length; l += 1) i[l] /= e;
                                else i /= e;
                                return i;
                            }
                            function r(t) {
                                this._transformCachingAtTime || (this._transformCachingAtTime = { v: new Matrix() });
                                var e = this._transformCachingAtTime.v;
                                if ((e.cloneFromProps(this.pre.props), this.appliedTransformations < 1)) {
                                    var i = this.a.getValueAtTime(t);
                                    e.translate(-i[0] * this.a.mult, -i[1] * this.a.mult, i[2] * this.a.mult);
                                }
                                if (this.appliedTransformations < 2) {
                                    var r = this.s.getValueAtTime(t);
                                    e.scale(r[0] * this.s.mult, r[1] * this.s.mult, r[2] * this.s.mult);
                                }
                                if (this.sk && this.appliedTransformations < 3) {
                                    var s = this.sk.getValueAtTime(t),
                                        a = this.sa.getValueAtTime(t);
                                    e.skewFromAxis(-s * this.sk.mult, a * this.sa.mult);
                                }
                                if (this.r && this.appliedTransformations < 4) {
                                    var n = this.r.getValueAtTime(t);
                                    e.rotate(-n * this.r.mult);
                                } else if (!this.r && this.appliedTransformations < 4) {
                                    var o = this.rz.getValueAtTime(t),
                                        l = this.ry.getValueAtTime(t),
                                        h = this.rx.getValueAtTime(t),
                                        c = this.or.getValueAtTime(t);
                                    e.rotateZ(-o * this.rz.mult)
                                        .rotateY(l * this.ry.mult)
                                        .rotateX(h * this.rx.mult)
                                        .rotateZ(-c[2] * this.or.mult)
                                        .rotateY(c[1] * this.or.mult)
                                        .rotateX(c[0] * this.or.mult);
                                }
                                if (this.data.p && this.data.p.s) {
                                    var d = this.px.getValueAtTime(t),
                                        u = this.py.getValueAtTime(t);
                                    if (this.data.p.z) {
                                        var p = this.pz.getValueAtTime(t);
                                        e.translate(d * this.px.mult, u * this.py.mult, -p * this.pz.mult);
                                    } else e.translate(d * this.px.mult, u * this.py.mult, 0);
                                } else {
                                    var m = this.p.getValueAtTime(t);
                                    e.translate(m[0] * this.p.mult, m[1] * this.p.mult, -m[2] * this.p.mult);
                                }
                                return e;
                            }
                            function s() {
                                return this.v.clone(new Matrix());
                            }
                            var a = TransformPropertyFactory.getTransformProperty;
                            TransformPropertyFactory.getTransformProperty = function (t, e, i) {
                                var n = a(t, e, i);
                                return n.dynamicProperties.length ? (n.getValueAtTime = r.bind(n)) : (n.getValueAtTime = s.bind(n)), (n.setGroupProperty = expressionHelpers.setGroupProperty), n;
                            };
                            var n = PropertyFactory.getProp;
                            PropertyFactory.getProp = function (r, s, a, o, l) {
                                var h = n(r, s, a, o, l);
                                h.kf ? (h.getValueAtTime = expressionHelpers.getValueAtTime.bind(h)) : (h.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(h)),
                                    (h.setGroupProperty = expressionHelpers.setGroupProperty),
                                    (h.loopOut = t),
                                    (h.loopIn = e),
                                    (h.smooth = i),
                                    (h.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(h)),
                                    (h.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(h)),
                                    (h.numKeys = 1 === s.a ? s.k.length : 0),
                                    (h.propertyIndex = s.ix);
                                var c = 0;
                                return (
                                    0 !== a && (c = createTypedArray("float32", 1 === s.a ? s.k[0].s.length : s.k.length)),
                                    (h._cachingAtTime = { lastFrame: initialDefaultFrame, lastIndex: 0, value: c }),
                                    expressionHelpers.searchExpressions(r, s, h),
                                    h.k && l.addDynamicProperty(h),
                                    h
                                );
                            };
                            var o = ShapePropertyFactory.getConstructorFunction(),
                                l = ShapePropertyFactory.getKeyframedConstructorFunction();
                            function h() {}
                            (h.prototype = {
                                vertices: function (t, e) {
                                    this.k && this.getValue();
                                    var i,
                                        r = this.v;
                                    void 0 !== e && (r = this.getValueAtTime(e, 0));
                                    var s = r._length,
                                        a = r[t],
                                        n = r.v,
                                        o = createSizedArray(s);
                                    for (i = 0; i < s; i += 1) o[i] = "i" === t || "o" === t ? [a[i][0] - n[i][0], a[i][1] - n[i][1]] : [a[i][0], a[i][1]];
                                    return o;
                                },
                                points: function (t) {
                                    return this.vertices("v", t);
                                },
                                inTangents: function (t) {
                                    return this.vertices("i", t);
                                },
                                outTangents: function (t) {
                                    return this.vertices("o", t);
                                },
                                isClosed: function () {
                                    return this.v.c;
                                },
                                pointOnPath: function (t, e) {
                                    var i = this.v;
                                    void 0 !== e && (i = this.getValueAtTime(e, 0)), this._segmentsLength || (this._segmentsLength = bez.getSegmentsLength(i));
                                    for (var r, s = this._segmentsLength, a = s.lengths, n = s.totalLength * t, o = 0, l = a.length, h = 0; o < l; ) {
                                        if (h + a[o].addedLength > n) {
                                            var c = o,
                                                d = i.c && o === l - 1 ? 0 : o + 1,
                                                u = (n - h) / a[o].addedLength;
                                            r = bez.getPointInSegment(i.v[c], i.v[d], i.o[c], i.i[d], u, a[o]);
                                            break;
                                        }
                                        (h += a[o].addedLength), (o += 1);
                                    }
                                    return r || (r = i.c ? [i.v[0][0], i.v[0][1]] : [i.v[i._length - 1][0], i.v[i._length - 1][1]]), r;
                                },
                                vectorOnPath: function (t, e, i) {
                                    1 == t ? (t = this.v.c) : 0 == t && (t = 0.999);
                                    var r = this.pointOnPath(t, e),
                                        s = this.pointOnPath(t + 0.001, e),
                                        a = s[0] - r[0],
                                        n = s[1] - r[1],
                                        o = Math.sqrt(Math.pow(a, 2) + Math.pow(n, 2));
                                    return 0 === o ? [0, 0] : "tangent" === i ? [a / o, n / o] : [-n / o, a / o];
                                },
                                tangentOnPath: function (t, e) {
                                    return this.vectorOnPath(t, e, "tangent");
                                },
                                normalOnPath: function (t, e) {
                                    return this.vectorOnPath(t, e, "normal");
                                },
                                setGroupProperty: expressionHelpers.setGroupProperty,
                                getValueAtTime: expressionHelpers.getStaticValueAtTime,
                            }),
                                extendPrototype([h], o),
                                extendPrototype([h], l),
                                (l.prototype.getValueAtTime = function (t) {
                                    return (
                                        this._cachingAtTime || (this._cachingAtTime = { shapeValue: shapePool.clone(this.pv), lastIndex: 0, lastTime: initialDefaultFrame }),
                                        (t *= this.elem.globalData.frameRate),
                                        (t -= this.offsetTime) !== this._cachingAtTime.lastTime &&
                                            ((this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < t ? this._caching.lastIndex : 0),
                                            (this._cachingAtTime.lastTime = t),
                                            this.interpolateShape(t, this._cachingAtTime.shapeValue, this._cachingAtTime)),
                                        this._cachingAtTime.shapeValue
                                    );
                                }),
                                (l.prototype.initiateExpression = ExpressionManager.initiateExpression);
                            var c = ShapePropertyFactory.getShapeProp;
                            ShapePropertyFactory.getShapeProp = function (t, e, i, r, s) {
                                var a = c(t, e, i, r, s);
                                return (a.propertyIndex = e.ix), (a.lock = !1), 3 === i ? expressionHelpers.searchExpressions(t, e.pt, a) : 4 === i && expressionHelpers.searchExpressions(t, e.ks, a), a.k && t.addDynamicProperty(a), a;
                            };
                        }
                        function initialize$1() {
                            addPropertyDecorator();
                        }
                        function addDecorator() {
                            (TextProperty.prototype.getExpressionValue = function (t, e) {
                                var i = this.calculateExpression(e);
                                if (t.t !== i) {
                                    var r = {};
                                    return this.copyData(r, t), (r.t = i.toString()), (r.__complete = !1), r;
                                }
                                return t;
                            }),
                                (TextProperty.prototype.searchProperty = function () {
                                    var t = this.searchKeyframes(),
                                        e = this.searchExpressions();
                                    return (this.kf = t || e), this.kf;
                                }),
                                (TextProperty.prototype.searchExpressions = function () {
                                    return this.data.d.x ? ((this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this)), this.addEffect(this.getExpressionValue.bind(this)), !0) : null;
                                });
                        }
                        function initialize() {
                            addDecorator();
                        }
                        function SVGComposableEffect() {}
                        SVGComposableEffect.prototype = {
                            createMergeNode: function (t, e) {
                                var i,
                                    r,
                                    s = createNS("feMerge");
                                for (s.setAttribute("result", t), r = 0; r < e.length; r += 1) (i = createNS("feMergeNode")).setAttribute("in", e[r]), s.appendChild(i), s.appendChild(i);
                                return s;
                            },
                        };
                        var linearFilterValue = "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0";
                        function SVGTintFilter(t, e, i, r, s) {
                            this.filterManager = e;
                            var a = createNS("feColorMatrix");
                            a.setAttribute("type", "matrix"),
                                a.setAttribute("color-interpolation-filters", "linearRGB"),
                                a.setAttribute("values", linearFilterValue + " 1 0"),
                                (this.linearFilter = a),
                                a.setAttribute("result", r + "_tint_1"),
                                t.appendChild(a),
                                (a = createNS("feColorMatrix")).setAttribute("type", "matrix"),
                                a.setAttribute("color-interpolation-filters", "sRGB"),
                                a.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
                                a.setAttribute("result", r + "_tint_2"),
                                t.appendChild(a),
                                (this.matrixFilter = a);
                            var n = this.createMergeNode(r, [s, r + "_tint_1", r + "_tint_2"]);
                            t.appendChild(n);
                        }
                        function SVGFillFilter(t, e, i, r) {
                            this.filterManager = e;
                            var s = createNS("feColorMatrix");
                            s.setAttribute("type", "matrix"),
                                s.setAttribute("color-interpolation-filters", "sRGB"),
                                s.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
                                s.setAttribute("result", r),
                                t.appendChild(s),
                                (this.matrixFilter = s);
                        }
                        function SVGStrokeEffect(t, e, i) {
                            (this.initialized = !1), (this.filterManager = e), (this.elem = i), (this.paths = []);
                        }
                        function SVGTritoneFilter(t, e, i, r) {
                            this.filterManager = e;
                            var s = createNS("feColorMatrix");
                            s.setAttribute("type", "matrix"),
                                s.setAttribute("color-interpolation-filters", "linearRGB"),
                                s.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"),
                                t.appendChild(s);
                            var a = createNS("feComponentTransfer");
                            a.setAttribute("color-interpolation-filters", "sRGB"), a.setAttribute("result", r), (this.matrixFilter = a);
                            var n = createNS("feFuncR");
                            n.setAttribute("type", "table"), a.appendChild(n), (this.feFuncR = n);
                            var o = createNS("feFuncG");
                            o.setAttribute("type", "table"), a.appendChild(o), (this.feFuncG = o);
                            var l = createNS("feFuncB");
                            l.setAttribute("type", "table"), a.appendChild(l), (this.feFuncB = l), t.appendChild(a);
                        }
                        function SVGProLevelsFilter(t, e, i, r) {
                            this.filterManager = e;
                            var s = this.filterManager.effectElements,
                                a = createNS("feComponentTransfer");
                            (s[10].p.k || 0 !== s[10].p.v || s[11].p.k || 1 !== s[11].p.v || s[12].p.k || 1 !== s[12].p.v || s[13].p.k || 0 !== s[13].p.v || s[14].p.k || 1 !== s[14].p.v) && (this.feFuncR = this.createFeFunc("feFuncR", a)),
                                (s[17].p.k || 0 !== s[17].p.v || s[18].p.k || 1 !== s[18].p.v || s[19].p.k || 1 !== s[19].p.v || s[20].p.k || 0 !== s[20].p.v || s[21].p.k || 1 !== s[21].p.v) &&
                                    (this.feFuncG = this.createFeFunc("feFuncG", a)),
                                (s[24].p.k || 0 !== s[24].p.v || s[25].p.k || 1 !== s[25].p.v || s[26].p.k || 1 !== s[26].p.v || s[27].p.k || 0 !== s[27].p.v || s[28].p.k || 1 !== s[28].p.v) &&
                                    (this.feFuncB = this.createFeFunc("feFuncB", a)),
                                (s[31].p.k || 0 !== s[31].p.v || s[32].p.k || 1 !== s[32].p.v || s[33].p.k || 1 !== s[33].p.v || s[34].p.k || 0 !== s[34].p.v || s[35].p.k || 1 !== s[35].p.v) &&
                                    (this.feFuncA = this.createFeFunc("feFuncA", a)),
                                (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) && (a.setAttribute("color-interpolation-filters", "sRGB"), t.appendChild(a)),
                                (s[3].p.k || 0 !== s[3].p.v || s[4].p.k || 1 !== s[4].p.v || s[5].p.k || 1 !== s[5].p.v || s[6].p.k || 0 !== s[6].p.v || s[7].p.k || 1 !== s[7].p.v) &&
                                    ((a = createNS("feComponentTransfer")).setAttribute("color-interpolation-filters", "sRGB"),
                                    a.setAttribute("result", r),
                                    t.appendChild(a),
                                    (this.feFuncRComposed = this.createFeFunc("feFuncR", a)),
                                    (this.feFuncGComposed = this.createFeFunc("feFuncG", a)),
                                    (this.feFuncBComposed = this.createFeFunc("feFuncB", a)));
                        }
                        function SVGDropShadowEffect(t, e, i, r, s) {
                            var a = e.container.globalData.renderConfig.filterSize,
                                n = e.data.fs || a;
                            t.setAttribute("x", n.x || a.x), t.setAttribute("y", n.y || a.y), t.setAttribute("width", n.width || a.width), t.setAttribute("height", n.height || a.height), (this.filterManager = e);
                            var o = createNS("feGaussianBlur");
                            o.setAttribute("in", "SourceAlpha"), o.setAttribute("result", r + "_drop_shadow_1"), o.setAttribute("stdDeviation", "0"), (this.feGaussianBlur = o), t.appendChild(o);
                            var l = createNS("feOffset");
                            l.setAttribute("dx", "25"), l.setAttribute("dy", "0"), l.setAttribute("in", r + "_drop_shadow_1"), l.setAttribute("result", r + "_drop_shadow_2"), (this.feOffset = l), t.appendChild(l);
                            var h = createNS("feFlood");
                            h.setAttribute("flood-color", "#00ff00"), h.setAttribute("flood-opacity", "1"), h.setAttribute("result", r + "_drop_shadow_3"), (this.feFlood = h), t.appendChild(h);
                            var c = createNS("feComposite");
                            c.setAttribute("in", r + "_drop_shadow_3"), c.setAttribute("in2", r + "_drop_shadow_2"), c.setAttribute("operator", "in"), c.setAttribute("result", r + "_drop_shadow_4"), t.appendChild(c);
                            var d = this.createMergeNode(r, [r + "_drop_shadow_4", s]);
                            t.appendChild(d);
                        }
                        extendPrototype([SVGComposableEffect], SVGTintFilter),
                            (SVGTintFilter.prototype.renderFrame = function (t) {
                                if (t || this.filterManager._mdf) {
                                    var e = this.filterManager.effectElements[0].p.v,
                                        i = this.filterManager.effectElements[1].p.v,
                                        r = this.filterManager.effectElements[2].p.v / 100;
                                    this.linearFilter.setAttribute("values", linearFilterValue + " " + r + " 0"),
                                        this.matrixFilter.setAttribute("values", i[0] - e[0] + " 0 0 0 " + e[0] + " " + (i[1] - e[1]) + " 0 0 0 " + e[1] + " " + (i[2] - e[2]) + " 0 0 0 " + e[2] + " 0 0 0 1 0");
                                }
                            }),
                            (SVGFillFilter.prototype.renderFrame = function (t) {
                                if (t || this.filterManager._mdf) {
                                    var e = this.filterManager.effectElements[2].p.v,
                                        i = this.filterManager.effectElements[6].p.v;
                                    this.matrixFilter.setAttribute("values", "0 0 0 0 " + e[0] + " 0 0 0 0 " + e[1] + " 0 0 0 0 " + e[2] + " 0 0 0 " + i + " 0");
                                }
                            }),
                            (SVGStrokeEffect.prototype.initialize = function () {
                                var t,
                                    e,
                                    i,
                                    r,
                                    s = this.elem.layerElement.children || this.elem.layerElement.childNodes;
                                for (
                                    1 === this.filterManager.effectElements[1].p.v ? ((r = this.elem.maskManager.masksProperties.length), (i = 0)) : (r = 1 + (i = this.filterManager.effectElements[0].p.v - 1)),
                                        (e = createNS("g")).setAttribute("fill", "none"),
                                        e.setAttribute("stroke-linecap", "round"),
                                        e.setAttribute("stroke-dashoffset", 1);
                                    i < r;
                                    i += 1
                                )
                                    (t = createNS("path")), e.appendChild(t), this.paths.push({ p: t, m: i });
                                if (3 === this.filterManager.effectElements[10].p.v) {
                                    var a = createNS("mask"),
                                        n = createElementID();
                                    a.setAttribute("id", n), a.setAttribute("mask-type", "alpha"), a.appendChild(e), this.elem.globalData.defs.appendChild(a);
                                    var o = createNS("g");
                                    for (o.setAttribute("mask", "url(" + getLocationHref() + "#" + n + ")"); s[0]; ) o.appendChild(s[0]);
                                    this.elem.layerElement.appendChild(o), (this.masker = a), e.setAttribute("stroke", "#fff");
                                } else if (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) {
                                    if (2 === this.filterManager.effectElements[10].p.v) for (s = this.elem.layerElement.children || this.elem.layerElement.childNodes; s.length; ) this.elem.layerElement.removeChild(s[0]);
                                    this.elem.layerElement.appendChild(e), this.elem.layerElement.removeAttribute("mask"), e.setAttribute("stroke", "#fff");
                                }
                                (this.initialized = !0), (this.pathMasker = e);
                            }),
                            (SVGStrokeEffect.prototype.renderFrame = function (t) {
                                var e;
                                this.initialized || this.initialize();
                                var i,
                                    r,
                                    s = this.paths.length;
                                for (e = 0; e < s; e += 1)
                                    if (
                                        -1 !== this.paths[e].m &&
                                        ((i = this.elem.maskManager.viewData[this.paths[e].m]),
                                        (r = this.paths[e].p),
                                        (t || this.filterManager._mdf || i.prop._mdf) && r.setAttribute("d", i.lastPath),
                                        t ||
                                            this.filterManager.effectElements[9].p._mdf ||
                                            this.filterManager.effectElements[4].p._mdf ||
                                            this.filterManager.effectElements[7].p._mdf ||
                                            this.filterManager.effectElements[8].p._mdf ||
                                            i.prop._mdf)
                                    ) {
                                        var a;
                                        if (0 !== this.filterManager.effectElements[7].p.v || 100 !== this.filterManager.effectElements[8].p.v) {
                                            var n = 0.01 * Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v),
                                                o = 0.01 * Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v),
                                                l = r.getTotalLength();
                                            a = "0 0 0 " + l * n + " ";
                                            var h,
                                                c = l * (o - n),
                                                d = 1 + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * 0.01,
                                                u = Math.floor(c / d);
                                            for (h = 0; h < u; h += 1) a += "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * 0.01 + " ";
                                            a += "0 " + 10 * l + " 0 0";
                                        } else a = "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * 0.01;
                                        r.setAttribute("stroke-dasharray", a);
                                    }
                                if (
                                    ((t || this.filterManager.effectElements[4].p._mdf) && this.pathMasker.setAttribute("stroke-width", 2 * this.filterManager.effectElements[4].p.v),
                                    (t || this.filterManager.effectElements[6].p._mdf) && this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v),
                                    (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) && (t || this.filterManager.effectElements[3].p._mdf))
                                ) {
                                    var p = this.filterManager.effectElements[3].p.v;
                                    this.pathMasker.setAttribute("stroke", "rgb(" + bmFloor(255 * p[0]) + "," + bmFloor(255 * p[1]) + "," + bmFloor(255 * p[2]) + ")");
                                }
                            }),
                            (SVGTritoneFilter.prototype.renderFrame = function (t) {
                                if (t || this.filterManager._mdf) {
                                    var e = this.filterManager.effectElements[0].p.v,
                                        i = this.filterManager.effectElements[1].p.v,
                                        r = this.filterManager.effectElements[2].p.v,
                                        s = r[0] + " " + i[0] + " " + e[0],
                                        a = r[1] + " " + i[1] + " " + e[1],
                                        n = r[2] + " " + i[2] + " " + e[2];
                                    this.feFuncR.setAttribute("tableValues", s), this.feFuncG.setAttribute("tableValues", a), this.feFuncB.setAttribute("tableValues", n);
                                }
                            }),
                            (SVGProLevelsFilter.prototype.createFeFunc = function (t, e) {
                                var i = createNS(t);
                                return i.setAttribute("type", "table"), e.appendChild(i), i;
                            }),
                            (SVGProLevelsFilter.prototype.getTableValue = function (t, e, i, r, s) {
                                for (var a, n, o = 0, l = Math.min(t, e), h = Math.max(t, e), c = Array.call(null, { length: 256 }), d = 0, u = s - r, p = e - t; o <= 256; )
                                    (n = (a = o / 256) <= l ? (p < 0 ? s : r) : a >= h ? (p < 0 ? r : s) : r + u * Math.pow((a - t) / p, 1 / i)), (c[d] = n), (d += 1), (o += 256 / 255);
                                return c.join(" ");
                            }),
                            (SVGProLevelsFilter.prototype.renderFrame = function (t) {
                                if (t || this.filterManager._mdf) {
                                    var e,
                                        i = this.filterManager.effectElements;
                                    this.feFuncRComposed &&
                                        (t || i[3].p._mdf || i[4].p._mdf || i[5].p._mdf || i[6].p._mdf || i[7].p._mdf) &&
                                        ((e = this.getTableValue(i[3].p.v, i[4].p.v, i[5].p.v, i[6].p.v, i[7].p.v)),
                                        this.feFuncRComposed.setAttribute("tableValues", e),
                                        this.feFuncGComposed.setAttribute("tableValues", e),
                                        this.feFuncBComposed.setAttribute("tableValues", e)),
                                        this.feFuncR &&
                                            (t || i[10].p._mdf || i[11].p._mdf || i[12].p._mdf || i[13].p._mdf || i[14].p._mdf) &&
                                            ((e = this.getTableValue(i[10].p.v, i[11].p.v, i[12].p.v, i[13].p.v, i[14].p.v)), this.feFuncR.setAttribute("tableValues", e)),
                                        this.feFuncG &&
                                            (t || i[17].p._mdf || i[18].p._mdf || i[19].p._mdf || i[20].p._mdf || i[21].p._mdf) &&
                                            ((e = this.getTableValue(i[17].p.v, i[18].p.v, i[19].p.v, i[20].p.v, i[21].p.v)), this.feFuncG.setAttribute("tableValues", e)),
                                        this.feFuncB &&
                                            (t || i[24].p._mdf || i[25].p._mdf || i[26].p._mdf || i[27].p._mdf || i[28].p._mdf) &&
                                            ((e = this.getTableValue(i[24].p.v, i[25].p.v, i[26].p.v, i[27].p.v, i[28].p.v)), this.feFuncB.setAttribute("tableValues", e)),
                                        this.feFuncA &&
                                            (t || i[31].p._mdf || i[32].p._mdf || i[33].p._mdf || i[34].p._mdf || i[35].p._mdf) &&
                                            ((e = this.getTableValue(i[31].p.v, i[32].p.v, i[33].p.v, i[34].p.v, i[35].p.v)), this.feFuncA.setAttribute("tableValues", e));
                                }
                            }),
                            extendPrototype([SVGComposableEffect], SVGDropShadowEffect),
                            (SVGDropShadowEffect.prototype.renderFrame = function (t) {
                                if (t || this.filterManager._mdf) {
                                    if (
                                        ((t || this.filterManager.effectElements[4].p._mdf) && this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4), t || this.filterManager.effectElements[0].p._mdf)
                                    ) {
                                        var e = this.filterManager.effectElements[0].p.v;
                                        this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(255 * e[0]), Math.round(255 * e[1]), Math.round(255 * e[2])));
                                    }
                                    if (
                                        ((t || this.filterManager.effectElements[1].p._mdf) && this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255),
                                        t || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf)
                                    ) {
                                        var i = this.filterManager.effectElements[3].p.v,
                                            r = (this.filterManager.effectElements[2].p.v - 90) * degToRads,
                                            s = i * Math.cos(r),
                                            a = i * Math.sin(r);
                                        this.feOffset.setAttribute("dx", s), this.feOffset.setAttribute("dy", a);
                                    }
                                }
                            });
                        var _svgMatteSymbols = [];
                        function SVGMatte3Effect(t, e, i) {
                            (this.initialized = !1),
                                (this.filterManager = e),
                                (this.filterElem = t),
                                (this.elem = i),
                                (i.matteElement = createNS("g")),
                                i.matteElement.appendChild(i.layerElement),
                                i.matteElement.appendChild(i.transformedElement),
                                (i.baseElement = i.matteElement);
                        }
                        function SVGGaussianBlurEffect(t, e, i, r) {
                            t.setAttribute("x", "-100%"), t.setAttribute("y", "-100%"), t.setAttribute("width", "300%"), t.setAttribute("height", "300%"), (this.filterManager = e);
                            var s = createNS("feGaussianBlur");
                            s.setAttribute("result", r), t.appendChild(s), (this.feGaussianBlur = s);
                        }
                        function TransformEffect() {}
                        function SVGTransformEffect(t, e) {
                            this.init(e);
                        }
                        function CVTransformEffect(t) {
                            this.init(t);
                        }
                        return (
                            (SVGMatte3Effect.prototype.findSymbol = function (t) {
                                for (var e = 0, i = _svgMatteSymbols.length; e < i; ) {
                                    if (_svgMatteSymbols[e] === t) return _svgMatteSymbols[e];
                                    e += 1;
                                }
                                return null;
                            }),
                            (SVGMatte3Effect.prototype.replaceInParent = function (t, e) {
                                var i = t.layerElement.parentNode;
                                if (i) {
                                    for (var r, s = i.children, a = 0, n = s.length; a < n && s[a] !== t.layerElement; ) a += 1;
                                    a <= n - 2 && (r = s[a + 1]);
                                    var o = createNS("use");
                                    o.setAttribute("href", "#" + e), r ? i.insertBefore(o, r) : i.appendChild(o);
                                }
                            }),
                            (SVGMatte3Effect.prototype.setElementAsMask = function (t, e) {
                                if (!this.findSymbol(e)) {
                                    var i = createElementID(),
                                        r = createNS("mask");
                                    r.setAttribute("id", e.layerId), r.setAttribute("mask-type", "alpha"), _svgMatteSymbols.push(e);
                                    var s = t.globalData.defs;
                                    s.appendChild(r);
                                    var a = createNS("symbol");
                                    a.setAttribute("id", i), this.replaceInParent(e, i), a.appendChild(e.layerElement), s.appendChild(a);
                                    var n = createNS("use");
                                    n.setAttribute("href", "#" + i), r.appendChild(n), (e.data.hd = !1), e.show();
                                }
                                t.setMatte(e.layerId);
                            }),
                            (SVGMatte3Effect.prototype.initialize = function () {
                                for (var t = this.filterManager.effectElements[0].p.v, e = this.elem.comp.elements, i = 0, r = e.length; i < r; ) e[i] && e[i].data.ind === t && this.setElementAsMask(this.elem, e[i]), (i += 1);
                                this.initialized = !0;
                            }),
                            (SVGMatte3Effect.prototype.renderFrame = function () {
                                this.initialized || this.initialize();
                            }),
                            (SVGGaussianBlurEffect.prototype.renderFrame = function (t) {
                                if (t || this.filterManager._mdf) {
                                    var e = 0.3 * this.filterManager.effectElements[0].p.v,
                                        i = this.filterManager.effectElements[1].p.v,
                                        r = 3 == i ? 0 : e,
                                        s = 2 == i ? 0 : e;
                                    this.feGaussianBlur.setAttribute("stdDeviation", r + " " + s);
                                    var a = 1 == this.filterManager.effectElements[2].p.v ? "wrap" : "duplicate";
                                    this.feGaussianBlur.setAttribute("edgeMode", a);
                                }
                            }),
                            (TransformEffect.prototype.init = function (t) {
                                (this.effectsManager = t), (this.type = effectTypes.TRANSFORM_EFFECT), (this.matrix = new Matrix()), (this.opacity = -1), (this._mdf = !1), (this._opMdf = !1);
                            }),
                            (TransformEffect.prototype.renderFrame = function (t) {
                                if (((this._opMdf = !1), (this._mdf = !1), t || this.effectsManager._mdf)) {
                                    var e = this.effectsManager.effectElements,
                                        i = e[0].p.v,
                                        r = e[1].p.v,
                                        s = 1 === e[2].p.v,
                                        a = e[3].p.v,
                                        n = s ? a : e[4].p.v,
                                        o = e[5].p.v,
                                        l = e[6].p.v,
                                        h = e[7].p.v;
                                    this.matrix.reset(),
                                        this.matrix.translate(-i[0], -i[1], i[2]),
                                        this.matrix.scale(0.01 * n, 0.01 * a, 1),
                                        this.matrix.rotate(-h * degToRads),
                                        this.matrix.skewFromAxis(-o * degToRads, (l + 90) * degToRads),
                                        this.matrix.translate(r[0], r[1], 0),
                                        (this._mdf = !0),
                                        this.opacity !== e[8].p.v && ((this.opacity = e[8].p.v), (this._opMdf = !0));
                                }
                            }),
                            extendPrototype([TransformEffect], SVGTransformEffect),
                            extendPrototype([TransformEffect], CVTransformEffect),
                            registerRenderer("canvas", CanvasRenderer),
                            registerRenderer("html", HybridRenderer),
                            registerRenderer("svg", SVGRenderer),
                            ShapeModifiers.registerModifier("tm", TrimModifier),
                            ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier),
                            ShapeModifiers.registerModifier("rp", RepeaterModifier),
                            ShapeModifiers.registerModifier("rd", RoundCornersModifier),
                            ShapeModifiers.registerModifier("zz", ZigZagModifier),
                            ShapeModifiers.registerModifier("op", OffsetPathModifier),
                            setExpressionsPlugin(Expressions),
                            setExpressionInterfaces(getInterface),
                            initialize$1(),
                            initialize(),
                            registerEffect$1(20, SVGTintFilter, !0),
                            registerEffect$1(21, SVGFillFilter, !0),
                            registerEffect$1(22, SVGStrokeEffect, !1),
                            registerEffect$1(23, SVGTritoneFilter, !0),
                            registerEffect$1(24, SVGProLevelsFilter, !0),
                            registerEffect$1(25, SVGDropShadowEffect, !0),
                            registerEffect$1(28, SVGMatte3Effect, !1),
                            registerEffect$1(29, SVGGaussianBlurEffect, !0),
                            registerEffect$1(35, SVGTransformEffect, !1),
                            registerEffect(35, CVTransformEffect),
                            lottie
                        );
                    }),
                    (module.exports = factory()));
            },
            86768: (t, e, i) => {
                var r = {
                    "./components/accordion/brad-accordion.entry.js": 8385,
                    "./components/alert/brad-alert.entry.js": 850,
                    "./components/badge/brad-badge.entry.js": 97889,
                    "./components/bottom-sheet-expansive/brad-bottom-sheet-expansive.entry.js": 54334,
                    "./components/bottom-sheet/brad-bottom-sheet.entry.js": 87669,
                    "./components/breadcrumbs/brad-breadcrumbs.entry.js": 25561,
                    "./components/button/brad-button.entry.js": 37498,
                    "./components/calendar/brad-calendar.entry.js": 17563,
                    "./components/card/brad-card.entry.js": 76796,
                    "./components/carousel/brad-carousel.entry.js": 55029,
                    "./components/charts/brad-charts.entry.js": 80929,
                    "./components/drag-and-drop/brad-drag-and-drop.entry.js": 8454,
                    "./components/dropdown/brad-dropdown.entry.js": 77590,
                    "./components/filter/brad-filter.entry.js": 56780,
                    "./components/forms/checkbox/brad-checkbox.entry.js": 92780,
                    "./components/forms/chip/brad-chip.entry.js": 76946,
                    "./components/forms/form-field/text-field-code/brad-text-field-code.entry.js": 76371,
                    "./components/forms/form-field/text-field-number/brad-text-field-number.entry.js": 42293,
                    "./components/forms/form-field/text-field-quantity/brad-text-field-quantity.entry.js": 1762,
                    "./components/forms/form-field/text-field-search/brad-text-field-search.entry.js": 16240,
                    "./components/forms/form-field/text-field-select/brad-text-field-select.entry.js": 28493,
                    "./components/forms/form-field/text-field/brad-text-field.entry.js": 96770,
                    "./components/forms/radio-button/brad-radio-button.entry.js": 66935,
                    "./components/forms/slider/brad-slider.entry.js": 2765,
                    "./components/forms/switch/brad-switch.entry.js": 96973,
                    "./components/hide-text/brad-hide-text.entry.js": 29786,
                    "./components/infobar/brad-infobar.entry.js": 72427,
                    "./components/input-uploader/brad-input-uploader.entry.js": 589,
                    "./components/list-item/brad-list-item.entry.js": 10799,
                    "./components/load-more/brad-load-more.entry.js": 57694,
                    "./components/modal/brad-modal.entry.js": 9668,
                    "./components/navbar/brad-navbar.entry.js": 18375,
                    "./components/overlay/brad-overlay.entry.js": 13886,
                    "./components/pagination-bullets/brad-pagination-bullets.entry.js": 961,
                    "./components/pagination/brad-pagination.entry.js": 44045,
                    "./components/popover/brad-popover.entry.js": 9634,
                    "./components/popover/popover-default/brad-popover-default.entry.js": 63039,
                    "./components/popover/popover-stepper/brad-popover-stepper.entry.js": 64745,
                    "./components/progress-bar/brad-progress-bar.entry.js": 34531,
                    "./components/progress-stepper/brad-progress-stepper.entry.js": 40273,
                    "./components/quickbutton/brad-quickbutton.entry.js": 88950,
                    "./components/rating/brad-rating.entry.js": 65725,
                    "./components/side-sheet/brad-side-sheet.entry.js": 5603,
                    "./components/snackbar/brad-snackbar.entry.js": 81315,
                    "./components/table/brad-table.entry.js": 14333,
                    "./components/tabs/brad-tabs.entry.js": 35357,
                    "./components/tag/brad-tag.entry.js": 34223,
                    "./components/text-link/brad-text-link.entry.js": 81017,
                    "./components/timeline-stepper/brad-timeline-stepper.entry.js": 95881,
                    "./components/timeline/brad-timeline.entry.js": 76940,
                    "./services/animation/brad-animation.entry.js": 93265,
                    "./services/infinite-scroll/brad-infinite-scroll.entry.js": 67445,
                    "./templates/calendar-template/brad-calendar-template.entry.js": 17116,
                    "./templates/feedback/brad-feedback.entry.js": 77901,
                };
                function s(t) {
                    var e = a(t);
                    return i(e);
                }
                function a(t) {
                    if (!i.o(r, t)) {
                        var e = new Error("Cannot find module '" + t + "'");
                        throw ((e.code = "MODULE_NOT_FOUND"), e);
                    }
                    return r[t];
                }
                (s.keys = function () {
                    return Object.keys(r);
                }),
                    (s.resolve = a),
                    (t.exports = s),
                    (s.id = 86768);
            },
            96144: (t, e, i) => {
                i(99365);
            },
            8385: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(86155);
                r.Z.add("BradAccordionService", s.I);
            },
            86155: (t, e, i) => {
                "use strict";
                function r(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                i.d(e, { I: () => s });
                class s {
                    static getInstances(t = []) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new s(t);
                    }
                    constructor(t) {
                        return (
                            r(this, "accordionClass", "brad-accordion"),
                            r(this, "accordionContentClass", `${this.accordionClass}__content`),
                            r(this, "accordionHeaderClass", `${this.accordionClass}__header`),
                            r(this, "accordionOpenClass", `${this.accordionClass}--open`),
                            r(this, "accordionDisabledClass", `${this.accordionClass}--disabled`),
                            (this.targetSelector = null == t ? void 0 : t.targetSelector),
                            (this.eAccordion = document.querySelector(this.targetSelector)),
                            this.eAccordion && ((this.eContent = this.eAccordion.querySelector(`.${this.accordionContentClass}`)), (this.eContent.ariaHidden = !0)),
                            this
                        );
                    }
                    toggle(t, e = !1) {
                        return this.updateElementAccordionBySelector(t), e && s.closeAll(this.eAccordion), this.isOpen() ? this.close() : this.open(), this;
                    }
                    open(t) {
                        return this.updateElementAccordionBySelector(t), this.eAccordion.classList.add(this.accordionOpenClass), (this.eAccordion.querySelector(`.${this.accordionContentClass}`).ariaHidden = !1), this;
                    }
                    close(t) {
                        return this.updateElementAccordionBySelector(t), this.eAccordion.classList.remove(this.accordionOpenClass), (this.eAccordion.querySelector(`.${this.accordionContentClass}`).ariaHidden = !0), this;
                    }
                    updateElementAccordionBySelector(t) {
                        this.eAccordion = t ? document.querySelector(t) : this.eAccordion;
                    }
                    isOpen() {
                        return this.eAccordion.classList.contains(this.accordionOpenClass);
                    }
                    disable(t) {
                        return this.updateElementAccordionBySelector(t), this.eAccordion.classList.add(this.accordionDisabledClass), (this.eAccordion.querySelector(`.${this.accordionHeaderClass}`).disabled = !0), this;
                    }
                    enable(t) {
                        return this.updateElementAccordionBySelector(t), this.eAccordion.classList.remove(this.accordionDisabledClass), (this.eAccordion.querySelector(`.${this.accordionHeaderClass}`).disabled = !1), this;
                    }
                    static closeAll(t) {
                        document.querySelectorAll(".brad-accordion").forEach((e) => {
                            t !== e && (e.classList.remove("brad-accordion--open"), (e.querySelector(".brad-accordion__content").ariaHidden = !0));
                        });
                    }
                    static toggleAllByContainer(t, e = !1) {
                        document
                            .querySelector(t)
                            .querySelectorAll(".brad-accordion")
                            .forEach((t) => {
                                e
                                    ? (t.classList.remove("brad-accordion--open"), (t.querySelector(".brad-accordion__content").ariaHidden = !0))
                                    : (t.classList.add("brad-accordion--open"), (t.querySelector(".brad-accordion__content").ariaHidden = !1));
                            });
                    }
                }
            },
            850: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            97889: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(80892);
                r.Z.add("BradBadgeService", s.E);
            },
            80892: (t, e, i) => {
                "use strict";
                i.d(e, { E: () => a });
                var r = i(35696);
                function s(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class a {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new a(t);
                    }
                    constructor(t) {
                        return s(this, "badge", void 0), s(this, "eActualValue", void 0), s(this, "eMaxValue", void 0), this.init(t);
                    }
                    init(t) {
                        var e = t.targetSelector,
                            i = t.value,
                            r = t.maxValue,
                            s = void 0 === r ? 999 : r;
                        (this.badge = document.querySelector(e)), (this.eActualValue = i), (this.eMaxValue = s), this.limitValue(this.eActualValue, this.eMaxValue);
                    }
                    limitValue(t, e) {
                        e > 999 && (this.eMaxValue = 999), this.updateValue(t);
                    }
                    updateValue(t) {
                        (this.eActualValue = (0, r._)(t, this.eMaxValue)), (this.badge.innerHTML = this.eActualValue);
                    }
                }
            },
            54334: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(35686);
                r.Z.add("BradBottomSheetExpansiveService", s.P);
            },
            35686: (t, e, i) => {
                "use strict";
                i.d(e, { P: () => l });
                var r = i(55988),
                    s = i(9328),
                    a = i(16656);
                function n(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                var o = ["tap", "drag"];
                class l {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new l(t);
                    }
                    constructor(t) {
                        return (
                            n(this, "show", !1),
                            n(this, "startDragHeight", 0),
                            n(this, "totalPercentThatCanGrow", 0),
                            n(this, "currentContentMaxHeight", 0),
                            n(this, "totalContentHeight", 0),
                            n(this, "isDragged", !1),
                            n(this, "isGrabbing", !1),
                            n(this, "direction", 0),
                            n(this, "prefixClass", "brad-bottom-sheet"),
                            n(this, "bottomSheetExpansiveClass", `${this.prefixClass}-expansive`),
                            n(this, "bottomSheetExpansiveOpenedClass", `${this.bottomSheetExpansiveClass}--opened`),
                            n(this, "headerClass", `${this.prefixClass}-expansive__header`),
                            n(this, "headerGrabbingClass", `${this.headerClass}--grabbing`),
                            n(this, "contentClass", `${this.prefixClass}-expansive__content`),
                            n(this, "timeout", 250),
                            this.init(t)
                        );
                    }
                    init(t) {
                        this.throwExceptionWhenOptionsNull(t);
                        var e = t.targetSelector,
                            i = t.state,
                            s = void 0 === i ? "tap" : i,
                            a = t.maxHeight,
                            n = void 0 === a ? 100 : a,
                            o = t.overlayOpacityClass,
                            l = void 0 === o ? "brad-bg-overlay-40" : o,
                            h = t.clickOutsideClose,
                            c = void 0 === h || h,
                            d = t.removeBodyScroll,
                            u = void 0 === d || d,
                            p = t.isLeavingScreenMode,
                            m = void 0 !== p && p;
                        if (
                            ((this.targetSelector = e),
                            (this.state = s),
                            (this.maxHeight = Number(n)),
                            (this.overlayOpacityClass = l),
                            (this.clickOutsideClose = c),
                            (this.removeBodyScroll = u),
                            (this.isLeavingScreenMode = m),
                            this.validate(),
                            (this.eBottomSheetExpansive = document.querySelector(this.targetSelector)),
                            !this.eBottomSheetExpansive)
                        )
                            throw new r.s(r.A.ELEMENT_NOT_FOUND, `Component with (selector: ${this.targetSelector}) not found.`);
                        this.getShowByHTMLWhenCreateNewInstanceWithSameID(), this.setState(), this.getElementsInsideBottomSheetExpansive(), this.createOverlay(), this.getTotalPercentThatCanGrow(), this.initListeners();
                    }
                    throwExceptionWhenOptionsNull(t) {
                        if (!0 !== Boolean(t)) throw new r.s(r.A.VALUE_IS_REQUIRED, "Options is required and must have at least property targetSelector.");
                    }
                    validate() {
                        var t = [
                            { conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: r.A.SELECTOR_NOT_SPECIFIED, messageError: "TargetSelector is required." },
                            { conditional: () => !1 === o.includes(this.state), exceptionCode: r.A.VALUE_NOT_ALLOWED, messageError: "State must be tap or drag." },
                            { conditional: () => this.maxHeight < 0 || this.maxHeight > 100, exceptionCode: r.A.VALUE_NOT_ALLOWED, messageError: `maxHeight received ${this.maxHeight} but must be a value between 0 or 100.` },
                        ];
                        s.a.validate(t);
                    }
                    getShowByHTMLWhenCreateNewInstanceWithSameID() {
                        this.show = !(!this.eBottomSheetExpansive || !this.eBottomSheetExpansive.classList.contains(this.bottomSheetExpansiveOpenedClass));
                    }
                    setState() {
                        this.eBottomSheetExpansive.classList.add(`${this.bottomSheetExpansiveClass}--${this.state}`),
                            this.isLeavingScreenMode && this.eBottomSheetExpansive.classList.add(`${this.bottomSheetExpansiveClass}--leaving-screen-mode`);
                    }
                    getElementsInsideBottomSheetExpansive() {
                        (this.eHeader = this.eBottomSheetExpansive.getElementsByClassName(this.headerClass)[0]), (this.eContent = this.eBottomSheetExpansive.getElementsByClassName(this.contentClass)[0]);
                    }
                    createOverlay() {
                        var t = { overlayOpacityClass: this.overlayOpacityClass, clickOutsideClose: this.clickOutsideClose, targetSelector: this.targetSelector, removeBodyScroll: this.removeBodyScroll };
                        (this.bradOverlayService = a.FX.getInstance(t)), this.bradOverlayService.createOverlay();
                    }
                    initListeners() {
                        this.all(), this.mobile(), this.desktop();
                    }
                    all() {
                        this.eHeader.addEventListener("click", () => {
                            this.toggleByTap();
                        }),
                            this.eContent.addEventListener("scroll", () => this.addElevationToHeaderWhileScrolling()),
                            (this.eOverlay = this.bradOverlayService.getElementEvent()),
                            this.eOverlay.addEventListener("close", () => {
                                this.hideOverlay();
                            });
                    }
                    toggleByTap() {
                        this.isStateTapOrIsNotDragged() && this.toggle();
                    }
                    isStateTapOrIsNotDragged() {
                        return /iphone|ipod|android|ie|blackberry|fennec/.test(navigator.userAgent.toLowerCase()) || "tap" === this.state || !1 === this.isDragged;
                    }
                    mobile() {
                        this.eHeader.addEventListener("touchstart", (t) => this.startDragOnTouch(t)),
                            this.eHeader.addEventListener("touchmove", (t) => this.moveBottomSheetOnDragMoveY(t)),
                            this.eHeader.addEventListener("touchend", (t) => this.completeToggleOnDrop());
                    }
                    desktop() {
                        this.eHeader.addEventListener("mousedown", (t) => {
                            this.startDragOnTouch(t);
                        }),
                            this.eHeader.addEventListener("mousemove", (t) => this.moveBottomSheetOnDragMoveY(t)),
                            this.eHeader.addEventListener("mouseup", () => this.completeToggleOnDrop());
                    }
                    getTotalPercentThatCanGrow() {
                        this.totalPercentThatCanGrow = (this.maxHeight / 100) * window.innerHeight;
                    }
                    toggle() {
                        return !1 === this.show ? this.open() : this.close(), this;
                    }
                    open() {
                        if (this.eBottomSheetExpansive)
                            return (
                                (this.show = !0),
                                this.showOverlay(),
                                this.isLeavingScreenMode && (this.eBottomSheetExpansive.style.bottom = "0px"),
                                (this.eContent.style.transition = `all ${this.timeout}ms ease-in-out`),
                                (this.eContent.style.maxHeight = `${this.totalPercentThatCanGrow}px`),
                                (this.eContent.style.paddingBottom = "var(--brad-padding-xl)"),
                                this.eBottomSheetExpansive.classList.add(this.bottomSheetExpansiveOpenedClass),
                                setTimeout(() => {
                                    this.eContent.style.overflow = "auto";
                                }, this.timeout),
                                this.autoFocus(),
                                this.dispatchOpenEvent(this.eBottomSheetExpansive),
                                this
                            );
                    }
                    dispatchOpenEvent(t) {
                        (this.openedEvent = new CustomEvent("opened", { detail: { elementChanged: t } })), this.eBottomSheetExpansive.dispatchEvent(this.openedEvent);
                    }
                    autoFocus() {
                        setTimeout(() => {
                            this.eContent.focus();
                        }, 200);
                    }
                    hideOverlay() {
                        if (this.eBottomSheetExpansive)
                            return (
                                (this.show = !1),
                                (this.isGrabbing = !1),
                                setTimeout(() => {
                                    this.isDragged = !1;
                                }, this.timeout),
                                (this.eContent.style.paddingBottom = "0px"),
                                (this.eContent.style.maxHeight = "0px"),
                                (this.eContent.style.overflow = "hidden"),
                                this.eBottomSheetExpansive.classList.remove(this.bottomSheetExpansiveOpenedClass),
                                (document.querySelector("body").style.overflow = "auto"),
                                this.isLeavingScreenMode && (this.eBottomSheetExpansive.style.bottom = "-100vh"),
                                this
                            );
                    }
                    showOverlay() {
                        this.bradOverlayService.open();
                    }
                    close() {
                        this.eBottomSheetExpansive && (this.hideOverlay(), this.bradOverlayService.close(), this.dispatchCloseEvent(this.eBottomSheetExpansive));
                    }
                    dispatchCloseEvent(t) {
                        (this.closedEvent = new CustomEvent("closed", { detail: { elementChanged: t } })), this.eBottomSheetExpansive.dispatchEvent(this.closedEvent);
                    }
                    startDragOnTouch(t) {
                        this.isStateDragAndNotGrabbing() && (this.removeBodyScrollWhenDragging(), (this.isGrabbing = !0), this.eHeader.classList.add(this.headerGrabbingClass), (this.startDragHeight = this.getHeightByResolution(t)));
                    }
                    isStateDragAndNotGrabbing() {
                        return "drag" === this.state && !1 === this.isGrabbing;
                    }
                    removeBodyScrollWhenDragging() {
                        document.querySelector("body").style.overflow = "hidden";
                    }
                    moveBottomSheetOnDragMoveY(t) {
                        if (this.isStateDragAndGrabbing()) {
                            this.showOverlay();
                            var e = this.getHeightByResolution(t);
                            (this.currentDragHeight = e),
                                this.startDragHeight !== e &&
                                    ((this.direction = this.startDragHeight - e), (this.startDragHeight = e), (this.show = !0), (this.isDragged = !0), this.moveBottomSheetWhileDraggedHeightLessThanMaximumHeight(e));
                        }
                    }
                    getHeightByResolution(t) {
                        return t.changedTouches ? window.innerHeight - t.changedTouches[0].clientY - 24 : window.innerHeight - t.clientY - 24;
                    }
                    isStateDragAndGrabbing() {
                        return "drag" === this.state && !0 === this.isGrabbing;
                    }
                    moveBottomSheetWhileDraggedHeightLessThanMaximumHeight(t) {
                        t > 0 &&
                            this.isDraggedHeightLessThanTotalPercentThatCanGrow(t) &&
                            ((this.eContent.style.maxHeight = "none"), (this.totalContentHeight = this.eContent.getBoundingClientRect().height), (this.eContent.style.maxHeight = `${t}px`), (this.currentContentMaxHeight = t));
                    }
                    isDraggedHeightLessThanTotalPercentThatCanGrow(t) {
                        return t <= this.totalPercentThatCanGrow;
                    }
                    completeToggleOnDrop() {
                        this.isStateDragAndIsGrabbing() &&
                            ((this.isGrabbing = !1),
                            this.eContent && ((this.eContent.style.transition = "all 250ms ease-in-out"), this.eHeader.classList.remove(this.headerGrabbingClass), this.isDragged && (this.isDraggedToTop() ? this.open() : this.close())));
                    }
                    isDraggedToTop() {
                        return this.direction < 0;
                    }
                    isStateDragAndIsGrabbing() {
                        return "drag" === this.state && !0 === this.isGrabbing;
                    }
                    addElevationToHeaderWhileScrolling() {
                        var t = "brad-bottom-sheet-expansive__header--scroll";
                        Number(this.eContent.scrollTop) > 0 ? this.eHeader.classList.add(t) : this.eHeader.classList.remove(t);
                    }
                    destroy() {
                        this.destroyByElement(this.eHeader), this.destroyByElement(this.eContent), this.bradOverlayService.destroy();
                    }
                    destroyByElement(t) {
                        var e = t.cloneNode(!0);
                        t.parentNode.replaceChild(e, t);
                    }
                }
            },
            87669: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(19522);
                r.Z.add("BradBottomSheetService", s.v);
            },
            19522: (t, e, i) => {
                "use strict";
                i.d(e, { v: () => l });
                var r = i(55988),
                    s = i(9328),
                    a = i(16656);
                function n(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                var o = ["fixed", "modal"];
                class l {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new l(t);
                    }
                    constructor(t) {
                        return (
                            n(this, "show", !1),
                            n(this, "bottomSheetClass", "brad-bottom-sheet"),
                            n(this, "bottomSheetOpenedClass", `${this.bottomSheetClass}--opened`),
                            n(this, "bottomSheetFixedClass", `${this.bottomSheetClass}--fixed`),
                            n(this, "bottomSheetModalClass", `${this.bottomSheetClass}--modal`),
                            n(this, "timeout", 250),
                            n(this, "hideTimeout", null),
                            this.init(t)
                        );
                    }
                    init(t) {
                        try {
                            this.throwExceptionWhenOptionsNull(t);
                            var e = t.targetSelector,
                                i = t.state,
                                s = void 0 === i ? "fixed" : i,
                                a = t.overlayOpacityClass,
                                n = void 0 === a ? "brad-bg-overlay-40" : a,
                                o = t.clickOutsideClose,
                                l = void 0 === o || o,
                                h = t.removeBodyScroll,
                                c = void 0 === h || h;
                            if (
                                ((this.targetSelector = e),
                                (this.state = s),
                                (this.overlayOpacityClass = n),
                                (this.clickOutsideClose = l),
                                (this.removeBodyScroll = c),
                                this.validate(),
                                (this.eBottomSheet = document.querySelector(this.targetSelector)),
                                !this.eBottomSheet)
                            )
                                throw new r.s(r.A.ELEMENT_NOT_FOUND, `Component with (selector: ${this.targetSelector}) not found.`);
                            this.getShowByHTMLWhenCreateNewInstanceWithSameID(), this.setState(), this.createOverlay(), this.initListeners();
                        } catch (t) {}
                        return this;
                    }
                    throwExceptionWhenOptionsNull(t) {
                        if (!0 !== Boolean(t)) throw new r.s(r.A.VALUE_IS_REQUIRED, "Options is required and must have at least property targetSelector.");
                    }
                    validate() {
                        var t = [
                            { conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: r.A.SELECTOR_NOT_SPECIFIED, messageError: "Selector is required." },
                            { conditional: () => !1 === o.includes(this.state), exceptionCode: r.A.VALUE_NOT_ALLOWED, messageError: "State must be fixed or modal." },
                        ];
                        s.a.validate(t);
                    }
                    getShowByHTMLWhenCreateNewInstanceWithSameID() {
                        this.show = !(!this.eBottomSheet || !this.eBottomSheet.classList.contains(this.bottomSheetOpenedClass));
                    }
                    setState() {
                        this.eBottomSheet.classList.add(`${this.bottomSheetClass}--${this.state}`);
                    }
                    createOverlay() {
                        if ("fixed" !== this.state) {
                            var t = { overlayOpacityClass: this.overlayOpacityClass, clickOutsideClose: this.clickOutsideClose, targetSelector: this.targetSelector, removeBodyScroll: this.removeBodyScroll };
                            (this.bradOverlayService = a.FX.getInstance(t)), this.bradOverlayService.createOverlay();
                        }
                    }
                    initListeners() {
                        this.isStateModal() &&
                            ((this.eOverlay = this.bradOverlayService.getElementEvent()),
                            this.eOverlay.addEventListener("close", () => {
                                this.hideOverlay();
                            }));
                    }
                    toggle() {
                        return !1 === this.show ? this.open() : this.close(), this;
                    }
                    open() {
                        if (this.eBottomSheet)
                            return (
                                (this.show = !0),
                                this.eBottomSheet.classList.add("block"),
                                setTimeout(() => {
                                    this.eBottomSheet.classList.add(this.bottomSheetOpenedClass), this.hideTimeout && (clearTimeout(this.hideTimeout), (this.hideTimeout = null));
                                }, 50),
                                this.showOverlay(),
                                this.dispatchOpenEvent(this.eBottomSheet),
                                this
                            );
                    }
                    dispatchOpenEvent(t) {
                        (this.openedEvent = new CustomEvent("opened", { detail: { elementChanged: t } })), this.eBottomSheet.dispatchEvent(this.openedEvent);
                    }
                    close() {
                        if (this.eBottomSheet) return this.hideOverlay(), this.isStateModal() && this.bradOverlayService.close(), this.dispatchCloseEvent(this.eBottomSheet), this;
                    }
                    dispatchCloseEvent(t) {
                        (this.closedEvent = new CustomEvent("closed", { detail: { elementChanged: t } })), this.eBottomSheet.dispatchEvent(this.closedEvent);
                    }
                    showOverlay() {
                        this.isStateModal() && this.bradOverlayService.open();
                    }
                    hideOverlay() {
                        if (this.eBottomSheet)
                            return (
                                (this.show = !1),
                                (this.hideTimeout = setTimeout(() => {
                                    this.eBottomSheet.classList.remove("block"), (this.hideTimeout = null);
                                }, 800)),
                                this.eBottomSheet.classList.remove(this.bottomSheetOpenedClass),
                                this
                            );
                    }
                    destroy() {
                        this.isStateModal() && this.bradOverlayService.destroy();
                    }
                    isStateModal() {
                        return "modal" === this.state;
                    }
                }
            },
            25561: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(16444);
                function a(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class n {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new n(t);
                    }
                    constructor(t) {
                        return (
                            a(this, "breadcrumb", null),
                            a(this, "listContainer", null),
                            a(this, "list", null),
                            a(this, "dropdown", null),
                            a(this, "dropdownContainer", null),
                            a(this, "dropdownBtn", null),
                            a(this, "itemsWidth", []),
                            this.init(t)
                        );
                    }
                    init(t) {
                        var e = t.targetSelector,
                            i = t.dropdownSelector;
                        (this.breadcrumb = document.querySelector(e)),
                            (this.listContainer = this.breadcrumb.querySelector(".brad-breadcrumbs__list")),
                            (this.list = this.breadcrumb.querySelectorAll(".brad-breadcrumbs__item")),
                            (this.dropdown = document.querySelector(i)),
                            (this.dropdownContainer = this.dropdown.querySelector(".brad-dropdown__dropdown-content")),
                            (this.dropdownBtn = this.breadcrumb.querySelector(".brad-breadcrumbs__dropdown")),
                            Array.from(this.list).forEach((t) => {
                                this.itemsWidth.push(t.offsetWidth);
                            }),
                            s.B.getInstance({ targetSelector: i, enabledOutsideClick: !0 }),
                            this.initListeners();
                    }
                    calculateWidth(t) {
                        return Array.from(t).reduce((t, e) => t + e.offsetWidth, 0);
                    }
                    showDropdownBtn(t) {
                        t.length >= 1 ? (this.dropdownBtn.style.display = "flex") : (this.dropdownBtn.style.display = "none");
                    }
                    truncate(t, e) {
                        for (var i = [...t], r = []; i.length > 2 && this.calculateWidth(i) + this.dropdownBtn.offsetWidth > e; ) {
                            var s = i.splice(1, 1)[0];
                            r.splice(0, 0, s), this.showDropdownBtn(r);
                        }
                        return r;
                    }
                    handleTruncation() {
                        var t = this.breadcrumb.offsetWidth,
                            e = this.truncate(this.list, t);
                        e.forEach((t) => {
                            -1 !== Array.from(this.listContainer.children).indexOf(t) && this.listContainer.removeChild(t);
                        }),
                            e.forEach((t) => {
                                t.classList.remove("brad-breadcrumbs__item"), t.querySelector("a").classList.add("brad-list-item"), t.querySelector("a").classList.add("brad-list-item--line-bottom"), this.dropdownContainer.appendChild(t);
                            }),
                            3 == this.listContainer.children.length ? (this.listContainer.lastElementChild.style.overflow = "hidden") : (this.listContainer.lastElementChild.style.overflow = "inherit"),
                            this.returnToBreadcrumb();
                    }
                    returnToBreadcrumb() {
                        var t = this.breadcrumb.offsetWidth,
                            e = Array.from(this.dropdownContainer.children),
                            i = Array.from(this.listContainer.children),
                            r = this.dropdownContainer.firstElementChild,
                            s = e.length;
                        s > 0 &&
                            this.calculateWidth([...this.list]) + this.dropdownBtn.offsetWidth + this.itemsWidth[s] <= t &&
                            (r.classList.add("brad-breadcrumbs__item"),
                            r.querySelector("a").classList.remove("brad-list-item"),
                            r.querySelector("a").classList.remove("brad-list-item--line-bottom"),
                            this.dropdownContainer.removeChild(r),
                            i.splice(2, 0, r),
                            (this.listContainer.innerHTML = ""),
                            i.forEach((t) => {
                                this.listContainer.appendChild(t);
                            })),
                            this.showDropdownBtn(e);
                    }
                    handleListener() {
                        return () => {
                            this.breadcrumb && this.dropdown && ((this.listContainer.style.flexWrap = "nowrap"), this.handleTruncation());
                        };
                    }
                    initListeners() {
                        window.addEventListener("load", this.handleListener(), !0), window.addEventListener("resize", this.handleListener(), !0);
                    }
                }
                r.Z.add("BradBreadcrumbsService", n);
            },
            37498: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            17563: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(50481);
                r.Z.add("BradCalendarService", s.E);
            },
            50481: (t, e, i) => {
                "use strict";
                i.d(e, { E: () => d });
                var r = i(55988);
                function s(t, e) {
                    var i = ("undefined" != typeof Symbol && t[Symbol.iterator]) || t["@@iterator"];
                    if (!i) {
                        if (
                            Array.isArray(t) ||
                            (i = (function (t, e) {
                                if (!t) return;
                                if ("string" == typeof t) return a(t, e);
                                var i = Object.prototype.toString.call(t).slice(8, -1);
                                "Object" === i && t.constructor && (i = t.constructor.name);
                                if ("Map" === i || "Set" === i) return Array.from(t);
                                if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return a(t, e);
                            })(t)) ||
                            (e && t && "number" == typeof t.length)
                        ) {
                            i && (t = i);
                            var r = 0,
                                s = function () {};
                            return {
                                s,
                                n: function () {
                                    return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] };
                                },
                                e: function (t) {
                                    throw t;
                                },
                                f: s,
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var n,
                        o = !0,
                        l = !1;
                    return {
                        s: function () {
                            i = i.call(t);
                        },
                        n: function () {
                            var t = i.next();
                            return (o = t.done), t;
                        },
                        e: function (t) {
                            (l = !0), (n = t);
                        },
                        f: function () {
                            try {
                                o || null == i.return || i.return();
                            } finally {
                                if (l) throw n;
                            }
                        },
                    };
                }
                function a(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var i = 0, r = new Array(e); i < e; i++) r[i] = t[i];
                    return r;
                }
                function n(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class o {
                    constructor(t) {
                        n(this, "calendarElement", null),
                            n(this, "calendarType", "day"),
                            n(this, "containerElement", null),
                            n(this, "date", null),
                            n(this, "dateStartSelected", !1),
                            n(this, "allowedPeriods", null),
                            n(this, "calendarYearButtonElement", null),
                            n(this, "calendarMonthButtonElement", null),
                            n(this, "previousNavigationButtonElement", null),
                            n(this, "nextNavigationButtonElement", null),
                            n(this, "addClickEventOnCell", null),
                            n(this, "selectedDates", []),
                            n(this, "hasInterval", null),
                            n(this, "manualSelection", null),
                            n(this, "delaySetTimeOut", []),
                            n(this, "selectedMonths", []),
                            n(this, "selectedYears", []),
                            n(this, "startYearOfDecade", void 0),
                            n(this, "totalYearPerCalendar", 12),
                            n(this, "listMode", !1),
                            n(this, "monthsStr", ["Janeiro", "Fevereiro", "MarÃ§o", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"]),
                            n(this, "weekdaysStr", ["Domingo", "Segunda-feira", "TerÃ§a-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "SÃ¡bado"]);
                        var e = t.calendarType,
                            i = t.containerElement,
                            r = t.date,
                            s = t.selectedDates,
                            a = t.dateStartSelected,
                            o = t.hasInterval,
                            l = t.manualSelection,
                            h = t.allowedPeriods,
                            c = t.calendarYearButtonElement,
                            d = t.calendarMonthButtonElement,
                            u = t.previousNavigationButtonElement,
                            p = t.nextNavigationButtonElement,
                            m = t.addClickEventOnCell,
                            f = t.addClickEventOnCalendarYearButtonElement,
                            g = t.addClickEventOnCalendarMonthButtonElement,
                            v = t.listMode,
                            b = t.startYear,
                            y = t.totalYears;
                        this.setCalendarType(e),
                            this.setContainerElement(i),
                            this.setDate(r),
                            this.setSelectedDates(s),
                            this.setDateStartSelected(a),
                            this.setHasInterval(o),
                            this.setManualSelection(l),
                            this.setAllowedPeriods(h),
                            this.setCalendarYearButtonElement(c),
                            this.setCalendarMonthButtonElement(d),
                            this.setPreviousNavigationButtonElement(u),
                            this.setNextNavigationButtonElement(p),
                            this.setAddClickEventOnCell(m),
                            this.setListMode(v),
                            this.setStartYearOfDecade(b),
                            this.setTotalYearsPerCalendar(y),
                            this.getContainerElement() &&
                                this.getDate() &&
                                this.getCalendarYearButtonElement() &&
                                this.getCalendarMonthButtonElement() &&
                                this.getPreviousNavigationButtonElement() &&
                                this.getNextNavigationButtonElement() &&
                                (this.addClickEventOnCalendarYearButtonElement(f),
                                this.addClickEventOnCalendarMonthButtonElement(g),
                                this.addClickEventOnPreviousNavigationButtonElement(),
                                this.addClickEventOnNextNavigationButtonElement(),
                                this.refreshAriaLabelNavButtons());
                    }
                    setCalendarType(t) {
                        return "string" == typeof t ? ((this.calendarType = t), this) : null;
                    }
                    getCalendarType() {
                        return this.calendarType;
                    }
                    setContainerElement(t) {
                        return t instanceof HTMLElement ? ((this.calendarElement = t), (this.containerElement = t.querySelector(".brad-calendar__sheets")), this) : null;
                    }
                    getContainerElement() {
                        return this.containerElement;
                    }
                    setDate(t) {
                        return t instanceof Date ? ((this.date = t), this) : null;
                    }
                    getDate() {
                        return this.date;
                    }
                    setSelectedDates(t) {
                        return t instanceof Array ? ((this.selectedDates = t), this.selectedMonths.push(this.getDate()), this.selectedYears.push(this.getDate()), this) : null;
                    }
                    setDateStartSelected(t) {
                        return "boolean" == typeof t ? ((this.dateStartSelected = t), this) : null;
                    }
                    getDateStartSelected() {
                        return this.dateStartSelected;
                    }
                    setHasInterval(t) {
                        return "boolean" == typeof t ? ((this.hasInterval = t), this) : null;
                    }
                    getHasInterval() {
                        return this.hasInterval;
                    }
                    setManualSelection(t) {
                        return "boolean" == typeof t ? ((this.manualSelection = t), this) : null;
                    }
                    getManualSelection() {
                        return this.manualSelection;
                    }
                    setAllowedPeriods(t) {
                        return Array.isArray(t) && t.length ? ((this.allowedPeriods = t), this) : null;
                    }
                    getAllowedPeriods() {
                        return this.allowedPeriods;
                    }
                    setListMode(t) {
                        return "boolean" == typeof t ? ((this.listMode = t), this) : null;
                    }
                    getListMode() {
                        return this.listMode;
                    }
                    setCalendarYearButtonElement(t) {
                        return t instanceof HTMLElement ? ((this.calendarYearButtonElement = t), this) : null;
                    }
                    setCalendarMonthButtonElement(t) {
                        return t instanceof HTMLElement ? ((this.calendarMonthButtonElement = t), this) : null;
                    }
                    setupCalendarYearButtonElement(t) {
                        if (t instanceof HTMLElement) {
                            this.calendarYearButtonElement = t;
                            var e = t.querySelector("span"),
                                i = this.getDate().getFullYear();
                            return "year" != this.getCalendarType() ? this.closeYearButton(t) : this.openYearButton(t), (e.innerHTML = `${i}`), this;
                        }
                        return null;
                    }
                    closeYearButton(t) {
                        t.classList.remove("open");
                        var e = this.getDate().getFullYear();
                        (t.ariaLive = "off"), (t.ariaLabel = `Ano ${e} selecionado, pressione para selecionar em uma lista.`);
                    }
                    openYearButton(t) {
                        t.classList.add("open");
                        var e = this.getStartYearOfDecade(),
                            i = new Date(e, 0);
                        (i = i.getFullYear() + this.totalYearPerCalendar - 1), (t.ariaLive = "polite"), (t.ariaLabel = `Lista de anos de ${e} a ${i}`);
                    }
                    setupCalendarMonthButtonElement(t) {
                        if (t instanceof HTMLElement) {
                            this.calendarMonthButtonElement = t;
                            var e = t.querySelector("span"),
                                i = this.getDate().toLocaleDateString("pt-BR", { month: "long" });
                            return "month" != this.getCalendarType() ? this.closeMonthButton(t) : this.openMonthButton(t), (e.innerHTML = `${i}`), this;
                        }
                        return null;
                    }
                    closeMonthButton(t) {
                        t.classList.remove("open");
                        var e = this.getDate().toLocaleDateString("pt-BR", { month: "long" });
                        (t.ariaLive = "off"), (t.ariaLabel = `MÃªs ${e} selecionado, pressione para selecionar em uma lista.`);
                    }
                    openMonthButton(t) {
                        t.classList.add("open"), (t.ariaLive = "polite"), (t.ariaLabel = "Lista de meses de Janeiro a Dezembro");
                    }
                    setStartYearOfDecade(t) {
                        return (this.startYearOfDecade = t), this;
                    }
                    getStartYearOfDecade() {
                        return this.startYearOfDecade;
                    }
                    setTotalYearsPerCalendar(t) {
                        this.totalYearPerCalendar = t;
                    }
                    showNavs() {
                        (this.previousNavigationButtonElement.style.display = ""), (this.nextNavigationButtonElement.style.display = "");
                    }
                    hideNavs() {
                        (this.previousNavigationButtonElement.style.display = "none"), (this.nextNavigationButtonElement.style.display = "none");
                    }
                    getCalendarYearButtonElement() {
                        return this.calendarYearButtonElement;
                    }
                    getCalendarMonthButtonElement() {
                        return this.calendarMonthButtonElement;
                    }
                    setPreviousNavigationButtonElement(t) {
                        return t instanceof HTMLElement ? ((this.previousNavigationButtonElement = t), this) : null;
                    }
                    getPreviousNavigationButtonElement() {
                        return this.previousNavigationButtonElement;
                    }
                    setNextNavigationButtonElement(t) {
                        return t instanceof HTMLElement ? ((this.nextNavigationButtonElement = t), this) : null;
                    }
                    getNextNavigationButtonElement() {
                        return this.nextNavigationButtonElement;
                    }
                    setAddClickEventOnCell(t) {
                        return (this.addClickEventOnCell = t), this;
                    }
                    getAddClickEventOnCell() {
                        return this.addClickEventOnCell;
                    }
                    addClickEventOnCalendarYearButtonElement(t) {
                        this.getCalendarYearButtonElement().onclick = (e) => {
                            if ("function" == typeof t) {
                                var i = {};
                                (i.event = e), (i.date = this.getDate()), t(i);
                            }
                        };
                    }
                    addClickEventOnCalendarMonthButtonElement(t) {
                        this.getCalendarMonthButtonElement().onclick = (e) => {
                            if ("function" == typeof t) {
                                var i = {};
                                (i.event = e), (i.date = this.getDate()), t(i);
                            }
                        };
                    }
                    addClickEventOnPreviousNavigationButtonElement() {
                        this.getPreviousNavigationButtonElement().onclick = () => {
                            this.clickEventPreviousNavigationButtonElement();
                        };
                    }
                    clickEventPreviousNavigationButtonElement() {
                        this.setDateStartSelected(!1);
                        var t = this.getFirstYear() - this.totalYearPerCalendar;
                        this.setStartYearOfDecade(t), this.refreshAriaLabelNavButtons(), this.build();
                    }
                    addClickEventOnNextNavigationButtonElement() {
                        this.getNextNavigationButtonElement().onclick = () => {
                            this.clickEventNextNavigationButtonElement();
                        };
                    }
                    clickEventNextNavigationButtonElement() {
                        this.setDateStartSelected(!1);
                        var t = this.getLastYear() + 1;
                        this.setStartYearOfDecade(t), this.refreshAriaLabelNavButtons(), this.build();
                    }
                    refreshAriaLabelNavButtons() {
                        var t = this.getStartYearOfDecade(),
                            e = new Date(t, 0);
                        (e = e.getFullYear() + this.totalYearPerCalendar - 1),
                            (this.getPreviousNavigationButtonElement().ariaLabel = "Vai para a lista de anos anterior, lista atual " + t + " a " + e),
                            (this.getNextNavigationButtonElement().ariaLabel = "Vai para a prÃ³xima lista de anos, a lista atual " + t + " a " + e),
                            this.getDate().getFullYear();
                    }
                    refreshAriaLabelCellInterval() {
                        var t = [
                            (t, e) => {},
                            (t, e) => {
                                this.getSelectedDates()[0].getTime() == t.getTime() && this.getHasInterval() && (e.ariaLabel += " primeira data do intervalo, escolha mais um para fechar o intervalo");
                            },
                            (t, e) => {
                                this.getSelectedDates()[0] && this.getSelectedDates()[0].getTime() == t.getTime()
                                    ? (e.ariaLabel += " inicio da data do intervalo")
                                    : this.getSelectedDates()[1].getTime() == t.getTime()
                                    ? (e.ariaLabel += " fim da data do intervalo")
                                    : this.getSelectedDates()[0] && this.getSelectedDates()[0] < t && this.getSelectedDates()[1] > t && (e.ariaLabel += " dentro do intervalo");
                            },
                        ];
                        this.getAllCellElements().forEach((e) => {
                            var i = e.dataset.day,
                                r = parseInt(e.dataset.month) - 1,
                                s = e.dataset.year,
                                a = new Date(s, r, i),
                                n = this.monthsStr[r];
                            (e.ariaLabel = "Dia " + a.getDate() + " de " + n + " de " + s + " "), t[this.getSelectedDates().length](a, e);
                        });
                    }
                    clickEventOnDayCellElement(t) {
                        var e = t.target;
                        2 == this.getSelectedDates().length
                            ? (this.clearSelectedCellElements(), this.clearMarkInterval(), e.classList.add("selected"), (e.ariaChecked = "true"), this.addSelectedDayByCellElement(e), this.refreshAriaLabelCellInterval())
                            : (this.getHasInterval() || this.clearSelectedCellElements(),
                              e.classList.add("selected"),
                              (e.ariaChecked = "true"),
                              this.clearMarkInterval(),
                              this.addSelectedDayByCellElement(e),
                              this.markInterval(),
                              this.refreshAriaLabelCellInterval());
                    }
                    refreshMarkDays() {
                        this.clearSelectedMarks(), this.clearMarkInterval(), this.markAllSelectedDays(), this.markInterval(), this.refreshAriaLabelCellInterval();
                    }
                    clickEventOnMonthCellElement(t) {
                        var e = t.target;
                        return this.clearSelectedCellElements(), e.classList.add("selected"), (e.ariaChecked = "true"), this.addSelectedMonthByCellElement(e), !0;
                    }
                    clickEventOnYearCellElement(t) {
                        var e = t.target;
                        return this.clearSelectedCellElements(), e.classList.add("selected"), (e.ariaChecked = "true"), this.addSelectedYearByCellElement(e), !0;
                    }
                    clearSelectedCellElements() {
                        (this.selectedDates = []), (this.selectedMonths = []), (this.selectedYears = []), this.clearSelectedMarks();
                    }
                    clearSelectedMarks() {
                        var t = this.getContainerElement().parentNode.querySelectorAll(".brad-calendar__cell.selected");
                        return (
                            !!t.length &&
                            (t.forEach((t) => {
                                t.classList.remove("selected"), (t.ariaChecked = "false");
                            }),
                            !0)
                        );
                    }
                    addSelectedDayByCellElement(t) {
                        return this.selectedDates.push(new Date(t.dataset.year, parseInt(t.dataset.month) - 1, t.dataset.day)), this.selectedDates.sort((t, e) => t - e), !0;
                    }
                    addSelectedMonthByCellElement(t) {
                        return this.selectedMonths.push(new Date(t.dataset.year, parseInt(t.dataset.month) - 1, 1)), !0;
                    }
                    addSelectedYearByCellElement(t) {
                        return this.selectedYears.push(new Date(t.dataset.year, 0)), !0;
                    }
                    getSelectedDates() {
                        return this.selectedDates;
                    }
                    getSelectedMonths() {
                        return this.selectedMonths;
                    }
                    getSelectedYear() {
                        return this.selectedYears;
                    }
                    build() {
                        this[this.getCalendarType()]();
                    }
                    day() {
                        return (this.getContainerElement().innerHTML = ""), this.getListMode() ? (this.destroyClones(), this.cloning(), this.mountListMonths()) : this.mountMonth(this.getContainerElement(), this.getDate().getMonth()), !0;
                    }
                    cloning() {
                        var t = document.createElement("div");
                        t.classList.add("container-list");
                        var e = this.getContainerElement().parentNode;
                        e.appendChild(t);
                        var i = e.querySelector(".brad-calendar__weekdays");
                        i.id = "weekdays-0";
                        var r = e.querySelector(".brad-calendar__sheets");
                        (r.id = "sheet-0"), t.appendChild(i), t.appendChild(r);
                        for (var s = 0; s < 11; s++) {
                            var a = i.cloneNode(!0),
                                n = r.cloneNode(!0);
                            a.classList.add("list"), n.classList.add("list");
                            var o = s + 1;
                            (a.id = "weekdays-" + o), (n.id = "sheet-" + o), t.appendChild(a), t.appendChild(n);
                        }
                    }
                    destroyClones() {
                        this.getContainerElement()
                            .parentNode.querySelectorAll(".list")
                            .forEach((t) => {
                                t.remove();
                            });
                        var t = this.calendarElement.querySelector(".brad-calendar__content"),
                            e = t.querySelector(".brad-calendar__sheets"),
                            i = t.querySelector(".brad-calendar__weekdays"),
                            r = t.querySelector(".container-list");
                        t.appendChild(i), t.appendChild(e), r && r.remove();
                    }
                    mountListMonths() {
                        var t = this.getContainerElement().parentNode;
                        t.querySelectorAll(".brad-calendar__sheets").forEach((t, e) => {
                            this.createMonthName(e), this.mountMonth(t, e);
                        });
                        var e = t.querySelector("#monthname-" + this.getDate().getMonth());
                        this.scrollToElement(e);
                    }
                    createMonthName(t) {
                        var e = this.getContainerElement().parentNode,
                            i = e.querySelector("#weekdays-" + t),
                            r = document.createElement("p");
                        r.classList.add("month-name", "list"), (r.id = "monthname-" + t), r.classList.add("brad-calendar__month-title", "brad-font-title-md"), (r.innerHTML = this.monthsStr[t]), e.insertBefore(r, i);
                    }
                    mountMonth(t, e) {
                        for (var i, r = this.firstWeekDayInMonth(e), s = new Date(this.getDate().getFullYear(), e + 1, 0), a = this.daysInMonth(s), n = 0, o = 0; o < a; o++) {
                            var l = (o + r) % 7;
                            if ((0 == o || 0 == l) && ((i = document.createElement("div")).classList.add("brad-calendar__row"), (i.dataset.index = n), n++, t.appendChild(i), 0 == o))
                                for (var h = 0; h < l; h++) {
                                    var c = document.createElement("div");
                                    c.classList.add("brad-calendar__cell-empty"), i.appendChild(c);
                                }
                            var d = s.toLocaleDateString("pt-BR", { month: "numeric" }),
                                u = document.createElement("button");
                            u.classList.add("brad-calendar__cell"),
                                (u.dataset.day = this.padNumber(o + 1, 2)),
                                (u.dataset.month = this.padNumber(d, 1)),
                                (u.dataset.year = this.getDate().getFullYear()),
                                u.setAttribute("role", "checkbox"),
                                (u.tabIndex = 0),
                                (u.ariaLabel = "Dia " + (o + 1) + " do " + d + " de " + this.getDate().getFullYear()),
                                (u.ariaChecked = "false"),
                                (u.innerHTML = this.padNumber(o + 1, 2)),
                                (u.onclick = (t) => {
                                    var e = { type: "day" };
                                    if (this.getManualSelection()) {
                                        var i = t.target;
                                        e.values = [new Date(i.dataset.year, parseInt(i.dataset.month) - 1, i.dataset.day)];
                                    } else this.clickEventOnDayCellElement(t), (e.values = this.getSelectedDates());
                                    (e.event = t), this.getAddClickEventOnCell()(e);
                                }),
                                (u = this.validateIfTheCellIsWithinTheAllowedPeriod(u)),
                                i.appendChild(u);
                        }
                        this.setupCalendarYearButtonElement(this.getCalendarYearButtonElement()),
                            this.setupCalendarMonthButtonElement(this.getCalendarMonthButtonElement()),
                            this.hideNavs(),
                            this.setCurrentDate(),
                            this.markAllSelectedDays(),
                            this.markInterval();
                    }
                    month() {
                        var t;
                        this.destroyClones(), (this.getContainerElement().innerHTML = "");
                        for (var e = 0, i = 0; i < 12; i++) {
                            var r = new Date(this.getDate().getFullYear(), i);
                            (0 != i && i % 3 != 0) || ((t = document.createElement("div")).classList.add("brad-calendar__row"), (t.dataset.index = e), e++, this.getContainerElement().appendChild(t));
                            var s = r.toLocaleDateString("pt-BR", { month: "numeric" }),
                                a = document.createElement("button");
                            a.classList.add("brad-calendar__cell"),
                                (a.dataset.month = this.padNumber(s, 1)),
                                (a.dataset.year = r.getFullYear()),
                                a.setAttribute("role", "checkbox"),
                                (a.tabIndex = 0),
                                (a.innerHTML = r.toLocaleDateString("pt-BR", { month: "long" })),
                                (a.ariaChecked = "false"),
                                (a.onclick = (t) => {
                                    this.clickEventOnMonthCellElement(t);
                                    var e = { type: "month" };
                                    (e.values = this.getSelectedMonths()), (e.event = t), this.getAddClickEventOnCell()(e);
                                }),
                                (a = this.validateIfTheCellIsWithinTheAllowedPeriod(a)),
                                t.appendChild(a);
                        }
                        return (
                            this.setupCalendarYearButtonElement(this.getCalendarYearButtonElement()),
                            this.setupCalendarMonthButtonElement(this.getCalendarMonthButtonElement()),
                            this.hideNavs(),
                            this.setCurrentMonth(),
                            this.markAllSelectedMonths(),
                            !0
                        );
                    }
                    year() {
                        var t;
                        this.destroyClones(), (this.getContainerElement().innerHTML = "");
                        for (var e = 0, i = new Date(this.getStartYearOfDecade(), 0), r = 0; r < this.totalYearPerCalendar; r++) {
                            (0 != r && r % 3 != 0) || ((t = document.createElement("div")).classList.add("brad-calendar__row"), (t.dataset.index = e), e++, this.getContainerElement().appendChild(t));
                            var s = document.createElement("button");
                            s.classList.add("brad-calendar__cell"),
                                (s.dataset.year = i.getFullYear()),
                                (s.innerHTML = i.getFullYear()),
                                s.setAttribute("role", "checkbox"),
                                (s.tabIndex = 0),
                                (s.onclick = (t) => {
                                    this.clickEventOnYearCellElement(t);
                                    var e = { type: "year" };
                                    (e.values = this.getSelectedYear()), (e.event = t), this.getAddClickEventOnCell()(e);
                                }),
                                (s.ariaChecked = "false"),
                                (s = this.validateIfTheCellIsWithinTheAllowedPeriod(s)),
                                t.appendChild(s),
                                (i = new Date(i.getFullYear() + 1, 0));
                        }
                        if (
                            (this.setupCalendarYearButtonElement(this.getCalendarYearButtonElement()),
                            this.setupCalendarMonthButtonElement(this.getCalendarMonthButtonElement()),
                            this.showNavs(),
                            this.setCurrentYear(),
                            this.markAllSelectedYear(),
                            this.getListMode())
                        ) {
                            var a = this.calendarElement.querySelector(".selected");
                            this.scrollToElement(a);
                        }
                        return !0;
                    }
                    validateIfTheCellIsWithinTheAllowedPeriod(t) {
                        if (!this.getAllowedPeriods()) return t;
                        var e = { day: new Date(t.dataset.year, parseInt(t.dataset.month) - 1, t.dataset.day), month: parseInt(t.dataset.year + t.dataset.month), year: parseInt(t.dataset.year) },
                            i = this.getCalendarType(),
                            r = e[i];
                        t.setAttribute("disabled", "");
                        var a,
                            n = s(this.getAllowedPeriods());
                        try {
                            for (n.s(); !(a = n.n()).done; ) {
                                var o = a.value,
                                    l = {
                                        dayStart: o.start,
                                        dayEnd: o.end,
                                        monthStart: o.start.getFullYear() + this.padNumber(o.start.getMonth() + 1, 2),
                                        monthEnd: o.end.getFullYear() + this.padNumber(o.end.getMonth() + 1, 2),
                                        yearStart: parseInt(o.start.getFullYear()),
                                        yearEnd: parseInt(o.end.getFullYear()),
                                    };
                                r >= l[i + "Start"] && r <= l[i + "End"] && (t.classList.remove("disabled"), t.removeAttribute("disabled"));
                            }
                        } catch (t) {
                            n.e(t);
                        } finally {
                            n.f();
                        }
                        return t;
                    }
                    setCurrentDate() {
                        var t = new Date(),
                            e = this.padNumber(t.getDate(), 2),
                            i = this.padNumber(t.toLocaleDateString("pt-BR", { month: "numeric" }), 1),
                            r = t.getFullYear(),
                            s = this.findCellElementByDate(e, i, r);
                        return !!s && (s.classList.add("current"), !0);
                    }
                    markAllSelectedDays() {
                        this.selectedDates.forEach((t) => {
                            var e = t,
                                i = e.getDate();
                            i = this.padNumber(i, 2);
                            var r = e.getMonth() + 1;
                            r = this.padNumber(r, 2);
                            var s = e.getFullYear(),
                                a = this.findCellElementByDate(i, r, s);
                            a && (a.classList.add("selected"), (a.ariaChecked = "true"));
                        });
                    }
                    getAllCellElements() {
                        return this.getContainerElement().parentNode.querySelectorAll(".brad-calendar__cell");
                    }
                    clearMarkInterval() {
                        this.getContainerElement()
                            .parentNode.querySelectorAll(".interval")
                            .forEach((t) => {
                                t.classList.remove("interval"), t.classList.remove("no-animation");
                            });
                    }
                    clearDelaySetTimeout() {
                        this.delaySetTimeOut.forEach((t) => {
                            clearTimeout(t);
                        });
                    }
                    markInterval() {
                        if (2 == this.getSelectedDates().length && this.getAllCellElements() && this.getHasInterval()) {
                            this.clearDelaySetTimeout();
                            var t = 70,
                                e = t;
                            this.getAllCellElements().forEach((i) => {
                                var r = i.dataset.day,
                                    s = parseInt(i.dataset.month) - 1,
                                    a = i.dataset.year,
                                    n = new Date(a, s, r);
                                if (n >= this.getSelectedDates()[0] && n <= this.getSelectedDates()[1]) {
                                    var o = "animation";
                                    this.getListMode() && ((t = 0), (o = "no-animation")),
                                        (e += t),
                                        this.delaySetTimeOut.push(
                                            setTimeout(() => {
                                                2 == this.getSelectedDates().length && i.classList.add("interval", o);
                                            }, e)
                                        );
                                }
                            }),
                                this.addClassInSelectedDayElementByIndex(0, "start"),
                                this.addClassInSelectedDayElementByIndex(1, "end");
                        }
                        this.refreshAriaLabelCellInterval();
                    }
                    addClassInSelectedDayElementByIndex(t, e) {
                        var i = this.getSelectedDates()[t];
                        if (i) {
                            var r = this.padNumber(i.getDate(), 2),
                                s = this.padNumber(i.toLocaleDateString("pt-BR", { month: "numeric" }), 1),
                                a = i.getFullYear(),
                                n = this.findCellElementByDate(r, s, a);
                            return n && (n.classList.remove("start"), n.classList.remove("end"), n.classList.add(e)), n;
                        }
                    }
                    firstWeekDayInMonth(t) {
                        return new Date(this.getDate().getFullYear(), t, 1).getDay();
                    }
                    daysInMonth(t) {
                        return t.getDate();
                    }
                    setCurrentMonth() {
                        var t = new Date(),
                            e = this.padNumber(t.toLocaleDateString("pt-BR", { month: "numeric" }), 1),
                            i = t.getFullYear(),
                            r = this.findCellElementByDate(-1, e, i);
                        return !!r && (r.classList.add("current"), !0);
                    }
                    markAllSelectedMonths() {
                        this.getSelectedMonths().forEach((t) => {
                            var e = t,
                                i = e.getMonth() + 1;
                            i = this.padNumber(i, 2);
                            var r = e.getFullYear(),
                                s = this.findCellElementByDate(-1, i, r);
                            s && (s.classList.add("selected"), (s.ariaChecked = "true"));
                        });
                    }
                    setCurrentYear() {
                        var t = new Date().getFullYear(),
                            e = this.findCellElementByDate(-1, -1, t);
                        return !!e && (e.classList.add("current"), !0);
                    }
                    getFirstYear() {
                        return parseInt(this.getContainerElement().querySelector(".brad-calendar__sheets .brad-calendar__cell").textContent);
                    }
                    getLastYear() {
                        var t = this.getContainerElement().querySelectorAll(".brad-calendar__sheets .brad-calendar__cell");
                        return parseInt(t[t.length - 1].textContent);
                    }
                    markAllSelectedYear() {
                        this.getSelectedYear().forEach((t) => {
                            var e = t.getFullYear(),
                                i = this.findCellElementByDate(-1, -1, e);
                            i && (i.classList.add("selected"), (i.ariaChecked = "true"));
                        });
                    }
                    findCellElementByDate(t, e, i) {
                        return (t = -1 != t ? `[data-day="${t}"]` : ""), (e = -1 != e ? `[data-month="${e}"]` : ""), (i = -1 != i ? `[data-year="${i}"]` : ""), this.getContainerElement().parentNode.querySelector(t + e + i);
                    }
                    padNumber(t, e) {
                        var i = Math.pow(10, e);
                        return t < i ? ("" + (i + t)).slice(1) : "" + t;
                    }
                    scrollToElement(t) {
                        var e = this.calendarElement.querySelector(".brad-calendar__content"),
                            i = t.getBoundingClientRect(),
                            r = e.getBoundingClientRect(),
                            s = i.top - r.top;
                        e && e.scrollBy({ top: s, behavior: "smooth" });
                    }
                }
                function l(t, e) {
                    var i = ("undefined" != typeof Symbol && t[Symbol.iterator]) || t["@@iterator"];
                    if (!i) {
                        if (
                            Array.isArray(t) ||
                            (i = (function (t, e) {
                                if (!t) return;
                                if ("string" == typeof t) return h(t, e);
                                var i = Object.prototype.toString.call(t).slice(8, -1);
                                "Object" === i && t.constructor && (i = t.constructor.name);
                                if ("Map" === i || "Set" === i) return Array.from(t);
                                if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return h(t, e);
                            })(t)) ||
                            (e && t && "number" == typeof t.length)
                        ) {
                            i && (t = i);
                            var r = 0,
                                s = function () {};
                            return {
                                s,
                                n: function () {
                                    return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] };
                                },
                                e: function (t) {
                                    throw t;
                                },
                                f: s,
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a,
                        n = !0,
                        o = !1;
                    return {
                        s: function () {
                            i = i.call(t);
                        },
                        n: function () {
                            var t = i.next();
                            return (n = t.done), t;
                        },
                        e: function (t) {
                            (o = !0), (a = t);
                        },
                        f: function () {
                            try {
                                n || null == i.return || i.return();
                            } finally {
                                if (o) throw a;
                            }
                        },
                    };
                }
                function h(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var i = 0, r = new Array(e); i < e; i++) r[i] = t[i];
                    return r;
                }
                function c(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class d {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new d(t);
                    }
                    constructor(t) {
                        c(this, "serviceBuilder", void 0),
                            c(this, "calendar", void 0),
                            c(this, "date", void 0),
                            c(this, "cacheDate", void 0),
                            c(this, "selectedDates", []),
                            c(this, "allowedTypes", ["day", "month", "year"]),
                            c(this, "type", "day"),
                            c(this, "calendarDayWithInterval", !0),
                            c(this, "manualSelection", !1),
                            c(this, "allowedPeriods", []),
                            c(this, "calendarSheets", void 0),
                            c(this, "calendarYearButtonElement", void 0),
                            c(this, "calendarMonthButtonElement", void 0),
                            c(this, "previousNavigationButtonElement", void 0),
                            c(this, "nextNavigationButtonElement", void 0),
                            c(this, "disableCalendarTypeChange", !1),
                            c(this, "listMode", !1),
                            c(this, "startYear", 1900),
                            c(this, "totalYears", 12),
                            c(this, "addClickEventOnCell", () => {});
                        var e = t.targetSelector,
                            i = t.date,
                            r = t.type,
                            s = t.selectedDates,
                            a = t.calendarDayWithInterval,
                            n = t.manualSelection,
                            o = t.allowedPeriods,
                            l = t.addClickEventOnCell,
                            h = t.disableCalendarTypeChange,
                            d = t.listMode,
                            u = t.startYear,
                            p = t.totalYears;
                        this.setCalendar(document.querySelector(e)),
                            this.setDate(i),
                            (this.cacheDate = this.getDate()),
                            this.setType(r),
                            this.setSelectedDates(s),
                            this.setCalendarDayWithInterval(a),
                            this.setManualSelection(n),
                            this.setAllowedPeriods(o),
                            this.setAddClickEventOnCell(l),
                            this.setDisableCalendarTypeChange(h),
                            this.setListMode(d),
                            this.setStartYear(u),
                            this.setTotalYears(p);
                    }
                    setCalendar(t) {
                        return t && t instanceof HTMLElement ? ((this.calendar = t), this) : null;
                    }
                    getCalendar() {
                        return this.calendar;
                    }
                    setDate(t) {
                        return t && t instanceof Date ? ((this.date = t), this) : null;
                    }
                    getDate() {
                        return this.date;
                    }
                    setType(t) {
                        return t && this.allowedTypes.includes(t.toLowerCase()) ? ((this.type = t.toLowerCase()), this) : null;
                    }
                    getType() {
                        return this.type;
                    }
                    setSelectedDates(t) {
                        return t && t instanceof Array ? ((this.selectedDates = t), this.selectedDates.sort((t, e) => t - e), this) : null;
                    }
                    getSelectedDates() {
                        return this.selectedDates;
                    }
                    setCalendarDayWithInterval(t) {
                        return "boolean" == typeof t ? ((this.calendarDayWithInterval = t), this) : null;
                    }
                    getCalendarDayWithInterval() {
                        return this.calendarDayWithInterval;
                    }
                    setManualSelection(t) {
                        return "boolean" == typeof t ? ((this.manualSelection = t), this) : null;
                    }
                    getManualSelection() {
                        return this.manualSelection;
                    }
                    setAllowedPeriods(t) {
                        if (Array.isArray(t)) {
                            var e,
                                i = l(t);
                            try {
                                for (i.s(); !(e = i.n()).done; ) {
                                    var r = e.value;
                                    if (!(r.start && r.start instanceof Date && r.end && r.end instanceof Date)) return null;
                                }
                            } catch (t) {
                                i.e(t);
                            } finally {
                                i.f();
                            }
                            return (this.allowedPeriods = t), this;
                        }
                        return null;
                    }
                    getAllowedPeriod() {
                        return this.allowedPeriods;
                    }
                    setAddClickEventOnCell(t) {
                        return t && (this.addClickEventOnCell = t), this;
                    }
                    getAddClickEventOnCell() {
                        return this.addClickEventOnCell;
                    }
                    setDisableCalendarTypeChange(t) {
                        return "boolean" == typeof t ? ((this.disableCalendarTypeChange = t), this) : null;
                    }
                    getDisableCalendarTypeChange() {
                        return this.disableCalendarTypeChange;
                    }
                    setListMode(t) {
                        return "boolean" == typeof t ? ((this.listMode = t), this) : null;
                    }
                    getListMode() {
                        return this.listMode;
                    }
                    setStartYear(t) {
                        this.getDate() && (this.startYear = this.getDate().getFullYear()), this.getListMode() && ((this.startYear = 1900), t && (this.startYear = t));
                    }
                    getStartYear() {
                        return this.startYear;
                    }
                    setTotalYears(t) {
                        (this.totalYears = 12), this.getListMode() && ((this.totalYears = 300), t && (this.totalYears = t));
                    }
                    getTotalYears() {
                        return this.totalYears;
                    }
                    clickEventCellElement(t) {
                        if (this.getDisableCalendarTypeChange()) return !1;
                        ({
                            year: () => {
                                this.cacheDate != t.values[0] && this.cacheDate.setFullYear(t.values[0].getFullYear()),
                                    this.clearCalendar(),
                                    this.setType("day"),
                                    this.setDate(this.cacheDate),
                                    this.getListMode() || this.setStartYear(this.getDate().getFullYear()),
                                    this.calendarYearButtonElement.focus(),
                                    this.buildCalendar();
                            },
                            month: () => {
                                this.cacheDate != t.values[0] && this.cacheDate.setMonth(t.values[0].getMonth()),
                                    this.setType("day"),
                                    this.setDate(this.cacheDate),
                                    this.clearCalendar(),
                                    this.calendarMonthButtonElement.focus(),
                                    this.buildCalendar();
                            },
                            day: () => {
                                this.getManualSelection() || (this.setDate(t.values[0]), this.setSelectedDates(t.values));
                            },
                        }[this.getType()]());
                    }
                    clickEventCalendarYearButtonElement(t) {
                        if (this.getDisableCalendarTypeChange()) return !1;
                        var e = "year";
                        this.calendarYearButtonElement.classList.contains("open") && (e = "day"), this.setType(e), this.clearCalendar(), this.buildCalendar();
                    }
                    clickEventCalendarMonthButtonElement(t) {
                        if (this.getDisableCalendarTypeChange()) return !1;
                        var e = "month";
                        this.calendarMonthButtonElement.classList.contains("open") && (e = "day"), this.clearCalendar(), this.setType(e), this.setDate(this.cacheDate), this.buildCalendar();
                    }
                    clearCalendar() {
                        this.getCalendar().classList.remove("brad-calendar--year"), this.getCalendar().classList.remove("brad-calendar--month"), this.getCalendar().classList.remove("brad-calendar--day");
                    }
                    buildCalendar() {
                        if (!this.getCalendar() || !this.getDate() || !this.getType())
                            throw new r.s(r.A.ELEMENT_NOT_FOUND, `Calendar(${this.getCalendar()}), Date(${this.getDate()}) and Type(${this.getType()}) is necessary to run buildCalendar function.`);
                        (this.calendarSheets = this.getCalendar().querySelector(".brad-calendar__sheets")),
                            (this.calendarYearButtonElement = this.getCalendar().querySelector(".brad-calendar__btn-year")),
                            (this.calendarMonthButtonElement = this.getCalendar().querySelector(".brad-calendar__btn-month")),
                            (this.previousNavigationButtonElement = this.getCalendar().querySelector(".brad-calendar__btn-prev")),
                            (this.nextNavigationButtonElement = this.getCalendar().querySelector(".brad-calendar__btn-next")),
                            this.getCalendar().classList.add("brad-calendar--" + this.getType()),
                            this.getListMode() ? this.getCalendar().classList.add("list-mode") : this.getCalendar().classList.remove("list-mode"),
                            (this.serviceBuilder = new o({
                                calendarType: this.getType(),
                                containerElement: this.getCalendar(),
                                date: this.getDate(),
                                selectedDates: this.getSelectedDates(),
                                hasInterval: this.getCalendarDayWithInterval(),
                                manualSelection: this.getManualSelection(),
                                allowedPeriods: this.getAllowedPeriod(),
                                calendarYearButtonElement: this.calendarYearButtonElement,
                                calendarMonthButtonElement: this.calendarMonthButtonElement,
                                previousNavigationButtonElement: this.previousNavigationButtonElement,
                                nextNavigationButtonElement: this.nextNavigationButtonElement,
                                listMode: this.listMode,
                                startYear: this.getStartYear(),
                                totalYears: this.getTotalYears(),
                                addClickEventOnCell: (t) => {
                                    this.clickEventCellElement(t), this.getAddClickEventOnCell()(t);
                                },
                                addClickEventOnCalendarYearButtonElement: (t) => {
                                    this.clickEventCalendarYearButtonElement(t);
                                },
                                addClickEventOnCalendarMonthButtonElement: (t) => {
                                    this.clickEventCalendarMonthButtonElement(t);
                                },
                            })),
                            this.serviceBuilder.build();
                    }
                    refreshToDate(t) {
                        this.setDate(t), (this.cacheDate = new Date(t.getFullYear(), t.getMonth(), t.getDate())), this.clearCalendar(), this.buildCalendar();
                    }
                    isValidPeriod(t) {
                        var e,
                            i = !0,
                            r = l(this.getAllowedPeriod());
                        try {
                            for (r.s(); !(e = r.n()).done; ) {
                                var s = e.value;
                                (s.start.getTime() > t.getTime() || s.end.getTime() < t.getTime()) && (i = !1);
                            }
                        } catch (t) {
                            r.e(t);
                        } finally {
                            r.f();
                        }
                        return i;
                    }
                    setInitialInterval(t) {
                        return (
                            !(!this.isValidPeriod(t) || (this.selectedDates[1] && t.getTime() >= this.selectedDates[1].getTime())) &&
                            ((this.selectedDates[0] = t), (this.cacheDate = new Date(t.getFullYear(), t.getMonth(), t.getDate())), this.serviceBuilder.refreshMarkDays(), !0)
                        );
                    }
                    setEndInterval(t) {
                        return (
                            !(!this.isValidPeriod(t) || (this.selectedDates[0] && t.getTime() <= this.selectedDates[0].getTime())) &&
                            ((this.selectedDates[1] = t), (this.cacheDate = new Date(t.getFullYear(), t.getMonth(), t.getDate())), this.serviceBuilder.refreshMarkDays(), !0)
                        );
                    }
                }
            },
            76796: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            55029: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(36915);
                r.Z.add("BradCarouselService", s.f);
            },
            36915: (t, e, i) => {
                "use strict";
                function r(t) {
                    return null !== t && "object" == typeof t && "constructor" in t && t.constructor === Object;
                }
                function s(t, e) {
                    void 0 === t && (t = {}),
                        void 0 === e && (e = {}),
                        Object.keys(e).forEach((i) => {
                            void 0 === t[i] ? (t[i] = e[i]) : r(e[i]) && r(t[i]) && Object.keys(e[i]).length > 0 && s(t[i], e[i]);
                        });
                }
                i.d(e, { f: () => ft });
                var a = {
                    body: {},
                    addEventListener() {},
                    removeEventListener() {},
                    activeElement: { blur() {}, nodeName: "" },
                    querySelector: () => null,
                    querySelectorAll: () => [],
                    getElementById: () => null,
                    createEvent: () => ({ initEvent() {} }),
                    createElement: () => ({ children: [], childNodes: [], style: {}, setAttribute() {}, getElementsByTagName: () => [] }),
                    createElementNS: () => ({}),
                    importNode: () => null,
                    location: { hash: "", host: "", hostname: "", href: "", origin: "", pathname: "", protocol: "", search: "" },
                };
                function n() {
                    var t = "undefined" != typeof document ? document : {};
                    return s(t, a), t;
                }
                var o,
                    l,
                    h,
                    c = {
                        document: a,
                        navigator: { userAgent: "" },
                        location: { hash: "", host: "", hostname: "", href: "", origin: "", pathname: "", protocol: "", search: "" },
                        history: { replaceState() {}, pushState() {}, go() {}, back() {} },
                        CustomEvent: function () {
                            return this;
                        },
                        addEventListener() {},
                        removeEventListener() {},
                        getComputedStyle: () => ({ getPropertyValue: () => "" }),
                        Image() {},
                        Date() {},
                        screen: {},
                        setTimeout() {},
                        clearTimeout() {},
                        matchMedia: () => ({}),
                        requestAnimationFrame: (t) => ("undefined" == typeof setTimeout ? (t(), null) : setTimeout(t, 0)),
                        cancelAnimationFrame(t) {
                            "undefined" != typeof setTimeout && clearTimeout(t);
                        },
                    };
                function d() {
                    var t = "undefined" != typeof window ? window : {};
                    return s(t, c), t;
                }
                function u(t, e) {
                    return void 0 === e && (e = 0), setTimeout(t, e);
                }
                function p() {
                    return Date.now();
                }
                function m(t, e) {
                    void 0 === e && (e = "x");
                    var i,
                        r,
                        s,
                        a = d(),
                        n = (function (t) {
                            var e,
                                i = d();
                            return i.getComputedStyle && (e = i.getComputedStyle(t, null)), !e && t.currentStyle && (e = t.currentStyle), e || (e = t.style), e;
                        })(t);
                    return (
                        a.WebKitCSSMatrix
                            ? ((r = n.transform || n.webkitTransform).split(",").length > 6 &&
                                  (r = r
                                      .split(", ")
                                      .map((t) => t.replace(",", "."))
                                      .join(", ")),
                              (s = new a.WebKitCSSMatrix("none" === r ? "" : r)))
                            : (i = (s = n.MozTransform || n.OTransform || n.MsTransform || n.msTransform || n.transform || n.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,")).toString().split(",")),
                        "x" === e && (r = a.WebKitCSSMatrix ? s.m41 : 16 === i.length ? parseFloat(i[12]) : parseFloat(i[4])),
                        "y" === e && (r = a.WebKitCSSMatrix ? s.m42 : 16 === i.length ? parseFloat(i[13]) : parseFloat(i[5])),
                        r || 0
                    );
                }
                function f(t) {
                    return "object" == typeof t && null !== t && t.constructor && "Object" === Object.prototype.toString.call(t).slice(8, -1);
                }
                function g() {
                    for (var t, e = Object(arguments.length <= 0 ? void 0 : arguments[0]), i = ["__proto__", "constructor", "prototype"], r = 1; r < arguments.length; r += 1) {
                        var s = r < 0 || arguments.length <= r ? void 0 : arguments[r];
                        if (null != s && ((t = s), !("undefined" != typeof window && void 0 !== window.HTMLElement ? t instanceof HTMLElement : t && (1 === t.nodeType || 11 === t.nodeType))))
                            for (var a = Object.keys(Object(s)).filter((t) => i.indexOf(t) < 0), n = 0, o = a.length; n < o; n += 1) {
                                var l = a[n],
                                    h = Object.getOwnPropertyDescriptor(s, l);
                                void 0 !== h && h.enumerable && (f(e[l]) && f(s[l]) ? (s[l].__swiper__ ? (e[l] = s[l]) : g(e[l], s[l])) : !f(e[l]) && f(s[l]) ? ((e[l] = {}), s[l].__swiper__ ? (e[l] = s[l]) : g(e[l], s[l])) : (e[l] = s[l]));
                            }
                    }
                    return e;
                }
                function v(t, e, i) {
                    t.style.setProperty(e, i);
                }
                function b(t) {
                    var e,
                        i = t.swiper,
                        r = t.targetPosition,
                        s = t.side,
                        a = d(),
                        n = -i.translate,
                        o = null,
                        l = i.params.speed;
                    (i.wrapperEl.style.scrollSnapType = "none"), a.cancelAnimationFrame(i.cssModeFrameID);
                    var h = r > n ? "next" : "prev",
                        c = (t, e) => ("next" === h && t >= e) || ("prev" === h && t <= e),
                        u = () => {
                            (e = new Date().getTime()), null === o && (o = e);
                            var t = Math.max(Math.min((e - o) / l, 1), 0),
                                h = 0.5 - Math.cos(t * Math.PI) / 2,
                                d = n + h * (r - n);
                            if ((c(d, r) && (d = r), i.wrapperEl.scrollTo({ [s]: d }), c(d, r)))
                                return (
                                    (i.wrapperEl.style.overflow = "hidden"),
                                    (i.wrapperEl.style.scrollSnapType = ""),
                                    setTimeout(() => {
                                        (i.wrapperEl.style.overflow = ""), i.wrapperEl.scrollTo({ [s]: d });
                                    }),
                                    void a.cancelAnimationFrame(i.cssModeFrameID)
                                );
                            i.cssModeFrameID = a.requestAnimationFrame(u);
                        };
                    u();
                }
                function y(t, e) {
                    return void 0 === e && (e = ""), [...t.children].filter((t) => t.matches(e));
                }
                function w(t) {
                    try {
                        return void console.warn(t);
                    } catch (t) {}
                }
                function x(t, e) {
                    void 0 === e && (e = []);
                    var i = document.createElement(t);
                    return (
                        i.classList.add(
                            ...(Array.isArray(e)
                                ? e
                                : (function (t) {
                                      return (
                                          void 0 === t && (t = ""),
                                          t
                                              .trim()
                                              .split(" ")
                                              .filter((t) => !!t.trim())
                                      );
                                  })(e))
                        ),
                        i
                    );
                }
                function E(t, e) {
                    return d().getComputedStyle(t, null).getPropertyValue(e);
                }
                function C(t) {
                    var e,
                        i = t;
                    if (i) {
                        for (e = 0; null !== (i = i.previousSibling); ) 1 === i.nodeType && (e += 1);
                        return e;
                    }
                }
                function S(t, e) {
                    for (var i = [], r = t.parentElement; r; ) e ? r.matches(e) && i.push(r) : i.push(r), (r = r.parentElement);
                    return i;
                }
                function T(t, e, i) {
                    var r = d();
                    return i
                        ? t["width" === e ? "offsetWidth" : "offsetHeight"] +
                              parseFloat(r.getComputedStyle(t, null).getPropertyValue("width" === e ? "margin-right" : "margin-top")) +
                              parseFloat(r.getComputedStyle(t, null).getPropertyValue("width" === e ? "margin-left" : "margin-bottom"))
                        : t.offsetWidth;
                }
                function _(t, e) {
                    var i = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var r = Object.getOwnPropertySymbols(t);
                        e &&
                            (r = r.filter(function (e) {
                                return Object.getOwnPropertyDescriptor(t, e).enumerable;
                            })),
                            i.push.apply(i, r);
                    }
                    return i;
                }
                function M(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var i = null != arguments[e] ? arguments[e] : {};
                        e % 2
                            ? _(Object(i), !0).forEach(function (e) {
                                  P(t, e, i[e]);
                              })
                            : Object.getOwnPropertyDescriptors
                            ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i))
                            : _(Object(i)).forEach(function (e) {
                                  Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e));
                              });
                    }
                    return t;
                }
                function P(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                function k(t, e) {
                    return (
                        (function (t) {
                            if (Array.isArray(t)) return t;
                        })(t) ||
                        (function (t, e) {
                            var i = null == t ? null : ("undefined" != typeof Symbol && t[Symbol.iterator]) || t["@@iterator"];
                            if (null != i) {
                                var r,
                                    s,
                                    a,
                                    n,
                                    o = [],
                                    l = !0,
                                    h = !1;
                                try {
                                    if (((a = (i = i.call(t)).next), 0 === e)) {
                                        if (Object(i) !== i) return;
                                        l = !1;
                                    } else for (; !(l = (r = a.call(i)).done) && (o.push(r.value), o.length !== e); l = !0);
                                } catch (t) {
                                    (h = !0), (s = t);
                                } finally {
                                    try {
                                        if (!l && null != i.return && ((n = i.return()), Object(n) !== n)) return;
                                    } finally {
                                        if (h) throw s;
                                    }
                                }
                                return o;
                            }
                        })(t, e) ||
                        (function (t, e) {
                            if (!t) return;
                            if ("string" == typeof t) return A(t, e);
                            var i = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === i && t.constructor && (i = t.constructor.name);
                            if ("Map" === i || "Set" === i) return Array.from(t);
                            if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return A(t, e);
                        })(t, e) ||
                        (function () {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                        })()
                    );
                }
                function A(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var i = 0, r = new Array(e); i < e; i++) r[i] = t[i];
                    return r;
                }
                function D() {
                    return (
                        o ||
                            (o = (function () {
                                var t = d(),
                                    e = n();
                                return { smoothScroll: e.documentElement && e.documentElement.style && "scrollBehavior" in e.documentElement.style, touch: !!("ontouchstart" in t || (t.DocumentTouch && e instanceof t.DocumentTouch)) };
                            })()),
                        o
                    );
                }
                function L(t) {
                    return (
                        void 0 === t && (t = {}),
                        l ||
                            (l = (function (t) {
                                var e = (void 0 === t ? {} : t).userAgent,
                                    i = D(),
                                    r = d(),
                                    s = r.navigator.platform,
                                    a = e || r.navigator.userAgent,
                                    n = { ios: !1, android: !1 },
                                    o = r.screen.width,
                                    l = r.screen.height,
                                    h = a.match(/(Android);?[\s\/]+([\d.]+)?/),
                                    c = a.match(/(iPad).*OS\s([\d_]+)/),
                                    u = a.match(/(iPod)(.*OS\s([\d_]+))?/),
                                    p = !c && a.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
                                    m = "Win32" === s,
                                    f = "MacIntel" === s;
                                return (
                                    !c &&
                                        f &&
                                        i.touch &&
                                        ["1024x1366", "1366x1024", "834x1194", "1194x834", "834x1112", "1112x834", "768x1024", "1024x768", "820x1180", "1180x820", "810x1080", "1080x810"].indexOf(`${o}x${l}`) >= 0 &&
                                        ((c = a.match(/(Version)\/([\d.]+)/)) || (c = [0, 1, "13_0_0"]), (f = !1)),
                                    h && !m && ((n.os = "android"), (n.android = !0)),
                                    (c || p || u) && ((n.os = "ios"), (n.ios = !0)),
                                    n
                                );
                            })(t)),
                        l
                    );
                }
                function I() {
                    return (
                        h ||
                            (h = (function () {
                                var t = d(),
                                    e = !1;
                                function i() {
                                    var e = t.navigator.userAgent.toLowerCase();
                                    return e.indexOf("safari") >= 0 && e.indexOf("chrome") < 0 && e.indexOf("android") < 0;
                                }
                                if (i()) {
                                    var r = String(t.navigator.userAgent);
                                    if (r.includes("Version/")) {
                                        var s = k(
                                                r
                                                    .split("Version/")[1]
                                                    .split(" ")[0]
                                                    .split(".")
                                                    .map((t) => Number(t)),
                                                2
                                            ),
                                            a = s[0],
                                            n = s[1];
                                        e = a < 16 || (16 === a && n < 2);
                                    }
                                }
                                return { isSafari: e || i(), needPerspectiveFix: e, isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(t.navigator.userAgent) };
                            })()),
                        h
                    );
                }
                var R = {
                    on(t, e, i) {
                        var r = this;
                        if (!r.eventsListeners || r.destroyed) return r;
                        if ("function" != typeof e) return r;
                        var s = i ? "unshift" : "push";
                        return (
                            t.split(" ").forEach((t) => {
                                r.eventsListeners[t] || (r.eventsListeners[t] = []), r.eventsListeners[t][s](e);
                            }),
                            r
                        );
                    },
                    once(t, e, i) {
                        var r = this;
                        if (!r.eventsListeners || r.destroyed) return r;
                        if ("function" != typeof e) return r;
                        function s() {
                            r.off(t, s), s.__emitterProxy && delete s.__emitterProxy;
                            for (var i = arguments.length, a = new Array(i), n = 0; n < i; n++) a[n] = arguments[n];
                            e.apply(r, a);
                        }
                        return (s.__emitterProxy = e), r.on(t, s, i);
                    },
                    onAny(t, e) {
                        var i = this;
                        if (!i.eventsListeners || i.destroyed) return i;
                        if ("function" != typeof t) return i;
                        var r = e ? "unshift" : "push";
                        return i.eventsAnyListeners.indexOf(t) < 0 && i.eventsAnyListeners[r](t), i;
                    },
                    offAny(t) {
                        var e = this;
                        if (!e.eventsListeners || e.destroyed) return e;
                        if (!e.eventsAnyListeners) return e;
                        var i = e.eventsAnyListeners.indexOf(t);
                        return i >= 0 && e.eventsAnyListeners.splice(i, 1), e;
                    },
                    off(t, e) {
                        var i = this;
                        return !i.eventsListeners || i.destroyed
                            ? i
                            : i.eventsListeners
                            ? (t.split(" ").forEach((t) => {
                                  void 0 === e
                                      ? (i.eventsListeners[t] = [])
                                      : i.eventsListeners[t] &&
                                        i.eventsListeners[t].forEach((r, s) => {
                                            (r === e || (r.__emitterProxy && r.__emitterProxy === e)) && i.eventsListeners[t].splice(s, 1);
                                        });
                              }),
                              i)
                            : i;
                    },
                    emit() {
                        var t,
                            e,
                            i,
                            r = this;
                        if (!r.eventsListeners || r.destroyed) return r;
                        if (!r.eventsListeners) return r;
                        for (var s = arguments.length, a = new Array(s), n = 0; n < s; n++) a[n] = arguments[n];
                        return (
                            "string" == typeof a[0] || Array.isArray(a[0]) ? ((t = a[0]), (e = a.slice(1, a.length)), (i = r)) : ((t = a[0].events), (e = a[0].data), (i = a[0].context || r)),
                            e.unshift(i),
                            (Array.isArray(t) ? t : t.split(" ")).forEach((t) => {
                                r.eventsAnyListeners &&
                                    r.eventsAnyListeners.length &&
                                    r.eventsAnyListeners.forEach((r) => {
                                        r.apply(i, [t, ...e]);
                                    }),
                                    r.eventsListeners &&
                                        r.eventsListeners[t] &&
                                        r.eventsListeners[t].forEach((t) => {
                                            t.apply(i, e);
                                        });
                            }),
                            r
                        );
                    },
                };
                var O = (t, e) => {
                        if (t && !t.destroyed && t.params) {
                            var i = e.closest(t.isElement ? "swiper-slide" : `.${t.params.slideClass}`);
                            if (i) {
                                var r = i.querySelector(`.${t.params.lazyPreloaderClass}`);
                                !r &&
                                    t.isElement &&
                                    (i.shadowRoot
                                        ? (r = i.shadowRoot.querySelector(`.${t.params.lazyPreloaderClass}`))
                                        : requestAnimationFrame(() => {
                                              i.shadowRoot && (r = i.shadowRoot.querySelector(`.${t.params.lazyPreloaderClass}`)) && r.remove();
                                          })),
                                    r && r.remove();
                            }
                        }
                    },
                    F = (t, e) => {
                        if (t.slides[e]) {
                            var i = t.slides[e].querySelector('[loading="lazy"]');
                            i && i.removeAttribute("loading");
                        }
                    },
                    B = (t) => {
                        if (t && !t.destroyed && t.params) {
                            var e = t.params.lazyPreloadPrevNext,
                                i = t.slides.length;
                            if (i && e && !(e < 0)) {
                                e = Math.min(e, i);
                                var r = "auto" === t.params.slidesPerView ? t.slidesPerViewDynamic() : Math.ceil(t.params.slidesPerView),
                                    s = t.activeIndex;
                                if (t.params.grid && t.params.grid.rows > 1) {
                                    var a = s,
                                        n = [a - e];
                                    return (
                                        n.push(...Array.from({ length: e }).map((t, e) => a + r + e)),
                                        void t.slides.forEach((e, i) => {
                                            n.includes(e.column) && F(t, i);
                                        })
                                    );
                                }
                                var o = s + r - 1;
                                if (t.params.rewind || t.params.loop)
                                    for (var l = s - e; l <= o + e; l += 1) {
                                        var h = ((l % i) + i) % i;
                                        (h < s || h > o) && F(t, h);
                                    }
                                else for (var c = Math.max(s - e, 0); c <= Math.min(o + e, i - 1); c += 1) c !== s && (c > o || c < s) && F(t, c);
                            }
                        }
                    };
                var z = {
                    updateSize: function () {
                        var t,
                            e,
                            i = this,
                            r = i.el;
                        (t = void 0 !== i.params.width && null !== i.params.width ? i.params.width : r.clientWidth),
                            (e = void 0 !== i.params.height && null !== i.params.height ? i.params.height : r.clientHeight),
                            (0 === t && i.isHorizontal()) ||
                                (0 === e && i.isVertical()) ||
                                ((t = t - parseInt(E(r, "padding-left") || 0, 10) - parseInt(E(r, "padding-right") || 0, 10)),
                                (e = e - parseInt(E(r, "padding-top") || 0, 10) - parseInt(E(r, "padding-bottom") || 0, 10)),
                                Number.isNaN(t) && (t = 0),
                                Number.isNaN(e) && (e = 0),
                                Object.assign(i, { width: t, height: e, size: i.isHorizontal() ? t : e }));
                    },
                    updateSlides: function () {
                        var t = this;
                        function e(e, i) {
                            return parseFloat(e.getPropertyValue(t.getDirectionLabel(i)) || 0);
                        }
                        var i = t.params,
                            r = t.wrapperEl,
                            s = t.slidesEl,
                            a = t.size,
                            n = t.rtlTranslate,
                            o = t.wrongRTL,
                            l = t.virtual && i.virtual.enabled,
                            h = l ? t.virtual.slides.length : t.slides.length,
                            c = y(s, `.${t.params.slideClass}, swiper-slide`),
                            d = l ? t.virtual.slides.length : c.length,
                            u = [],
                            p = [],
                            m = [],
                            f = i.slidesOffsetBefore;
                        "function" == typeof f && (f = i.slidesOffsetBefore.call(t));
                        var g = i.slidesOffsetAfter;
                        "function" == typeof g && (g = i.slidesOffsetAfter.call(t));
                        var b = t.snapGrid.length,
                            w = t.slidesGrid.length,
                            x = i.spaceBetween,
                            C = -f,
                            S = 0,
                            _ = 0;
                        if (void 0 !== a) {
                            "string" == typeof x && x.indexOf("%") >= 0 ? (x = (parseFloat(x.replace("%", "")) / 100) * a) : "string" == typeof x && (x = parseFloat(x)),
                                (t.virtualSize = -x),
                                c.forEach((t) => {
                                    n ? (t.style.marginLeft = "") : (t.style.marginRight = ""), (t.style.marginBottom = ""), (t.style.marginTop = "");
                                }),
                                i.centeredSlides && i.cssMode && (v(r, "--swiper-centered-offset-before", ""), v(r, "--swiper-centered-offset-after", ""));
                            var M,
                                P = i.grid && i.grid.rows > 1 && t.grid;
                            P ? t.grid.initSlides(c) : t.grid && t.grid.unsetSlides();
                            for (var k = "auto" === i.slidesPerView && i.breakpoints && Object.keys(i.breakpoints).filter((t) => void 0 !== i.breakpoints[t].slidesPerView).length > 0, A = 0; A < d; A += 1) {
                                M = 0;
                                var D = void 0;
                                if ((c[A] && (D = c[A]), P && t.grid.updateSlide(A, D, c), !c[A] || "none" !== E(D, "display"))) {
                                    if ("auto" === i.slidesPerView) {
                                        k && (c[A].style[t.getDirectionLabel("width")] = "");
                                        var L = getComputedStyle(D),
                                            I = D.style.transform,
                                            R = D.style.webkitTransform;
                                        if ((I && (D.style.transform = "none"), R && (D.style.webkitTransform = "none"), i.roundLengths)) M = t.isHorizontal() ? T(D, "width", !0) : T(D, "height", !0);
                                        else {
                                            var O = e(L, "width"),
                                                F = e(L, "padding-left"),
                                                B = e(L, "padding-right"),
                                                z = e(L, "margin-left"),
                                                N = e(L, "margin-right"),
                                                V = L.getPropertyValue("box-sizing");
                                            if (V && "border-box" === V) M = O + z + N;
                                            else {
                                                var H = D,
                                                    j = H.clientWidth;
                                                M = O + F + B + z + N + (H.offsetWidth - j);
                                            }
                                        }
                                        I && (D.style.transform = I), R && (D.style.webkitTransform = R), i.roundLengths && (M = Math.floor(M));
                                    } else (M = (a - (i.slidesPerView - 1) * x) / i.slidesPerView), i.roundLengths && (M = Math.floor(M)), c[A] && (c[A].style[t.getDirectionLabel("width")] = `${M}px`);
                                    c[A] && (c[A].swiperSlideSize = M),
                                        m.push(M),
                                        i.centeredSlides
                                            ? ((C = C + M / 2 + S / 2 + x),
                                              0 === S && 0 !== A && (C = C - a / 2 - x),
                                              0 === A && (C = C - a / 2 - x),
                                              Math.abs(C) < 0.001 && (C = 0),
                                              i.roundLengths && (C = Math.floor(C)),
                                              _ % i.slidesPerGroup == 0 && u.push(C),
                                              p.push(C))
                                            : (i.roundLengths && (C = Math.floor(C)), (_ - Math.min(t.params.slidesPerGroupSkip, _)) % t.params.slidesPerGroup == 0 && u.push(C), p.push(C), (C = C + M + x)),
                                        (t.virtualSize += M + x),
                                        (S = M),
                                        (_ += 1);
                                }
                            }
                            if (
                                ((t.virtualSize = Math.max(t.virtualSize, a) + g),
                                n && o && ("slide" === i.effect || "coverflow" === i.effect) && (r.style.width = `${t.virtualSize + x}px`),
                                i.setWrapperSize && (r.style[t.getDirectionLabel("width")] = `${t.virtualSize + x}px`),
                                P && t.grid.updateWrapperSize(M, u),
                                !i.centeredSlides)
                            ) {
                                for (var W = [], G = 0; G < u.length; G += 1) {
                                    var q = u[G];
                                    i.roundLengths && (q = Math.floor(q)), u[G] <= t.virtualSize - a && W.push(q);
                                }
                                (u = W), Math.floor(t.virtualSize - a) - Math.floor(u[u.length - 1]) > 1 && u.push(t.virtualSize - a);
                            }
                            if (l && i.loop) {
                                var $ = m[0] + x;
                                if (i.slidesPerGroup > 1) for (var U = Math.ceil((t.virtual.slidesBefore + t.virtual.slidesAfter) / i.slidesPerGroup), Y = $ * i.slidesPerGroup, X = 0; X < U; X += 1) u.push(u[u.length - 1] + Y);
                                for (var K = 0; K < t.virtual.slidesBefore + t.virtual.slidesAfter; K += 1) 1 === i.slidesPerGroup && u.push(u[u.length - 1] + $), p.push(p[p.length - 1] + $), (t.virtualSize += $);
                            }
                            if ((0 === u.length && (u = [0]), 0 !== x)) {
                                var Z = t.isHorizontal() && n ? "marginLeft" : t.getDirectionLabel("marginRight");
                                c.filter((t, e) => !(i.cssMode && !i.loop) || e !== c.length - 1).forEach((t) => {
                                    t.style[Z] = `${x}px`;
                                });
                            }
                            if (i.centeredSlides && i.centeredSlidesBounds) {
                                var J = 0;
                                m.forEach((t) => {
                                    J += t + (x || 0);
                                });
                                var Q = (J -= x) - a;
                                u = u.map((t) => (t <= 0 ? -f : t > Q ? Q + g : t));
                            }
                            if (i.centerInsufficientSlides) {
                                var tt = 0;
                                if (
                                    (m.forEach((t) => {
                                        tt += t + (x || 0);
                                    }),
                                    (tt -= x) < a)
                                ) {
                                    var et = (a - tt) / 2;
                                    u.forEach((t, e) => {
                                        u[e] = t - et;
                                    }),
                                        p.forEach((t, e) => {
                                            p[e] = t + et;
                                        });
                                }
                            }
                            if ((Object.assign(t, { slides: c, snapGrid: u, slidesGrid: p, slidesSizesGrid: m }), i.centeredSlides && i.cssMode && !i.centeredSlidesBounds)) {
                                v(r, "--swiper-centered-offset-before", -u[0] + "px"), v(r, "--swiper-centered-offset-after", t.size / 2 - m[m.length - 1] / 2 + "px");
                                var it = -t.snapGrid[0],
                                    rt = -t.slidesGrid[0];
                                (t.snapGrid = t.snapGrid.map((t) => t + it)), (t.slidesGrid = t.slidesGrid.map((t) => t + rt));
                            }
                            if (
                                (d !== h && t.emit("slidesLengthChange"),
                                u.length !== b && (t.params.watchOverflow && t.checkOverflow(), t.emit("snapGridLengthChange")),
                                p.length !== w && t.emit("slidesGridLengthChange"),
                                i.watchSlidesProgress && t.updateSlidesOffset(),
                                t.emit("slidesUpdated"),
                                !(l || i.cssMode || ("slide" !== i.effect && "fade" !== i.effect)))
                            ) {
                                var st = `${i.containerModifierClass}backface-hidden`,
                                    at = t.el.classList.contains(st);
                                d <= i.maxBackfaceHiddenSlides ? at || t.el.classList.add(st) : at && t.el.classList.remove(st);
                            }
                        }
                    },
                    updateAutoHeight: function (t) {
                        var e,
                            i = this,
                            r = [],
                            s = i.virtual && i.params.virtual.enabled,
                            a = 0;
                        "number" == typeof t ? i.setTransition(t) : !0 === t && i.setTransition(i.params.speed);
                        var n = (t) => (s ? i.slides[i.getSlideIndexByData(t)] : i.slides[t]);
                        if ("auto" !== i.params.slidesPerView && i.params.slidesPerView > 1)
                            if (i.params.centeredSlides)
                                (i.visibleSlides || []).forEach((t) => {
                                    r.push(t);
                                });
                            else
                                for (e = 0; e < Math.ceil(i.params.slidesPerView); e += 1) {
                                    var o = i.activeIndex + e;
                                    if (o > i.slides.length && !s) break;
                                    r.push(n(o));
                                }
                        else r.push(n(i.activeIndex));
                        for (e = 0; e < r.length; e += 1)
                            if (void 0 !== r[e]) {
                                var l = r[e].offsetHeight;
                                a = l > a ? l : a;
                            }
                        (a || 0 === a) && (i.wrapperEl.style.height = `${a}px`);
                    },
                    updateSlidesOffset: function () {
                        for (var t = this, e = t.slides, i = t.isElement ? (t.isHorizontal() ? t.wrapperEl.offsetLeft : t.wrapperEl.offsetTop) : 0, r = 0; r < e.length; r += 1)
                            e[r].swiperSlideOffset = (t.isHorizontal() ? e[r].offsetLeft : e[r].offsetTop) - i - t.cssOverflowAdjustment();
                    },
                    updateSlidesProgress: function (t) {
                        void 0 === t && (t = (this && this.translate) || 0);
                        var e = this,
                            i = e.params,
                            r = e.slides,
                            s = e.rtlTranslate,
                            a = e.snapGrid;
                        if (0 !== r.length) {
                            void 0 === r[0].swiperSlideOffset && e.updateSlidesOffset();
                            var n = -t;
                            s && (n = t),
                                r.forEach((t) => {
                                    t.classList.remove(i.slideVisibleClass, i.slideFullyVisibleClass);
                                }),
                                (e.visibleSlidesIndexes = []),
                                (e.visibleSlides = []);
                            var o = i.spaceBetween;
                            "string" == typeof o && o.indexOf("%") >= 0 ? (o = (parseFloat(o.replace("%", "")) / 100) * e.size) : "string" == typeof o && (o = parseFloat(o));
                            for (var l = 0; l < r.length; l += 1) {
                                var h = r[l],
                                    c = h.swiperSlideOffset;
                                i.cssMode && i.centeredSlides && (c -= r[0].swiperSlideOffset);
                                var d = (n + (i.centeredSlides ? e.minTranslate() : 0) - c) / (h.swiperSlideSize + o),
                                    u = (n - a[0] + (i.centeredSlides ? e.minTranslate() : 0) - c) / (h.swiperSlideSize + o),
                                    p = -(n - c),
                                    m = p + e.slidesSizesGrid[l],
                                    f = p >= 0 && p <= e.size - e.slidesSizesGrid[l];
                                ((p >= 0 && p < e.size - 1) || (m > 1 && m <= e.size) || (p <= 0 && m >= e.size)) && (e.visibleSlides.push(h), e.visibleSlidesIndexes.push(l), r[l].classList.add(i.slideVisibleClass)),
                                    f && r[l].classList.add(i.slideFullyVisibleClass),
                                    (h.progress = s ? -d : d),
                                    (h.originalProgress = s ? -u : u);
                            }
                        }
                    },
                    updateProgress: function (t) {
                        var e = this;
                        if (void 0 === t) {
                            var i = e.rtlTranslate ? -1 : 1;
                            t = (e && e.translate && e.translate * i) || 0;
                        }
                        var r = e.params,
                            s = e.maxTranslate() - e.minTranslate(),
                            a = e.progress,
                            n = e.isBeginning,
                            o = e.isEnd,
                            l = e.progressLoop,
                            h = n,
                            c = o;
                        if (0 === s) (a = 0), (n = !0), (o = !0);
                        else {
                            a = (t - e.minTranslate()) / s;
                            var d = Math.abs(t - e.minTranslate()) < 1,
                                u = Math.abs(t - e.maxTranslate()) < 1;
                            (n = d || a <= 0), (o = u || a >= 1), d && (a = 0), u && (a = 1);
                        }
                        if (r.loop) {
                            var p = e.getSlideIndexByData(0),
                                m = e.getSlideIndexByData(e.slides.length - 1),
                                f = e.slidesGrid[p],
                                g = e.slidesGrid[m],
                                v = e.slidesGrid[e.slidesGrid.length - 1],
                                b = Math.abs(t);
                            (l = b >= f ? (b - f) / v : (b + v - g) / v) > 1 && (l -= 1);
                        }
                        Object.assign(e, { progress: a, progressLoop: l, isBeginning: n, isEnd: o }),
                            (r.watchSlidesProgress || (r.centeredSlides && r.autoHeight)) && e.updateSlidesProgress(t),
                            n && !h && e.emit("reachBeginning toEdge"),
                            o && !c && e.emit("reachEnd toEdge"),
                            ((h && !n) || (c && !o)) && e.emit("fromEdge"),
                            e.emit("progress", a);
                    },
                    updateSlidesClasses: function () {
                        var t,
                            e,
                            i,
                            r = this,
                            s = r.slides,
                            a = r.params,
                            n = r.slidesEl,
                            o = r.activeIndex,
                            l = r.virtual && a.virtual.enabled,
                            h = r.grid && a.grid && a.grid.rows > 1,
                            c = (t) => y(n, `.${a.slideClass}${t}, swiper-slide${t}`)[0];
                        if (
                            (s.forEach((t) => {
                                t.classList.remove(a.slideActiveClass, a.slideNextClass, a.slidePrevClass);
                            }),
                            l)
                        )
                            if (a.loop) {
                                var d = o - r.virtual.slidesBefore;
                                d < 0 && (d = r.virtual.slides.length + d), d >= r.virtual.slides.length && (d -= r.virtual.slides.length), (t = c(`[data-swiper-slide-index="${d}"]`));
                            } else t = c(`[data-swiper-slide-index="${o}"]`);
                        else h ? ((t = s.filter((t) => t.column === o)[0]), (i = s.filter((t) => t.column === o + 1)[0]), (e = s.filter((t) => t.column === o - 1)[0])) : (t = s[o]);
                        t &&
                            (t.classList.add(a.slideActiveClass),
                            h
                                ? (i && i.classList.add(a.slideNextClass), e && e.classList.add(a.slidePrevClass))
                                : ((i = (function (t, e) {
                                      for (var i = []; t.nextElementSibling; ) {
                                          var r = t.nextElementSibling;
                                          e ? r.matches(e) && i.push(r) : i.push(r), (t = r);
                                      }
                                      return i;
                                  })(t, `.${a.slideClass}, swiper-slide`)[0]),
                                  a.loop && !i && (i = s[0]),
                                  i && i.classList.add(a.slideNextClass),
                                  (e = (function (t, e) {
                                      for (var i = []; t.previousElementSibling; ) {
                                          var r = t.previousElementSibling;
                                          e ? r.matches(e) && i.push(r) : i.push(r), (t = r);
                                      }
                                      return i;
                                  })(t, `.${a.slideClass}, swiper-slide`)[0]),
                                  a.loop && 0 === !e && (e = s[s.length - 1]),
                                  e && e.classList.add(a.slidePrevClass))),
                            r.emitSlidesClasses();
                    },
                    updateActiveIndex: function (t) {
                        var e,
                            i = this,
                            r = i.rtlTranslate ? i.translate : -i.translate,
                            s = i.snapGrid,
                            a = i.params,
                            n = i.activeIndex,
                            o = i.realIndex,
                            l = i.snapIndex,
                            h = t,
                            c = (t) => {
                                var e = t - i.virtual.slidesBefore;
                                return e < 0 && (e = i.virtual.slides.length + e), e >= i.virtual.slides.length && (e -= i.virtual.slides.length), e;
                            };
                        if (
                            (void 0 === h &&
                                (h = (function (t) {
                                    for (var e, i = t.slidesGrid, r = t.params, s = t.rtlTranslate ? t.translate : -t.translate, a = 0; a < i.length; a += 1)
                                        void 0 !== i[a + 1] ? (s >= i[a] && s < i[a + 1] - (i[a + 1] - i[a]) / 2 ? (e = a) : s >= i[a] && s < i[a + 1] && (e = a + 1)) : s >= i[a] && (e = a);
                                    return r.normalizeSlideIndex && (e < 0 || void 0 === e) && (e = 0), e;
                                })(i)),
                            s.indexOf(r) >= 0)
                        )
                            e = s.indexOf(r);
                        else {
                            var d = Math.min(a.slidesPerGroupSkip, h);
                            e = d + Math.floor((h - d) / a.slidesPerGroup);
                        }
                        if ((e >= s.length && (e = s.length - 1), h !== n || i.params.loop))
                            if (h === n && i.params.loop && i.virtual && i.params.virtual.enabled) i.realIndex = c(h);
                            else {
                                var u,
                                    p = i.grid && a.grid && a.grid.rows > 1;
                                if (i.virtual && a.virtual.enabled && a.loop) u = c(h);
                                else if (p) {
                                    var m = i.slides.filter((t) => t.column === h)[0],
                                        f = parseInt(m.getAttribute("data-swiper-slide-index"), 10);
                                    Number.isNaN(f) && (f = Math.max(i.slides.indexOf(m), 0)), (u = Math.floor(f / a.grid.rows));
                                } else if (i.slides[h]) {
                                    var g = i.slides[h].getAttribute("data-swiper-slide-index");
                                    u = g ? parseInt(g, 10) : h;
                                } else u = h;
                                Object.assign(i, { previousSnapIndex: l, snapIndex: e, previousRealIndex: o, realIndex: u, previousIndex: n, activeIndex: h }),
                                    i.initialized && B(i),
                                    i.emit("activeIndexChange"),
                                    i.emit("snapIndexChange"),
                                    (i.initialized || i.params.runCallbacksOnInit) && (o !== u && i.emit("realIndexChange"), i.emit("slideChange"));
                            }
                        else e !== l && ((i.snapIndex = e), i.emit("snapIndexChange"));
                    },
                    updateClickedSlide: function (t, e) {
                        var i = this,
                            r = i.params,
                            s = t.closest(`.${r.slideClass}, swiper-slide`);
                        !s &&
                            i.isElement &&
                            e &&
                            e.length > 1 &&
                            e.includes(t) &&
                            [...e.slice(e.indexOf(t) + 1, e.length)].forEach((t) => {
                                !s && t.matches && t.matches(`.${r.slideClass}, swiper-slide`) && (s = t);
                            });
                        var a,
                            n = !1;
                        if (s)
                            for (var o = 0; o < i.slides.length; o += 1)
                                if (i.slides[o] === s) {
                                    (n = !0), (a = o);
                                    break;
                                }
                        if (!s || !n) return (i.clickedSlide = void 0), void (i.clickedIndex = void 0);
                        (i.clickedSlide = s),
                            i.virtual && i.params.virtual.enabled ? (i.clickedIndex = parseInt(s.getAttribute("data-swiper-slide-index"), 10)) : (i.clickedIndex = a),
                            r.slideToClickedSlide && void 0 !== i.clickedIndex && i.clickedIndex !== i.activeIndex && i.slideToClickedSlide();
                    },
                };
                var N = {
                    getTranslate: function (t) {
                        void 0 === t && (t = this.isHorizontal() ? "x" : "y");
                        var e = this,
                            i = e.params,
                            r = e.rtlTranslate,
                            s = e.translate,
                            a = e.wrapperEl;
                        if (i.virtualTranslate) return r ? -s : s;
                        if (i.cssMode) return s;
                        var n = m(a, t);
                        return (n += e.cssOverflowAdjustment()), r && (n = -n), n || 0;
                    },
                    setTranslate: function (t, e) {
                        var i = this,
                            r = i.rtlTranslate,
                            s = i.params,
                            a = i.wrapperEl,
                            n = i.progress,
                            o = 0,
                            l = 0;
                        i.isHorizontal() ? (o = r ? -t : t) : (l = t),
                            s.roundLengths && ((o = Math.floor(o)), (l = Math.floor(l))),
                            (i.previousTranslate = i.translate),
                            (i.translate = i.isHorizontal() ? o : l),
                            s.cssMode
                                ? (a[i.isHorizontal() ? "scrollLeft" : "scrollTop"] = i.isHorizontal() ? -o : -l)
                                : s.virtualTranslate || (i.isHorizontal() ? (o -= i.cssOverflowAdjustment()) : (l -= i.cssOverflowAdjustment()), (a.style.transform = `translate3d(${o}px, ${l}px, 0px)`));
                        var h = i.maxTranslate() - i.minTranslate();
                        (0 === h ? 0 : (t - i.minTranslate()) / h) !== n && i.updateProgress(t), i.emit("setTranslate", i.translate, e);
                    },
                    minTranslate: function () {
                        return -this.snapGrid[0];
                    },
                    maxTranslate: function () {
                        return -this.snapGrid[this.snapGrid.length - 1];
                    },
                    translateTo: function (t, e, i, r, s) {
                        void 0 === t && (t = 0), void 0 === e && (e = this.params.speed), void 0 === i && (i = !0), void 0 === r && (r = !0);
                        var a = this,
                            n = a.params,
                            o = a.wrapperEl;
                        if (a.animating && n.preventInteractionOnTransition) return !1;
                        var l,
                            h = a.minTranslate(),
                            c = a.maxTranslate();
                        if (((l = r && t > h ? h : r && t < c ? c : t), a.updateProgress(l), n.cssMode)) {
                            var d = a.isHorizontal();
                            if (0 === e) o[d ? "scrollLeft" : "scrollTop"] = -l;
                            else {
                                if (!a.support.smoothScroll) return b({ swiper: a, targetPosition: -l, side: d ? "left" : "top" }), !0;
                                o.scrollTo({ [d ? "left" : "top"]: -l, behavior: "smooth" });
                            }
                            return !0;
                        }
                        return (
                            0 === e
                                ? (a.setTransition(0), a.setTranslate(l), i && (a.emit("beforeTransitionStart", e, s), a.emit("transitionEnd")))
                                : (a.setTransition(e),
                                  a.setTranslate(l),
                                  i && (a.emit("beforeTransitionStart", e, s), a.emit("transitionStart")),
                                  a.animating ||
                                      ((a.animating = !0),
                                      a.onTranslateToWrapperTransitionEnd ||
                                          (a.onTranslateToWrapperTransitionEnd = function (t) {
                                              a &&
                                                  !a.destroyed &&
                                                  t.target === this &&
                                                  (a.wrapperEl.removeEventListener("transitionend", a.onTranslateToWrapperTransitionEnd),
                                                  (a.onTranslateToWrapperTransitionEnd = null),
                                                  delete a.onTranslateToWrapperTransitionEnd,
                                                  i && a.emit("transitionEnd"));
                                          }),
                                      a.wrapperEl.addEventListener("transitionend", a.onTranslateToWrapperTransitionEnd))),
                            !0
                        );
                    },
                };
                function V(t) {
                    var e = t.swiper,
                        i = t.runCallbacks,
                        r = t.direction,
                        s = t.step,
                        a = e.activeIndex,
                        n = e.previousIndex,
                        o = r;
                    if ((o || (o = a > n ? "next" : a < n ? "prev" : "reset"), e.emit(`transition${s}`), i && a !== n)) {
                        if ("reset" === o) return void e.emit(`slideResetTransition${s}`);
                        e.emit(`slideChangeTransition${s}`), "next" === o ? e.emit(`slideNextTransition${s}`) : e.emit(`slidePrevTransition${s}`);
                    }
                }
                var H = {
                    slideTo: function (t, e, i, r, s) {
                        void 0 === t && (t = 0), void 0 === e && (e = this.params.speed), void 0 === i && (i = !0), "string" == typeof t && (t = parseInt(t, 10));
                        var a = this,
                            n = t;
                        n < 0 && (n = 0);
                        var o = a.params,
                            l = a.snapGrid,
                            h = a.slidesGrid,
                            c = a.previousIndex,
                            d = a.activeIndex,
                            u = a.rtlTranslate,
                            p = a.wrapperEl,
                            m = a.enabled;
                        if ((a.animating && o.preventInteractionOnTransition) || (!m && !r && !s)) return !1;
                        var f = Math.min(a.params.slidesPerGroupSkip, n),
                            g = f + Math.floor((n - f) / a.params.slidesPerGroup);
                        g >= l.length && (g = l.length - 1);
                        var v,
                            y = -l[g];
                        if (o.normalizeSlideIndex)
                            for (var w = 0; w < h.length; w += 1) {
                                var x = -Math.floor(100 * y),
                                    E = Math.floor(100 * h[w]),
                                    C = Math.floor(100 * h[w + 1]);
                                void 0 !== h[w + 1] ? (x >= E && x < C - (C - E) / 2 ? (n = w) : x >= E && x < C && (n = w + 1)) : x >= E && (n = w);
                            }
                        if (a.initialized && n !== d) {
                            if (!a.allowSlideNext && (u ? y > a.translate && y > a.minTranslate() : y < a.translate && y < a.minTranslate())) return !1;
                            if (!a.allowSlidePrev && y > a.translate && y > a.maxTranslate() && (d || 0) !== n) return !1;
                        }
                        if ((n !== (c || 0) && i && a.emit("beforeSlideChangeStart"), a.updateProgress(y), (v = n > d ? "next" : n < d ? "prev" : "reset"), (u && -y === a.translate) || (!u && y === a.translate)))
                            return a.updateActiveIndex(n), o.autoHeight && a.updateAutoHeight(), a.updateSlidesClasses(), "slide" !== o.effect && a.setTranslate(y), "reset" !== v && (a.transitionStart(i, v), a.transitionEnd(i, v)), !1;
                        if (o.cssMode) {
                            var S = a.isHorizontal(),
                                T = u ? y : -y;
                            if (0 === e) {
                                var _ = a.virtual && a.params.virtual.enabled;
                                _ && ((a.wrapperEl.style.scrollSnapType = "none"), (a._immediateVirtual = !0)),
                                    _ && !a._cssModeVirtualInitialSet && a.params.initialSlide > 0
                                        ? ((a._cssModeVirtualInitialSet = !0),
                                          requestAnimationFrame(() => {
                                              p[S ? "scrollLeft" : "scrollTop"] = T;
                                          }))
                                        : (p[S ? "scrollLeft" : "scrollTop"] = T),
                                    _ &&
                                        requestAnimationFrame(() => {
                                            (a.wrapperEl.style.scrollSnapType = ""), (a._immediateVirtual = !1);
                                        });
                            } else {
                                if (!a.support.smoothScroll) return b({ swiper: a, targetPosition: T, side: S ? "left" : "top" }), !0;
                                p.scrollTo({ [S ? "left" : "top"]: T, behavior: "smooth" });
                            }
                            return !0;
                        }
                        return (
                            a.setTransition(e),
                            a.setTranslate(y),
                            a.updateActiveIndex(n),
                            a.updateSlidesClasses(),
                            a.emit("beforeTransitionStart", e, r),
                            a.transitionStart(i, v),
                            0 === e
                                ? a.transitionEnd(i, v)
                                : a.animating ||
                                  ((a.animating = !0),
                                  a.onSlideToWrapperTransitionEnd ||
                                      (a.onSlideToWrapperTransitionEnd = function (t) {
                                          a &&
                                              !a.destroyed &&
                                              t.target === this &&
                                              (a.wrapperEl.removeEventListener("transitionend", a.onSlideToWrapperTransitionEnd), (a.onSlideToWrapperTransitionEnd = null), delete a.onSlideToWrapperTransitionEnd, a.transitionEnd(i, v));
                                      }),
                                  a.wrapperEl.addEventListener("transitionend", a.onSlideToWrapperTransitionEnd)),
                            !0
                        );
                    },
                    slideToLoop: function (t, e, i, r) {
                        void 0 === t && (t = 0), void 0 === e && (e = this.params.speed), void 0 === i && (i = !0), "string" == typeof t && (t = parseInt(t, 10));
                        var s = this,
                            a = s.grid && s.params.grid && s.params.grid.rows > 1,
                            n = t;
                        if (s.params.loop)
                            if (s.virtual && s.params.virtual.enabled) n += s.virtual.slidesBefore;
                            else {
                                var o;
                                if (a) {
                                    var l = n * s.params.grid.rows;
                                    o = s.slides.filter((t) => 1 * t.getAttribute("data-swiper-slide-index") === l)[0].column;
                                } else o = s.getSlideIndexByData(n);
                                var h = a ? Math.ceil(s.slides.length / s.params.grid.rows) : s.slides.length,
                                    c = s.params.centeredSlides,
                                    d = s.params.slidesPerView;
                                "auto" === d ? (d = s.slidesPerViewDynamic()) : ((d = Math.ceil(parseFloat(s.params.slidesPerView, 10))), c && d % 2 == 0 && (d += 1));
                                var u = h - o < d;
                                if ((c && (u = u || o < Math.ceil(d / 2)), u)) {
                                    var p = c ? (o < s.activeIndex ? "prev" : "next") : o - s.activeIndex - 1 < s.params.slidesPerView ? "next" : "prev";
                                    s.loopFix({ direction: p, slideTo: !0, activeSlideIndex: "next" === p ? o + 1 : o - h + 1, slideRealIndex: "next" === p ? s.realIndex : void 0 });
                                }
                                if (a) {
                                    var m = n * s.params.grid.rows;
                                    n = s.slides.filter((t) => 1 * t.getAttribute("data-swiper-slide-index") === m)[0].column;
                                } else n = s.getSlideIndexByData(n);
                            }
                        return (
                            requestAnimationFrame(() => {
                                s.slideTo(n, e, i, r);
                            }),
                            s
                        );
                    },
                    slideNext: function (t, e, i) {
                        void 0 === t && (t = this.params.speed), void 0 === e && (e = !0);
                        var r = this,
                            s = r.enabled,
                            a = r.params,
                            n = r.animating;
                        if (!s) return r;
                        var o = a.slidesPerGroup;
                        "auto" === a.slidesPerView && 1 === a.slidesPerGroup && a.slidesPerGroupAuto && (o = Math.max(r.slidesPerViewDynamic("current", !0), 1));
                        var l = r.activeIndex < a.slidesPerGroupSkip ? 1 : o,
                            h = r.virtual && a.virtual.enabled;
                        if (a.loop) {
                            if (n && !h && a.loopPreventsSliding) return !1;
                            if ((r.loopFix({ direction: "next" }), (r._clientLeft = r.wrapperEl.clientLeft), r.activeIndex === r.slides.length - 1 && a.cssMode))
                                return (
                                    requestAnimationFrame(() => {
                                        r.slideTo(r.activeIndex + l, t, e, i);
                                    }),
                                    !0
                                );
                        }
                        return a.rewind && r.isEnd ? r.slideTo(0, t, e, i) : r.slideTo(r.activeIndex + l, t, e, i);
                    },
                    slidePrev: function (t, e, i) {
                        void 0 === t && (t = this.params.speed), void 0 === e && (e = !0);
                        var r = this,
                            s = r.params,
                            a = r.snapGrid,
                            n = r.slidesGrid,
                            o = r.rtlTranslate,
                            l = r.enabled,
                            h = r.animating;
                        if (!l) return r;
                        var c = r.virtual && s.virtual.enabled;
                        if (s.loop) {
                            if (h && !c && s.loopPreventsSliding) return !1;
                            r.loopFix({ direction: "prev" }), (r._clientLeft = r.wrapperEl.clientLeft);
                        }
                        function d(t) {
                            return t < 0 ? -Math.floor(Math.abs(t)) : Math.floor(t);
                        }
                        var u,
                            p = d(o ? r.translate : -r.translate),
                            m = a.map((t) => d(t)),
                            f = a[m.indexOf(p) - 1];
                        void 0 === f &&
                            s.cssMode &&
                            (a.forEach((t, e) => {
                                p >= t && (u = e);
                            }),
                            void 0 !== u && (f = a[u > 0 ? u - 1 : u]));
                        var g = 0;
                        if (
                            (void 0 !== f &&
                                ((g = n.indexOf(f)) < 0 && (g = r.activeIndex - 1),
                                "auto" === s.slidesPerView && 1 === s.slidesPerGroup && s.slidesPerGroupAuto && ((g = g - r.slidesPerViewDynamic("previous", !0) + 1), (g = Math.max(g, 0)))),
                            s.rewind && r.isBeginning)
                        ) {
                            var v = r.params.virtual && r.params.virtual.enabled && r.virtual ? r.virtual.slides.length - 1 : r.slides.length - 1;
                            return r.slideTo(v, t, e, i);
                        }
                        return s.loop && 0 === r.activeIndex && s.cssMode
                            ? (requestAnimationFrame(() => {
                                  r.slideTo(g, t, e, i);
                              }),
                              !0)
                            : r.slideTo(g, t, e, i);
                    },
                    slideReset: function (t, e, i) {
                        return void 0 === t && (t = this.params.speed), void 0 === e && (e = !0), this.slideTo(this.activeIndex, t, e, i);
                    },
                    slideToClosest: function (t, e, i, r) {
                        void 0 === t && (t = this.params.speed), void 0 === e && (e = !0), void 0 === r && (r = 0.5);
                        var s = this,
                            a = s.activeIndex,
                            n = Math.min(s.params.slidesPerGroupSkip, a),
                            o = n + Math.floor((a - n) / s.params.slidesPerGroup),
                            l = s.rtlTranslate ? s.translate : -s.translate;
                        if (l >= s.snapGrid[o]) {
                            var h = s.snapGrid[o];
                            l - h > (s.snapGrid[o + 1] - h) * r && (a += s.params.slidesPerGroup);
                        } else {
                            var c = s.snapGrid[o - 1];
                            l - c <= (s.snapGrid[o] - c) * r && (a -= s.params.slidesPerGroup);
                        }
                        return (a = Math.max(a, 0)), (a = Math.min(a, s.slidesGrid.length - 1)), s.slideTo(a, t, e, i);
                    },
                    slideToClickedSlide: function () {
                        var t,
                            e = this,
                            i = e.params,
                            r = e.slidesEl,
                            s = "auto" === i.slidesPerView ? e.slidesPerViewDynamic() : i.slidesPerView,
                            a = e.clickedIndex,
                            n = e.isElement ? "swiper-slide" : `.${i.slideClass}`;
                        if (i.loop) {
                            if (e.animating) return;
                            (t = parseInt(e.clickedSlide.getAttribute("data-swiper-slide-index"), 10)),
                                i.centeredSlides
                                    ? a < e.loopedSlides - s / 2 || a > e.slides.length - e.loopedSlides + s / 2
                                        ? (e.loopFix(),
                                          (a = e.getSlideIndex(y(r, `${n}[data-swiper-slide-index="${t}"]`)[0])),
                                          u(() => {
                                              e.slideTo(a);
                                          }))
                                        : e.slideTo(a)
                                    : a > e.slides.length - s
                                    ? (e.loopFix(),
                                      (a = e.getSlideIndex(y(r, `${n}[data-swiper-slide-index="${t}"]`)[0])),
                                      u(() => {
                                          e.slideTo(a);
                                      }))
                                    : e.slideTo(a);
                        } else e.slideTo(a);
                    },
                };
                var j = {
                    loopCreate: function (t) {
                        var e = this,
                            i = e.params,
                            r = e.slidesEl;
                        if (!(!i.loop || (e.virtual && e.params.virtual.enabled))) {
                            var s = () => {
                                    y(r, `.${i.slideClass}, swiper-slide`).forEach((t, e) => {
                                        t.setAttribute("data-swiper-slide-index", e);
                                    });
                                },
                                a = e.grid && i.grid && i.grid.rows > 1,
                                n = i.slidesPerGroup * (a ? i.grid.rows : 1),
                                o = e.slides.length % n != 0,
                                l = a && e.slides.length % i.grid.rows != 0,
                                h = (t) => {
                                    for (var r = 0; r < t; r += 1) {
                                        var s = e.isElement ? x("swiper-slide", [i.slideBlankClass]) : x("div", [i.slideClass, i.slideBlankClass]);
                                        e.slidesEl.append(s);
                                    }
                                };
                            if (o) {
                                if (i.loopAddBlankSlides) h(n - (e.slides.length % n)), e.recalcSlides(), e.updateSlides();
                                else w("Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)");
                                s();
                            } else if (l) {
                                if (i.loopAddBlankSlides) h(i.grid.rows - (e.slides.length % i.grid.rows)), e.recalcSlides(), e.updateSlides();
                                else w("Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)");
                                s();
                            } else s();
                            e.loopFix({ slideRealIndex: t, direction: i.centeredSlides ? void 0 : "next" });
                        }
                    },
                    loopFix: function (t) {
                        var e = void 0 === t ? {} : t,
                            i = e.slideRealIndex,
                            r = e.slideTo,
                            s = void 0 === r || r,
                            a = e.direction,
                            n = e.setTranslate,
                            o = e.activeSlideIndex,
                            l = e.byController,
                            h = e.byMousewheel,
                            c = this;
                        if (c.params.loop) {
                            c.emit("beforeLoopFix");
                            var d = c.slides,
                                u = c.allowSlidePrev,
                                p = c.allowSlideNext,
                                m = c.slidesEl,
                                f = c.params,
                                g = f.centeredSlides;
                            if (((c.allowSlidePrev = !0), (c.allowSlideNext = !0), c.virtual && f.virtual.enabled))
                                return (
                                    s &&
                                        (f.centeredSlides || 0 !== c.snapIndex
                                            ? f.centeredSlides && c.snapIndex < f.slidesPerView
                                                ? c.slideTo(c.virtual.slides.length + c.snapIndex, 0, !1, !0)
                                                : c.snapIndex === c.snapGrid.length - 1 && c.slideTo(c.virtual.slidesBefore, 0, !1, !0)
                                            : c.slideTo(c.virtual.slides.length, 0, !1, !0)),
                                    (c.allowSlidePrev = u),
                                    (c.allowSlideNext = p),
                                    void c.emit("loopFix")
                                );
                            var v = f.slidesPerView;
                            "auto" === v ? (v = c.slidesPerViewDynamic()) : ((v = Math.ceil(parseFloat(f.slidesPerView, 10))), g && v % 2 == 0 && (v += 1));
                            var b = f.slidesPerGroupAuto ? v : f.slidesPerGroup,
                                y = b;
                            y % b != 0 && (y += b - (y % b)), (y += f.loopAdditionalSlides), (c.loopedSlides = y);
                            var x = c.grid && f.grid && f.grid.rows > 1;
                            d.length < v + y
                                ? w(
                                      "Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters"
                                  )
                                : x && "row" === f.grid.fill && w("Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`");
                            var E = [],
                                C = [],
                                S = c.activeIndex;
                            void 0 === o ? (o = c.getSlideIndex(d.filter((t) => t.classList.contains(f.slideActiveClass))[0])) : (S = o);
                            var T = "next" === a || !a,
                                _ = "prev" === a || !a,
                                P = 0,
                                k = 0,
                                A = x ? Math.ceil(d.length / f.grid.rows) : d.length,
                                D = (x ? d[o].column : o) + (g && void 0 === n ? -v / 2 + 0.5 : 0);
                            if (D < y) {
                                P = Math.max(y - D, b);
                                for (var L = 0; L < y - D; L += 1) {
                                    var I = L - Math.floor(L / A) * A;
                                    if (x) for (var R = A - I - 1, O = d.length - 1; O >= 0; O -= 1) d[O].column === R && E.push(O);
                                    else E.push(A - I - 1);
                                }
                            } else if (D + v > A - y) {
                                k = Math.max(D - (A - 2 * y), b);
                                for (
                                    var F = function () {
                                            var t = B - Math.floor(B / A) * A;
                                            x
                                                ? d.forEach((e, i) => {
                                                      e.column === t && C.push(i);
                                                  })
                                                : C.push(t);
                                        },
                                        B = 0;
                                    B < k;
                                    B += 1
                                )
                                    F();
                            }
                            if (
                                ((c.__preventObserver__ = !0),
                                requestAnimationFrame(() => {
                                    c.__preventObserver__ = !1;
                                }),
                                _ &&
                                    E.forEach((t) => {
                                        (d[t].swiperLoopMoveDOM = !0), m.prepend(d[t]), (d[t].swiperLoopMoveDOM = !1);
                                    }),
                                T &&
                                    C.forEach((t) => {
                                        (d[t].swiperLoopMoveDOM = !0), m.append(d[t]), (d[t].swiperLoopMoveDOM = !1);
                                    }),
                                c.recalcSlides(),
                                "auto" === f.slidesPerView
                                    ? c.updateSlides()
                                    : x &&
                                      ((E.length > 0 && _) || (C.length > 0 && T)) &&
                                      c.slides.forEach((t, e) => {
                                          c.grid.updateSlide(e, t, c.slides);
                                      }),
                                f.watchSlidesProgress && c.updateSlidesOffset(),
                                s)
                            )
                                if (E.length > 0 && _) {
                                    if (void 0 === i) {
                                        var z = c.slidesGrid[S],
                                            N = c.slidesGrid[S + P] - z;
                                        h
                                            ? c.setTranslate(c.translate - N)
                                            : (c.slideTo(S + P, 0, !1, !0), n && ((c.touchEventsData.startTranslate = c.touchEventsData.startTranslate - N), (c.touchEventsData.currentTranslate = c.touchEventsData.currentTranslate - N)));
                                    } else if (n) {
                                        var V = x ? E.length / f.grid.rows : E.length;
                                        c.slideTo(c.activeIndex + V, 0, !1, !0), (c.touchEventsData.currentTranslate = c.translate);
                                    }
                                } else if (C.length > 0 && T)
                                    if (void 0 === i) {
                                        var H = c.slidesGrid[S],
                                            j = c.slidesGrid[S - k] - H;
                                        h
                                            ? c.setTranslate(c.translate - j)
                                            : (c.slideTo(S - k, 0, !1, !0), n && ((c.touchEventsData.startTranslate = c.touchEventsData.startTranslate - j), (c.touchEventsData.currentTranslate = c.touchEventsData.currentTranslate - j)));
                                    } else {
                                        var W = x ? C.length / f.grid.rows : C.length;
                                        c.slideTo(c.activeIndex - W, 0, !1, !0);
                                    }
                            if (((c.allowSlidePrev = u), (c.allowSlideNext = p), c.controller && c.controller.control && !l)) {
                                var G = { slideRealIndex: i, direction: a, setTranslate: n, activeSlideIndex: o, byController: !0 };
                                Array.isArray(c.controller.control)
                                    ? c.controller.control.forEach((t) => {
                                          !t.destroyed && t.params.loop && t.loopFix(M(M({}, G), {}, { slideTo: t.params.slidesPerView === f.slidesPerView && s }));
                                      })
                                    : c.controller.control instanceof c.constructor &&
                                      c.controller.control.params.loop &&
                                      c.controller.control.loopFix(M(M({}, G), {}, { slideTo: c.controller.control.params.slidesPerView === f.slidesPerView && s }));
                            }
                            c.emit("loopFix");
                        }
                    },
                    loopDestroy: function () {
                        var t = this,
                            e = t.params,
                            i = t.slidesEl;
                        if (!(!e.loop || (t.virtual && t.params.virtual.enabled))) {
                            t.recalcSlides();
                            var r = [];
                            t.slides.forEach((t) => {
                                var e = void 0 === t.swiperSlideIndex ? 1 * t.getAttribute("data-swiper-slide-index") : t.swiperSlideIndex;
                                r[e] = t;
                            }),
                                t.slides.forEach((t) => {
                                    t.removeAttribute("data-swiper-slide-index");
                                }),
                                r.forEach((t) => {
                                    i.append(t);
                                }),
                                t.recalcSlides(),
                                t.slideTo(t.realIndex, 0);
                        }
                    },
                };
                function W(t, e, i) {
                    var r = d(),
                        s = t.params,
                        a = s.edgeSwipeDetection,
                        n = s.edgeSwipeThreshold;
                    return !a || !(i <= n || i >= r.innerWidth - n) || ("prevent" === a && (e.preventDefault(), !0));
                }
                function G(t) {
                    var e = this,
                        i = n(),
                        r = t;
                    r.originalEvent && (r = r.originalEvent);
                    var s = e.touchEventsData;
                    if ("pointerdown" === r.type) {
                        if (null !== s.pointerId && s.pointerId !== r.pointerId) return;
                        s.pointerId = r.pointerId;
                    } else "touchstart" === r.type && 1 === r.targetTouches.length && (s.touchId = r.targetTouches[0].identifier);
                    if ("touchstart" !== r.type) {
                        var a = e.params,
                            o = e.touches;
                        if (e.enabled && (a.simulateTouch || "mouse" !== r.pointerType) && (!e.animating || !a.preventInteractionOnTransition)) {
                            !e.animating && a.cssMode && a.loop && e.loopFix();
                            var l = r.target;
                            if (("wrapper" !== a.touchEventsTarget || e.wrapperEl.contains(l)) && !(("which" in r && 3 === r.which) || ("button" in r && r.button > 0) || (s.isTouched && s.isMoved))) {
                                var h = !!a.noSwipingClass && "" !== a.noSwipingClass,
                                    c = r.composedPath ? r.composedPath() : r.path;
                                h && r.target && r.target.shadowRoot && c && (l = c[0]);
                                var u = a.noSwipingSelector ? a.noSwipingSelector : `.${a.noSwipingClass}`,
                                    m = !(!r.target || !r.target.shadowRoot);
                                if (
                                    a.noSwiping &&
                                    (m
                                        ? (function (t, e) {
                                              return (
                                                  void 0 === e && (e = this),
                                                  (function e(i) {
                                                      if (!i || i === n() || i === d()) return null;
                                                      i.assignedSlot && (i = i.assignedSlot);
                                                      var r = i.closest(t);
                                                      return r || i.getRootNode ? r || e(i.getRootNode().host) : null;
                                                  })(e)
                                              );
                                          })(u, l)
                                        : l.closest(u))
                                )
                                    e.allowClick = !0;
                                else if (!a.swipeHandler || l.closest(a.swipeHandler)) {
                                    (o.currentX = r.pageX), (o.currentY = r.pageY);
                                    var f = o.currentX,
                                        g = o.currentY;
                                    if (W(e, r, f)) {
                                        Object.assign(s, { isTouched: !0, isMoved: !1, allowTouchCallbacks: !0, isScrolling: void 0, startMoving: void 0 }),
                                            (o.startX = f),
                                            (o.startY = g),
                                            (s.touchStartTime = p()),
                                            (e.allowClick = !0),
                                            e.updateSize(),
                                            (e.swipeDirection = void 0),
                                            a.threshold > 0 && (s.allowThresholdMove = !1);
                                        var v = !0;
                                        l.matches(s.focusableElements) && ((v = !1), "SELECT" === l.nodeName && (s.isTouched = !1)),
                                            i.activeElement && i.activeElement.matches(s.focusableElements) && i.activeElement !== l && i.activeElement.blur();
                                        var b = v && e.allowTouchMove && a.touchStartPreventDefault;
                                        (!a.touchStartForcePreventDefault && !b) || l.isContentEditable || r.preventDefault(),
                                            a.freeMode && a.freeMode.enabled && e.freeMode && e.animating && !a.cssMode && e.freeMode.onTouchStart(),
                                            e.emit("touchStart", r);
                                    }
                                }
                            }
                        }
                    } else W(e, r, r.targetTouches[0].pageX);
                }
                function q(t) {
                    var e = n(),
                        i = this,
                        r = i.touchEventsData,
                        s = i.params,
                        a = i.touches,
                        o = i.rtlTranslate;
                    if (i.enabled && (s.simulateTouch || "mouse" !== t.pointerType)) {
                        var l,
                            h = t;
                        if ((h.originalEvent && (h = h.originalEvent), "pointermove" === h.type)) {
                            if (null !== r.touchId) return;
                            if (h.pointerId !== r.pointerId) return;
                        }
                        if ("touchmove" === h.type) {
                            if (!(l = [...h.changedTouches].filter((t) => t.identifier === r.touchId)[0]) || l.identifier !== r.touchId) return;
                        } else l = h;
                        if (r.isTouched) {
                            var c = l.pageX,
                                d = l.pageY;
                            if (h.preventedByNestedSwiper) return (a.startX = c), void (a.startY = d);
                            if (!i.allowTouchMove) return h.target.matches(r.focusableElements) || (i.allowClick = !1), void (r.isTouched && (Object.assign(a, { startX: c, startY: d, currentX: c, currentY: d }), (r.touchStartTime = p())));
                            if (s.touchReleaseOnEdges && !s.loop)
                                if (i.isVertical()) {
                                    if ((d < a.startY && i.translate <= i.maxTranslate()) || (d > a.startY && i.translate >= i.minTranslate())) return (r.isTouched = !1), void (r.isMoved = !1);
                                } else if ((c < a.startX && i.translate <= i.maxTranslate()) || (c > a.startX && i.translate >= i.minTranslate())) return;
                            if (e.activeElement && h.target === e.activeElement && h.target.matches(r.focusableElements)) return (r.isMoved = !0), void (i.allowClick = !1);
                            r.allowTouchCallbacks && i.emit("touchMove", h), (a.previousX = a.currentX), (a.previousY = a.currentY), (a.currentX = c), (a.currentY = d);
                            var u = a.currentX - a.startX,
                                m = a.currentY - a.startY;
                            if (!(i.params.threshold && Math.sqrt(Math.pow(u, 2) + Math.pow(m, 2)) < i.params.threshold)) {
                                var f;
                                if (void 0 === r.isScrolling)
                                    (i.isHorizontal() && a.currentY === a.startY) || (i.isVertical() && a.currentX === a.startX)
                                        ? (r.isScrolling = !1)
                                        : u * u + m * m >= 25 && ((f = (180 * Math.atan2(Math.abs(m), Math.abs(u))) / Math.PI), (r.isScrolling = i.isHorizontal() ? f > s.touchAngle : 90 - f > s.touchAngle));
                                if ((r.isScrolling && i.emit("touchMoveOpposite", h), void 0 === r.startMoving && ((a.currentX === a.startX && a.currentY === a.startY) || (r.startMoving = !0)), r.isScrolling)) r.isTouched = !1;
                                else if (r.startMoving) {
                                    (i.allowClick = !1), !s.cssMode && h.cancelable && h.preventDefault(), s.touchMoveStopPropagation && !s.nested && h.stopPropagation();
                                    var g = i.isHorizontal() ? u : m,
                                        v = i.isHorizontal() ? a.currentX - a.previousX : a.currentY - a.previousY;
                                    s.oneWayMovement && ((g = Math.abs(g) * (o ? 1 : -1)), (v = Math.abs(v) * (o ? 1 : -1))), (a.diff = g), (g *= s.touchRatio), o && ((g = -g), (v = -v));
                                    var b = i.touchesDirection;
                                    (i.swipeDirection = g > 0 ? "prev" : "next"), (i.touchesDirection = v > 0 ? "prev" : "next");
                                    var y = i.params.loop && !s.cssMode,
                                        w = ("next" === i.touchesDirection && i.allowSlideNext) || ("prev" === i.touchesDirection && i.allowSlidePrev);
                                    if (!r.isMoved) {
                                        if ((y && w && i.loopFix({ direction: i.swipeDirection }), (r.startTranslate = i.getTranslate()), i.setTransition(0), i.animating)) {
                                            var x = new window.CustomEvent("transitionend", { bubbles: !0, cancelable: !0 });
                                            i.wrapperEl.dispatchEvent(x);
                                        }
                                        (r.allowMomentumBounce = !1), !s.grabCursor || (!0 !== i.allowSlideNext && !0 !== i.allowSlidePrev) || i.setGrabCursor(!0), i.emit("sliderFirstMove", h);
                                    }
                                    if ((new Date().getTime(), r.isMoved && r.allowThresholdMove && b !== i.touchesDirection && y && w && Math.abs(g) >= 1))
                                        return Object.assign(a, { startX: c, startY: d, currentX: c, currentY: d, startTranslate: r.currentTranslate }), (r.loopSwapReset = !0), void (r.startTranslate = r.currentTranslate);
                                    i.emit("sliderMove", h), (r.isMoved = !0), (r.currentTranslate = g + r.startTranslate);
                                    var E = !0,
                                        C = s.resistanceRatio;
                                    if (
                                        (s.touchReleaseOnEdges && (C = 0),
                                        g > 0
                                            ? (y &&
                                                  w &&
                                                  r.allowThresholdMove &&
                                                  r.currentTranslate > (s.centeredSlides ? i.minTranslate() - i.slidesSizesGrid[i.activeIndex + 1] : i.minTranslate()) &&
                                                  i.loopFix({ direction: "prev", setTranslate: !0, activeSlideIndex: 0 }),
                                              r.currentTranslate > i.minTranslate() && ((E = !1), s.resistance && (r.currentTranslate = i.minTranslate() - 1 + Math.pow(-i.minTranslate() + r.startTranslate + g, C))))
                                            : g < 0 &&
                                              (y &&
                                                  w &&
                                                  r.allowThresholdMove &&
                                                  r.currentTranslate < (s.centeredSlides ? i.maxTranslate() + i.slidesSizesGrid[i.slidesSizesGrid.length - 1] : i.maxTranslate()) &&
                                                  i.loopFix({ direction: "next", setTranslate: !0, activeSlideIndex: i.slides.length - ("auto" === s.slidesPerView ? i.slidesPerViewDynamic() : Math.ceil(parseFloat(s.slidesPerView, 10))) }),
                                              r.currentTranslate < i.maxTranslate() && ((E = !1), s.resistance && (r.currentTranslate = i.maxTranslate() + 1 - Math.pow(i.maxTranslate() - r.startTranslate - g, C)))),
                                        E && (h.preventedByNestedSwiper = !0),
                                        !i.allowSlideNext && "next" === i.swipeDirection && r.currentTranslate < r.startTranslate && (r.currentTranslate = r.startTranslate),
                                        !i.allowSlidePrev && "prev" === i.swipeDirection && r.currentTranslate > r.startTranslate && (r.currentTranslate = r.startTranslate),
                                        i.allowSlidePrev || i.allowSlideNext || (r.currentTranslate = r.startTranslate),
                                        s.threshold > 0)
                                    ) {
                                        if (!(Math.abs(g) > s.threshold || r.allowThresholdMove)) return void (r.currentTranslate = r.startTranslate);
                                        if (!r.allowThresholdMove)
                                            return (
                                                (r.allowThresholdMove = !0),
                                                (a.startX = a.currentX),
                                                (a.startY = a.currentY),
                                                (r.currentTranslate = r.startTranslate),
                                                void (a.diff = i.isHorizontal() ? a.currentX - a.startX : a.currentY - a.startY)
                                            );
                                    }
                                    s.followFinger &&
                                        !s.cssMode &&
                                        (((s.freeMode && s.freeMode.enabled && i.freeMode) || s.watchSlidesProgress) && (i.updateActiveIndex(), i.updateSlidesClasses()),
                                        s.freeMode && s.freeMode.enabled && i.freeMode && i.freeMode.onTouchMove(),
                                        i.updateProgress(r.currentTranslate),
                                        i.setTranslate(r.currentTranslate));
                                }
                            }
                        } else r.startMoving && r.isScrolling && i.emit("touchMoveOpposite", h);
                    }
                }
                function $(t) {
                    var e,
                        i = this,
                        r = i.touchEventsData,
                        s = t;
                    if ((s.originalEvent && (s = s.originalEvent), "touchend" === s.type || "touchcancel" === s.type)) {
                        if (!(e = [...s.changedTouches].filter((t) => t.identifier === r.touchId)[0]) || e.identifier !== r.touchId) return;
                    } else {
                        if (null !== r.touchId) return;
                        if (s.pointerId !== r.pointerId) return;
                        e = s;
                    }
                    if (["pointercancel", "pointerout", "pointerleave", "contextmenu"].includes(s.type) && !(["pointercancel", "contextmenu"].includes(s.type) && (i.browser.isSafari || i.browser.isWebView))) return;
                    (r.pointerId = null), (r.touchId = null);
                    var a = i.params,
                        n = i.touches,
                        o = i.rtlTranslate,
                        l = i.slidesGrid;
                    if (i.enabled && (a.simulateTouch || "mouse" !== s.pointerType)) {
                        if ((r.allowTouchCallbacks && i.emit("touchEnd", s), (r.allowTouchCallbacks = !1), !r.isTouched)) return r.isMoved && a.grabCursor && i.setGrabCursor(!1), (r.isMoved = !1), void (r.startMoving = !1);
                        a.grabCursor && r.isMoved && r.isTouched && (!0 === i.allowSlideNext || !0 === i.allowSlidePrev) && i.setGrabCursor(!1);
                        var h,
                            c = p(),
                            d = c - r.touchStartTime;
                        if (i.allowClick) {
                            var m = s.path || (s.composedPath && s.composedPath());
                            i.updateClickedSlide((m && m[0]) || s.target, m), i.emit("tap click", s), d < 300 && c - r.lastClickTime < 300 && i.emit("doubleTap doubleClick", s);
                        }
                        if (
                            ((r.lastClickTime = p()),
                            u(() => {
                                i.destroyed || (i.allowClick = !0);
                            }),
                            !r.isTouched || !r.isMoved || !i.swipeDirection || (0 === n.diff && !r.loopSwapReset) || (r.currentTranslate === r.startTranslate && !r.loopSwapReset))
                        )
                            return (r.isTouched = !1), (r.isMoved = !1), void (r.startMoving = !1);
                        if (((r.isTouched = !1), (r.isMoved = !1), (r.startMoving = !1), (h = a.followFinger ? (o ? i.translate : -i.translate) : -r.currentTranslate), !a.cssMode))
                            if (a.freeMode && a.freeMode.enabled) i.freeMode.onTouchEnd({ currentPos: h });
                            else {
                                for (var f = h >= -i.maxTranslate() && !i.params.loop, g = 0, v = i.slidesSizesGrid[0], b = 0; b < l.length; b += b < a.slidesPerGroupSkip ? 1 : a.slidesPerGroup) {
                                    var y = b < a.slidesPerGroupSkip - 1 ? 1 : a.slidesPerGroup;
                                    void 0 !== l[b + y] ? (f || (h >= l[b] && h < l[b + y])) && ((g = b), (v = l[b + y] - l[b])) : (f || h >= l[b]) && ((g = b), (v = l[l.length - 1] - l[l.length - 2]));
                                }
                                var w = null,
                                    x = null;
                                a.rewind && (i.isBeginning ? (x = a.virtual && a.virtual.enabled && i.virtual ? i.virtual.slides.length - 1 : i.slides.length - 1) : i.isEnd && (w = 0));
                                var E = (h - l[g]) / v,
                                    C = g < a.slidesPerGroupSkip - 1 ? 1 : a.slidesPerGroup;
                                if (d > a.longSwipesMs) {
                                    if (!a.longSwipes) return void i.slideTo(i.activeIndex);
                                    "next" === i.swipeDirection && (E >= a.longSwipesRatio ? i.slideTo(a.rewind && i.isEnd ? w : g + C) : i.slideTo(g)),
                                        "prev" === i.swipeDirection && (E > 1 - a.longSwipesRatio ? i.slideTo(g + C) : null !== x && E < 0 && Math.abs(E) > a.longSwipesRatio ? i.slideTo(x) : i.slideTo(g));
                                } else {
                                    if (!a.shortSwipes) return void i.slideTo(i.activeIndex);
                                    i.navigation && (s.target === i.navigation.nextEl || s.target === i.navigation.prevEl)
                                        ? s.target === i.navigation.nextEl
                                            ? i.slideTo(g + C)
                                            : i.slideTo(g)
                                        : ("next" === i.swipeDirection && i.slideTo(null !== w ? w : g + C), "prev" === i.swipeDirection && i.slideTo(null !== x ? x : g));
                                }
                            }
                    }
                }
                function U() {
                    var t = this,
                        e = t.params,
                        i = t.el;
                    if (!i || 0 !== i.offsetWidth) {
                        e.breakpoints && t.setBreakpoint();
                        var r = t.allowSlideNext,
                            s = t.allowSlidePrev,
                            a = t.snapGrid,
                            n = t.virtual && t.params.virtual.enabled;
                        (t.allowSlideNext = !0), (t.allowSlidePrev = !0), t.updateSize(), t.updateSlides(), t.updateSlidesClasses();
                        var o = n && e.loop;
                        !("auto" === e.slidesPerView || e.slidesPerView > 1) || !t.isEnd || t.isBeginning || t.params.centeredSlides || o
                            ? t.params.loop && !n
                                ? t.slideToLoop(t.realIndex, 0, !1, !0)
                                : t.slideTo(t.activeIndex, 0, !1, !0)
                            : t.slideTo(t.slides.length - 1, 0, !1, !0),
                            t.autoplay &&
                                t.autoplay.running &&
                                t.autoplay.paused &&
                                (clearTimeout(t.autoplay.resizeTimeout),
                                (t.autoplay.resizeTimeout = setTimeout(() => {
                                    t.autoplay && t.autoplay.running && t.autoplay.paused && t.autoplay.resume();
                                }, 500))),
                            (t.allowSlidePrev = s),
                            (t.allowSlideNext = r),
                            t.params.watchOverflow && a !== t.snapGrid && t.checkOverflow();
                    }
                }
                function Y(t) {
                    var e = this;
                    e.enabled && (e.allowClick || (e.params.preventClicks && t.preventDefault(), e.params.preventClicksPropagation && e.animating && (t.stopPropagation(), t.stopImmediatePropagation())));
                }
                function X() {
                    var t = this,
                        e = t.wrapperEl,
                        i = t.rtlTranslate;
                    if (t.enabled) {
                        (t.previousTranslate = t.translate), t.isHorizontal() ? (t.translate = -e.scrollLeft) : (t.translate = -e.scrollTop), 0 === t.translate && (t.translate = 0), t.updateActiveIndex(), t.updateSlidesClasses();
                        var r = t.maxTranslate() - t.minTranslate();
                        (0 === r ? 0 : (t.translate - t.minTranslate()) / r) !== t.progress && t.updateProgress(i ? -t.translate : t.translate), t.emit("setTranslate", t.translate, !1);
                    }
                }
                function K(t) {
                    var e = this;
                    O(e, t.target), e.params.cssMode || ("auto" !== e.params.slidesPerView && !e.params.autoHeight) || e.update();
                }
                function Z() {
                    var t = this;
                    t.documentTouchHandlerProceeded || ((t.documentTouchHandlerProceeded = !0), t.params.touchReleaseOnEdges && (t.el.style.touchAction = "auto"));
                }
                var J = (t, e) => {
                    var i = n(),
                        r = t.params,
                        s = t.el,
                        a = t.wrapperEl,
                        o = t.device,
                        l = !!r.nested,
                        h = "on" === e ? "addEventListener" : "removeEventListener",
                        c = e;
                    i[h]("touchstart", t.onDocumentTouchStart, { passive: !1, capture: l }),
                        s[h]("touchstart", t.onTouchStart, { passive: !1 }),
                        s[h]("pointerdown", t.onTouchStart, { passive: !1 }),
                        i[h]("touchmove", t.onTouchMove, { passive: !1, capture: l }),
                        i[h]("pointermove", t.onTouchMove, { passive: !1, capture: l }),
                        i[h]("touchend", t.onTouchEnd, { passive: !0 }),
                        i[h]("pointerup", t.onTouchEnd, { passive: !0 }),
                        i[h]("pointercancel", t.onTouchEnd, { passive: !0 }),
                        i[h]("touchcancel", t.onTouchEnd, { passive: !0 }),
                        i[h]("pointerout", t.onTouchEnd, { passive: !0 }),
                        i[h]("pointerleave", t.onTouchEnd, { passive: !0 }),
                        i[h]("contextmenu", t.onTouchEnd, { passive: !0 }),
                        (r.preventClicks || r.preventClicksPropagation) && s[h]("click", t.onClick, !0),
                        r.cssMode && a[h]("scroll", t.onScroll),
                        r.updateOnWindowResize ? t[c](o.ios || o.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", U, !0) : t[c]("observerUpdate", U, !0),
                        s[h]("load", t.onLoad, { capture: !0 });
                };
                var Q = (t, e) => t.grid && e.grid && e.grid.rows > 1;
                var tt = {
                    init: !0,
                    direction: "horizontal",
                    oneWayMovement: !1,
                    touchEventsTarget: "wrapper",
                    initialSlide: 0,
                    speed: 300,
                    cssMode: !1,
                    updateOnWindowResize: !0,
                    resizeObserver: !0,
                    nested: !1,
                    createElements: !1,
                    eventsPrefix: "swiper",
                    enabled: !0,
                    focusableElements: "input, select, option, textarea, button, video, label",
                    width: null,
                    height: null,
                    preventInteractionOnTransition: !1,
                    userAgent: null,
                    url: null,
                    edgeSwipeDetection: !1,
                    edgeSwipeThreshold: 20,
                    autoHeight: !1,
                    setWrapperSize: !1,
                    virtualTranslate: !1,
                    effect: "slide",
                    breakpoints: void 0,
                    breakpointsBase: "window",
                    spaceBetween: 0,
                    slidesPerView: 1,
                    slidesPerGroup: 1,
                    slidesPerGroupSkip: 0,
                    slidesPerGroupAuto: !1,
                    centeredSlides: !1,
                    centeredSlidesBounds: !1,
                    slidesOffsetBefore: 0,
                    slidesOffsetAfter: 0,
                    normalizeSlideIndex: !0,
                    centerInsufficientSlides: !1,
                    watchOverflow: !0,
                    roundLengths: !1,
                    touchRatio: 1,
                    touchAngle: 45,
                    simulateTouch: !0,
                    shortSwipes: !0,
                    longSwipes: !0,
                    longSwipesRatio: 0.5,
                    longSwipesMs: 300,
                    followFinger: !0,
                    allowTouchMove: !0,
                    threshold: 5,
                    touchMoveStopPropagation: !1,
                    touchStartPreventDefault: !0,
                    touchStartForcePreventDefault: !1,
                    touchReleaseOnEdges: !1,
                    uniqueNavElements: !0,
                    resistance: !0,
                    resistanceRatio: 0.85,
                    watchSlidesProgress: !1,
                    grabCursor: !1,
                    preventClicks: !0,
                    preventClicksPropagation: !0,
                    slideToClickedSlide: !1,
                    loop: !1,
                    loopAddBlankSlides: !0,
                    loopAdditionalSlides: 0,
                    loopPreventsSliding: !0,
                    rewind: !1,
                    allowSlidePrev: !0,
                    allowSlideNext: !0,
                    swipeHandler: null,
                    noSwiping: !0,
                    noSwipingClass: "swiper-no-swiping",
                    noSwipingSelector: null,
                    passiveListeners: !0,
                    maxBackfaceHiddenSlides: 10,
                    containerModifierClass: "swiper-",
                    slideClass: "swiper-slide",
                    slideBlankClass: "swiper-slide-blank",
                    slideActiveClass: "swiper-slide-active",
                    slideVisibleClass: "swiper-slide-visible",
                    slideFullyVisibleClass: "swiper-slide-fully-visible",
                    slideNextClass: "swiper-slide-next",
                    slidePrevClass: "swiper-slide-prev",
                    wrapperClass: "swiper-wrapper",
                    lazyPreloaderClass: "swiper-lazy-preloader",
                    lazyPreloadPrevNext: 0,
                    runCallbacksOnInit: !0,
                    _emitClasses: !1,
                };
                function et(t, e) {
                    return function (i) {
                        void 0 === i && (i = {});
                        var r = Object.keys(i)[0],
                            s = i[r];
                        "object" == typeof s && null !== s
                            ? (!0 === t[r] && (t[r] = { enabled: !0 }),
                              "navigation" === r && t[r] && t[r].enabled && !t[r].prevEl && !t[r].nextEl && (t[r].auto = !0),
                              ["pagination", "scrollbar"].indexOf(r) >= 0 && t[r] && t[r].enabled && !t[r].el && (t[r].auto = !0),
                              r in t && "enabled" in s ? ("object" != typeof t[r] || "enabled" in t[r] || (t[r].enabled = !0), t[r] || (t[r] = { enabled: !1 }), g(e, i)) : g(e, i))
                            : g(e, i);
                    };
                }
                var it = {
                        eventsEmitter: R,
                        update: z,
                        translate: N,
                        transition: {
                            setTransition: function (t, e) {
                                var i = this;
                                i.params.cssMode || ((i.wrapperEl.style.transitionDuration = `${t}ms`), (i.wrapperEl.style.transitionDelay = 0 === t ? "0ms" : "")), i.emit("setTransition", t, e);
                            },
                            transitionStart: function (t, e) {
                                void 0 === t && (t = !0);
                                var i = this,
                                    r = i.params;
                                r.cssMode || (r.autoHeight && i.updateAutoHeight(), V({ swiper: i, runCallbacks: t, direction: e, step: "Start" }));
                            },
                            transitionEnd: function (t, e) {
                                void 0 === t && (t = !0);
                                var i = this,
                                    r = i.params;
                                (i.animating = !1), r.cssMode || (i.setTransition(0), V({ swiper: i, runCallbacks: t, direction: e, step: "End" }));
                            },
                        },
                        slide: H,
                        loop: j,
                        grabCursor: {
                            setGrabCursor: function (t) {
                                var e = this;
                                if (!(!e.params.simulateTouch || (e.params.watchOverflow && e.isLocked) || e.params.cssMode)) {
                                    var i = "container" === e.params.touchEventsTarget ? e.el : e.wrapperEl;
                                    e.isElement && (e.__preventObserver__ = !0),
                                        (i.style.cursor = "move"),
                                        (i.style.cursor = t ? "grabbing" : "grab"),
                                        e.isElement &&
                                            requestAnimationFrame(() => {
                                                e.__preventObserver__ = !1;
                                            });
                                }
                            },
                            unsetGrabCursor: function () {
                                var t = this;
                                (t.params.watchOverflow && t.isLocked) ||
                                    t.params.cssMode ||
                                    (t.isElement && (t.__preventObserver__ = !0),
                                    (t["container" === t.params.touchEventsTarget ? "el" : "wrapperEl"].style.cursor = ""),
                                    t.isElement &&
                                        requestAnimationFrame(() => {
                                            t.__preventObserver__ = !1;
                                        }));
                            },
                        },
                        events: {
                            attachEvents: function () {
                                var t = this,
                                    e = t.params;
                                (t.onTouchStart = G.bind(t)),
                                    (t.onTouchMove = q.bind(t)),
                                    (t.onTouchEnd = $.bind(t)),
                                    (t.onDocumentTouchStart = Z.bind(t)),
                                    e.cssMode && (t.onScroll = X.bind(t)),
                                    (t.onClick = Y.bind(t)),
                                    (t.onLoad = K.bind(t)),
                                    J(t, "on");
                            },
                            detachEvents: function () {
                                J(this, "off");
                            },
                        },
                        breakpoints: {
                            setBreakpoint: function () {
                                var t = this,
                                    e = t.realIndex,
                                    i = t.initialized,
                                    r = t.params,
                                    s = t.el,
                                    a = r.breakpoints;
                                if (a && (!a || 0 !== Object.keys(a).length)) {
                                    var n = t.getBreakpoint(a, t.params.breakpointsBase, t.el);
                                    if (n && t.currentBreakpoint !== n) {
                                        var o = (n in a ? a[n] : void 0) || t.originalParams,
                                            l = Q(t, r),
                                            h = Q(t, o),
                                            c = r.enabled;
                                        l && !h
                                            ? (s.classList.remove(`${r.containerModifierClass}grid`, `${r.containerModifierClass}grid-column`), t.emitContainerClasses())
                                            : !l &&
                                              h &&
                                              (s.classList.add(`${r.containerModifierClass}grid`),
                                              ((o.grid.fill && "column" === o.grid.fill) || (!o.grid.fill && "column" === r.grid.fill)) && s.classList.add(`${r.containerModifierClass}grid-column`),
                                              t.emitContainerClasses()),
                                            ["navigation", "pagination", "scrollbar"].forEach((e) => {
                                                if (void 0 !== o[e]) {
                                                    var i = r[e] && r[e].enabled,
                                                        s = o[e] && o[e].enabled;
                                                    i && !s && t[e].disable(), !i && s && t[e].enable();
                                                }
                                            });
                                        var d = o.direction && o.direction !== r.direction,
                                            u = r.loop && (o.slidesPerView !== r.slidesPerView || d),
                                            p = r.loop;
                                        d && i && t.changeDirection(), g(t.params, o);
                                        var m = t.params.enabled,
                                            f = t.params.loop;
                                        Object.assign(t, { allowTouchMove: t.params.allowTouchMove, allowSlideNext: t.params.allowSlideNext, allowSlidePrev: t.params.allowSlidePrev }),
                                            c && !m ? t.disable() : !c && m && t.enable(),
                                            (t.currentBreakpoint = n),
                                            t.emit("_beforeBreakpoint", o),
                                            i && (u ? (t.loopDestroy(), t.loopCreate(e), t.updateSlides()) : !p && f ? (t.loopCreate(e), t.updateSlides()) : p && !f && t.loopDestroy()),
                                            t.emit("breakpoint", o);
                                    }
                                }
                            },
                            getBreakpoint: function (t, e, i) {
                                if ((void 0 === e && (e = "window"), t && ("container" !== e || i))) {
                                    var r = !1,
                                        s = d(),
                                        a = "window" === e ? s.innerHeight : i.clientHeight,
                                        n = Object.keys(t).map((t) => {
                                            if ("string" == typeof t && 0 === t.indexOf("@")) {
                                                var e = parseFloat(t.substr(1));
                                                return { value: a * e, point: t };
                                            }
                                            return { value: t, point: t };
                                        });
                                    n.sort((t, e) => parseInt(t.value, 10) - parseInt(e.value, 10));
                                    for (var o = 0; o < n.length; o += 1) {
                                        var l = n[o],
                                            h = l.point,
                                            c = l.value;
                                        "window" === e ? s.matchMedia(`(min-width: ${c}px)`).matches && (r = h) : c <= i.clientWidth && (r = h);
                                    }
                                    return r || "max";
                                }
                            },
                        },
                        checkOverflow: {
                            checkOverflow: function () {
                                var t = this,
                                    e = t.isLocked,
                                    i = t.params,
                                    r = i.slidesOffsetBefore;
                                if (r) {
                                    var s = t.slides.length - 1,
                                        a = t.slidesGrid[s] + t.slidesSizesGrid[s] + 2 * r;
                                    t.isLocked = t.size > a;
                                } else t.isLocked = 1 === t.snapGrid.length;
                                !0 === i.allowSlideNext && (t.allowSlideNext = !t.isLocked),
                                    !0 === i.allowSlidePrev && (t.allowSlidePrev = !t.isLocked),
                                    e && e !== t.isLocked && (t.isEnd = !1),
                                    e !== t.isLocked && t.emit(t.isLocked ? "lock" : "unlock");
                            },
                        },
                        classes: {
                            addClasses: function () {
                                var t,
                                    e,
                                    i,
                                    r = this,
                                    s = r.classNames,
                                    a = r.params,
                                    n = r.rtl,
                                    o = r.el,
                                    l = r.device,
                                    h =
                                        ((t = [
                                            "initialized",
                                            a.direction,
                                            { "free-mode": r.params.freeMode && a.freeMode.enabled },
                                            { autoheight: a.autoHeight },
                                            { rtl: n },
                                            { grid: a.grid && a.grid.rows > 1 },
                                            { "grid-column": a.grid && a.grid.rows > 1 && "column" === a.grid.fill },
                                            { android: l.android },
                                            { ios: l.ios },
                                            { "css-mode": a.cssMode },
                                            { centered: a.cssMode && a.centeredSlides },
                                            { "watch-progress": a.watchSlidesProgress },
                                        ]),
                                        (e = a.containerModifierClass),
                                        (i = []),
                                        t.forEach((t) => {
                                            "object" == typeof t
                                                ? Object.keys(t).forEach((r) => {
                                                      t[r] && i.push(e + r);
                                                  })
                                                : "string" == typeof t && i.push(e + t);
                                        }),
                                        i);
                                s.push(...h), o.classList.add(...s), r.emitContainerClasses();
                            },
                            removeClasses: function () {
                                var t = this,
                                    e = t.el,
                                    i = t.classNames;
                                e.classList.remove(...i), t.emitContainerClasses();
                            },
                        },
                    },
                    rt = {};
                class st {
                    constructor() {
                        for (var t, e, i = arguments.length, r = new Array(i), s = 0; s < i; s++) r[s] = arguments[s];
                        1 === r.length && r[0].constructor && "Object" === Object.prototype.toString.call(r[0]).slice(8, -1) ? (e = r[0]) : ((t = r[0]), (e = r[1])), e || (e = {}), (e = g({}, e)), t && !e.el && (e.el = t);
                        var a = n();
                        if (e.el && "string" == typeof e.el && a.querySelectorAll(e.el).length > 1) {
                            var o = [];
                            return (
                                a.querySelectorAll(e.el).forEach((t) => {
                                    var i = g({}, e, { el: t });
                                    o.push(new st(i));
                                }),
                                o
                            );
                        }
                        var l = this;
                        (l.__swiper__ = !0),
                            (l.support = D()),
                            (l.device = L({ userAgent: e.userAgent })),
                            (l.browser = I()),
                            (l.eventsListeners = {}),
                            (l.eventsAnyListeners = []),
                            (l.modules = [...l.__modules__]),
                            e.modules && Array.isArray(e.modules) && l.modules.push(...e.modules);
                        var h = {};
                        l.modules.forEach((t) => {
                            t({ params: e, swiper: l, extendParams: et(e, h), on: l.on.bind(l), once: l.once.bind(l), off: l.off.bind(l), emit: l.emit.bind(l) });
                        });
                        var c = g({}, tt, h);
                        return (
                            (l.params = g({}, c, rt, e)),
                            (l.originalParams = g({}, l.params)),
                            (l.passedParams = g({}, e)),
                            l.params &&
                                l.params.on &&
                                Object.keys(l.params.on).forEach((t) => {
                                    l.on(t, l.params.on[t]);
                                }),
                            l.params && l.params.onAny && l.onAny(l.params.onAny),
                            Object.assign(l, {
                                enabled: l.params.enabled,
                                el: t,
                                classNames: [],
                                slides: [],
                                slidesGrid: [],
                                snapGrid: [],
                                slidesSizesGrid: [],
                                isHorizontal: () => "horizontal" === l.params.direction,
                                isVertical: () => "vertical" === l.params.direction,
                                activeIndex: 0,
                                realIndex: 0,
                                isBeginning: !0,
                                isEnd: !1,
                                translate: 0,
                                previousTranslate: 0,
                                progress: 0,
                                velocity: 0,
                                animating: !1,
                                cssOverflowAdjustment() {
                                    return Math.trunc(this.translate / Math.pow(2, 23)) * Math.pow(2, 23);
                                },
                                allowSlideNext: l.params.allowSlideNext,
                                allowSlidePrev: l.params.allowSlidePrev,
                                touchEventsData: {
                                    isTouched: void 0,
                                    isMoved: void 0,
                                    allowTouchCallbacks: void 0,
                                    touchStartTime: void 0,
                                    isScrolling: void 0,
                                    currentTranslate: void 0,
                                    startTranslate: void 0,
                                    allowThresholdMove: void 0,
                                    focusableElements: l.params.focusableElements,
                                    lastClickTime: 0,
                                    clickTimeout: void 0,
                                    velocities: [],
                                    allowMomentumBounce: void 0,
                                    startMoving: void 0,
                                    pointerId: null,
                                    touchId: null,
                                },
                                allowClick: !0,
                                allowTouchMove: l.params.allowTouchMove,
                                touches: { startX: 0, startY: 0, currentX: 0, currentY: 0, diff: 0 },
                                imagesToLoad: [],
                                imagesLoaded: 0,
                            }),
                            l.emit("_swiper"),
                            l.params.init && l.init(),
                            l
                        );
                    }
                    getDirectionLabel(t) {
                        return this.isHorizontal()
                            ? t
                            : {
                                  width: "height",
                                  "margin-top": "margin-left",
                                  "margin-bottom ": "margin-right",
                                  "margin-left": "margin-top",
                                  "margin-right": "margin-bottom",
                                  "padding-left": "padding-top",
                                  "padding-right": "padding-bottom",
                                  marginRight: "marginBottom",
                              }[t];
                    }
                    getSlideIndex(t) {
                        var e = C(y(this.slidesEl, `.${this.params.slideClass}, swiper-slide`)[0]);
                        return C(t) - e;
                    }
                    getSlideIndexByData(t) {
                        return this.getSlideIndex(this.slides.filter((e) => 1 * e.getAttribute("data-swiper-slide-index") === t)[0]);
                    }
                    recalcSlides() {
                        var t = this,
                            e = t.slidesEl,
                            i = t.params;
                        t.slides = y(e, `.${i.slideClass}, swiper-slide`);
                    }
                    enable() {
                        var t = this;
                        t.enabled || ((t.enabled = !0), t.params.grabCursor && t.setGrabCursor(), t.emit("enable"));
                    }
                    disable() {
                        var t = this;
                        t.enabled && ((t.enabled = !1), t.params.grabCursor && t.unsetGrabCursor(), t.emit("disable"));
                    }
                    setProgress(t, e) {
                        var i = this;
                        t = Math.min(Math.max(t, 0), 1);
                        var r = i.minTranslate(),
                            s = (i.maxTranslate() - r) * t + r;
                        i.translateTo(s, void 0 === e ? 0 : e), i.updateActiveIndex(), i.updateSlidesClasses();
                    }
                    emitContainerClasses() {
                        var t = this;
                        if (t.params._emitClasses && t.el) {
                            var e = t.el.className.split(" ").filter((e) => 0 === e.indexOf("swiper") || 0 === e.indexOf(t.params.containerModifierClass));
                            t.emit("_containerClasses", e.join(" "));
                        }
                    }
                    getSlideClasses(t) {
                        var e = this;
                        return e.destroyed
                            ? ""
                            : t.className
                                  .split(" ")
                                  .filter((t) => 0 === t.indexOf("swiper-slide") || 0 === t.indexOf(e.params.slideClass))
                                  .join(" ");
                    }
                    emitSlidesClasses() {
                        var t = this;
                        if (t.params._emitClasses && t.el) {
                            var e = [];
                            t.slides.forEach((i) => {
                                var r = t.getSlideClasses(i);
                                e.push({ slideEl: i, classNames: r }), t.emit("_slideClass", i, r);
                            }),
                                t.emit("_slideClasses", e);
                        }
                    }
                    slidesPerViewDynamic(t, e) {
                        void 0 === t && (t = "current"), void 0 === e && (e = !1);
                        var i = this,
                            r = i.params,
                            s = i.slides,
                            a = i.slidesGrid,
                            n = i.slidesSizesGrid,
                            o = i.size,
                            l = i.activeIndex,
                            h = 1;
                        if ("number" == typeof r.slidesPerView) return r.slidesPerView;
                        if (r.centeredSlides) {
                            for (var c, d = s[l] ? s[l].swiperSlideSize : 0, u = l + 1; u < s.length; u += 1) s[u] && !c && ((h += 1), (d += s[u].swiperSlideSize) > o && (c = !0));
                            for (var p = l - 1; p >= 0; p -= 1) s[p] && !c && ((h += 1), (d += s[p].swiperSlideSize) > o && (c = !0));
                        } else if ("current" === t)
                            for (var m = l + 1; m < s.length; m += 1) {
                                (e ? a[m] + n[m] - a[l] < o : a[m] - a[l] < o) && (h += 1);
                            }
                        else
                            for (var f = l - 1; f >= 0; f -= 1) {
                                a[l] - a[f] < o && (h += 1);
                            }
                        return h;
                    }
                    update() {
                        var t = this;
                        if (t && !t.destroyed) {
                            var e,
                                i = t.snapGrid,
                                r = t.params;
                            if (
                                (r.breakpoints && t.setBreakpoint(),
                                [...t.el.querySelectorAll('[loading="lazy"]')].forEach((e) => {
                                    e.complete && O(t, e);
                                }),
                                t.updateSize(),
                                t.updateSlides(),
                                t.updateProgress(),
                                t.updateSlidesClasses(),
                                r.freeMode && r.freeMode.enabled && !r.cssMode)
                            )
                                a(), r.autoHeight && t.updateAutoHeight();
                            else {
                                if (("auto" === r.slidesPerView || r.slidesPerView > 1) && t.isEnd && !r.centeredSlides) {
                                    var s = t.virtual && r.virtual.enabled ? t.virtual.slides : t.slides;
                                    e = t.slideTo(s.length - 1, 0, !1, !0);
                                } else e = t.slideTo(t.activeIndex, 0, !1, !0);
                                e || a();
                            }
                            r.watchOverflow && i !== t.snapGrid && t.checkOverflow(), t.emit("update");
                        }
                        function a() {
                            var e = t.rtlTranslate ? -1 * t.translate : t.translate,
                                i = Math.min(Math.max(e, t.maxTranslate()), t.minTranslate());
                            t.setTranslate(i), t.updateActiveIndex(), t.updateSlidesClasses();
                        }
                    }
                    changeDirection(t, e) {
                        void 0 === e && (e = !0);
                        var i = this,
                            r = i.params.direction;
                        return (
                            t || (t = "horizontal" === r ? "vertical" : "horizontal"),
                            t === r ||
                                ("horizontal" !== t && "vertical" !== t) ||
                                (i.el.classList.remove(`${i.params.containerModifierClass}${r}`),
                                i.el.classList.add(`${i.params.containerModifierClass}${t}`),
                                i.emitContainerClasses(),
                                (i.params.direction = t),
                                i.slides.forEach((e) => {
                                    "vertical" === t ? (e.style.width = "") : (e.style.height = "");
                                }),
                                i.emit("changeDirection"),
                                e && i.update()),
                            i
                        );
                    }
                    changeLanguageDirection(t) {
                        var e = this;
                        (e.rtl && "rtl" === t) ||
                            (!e.rtl && "ltr" === t) ||
                            ((e.rtl = "rtl" === t),
                            (e.rtlTranslate = "horizontal" === e.params.direction && e.rtl),
                            e.rtl ? (e.el.classList.add(`${e.params.containerModifierClass}rtl`), (e.el.dir = "rtl")) : (e.el.classList.remove(`${e.params.containerModifierClass}rtl`), (e.el.dir = "ltr")),
                            e.update());
                    }
                    mount(t) {
                        var e = this;
                        if (e.mounted) return !0;
                        var i = t || e.params.el;
                        if (("string" == typeof i && (i = document.querySelector(i)), !i)) return !1;
                        (i.swiper = e), i.parentNode && i.parentNode.host && "SWIPER-CONTAINER" === i.parentNode.host.nodeName && (e.isElement = !0);
                        var r = () => `.${(e.params.wrapperClass || "").trim().split(" ").join(".")}`,
                            s = i && i.shadowRoot && i.shadowRoot.querySelector ? i.shadowRoot.querySelector(r()) : y(i, r())[0];
                        return (
                            !s &&
                                e.params.createElements &&
                                ((s = x("div", e.params.wrapperClass)),
                                i.append(s),
                                y(i, `.${e.params.slideClass}`).forEach((t) => {
                                    s.append(t);
                                })),
                            Object.assign(e, {
                                el: i,
                                wrapperEl: s,
                                slidesEl: e.isElement && !i.parentNode.host.slideSlots ? i.parentNode.host : s,
                                hostEl: e.isElement ? i.parentNode.host : i,
                                mounted: !0,
                                rtl: "rtl" === i.dir.toLowerCase() || "rtl" === E(i, "direction"),
                                rtlTranslate: "horizontal" === e.params.direction && ("rtl" === i.dir.toLowerCase() || "rtl" === E(i, "direction")),
                                wrongRTL: "-webkit-box" === E(s, "display"),
                            }),
                            !0
                        );
                    }
                    init(t) {
                        var e = this;
                        if (e.initialized) return e;
                        if (!1 === e.mount(t)) return e;
                        e.emit("beforeInit"),
                            e.params.breakpoints && e.setBreakpoint(),
                            e.addClasses(),
                            e.updateSize(),
                            e.updateSlides(),
                            e.params.watchOverflow && e.checkOverflow(),
                            e.params.grabCursor && e.enabled && e.setGrabCursor(),
                            e.params.loop && e.virtual && e.params.virtual.enabled
                                ? e.slideTo(e.params.initialSlide + e.virtual.slidesBefore, 0, e.params.runCallbacksOnInit, !1, !0)
                                : e.slideTo(e.params.initialSlide, 0, e.params.runCallbacksOnInit, !1, !0),
                            e.params.loop && e.loopCreate(),
                            e.attachEvents();
                        var i = [...e.el.querySelectorAll('[loading="lazy"]')];
                        return (
                            e.isElement && i.push(...e.hostEl.querySelectorAll('[loading="lazy"]')),
                            i.forEach((t) => {
                                t.complete
                                    ? O(e, t)
                                    : t.addEventListener("load", (t) => {
                                          O(e, t.target);
                                      });
                            }),
                            B(e),
                            (e.initialized = !0),
                            B(e),
                            e.emit("init"),
                            e.emit("afterInit"),
                            e
                        );
                    }
                    destroy(t, e) {
                        void 0 === t && (t = !0), void 0 === e && (e = !0);
                        var i,
                            r = this,
                            s = r.params,
                            a = r.el,
                            n = r.wrapperEl,
                            o = r.slides;
                        return (
                            void 0 === r.params ||
                                r.destroyed ||
                                (r.emit("beforeDestroy"),
                                (r.initialized = !1),
                                r.detachEvents(),
                                s.loop && r.loopDestroy(),
                                e &&
                                    (r.removeClasses(),
                                    a.removeAttribute("style"),
                                    n.removeAttribute("style"),
                                    o &&
                                        o.length &&
                                        o.forEach((t) => {
                                            t.classList.remove(s.slideVisibleClass, s.slideFullyVisibleClass, s.slideActiveClass, s.slideNextClass, s.slidePrevClass), t.removeAttribute("style"), t.removeAttribute("data-swiper-slide-index");
                                        })),
                                r.emit("destroy"),
                                Object.keys(r.eventsListeners).forEach((t) => {
                                    r.off(t);
                                }),
                                !1 !== t &&
                                    ((r.el.swiper = null),
                                    (i = r),
                                    Object.keys(i).forEach((t) => {
                                        try {
                                            i[t] = null;
                                        } catch (t) {}
                                        try {
                                            delete i[t];
                                        } catch (t) {}
                                    })),
                                (r.destroyed = !0)),
                            null
                        );
                    }
                    static extendDefaults(t) {
                        g(rt, t);
                    }
                    static get extendedDefaults() {
                        return rt;
                    }
                    static get defaults() {
                        return tt;
                    }
                    static installModule(t) {
                        st.prototype.__modules__ || (st.prototype.__modules__ = []);
                        var e = st.prototype.__modules__;
                        "function" == typeof t && e.indexOf(t) < 0 && e.push(t);
                    }
                    static use(t) {
                        return Array.isArray(t) ? (t.forEach((t) => st.installModule(t)), st) : (st.installModule(t), st);
                    }
                }
                function at(t, e, i, r) {
                    return (
                        t.params.createElements &&
                            Object.keys(r).forEach((s) => {
                                if (!i[s] && !0 === i.auto) {
                                    var a = y(t.el, `.${r[s]}`)[0];
                                    a || (((a = x("div", r[s])).className = r[s]), t.el.append(a)), (i[s] = a), (e[s] = a);
                                }
                            }),
                        i
                    );
                }
                function nt(t) {
                    var e = t.swiper,
                        i = t.extendParams,
                        r = t.on,
                        s = t.emit;
                    i({
                        navigation: {
                            nextEl: null,
                            prevEl: null,
                            hideOnClick: !1,
                            disabledClass: "swiper-button-disabled",
                            hiddenClass: "swiper-button-hidden",
                            lockClass: "swiper-button-lock",
                            navigationDisabledClass: "swiper-navigation-disabled",
                        },
                    }),
                        (e.navigation = { nextEl: null, prevEl: null });
                    var a = (t) => (Array.isArray(t) ? t : [t]).filter((t) => !!t);
                    function n(t) {
                        var i;
                        return t && "string" == typeof t && e.isElement && (i = e.el.querySelector(t))
                            ? i
                            : (t &&
                                  ("string" == typeof t && (i = [...document.querySelectorAll(t)]), e.params.uniqueNavElements && "string" == typeof t && i.length > 1 && 1 === e.el.querySelectorAll(t).length && (i = e.el.querySelector(t))),
                              t && !i ? t : i);
                    }
                    function o(t, i) {
                        var r = e.params.navigation;
                        (t = a(t)).forEach((t) => {
                            t && (t.classList[i ? "add" : "remove"](...r.disabledClass.split(" ")), "BUTTON" === t.tagName && (t.disabled = i), e.params.watchOverflow && e.enabled && t.classList[e.isLocked ? "add" : "remove"](r.lockClass));
                        });
                    }
                    function l() {
                        var t = e.navigation,
                            i = t.nextEl,
                            r = t.prevEl;
                        if (e.params.loop) return o(r, !1), void o(i, !1);
                        o(r, e.isBeginning && !e.params.rewind), o(i, e.isEnd && !e.params.rewind);
                    }
                    function h(t) {
                        t.preventDefault(), (!e.isBeginning || e.params.loop || e.params.rewind) && (e.slidePrev(), s("navigationPrev"));
                    }
                    function c(t) {
                        t.preventDefault(), (!e.isEnd || e.params.loop || e.params.rewind) && (e.slideNext(), s("navigationNext"));
                    }
                    function d() {
                        var t = e.params.navigation;
                        if (((e.params.navigation = at(e, e.originalParams.navigation, e.params.navigation, { nextEl: "swiper-button-next", prevEl: "swiper-button-prev" })), t.nextEl || t.prevEl)) {
                            var i = n(t.nextEl),
                                r = n(t.prevEl);
                            Object.assign(e.navigation, { nextEl: i, prevEl: r }), (i = a(i)), (r = a(r));
                            var s = (i, r) => {
                                i && i.addEventListener("click", "next" === r ? c : h), !e.enabled && i && i.classList.add(...t.lockClass.split(" "));
                            };
                            i.forEach((t) => s(t, "next")), r.forEach((t) => s(t, "prev"));
                        }
                    }
                    function u() {
                        var t = e.navigation,
                            i = t.nextEl,
                            r = t.prevEl;
                        (i = a(i)), (r = a(r));
                        var s = (t, i) => {
                            t.removeEventListener("click", "next" === i ? c : h), t.classList.remove(...e.params.navigation.disabledClass.split(" "));
                        };
                        i.forEach((t) => s(t, "next")), r.forEach((t) => s(t, "prev"));
                    }
                    r("init", () => {
                        !1 === e.params.navigation.enabled ? p() : (d(), l());
                    }),
                        r("toEdge fromEdge lock unlock", () => {
                            l();
                        }),
                        r("destroy", () => {
                            u();
                        }),
                        r("enable disable", () => {
                            var t = e.navigation,
                                i = t.nextEl,
                                r = t.prevEl;
                            (i = a(i)), (r = a(r)), e.enabled ? l() : [...i, ...r].filter((t) => !!t).forEach((t) => t.classList.add(e.params.navigation.lockClass));
                        }),
                        r("click", (t, i) => {
                            var r = e.navigation,
                                n = r.nextEl,
                                o = r.prevEl;
                            (n = a(n)), (o = a(o));
                            var l = i.target;
                            if (e.params.navigation.hideOnClick && !o.includes(l) && !n.includes(l)) {
                                if (e.pagination && e.params.pagination && e.params.pagination.clickable && (e.pagination.el === l || e.pagination.el.contains(l))) return;
                                var h;
                                n.length ? (h = n[0].classList.contains(e.params.navigation.hiddenClass)) : o.length && (h = o[0].classList.contains(e.params.navigation.hiddenClass)),
                                    s(!0 === h ? "navigationShow" : "navigationHide"),
                                    [...n, ...o].filter((t) => !!t).forEach((t) => t.classList.toggle(e.params.navigation.hiddenClass));
                            }
                        });
                    var p = () => {
                        e.el.classList.add(...e.params.navigation.navigationDisabledClass.split(" ")), u();
                    };
                    Object.assign(e.navigation, {
                        enable: () => {
                            e.el.classList.remove(...e.params.navigation.navigationDisabledClass.split(" ")), d(), l();
                        },
                        disable: p,
                        update: l,
                        init: d,
                        destroy: u,
                    });
                }
                function ot(t) {
                    return (
                        void 0 === t && (t = ""),
                        `.${t
                            .trim()
                            .replace(/([\.:!+\/])/g, "\\$1")
                            .replace(/ /g, ".")}`
                    );
                }
                function lt(t) {
                    var e,
                        i = t.swiper,
                        r = t.extendParams,
                        s = t.on,
                        a = t.emit,
                        n = "swiper-pagination";
                    r({
                        pagination: {
                            el: null,
                            bulletElement: "span",
                            clickable: !1,
                            hideOnClick: !1,
                            renderBullet: null,
                            renderProgressbar: null,
                            renderFraction: null,
                            renderCustom: null,
                            progressbarOpposite: !1,
                            type: "bullets",
                            dynamicBullets: !1,
                            dynamicMainBullets: 1,
                            formatFractionCurrent: (t) => t,
                            formatFractionTotal: (t) => t,
                            bulletClass: `${n}-bullet`,
                            bulletActiveClass: `${n}-bullet-active`,
                            modifierClass: `${n}-`,
                            currentClass: `${n}-current`,
                            totalClass: `${n}-total`,
                            hiddenClass: `${n}-hidden`,
                            progressbarFillClass: `${n}-progressbar-fill`,
                            progressbarOppositeClass: `${n}-progressbar-opposite`,
                            clickableClass: `${n}-clickable`,
                            lockClass: `${n}-lock`,
                            horizontalClass: `${n}-horizontal`,
                            verticalClass: `${n}-vertical`,
                            paginationDisabledClass: `${n}-disabled`,
                        },
                    }),
                        (i.pagination = { el: null, bullets: [] });
                    var o = 0,
                        l = (t) => (Array.isArray(t) ? t : [t]).filter((t) => !!t);
                    function h() {
                        return !i.params.pagination.el || !i.pagination.el || (Array.isArray(i.pagination.el) && 0 === i.pagination.el.length);
                    }
                    function c(t, e) {
                        var r = i.params.pagination.bulletActiveClass;
                        t && (t = t[("prev" === e ? "previous" : "next") + "ElementSibling"]) && (t.classList.add(`${r}-${e}`), (t = t[("prev" === e ? "previous" : "next") + "ElementSibling"]) && t.classList.add(`${r}-${e}-${e}`));
                    }
                    function d(t) {
                        var e = t.target.closest(ot(i.params.pagination.bulletClass));
                        if (e) {
                            t.preventDefault();
                            var r = C(e) * i.params.slidesPerGroup;
                            if (i.params.loop) {
                                if (i.realIndex === r) return;
                                i.slideToLoop(r);
                            } else i.slideTo(r);
                        }
                    }
                    function u() {
                        var t = i.rtl,
                            r = i.params.pagination;
                        if (!h()) {
                            var s,
                                n,
                                d = i.pagination.el;
                            d = l(d);
                            var u = i.virtual && i.params.virtual.enabled ? i.virtual.slides.length : i.slides.length,
                                p = i.params.loop ? Math.ceil(u / i.params.slidesPerGroup) : i.snapGrid.length;
                            if (
                                (i.params.loop
                                    ? ((n = i.previousRealIndex || 0), (s = i.params.slidesPerGroup > 1 ? Math.floor(i.realIndex / i.params.slidesPerGroup) : i.realIndex))
                                    : void 0 !== i.snapIndex
                                    ? ((s = i.snapIndex), (n = i.previousSnapIndex))
                                    : ((n = i.previousIndex || 0), (s = i.activeIndex || 0)),
                                "bullets" === r.type && i.pagination.bullets && i.pagination.bullets.length > 0)
                            ) {
                                var m,
                                    f,
                                    g,
                                    v = i.pagination.bullets;
                                if (
                                    (r.dynamicBullets &&
                                        ((e = T(v[0], i.isHorizontal() ? "width" : "height", !0)),
                                        d.forEach((t) => {
                                            t.style[i.isHorizontal() ? "width" : "height"] = e * (r.dynamicMainBullets + 4) + "px";
                                        }),
                                        r.dynamicMainBullets > 1 && void 0 !== n && ((o += s - (n || 0)) > r.dynamicMainBullets - 1 ? (o = r.dynamicMainBullets - 1) : o < 0 && (o = 0)),
                                        (m = Math.max(s - o, 0)),
                                        (g = ((f = m + (Math.min(v.length, r.dynamicMainBullets) - 1)) + m) / 2)),
                                    v.forEach((t) => {
                                        var e = [...["", "-next", "-next-next", "-prev", "-prev-prev", "-main"].map((t) => `${r.bulletActiveClass}${t}`)].map((t) => ("string" == typeof t && t.includes(" ") ? t.split(" ") : t)).flat();
                                        t.classList.remove(...e);
                                    }),
                                    d.length > 1)
                                )
                                    v.forEach((t) => {
                                        var e = C(t);
                                        e === s ? t.classList.add(...r.bulletActiveClass.split(" ")) : i.isElement && t.setAttribute("part", "bullet"),
                                            r.dynamicBullets && (e >= m && e <= f && t.classList.add(...`${r.bulletActiveClass}-main`.split(" ")), e === m && c(t, "prev"), e === f && c(t, "next"));
                                    });
                                else {
                                    var b = v[s];
                                    if (
                                        (b && b.classList.add(...r.bulletActiveClass.split(" ")),
                                        i.isElement &&
                                            v.forEach((t, e) => {
                                                t.setAttribute("part", e === s ? "bullet-active" : "bullet");
                                            }),
                                        r.dynamicBullets)
                                    ) {
                                        for (var y = v[m], w = v[f], x = m; x <= f; x += 1) v[x] && v[x].classList.add(...`${r.bulletActiveClass}-main`.split(" "));
                                        c(y, "prev"), c(w, "next");
                                    }
                                }
                                if (r.dynamicBullets) {
                                    var E = Math.min(v.length, r.dynamicMainBullets + 4),
                                        S = (e * E - e) / 2 - g * e,
                                        _ = t ? "right" : "left";
                                    v.forEach((t) => {
                                        t.style[i.isHorizontal() ? _ : "top"] = `${S}px`;
                                    });
                                }
                            }
                            d.forEach((t, e) => {
                                if (
                                    ("fraction" === r.type &&
                                        (t.querySelectorAll(ot(r.currentClass)).forEach((t) => {
                                            t.textContent = r.formatFractionCurrent(s + 1);
                                        }),
                                        t.querySelectorAll(ot(r.totalClass)).forEach((t) => {
                                            t.textContent = r.formatFractionTotal(p);
                                        })),
                                    "progressbar" === r.type)
                                ) {
                                    var n;
                                    n = r.progressbarOpposite ? (i.isHorizontal() ? "vertical" : "horizontal") : i.isHorizontal() ? "horizontal" : "vertical";
                                    var o = (s + 1) / p,
                                        l = 1,
                                        h = 1;
                                    "horizontal" === n ? (l = o) : (h = o),
                                        t.querySelectorAll(ot(r.progressbarFillClass)).forEach((t) => {
                                            (t.style.transform = `translate3d(0,0,0) scaleX(${l}) scaleY(${h})`), (t.style.transitionDuration = `${i.params.speed}ms`);
                                        });
                                }
                                "custom" === r.type && r.renderCustom ? ((t.innerHTML = r.renderCustom(i, s + 1, p)), 0 === e && a("paginationRender", t)) : (0 === e && a("paginationRender", t), a("paginationUpdate", t)),
                                    i.params.watchOverflow && i.enabled && t.classList[i.isLocked ? "add" : "remove"](r.lockClass);
                            });
                        }
                    }
                    function p() {
                        var t = i.params.pagination;
                        if (!h()) {
                            var e = i.virtual && i.params.virtual.enabled ? i.virtual.slides.length : i.grid && i.params.grid.rows > 1 ? i.slides.length / Math.ceil(i.params.grid.rows) : i.slides.length,
                                r = i.pagination.el;
                            r = l(r);
                            var s = "";
                            if ("bullets" === t.type) {
                                var n = i.params.loop ? Math.ceil(e / i.params.slidesPerGroup) : i.snapGrid.length;
                                i.params.freeMode && i.params.freeMode.enabled && n > e && (n = e);
                                for (var o = 0; o < n; o += 1)
                                    t.renderBullet ? (s += t.renderBullet.call(i, o, t.bulletClass)) : (s += `<${t.bulletElement} ${i.isElement ? 'part="bullet"' : ""} class="${t.bulletClass}"></${t.bulletElement}>`);
                            }
                            "fraction" === t.type && (s = t.renderFraction ? t.renderFraction.call(i, t.currentClass, t.totalClass) : `<span class="${t.currentClass}"></span> / <span class="${t.totalClass}"></span>`),
                                "progressbar" === t.type && (s = t.renderProgressbar ? t.renderProgressbar.call(i, t.progressbarFillClass) : `<span class="${t.progressbarFillClass}"></span>`),
                                (i.pagination.bullets = []),
                                r.forEach((e) => {
                                    "custom" !== t.type && (e.innerHTML = s || ""), "bullets" === t.type && i.pagination.bullets.push(...e.querySelectorAll(ot(t.bulletClass)));
                                }),
                                "custom" !== t.type && a("paginationRender", r[0]);
                        }
                    }
                    function m() {
                        i.params.pagination = at(i, i.originalParams.pagination, i.params.pagination, { el: "swiper-pagination" });
                        var t,
                            e = i.params.pagination;
                        e.el &&
                            ("string" == typeof e.el && i.isElement && (t = i.el.querySelector(e.el)),
                            t || "string" != typeof e.el || (t = [...document.querySelectorAll(e.el)]),
                            t || (t = e.el),
                            t &&
                                0 !== t.length &&
                                (i.params.uniqueNavElements && "string" == typeof e.el && Array.isArray(t) && t.length > 1 && (t = [...i.el.querySelectorAll(e.el)]).length > 1 && (t = t.filter((t) => S(t, ".swiper")[0] === i.el)[0]),
                                Array.isArray(t) && 1 === t.length && (t = t[0]),
                                Object.assign(i.pagination, { el: t }),
                                (t = l(t)).forEach((t) => {
                                    "bullets" === e.type && e.clickable && t.classList.add(...(e.clickableClass || "").split(" ")),
                                        t.classList.add(e.modifierClass + e.type),
                                        t.classList.add(i.isHorizontal() ? e.horizontalClass : e.verticalClass),
                                        "bullets" === e.type && e.dynamicBullets && (t.classList.add(`${e.modifierClass}${e.type}-dynamic`), (o = 0), e.dynamicMainBullets < 1 && (e.dynamicMainBullets = 1)),
                                        "progressbar" === e.type && e.progressbarOpposite && t.classList.add(e.progressbarOppositeClass),
                                        e.clickable && t.addEventListener("click", d),
                                        i.enabled || t.classList.add(e.lockClass);
                                })));
                    }
                    function f() {
                        var t = i.params.pagination;
                        if (!h()) {
                            var e = i.pagination.el;
                            e &&
                                (e = l(e)).forEach((e) => {
                                    e.classList.remove(t.hiddenClass),
                                        e.classList.remove(t.modifierClass + t.type),
                                        e.classList.remove(i.isHorizontal() ? t.horizontalClass : t.verticalClass),
                                        t.clickable && (e.classList.remove(...(t.clickableClass || "").split(" ")), e.removeEventListener("click", d));
                                }),
                                i.pagination.bullets && i.pagination.bullets.forEach((e) => e.classList.remove(...t.bulletActiveClass.split(" ")));
                        }
                    }
                    s("changeDirection", () => {
                        if (i.pagination && i.pagination.el) {
                            var t = i.params.pagination,
                                e = i.pagination.el;
                            (e = l(e)).forEach((e) => {
                                e.classList.remove(t.horizontalClass, t.verticalClass), e.classList.add(i.isHorizontal() ? t.horizontalClass : t.verticalClass);
                            });
                        }
                    }),
                        s("init", () => {
                            !1 === i.params.pagination.enabled ? g() : (m(), p(), u());
                        }),
                        s("activeIndexChange", () => {
                            void 0 === i.snapIndex && u();
                        }),
                        s("snapIndexChange", () => {
                            u();
                        }),
                        s("snapGridLengthChange", () => {
                            p(), u();
                        }),
                        s("destroy", () => {
                            f();
                        }),
                        s("enable disable", () => {
                            var t = i.pagination.el;
                            t && (t = l(t)).forEach((t) => t.classList[i.enabled ? "remove" : "add"](i.params.pagination.lockClass));
                        }),
                        s("lock unlock", () => {
                            u();
                        }),
                        s("click", (t, e) => {
                            var r = e.target,
                                s = l(i.pagination.el);
                            if (i.params.pagination.el && i.params.pagination.hideOnClick && s && s.length > 0 && !r.classList.contains(i.params.pagination.bulletClass)) {
                                if (i.navigation && ((i.navigation.nextEl && r === i.navigation.nextEl) || (i.navigation.prevEl && r === i.navigation.prevEl))) return;
                                var n = s[0].classList.contains(i.params.pagination.hiddenClass);
                                a(!0 === n ? "paginationShow" : "paginationHide"), s.forEach((t) => t.classList.toggle(i.params.pagination.hiddenClass));
                            }
                        });
                    var g = () => {
                        i.el.classList.add(i.params.pagination.paginationDisabledClass);
                        var t = i.pagination.el;
                        t && (t = l(t)).forEach((t) => t.classList.add(i.params.pagination.paginationDisabledClass)), f();
                    };
                    Object.assign(i.pagination, {
                        enable: () => {
                            i.el.classList.remove(i.params.pagination.paginationDisabledClass);
                            var t = i.pagination.el;
                            t && (t = l(t)).forEach((t) => t.classList.remove(i.params.pagination.paginationDisabledClass)), m(), p(), u();
                        },
                        disable: g,
                        render: p,
                        update: u,
                        init: m,
                        destroy: f,
                    });
                }
                function ht(t) {
                    var e = t.swiper,
                        i = t.extendParams,
                        r = t.on;
                    i({
                        a11y: {
                            enabled: !0,
                            notificationClass: "swiper-notification",
                            prevSlideMessage: "Previous slide",
                            nextSlideMessage: "Next slide",
                            firstSlideMessage: "This is the first slide",
                            lastSlideMessage: "This is the last slide",
                            paginationBulletMessage: "Go to slide {{index}}",
                            slideLabelMessage: "{{index}} / {{slidesLength}}",
                            containerMessage: null,
                            containerRoleDescriptionMessage: null,
                            itemRoleDescriptionMessage: null,
                            slideRole: "group",
                            id: null,
                        },
                    }),
                        (e.a11y = { clicked: !1 });
                    var s = null;
                    function a(t) {
                        var e = s;
                        0 !== e.length && ((e.innerHTML = ""), (e.innerHTML = t));
                    }
                    var n = (t) => (Array.isArray(t) ? t : [t]).filter((t) => !!t);
                    function o(t) {
                        (t = n(t)).forEach((t) => {
                            t.setAttribute("tabIndex", "0");
                        });
                    }
                    function l(t) {
                        (t = n(t)).forEach((t) => {
                            t.setAttribute("tabIndex", "-1");
                        });
                    }
                    function h(t, e) {
                        (t = n(t)).forEach((t) => {
                            t.setAttribute("role", e);
                        });
                    }
                    function c(t, e) {
                        (t = n(t)).forEach((t) => {
                            t.setAttribute("aria-roledescription", e);
                        });
                    }
                    function d(t, e) {
                        (t = n(t)).forEach((t) => {
                            t.setAttribute("aria-label", e);
                        });
                    }
                    function u(t) {
                        (t = n(t)).forEach((t) => {
                            t.setAttribute("aria-disabled", !0);
                        });
                    }
                    function p(t) {
                        (t = n(t)).forEach((t) => {
                            t.setAttribute("aria-disabled", !1);
                        });
                    }
                    function m(t) {
                        if (13 === t.keyCode || 32 === t.keyCode) {
                            var i = e.params.a11y,
                                r = t.target;
                            (e.pagination && e.pagination.el && (r === e.pagination.el || e.pagination.el.contains(t.target)) && !t.target.matches(ot(e.params.pagination.bulletClass))) ||
                                (e.navigation && e.navigation.nextEl && r === e.navigation.nextEl && ((e.isEnd && !e.params.loop) || e.slideNext(), e.isEnd ? a(i.lastSlideMessage) : a(i.nextSlideMessage)),
                                e.navigation && e.navigation.prevEl && r === e.navigation.prevEl && ((e.isBeginning && !e.params.loop) || e.slidePrev(), e.isBeginning ? a(i.firstSlideMessage) : a(i.prevSlideMessage)),
                                e.pagination && r.matches(ot(e.params.pagination.bulletClass)) && r.click());
                        }
                    }
                    function f() {
                        return e.pagination && e.pagination.bullets && e.pagination.bullets.length;
                    }
                    function g() {
                        return f() && e.params.pagination.clickable;
                    }
                    var v = (t, e, i) => {
                            o(t),
                                "BUTTON" !== t.tagName && (h(t, "button"), t.addEventListener("keydown", m)),
                                d(t, i),
                                (function (t, e) {
                                    (t = n(t)).forEach((t) => {
                                        t.setAttribute("aria-controls", e);
                                    });
                                })(t, e);
                        },
                        b = () => {
                            e.a11y.clicked = !0;
                        },
                        y = () => {
                            requestAnimationFrame(() => {
                                requestAnimationFrame(() => {
                                    e.destroyed || (e.a11y.clicked = !1);
                                });
                            });
                        },
                        w = (t) => {
                            if (!e.a11y.clicked) {
                                var i = t.target.closest(`.${e.params.slideClass}, swiper-slide`);
                                if (i && e.slides.includes(i)) {
                                    var r = e.slides.indexOf(i) === e.activeIndex,
                                        s = e.params.watchSlidesProgress && e.visibleSlides && e.visibleSlides.includes(i);
                                    r || s || (t.sourceCapabilities && t.sourceCapabilities.firesTouchEvents) || (e.isHorizontal() ? (e.el.scrollLeft = 0) : (e.el.scrollTop = 0), e.slideTo(e.slides.indexOf(i), 0));
                                }
                            }
                        },
                        E = () => {
                            var t = e.params.a11y;
                            t.itemRoleDescriptionMessage && c(e.slides, t.itemRoleDescriptionMessage), t.slideRole && h(e.slides, t.slideRole);
                            var i = e.slides.length;
                            t.slideLabelMessage &&
                                e.slides.forEach((r, s) => {
                                    var a = e.params.loop ? parseInt(r.getAttribute("data-swiper-slide-index"), 10) : s;
                                    d(r, t.slideLabelMessage.replace(/\{\{index\}\}/, a + 1).replace(/\{\{slidesLength\}\}/, i));
                                });
                        },
                        S = () => {
                            var t = e.params.a11y;
                            e.el.append(s);
                            var i = e.el;
                            t.containerRoleDescriptionMessage && c(i, t.containerRoleDescriptionMessage), t.containerMessage && d(i, t.containerMessage);
                            var r,
                                a,
                                o = e.wrapperEl,
                                l = t.id || o.getAttribute("id") || `swiper-wrapper-${((r = 16), void 0 === r && (r = 16), "x".repeat(r).replace(/x/g, () => Math.round(16 * Math.random()).toString(16)))}`,
                                h = e.params.autoplay && e.params.autoplay.enabled ? "off" : "polite";
                            (a = l),
                                n(o).forEach((t) => {
                                    t.setAttribute("id", a);
                                }),
                                (function (t, e) {
                                    (t = n(t)).forEach((t) => {
                                        t.setAttribute("aria-live", e);
                                    });
                                })(o, h),
                                E();
                            var u = e.navigation ? e.navigation : {},
                                p = u.nextEl,
                                f = u.prevEl;
                            ((p = n(p)), (f = n(f)), p && p.forEach((e) => v(e, l, t.nextSlideMessage)), f && f.forEach((e) => v(e, l, t.prevSlideMessage)), g()) &&
                                n(e.pagination.el).forEach((t) => {
                                    t.addEventListener("keydown", m);
                                });
                            e.el.addEventListener("focus", w, !0), e.el.addEventListener("pointerdown", b, !0), e.el.addEventListener("pointerup", y, !0);
                        };
                    r("beforeInit", () => {
                        (s = x("span", e.params.a11y.notificationClass)).setAttribute("aria-live", "assertive"), s.setAttribute("aria-atomic", "true");
                    }),
                        r("afterInit", () => {
                            e.params.a11y.enabled && S();
                        }),
                        r("slidesLengthChange snapGridLengthChange slidesGridLengthChange", () => {
                            e.params.a11y.enabled && E();
                        }),
                        r("fromEdge toEdge afterInit lock unlock", () => {
                            e.params.a11y.enabled &&
                                (function () {
                                    if (!e.params.loop && !e.params.rewind && e.navigation) {
                                        var t = e.navigation,
                                            i = t.nextEl,
                                            r = t.prevEl;
                                        r && (e.isBeginning ? (u(r), l(r)) : (p(r), o(r))), i && (e.isEnd ? (u(i), l(i)) : (p(i), o(i)));
                                    }
                                })();
                        }),
                        r("paginationUpdate", () => {
                            var t;
                            e.params.a11y.enabled &&
                                ((t = e.params.a11y),
                                f() &&
                                    e.pagination.bullets.forEach((i) => {
                                        e.params.pagination.clickable && (o(i), e.params.pagination.renderBullet || (h(i, "button"), d(i, t.paginationBulletMessage.replace(/\{\{index\}\}/, C(i) + 1)))),
                                            i.matches(ot(e.params.pagination.bulletActiveClass)) ? i.setAttribute("aria-current", "true") : i.removeAttribute("aria-current");
                                    }));
                        }),
                        r("destroy", () => {
                            e.params.a11y.enabled &&
                                (function () {
                                    s && s.remove();
                                    var t = e.navigation ? e.navigation : {},
                                        i = t.nextEl,
                                        r = t.prevEl;
                                    (i = n(i)),
                                        (r = n(r)),
                                        i && i.forEach((t) => t.removeEventListener("keydown", m)),
                                        r && r.forEach((t) => t.removeEventListener("keydown", m)),
                                        g() &&
                                            n(e.pagination.el).forEach((t) => {
                                                t.removeEventListener("keydown", m);
                                            }),
                                        e.el.removeEventListener("focus", w, !0),
                                        e.el.removeEventListener("pointerdown", b, !0),
                                        e.el.removeEventListener("pointerup", y, !0);
                                })();
                        });
                }
                function ct(t) {
                    var e,
                        i,
                        r = t.swiper,
                        s = t.extendParams,
                        a = t.on,
                        o = t.emit,
                        l = t.params;
                    (r.autoplay = { running: !1, paused: !1, timeLeft: 0 }), s({ autoplay: { enabled: !1, delay: 3e3, waitForTransition: !0, disableOnInteraction: !1, stopOnLastSlide: !1, reverseDirection: !1, pauseOnMouseEnter: !1 } });
                    var h,
                        c,
                        d,
                        u,
                        p,
                        m,
                        f,
                        g,
                        v = l && l.autoplay ? l.autoplay.delay : 3e3,
                        b = l && l.autoplay ? l.autoplay.delay : 3e3,
                        y = new Date().getTime();
                    function w(t) {
                        r && !r.destroyed && r.wrapperEl && t.target === r.wrapperEl && (r.wrapperEl.removeEventListener("transitionend", w), g || _());
                    }
                    var x = () => {
                            if (!r.destroyed && r.autoplay.running) {
                                r.autoplay.paused ? (c = !0) : c && ((b = h), (c = !1));
                                var t = r.autoplay.paused ? h : y + b - new Date().getTime();
                                (r.autoplay.timeLeft = t),
                                    o("autoplayTimeLeft", t, t / v),
                                    (i = requestAnimationFrame(() => {
                                        x();
                                    }));
                            }
                        },
                        E = (t) => {
                            if (!r.destroyed && r.autoplay.running) {
                                cancelAnimationFrame(i), x();
                                var s = void 0 === t ? r.params.autoplay.delay : t;
                                (v = r.params.autoplay.delay), (b = r.params.autoplay.delay);
                                var a = (() => {
                                    var t;
                                    if ((t = r.virtual && r.params.virtual.enabled ? r.slides.filter((t) => t.classList.contains("swiper-slide-active"))[0] : r.slides[r.activeIndex]))
                                        return parseInt(t.getAttribute("data-swiper-autoplay"), 10);
                                })();
                                !Number.isNaN(a) && a > 0 && void 0 === t && ((s = a), (v = a), (b = a)), (h = s);
                                var n = r.params.speed,
                                    l = () => {
                                        r &&
                                            !r.destroyed &&
                                            (r.params.autoplay.reverseDirection
                                                ? !r.isBeginning || r.params.loop || r.params.rewind
                                                    ? (r.slidePrev(n, !0, !0), o("autoplay"))
                                                    : r.params.autoplay.stopOnLastSlide || (r.slideTo(r.slides.length - 1, n, !0, !0), o("autoplay"))
                                                : !r.isEnd || r.params.loop || r.params.rewind
                                                ? (r.slideNext(n, !0, !0), o("autoplay"))
                                                : r.params.autoplay.stopOnLastSlide || (r.slideTo(0, n, !0, !0), o("autoplay")),
                                            r.params.cssMode &&
                                                ((y = new Date().getTime()),
                                                requestAnimationFrame(() => {
                                                    E();
                                                })));
                                    };
                                return (
                                    s > 0
                                        ? (clearTimeout(e),
                                          (e = setTimeout(() => {
                                              l();
                                          }, s)))
                                        : requestAnimationFrame(() => {
                                              l();
                                          }),
                                    s
                                );
                            }
                        },
                        C = () => {
                            (y = new Date().getTime()), (r.autoplay.running = !0), E(), o("autoplayStart");
                        },
                        S = () => {
                            (r.autoplay.running = !1), clearTimeout(e), cancelAnimationFrame(i), o("autoplayStop");
                        },
                        T = (t, i) => {
                            if (!r.destroyed && r.autoplay.running) {
                                clearTimeout(e), t || (f = !0);
                                var s = () => {
                                    o("autoplayPause"), r.params.autoplay.waitForTransition ? r.wrapperEl.addEventListener("transitionend", w) : _();
                                };
                                if (((r.autoplay.paused = !0), i)) return m && (h = r.params.autoplay.delay), (m = !1), void s();
                                var a = h || r.params.autoplay.delay;
                                (h = a - (new Date().getTime() - y)), (r.isEnd && h < 0 && !r.params.loop) || (h < 0 && (h = 0), s());
                            }
                        },
                        _ = () => {
                            (r.isEnd && h < 0 && !r.params.loop) || r.destroyed || !r.autoplay.running || ((y = new Date().getTime()), f ? ((f = !1), E(h)) : E(), (r.autoplay.paused = !1), o("autoplayResume"));
                        },
                        M = () => {
                            if (!r.destroyed && r.autoplay.running) {
                                var t = n();
                                "hidden" === t.visibilityState && ((f = !0), T(!0)), "visible" === t.visibilityState && _();
                            }
                        },
                        P = (t) => {
                            "mouse" === t.pointerType && ((f = !0), (g = !0), r.animating || r.autoplay.paused || T(!0));
                        },
                        k = (t) => {
                            "mouse" === t.pointerType && ((g = !1), r.autoplay.paused && _());
                        };
                    a("init", () => {
                        r.params.autoplay.enabled && (r.params.autoplay.pauseOnMouseEnter && (r.el.addEventListener("pointerenter", P), r.el.addEventListener("pointerleave", k)), n().addEventListener("visibilitychange", M), C());
                    }),
                        a("destroy", () => {
                            r.el.removeEventListener("pointerenter", P), r.el.removeEventListener("pointerleave", k), n().removeEventListener("visibilitychange", M), r.autoplay.running && S();
                        }),
                        a("_freeModeStaticRelease", () => {
                            (u || f) && _();
                        }),
                        a("_freeModeNoMomentumRelease", () => {
                            r.params.autoplay.disableOnInteraction ? S() : T(!0, !0);
                        }),
                        a("beforeTransitionStart", (t, e, i) => {
                            !r.destroyed && r.autoplay.running && (i || !r.params.autoplay.disableOnInteraction ? T(!0, !0) : S());
                        }),
                        a("sliderFirstMove", () => {
                            !r.destroyed &&
                                r.autoplay.running &&
                                (r.params.autoplay.disableOnInteraction
                                    ? S()
                                    : ((d = !0),
                                      (u = !1),
                                      (f = !1),
                                      (p = setTimeout(() => {
                                          (f = !0), (u = !0), T(!0);
                                      }, 200))));
                        }),
                        a("touchEnd", () => {
                            if (!r.destroyed && r.autoplay.running && d) {
                                if ((clearTimeout(p), clearTimeout(e), r.params.autoplay.disableOnInteraction)) return (u = !1), void (d = !1);
                                u && r.params.cssMode && _(), (u = !1), (d = !1);
                            }
                        }),
                        a("slideChange", () => {
                            !r.destroyed && r.autoplay.running && (m = !0);
                        }),
                        Object.assign(r.autoplay, { start: C, stop: S, pause: T, resume: _ });
                }
                Object.keys(it).forEach((t) => {
                    Object.keys(it[t]).forEach((e) => {
                        st.prototype[e] = it[t][e];
                    });
                }),
                    st.use([
                        function (t) {
                            var e = t.swiper,
                                i = t.on,
                                r = t.emit,
                                s = d(),
                                a = null,
                                n = null,
                                o = () => {
                                    e && !e.destroyed && e.initialized && (r("beforeResize"), r("resize"));
                                },
                                l = () => {
                                    e && !e.destroyed && e.initialized && r("orientationchange");
                                };
                            i("init", () => {
                                e.params.resizeObserver && void 0 !== s.ResizeObserver
                                    ? e &&
                                      !e.destroyed &&
                                      e.initialized &&
                                      (a = new ResizeObserver((t) => {
                                          n = s.requestAnimationFrame(() => {
                                              var i = e.width,
                                                  r = e.height,
                                                  s = i,
                                                  a = r;
                                              t.forEach((t) => {
                                                  var i = t.contentBoxSize,
                                                      r = t.contentRect,
                                                      n = t.target;
                                                  (n && n !== e.el) || ((s = r ? r.width : (i[0] || i).inlineSize), (a = r ? r.height : (i[0] || i).blockSize));
                                              }),
                                                  (s === i && a === r) || o();
                                          });
                                      })).observe(e.el)
                                    : (s.addEventListener("resize", o), s.addEventListener("orientationchange", l));
                            }),
                                i("destroy", () => {
                                    n && s.cancelAnimationFrame(n), a && a.unobserve && e.el && (a.unobserve(e.el), (a = null)), s.removeEventListener("resize", o), s.removeEventListener("orientationchange", l);
                                });
                        },
                        function (t) {
                            var e = t.swiper,
                                i = t.extendParams,
                                r = t.on,
                                s = t.emit,
                                a = [],
                                n = d(),
                                o = function (t, i) {
                                    void 0 === i && (i = {});
                                    var r = new (n.MutationObserver || n.WebkitMutationObserver)((t) => {
                                        if (!e.__preventObserver__)
                                            if (1 !== t.length) {
                                                var i = function () {
                                                    s("observerUpdate", t[0]);
                                                };
                                                n.requestAnimationFrame ? n.requestAnimationFrame(i) : n.setTimeout(i, 0);
                                            } else s("observerUpdate", t[0]);
                                    });
                                    r.observe(t, { attributes: void 0 === i.attributes || i.attributes, childList: void 0 === i.childList || i.childList, characterData: void 0 === i.characterData || i.characterData }), a.push(r);
                                };
                            i({ observer: !1, observeParents: !1, observeSlideChildren: !1 }),
                                r("init", () => {
                                    if (e.params.observer) {
                                        if (e.params.observeParents) for (var t = S(e.hostEl), i = 0; i < t.length; i += 1) o(t[i]);
                                        o(e.hostEl, { childList: e.params.observeSlideChildren }), o(e.wrapperEl, { attributes: !1 });
                                    }
                                }),
                                r("destroy", () => {
                                    a.forEach((t) => {
                                        t.disconnect();
                                    }),
                                        a.splice(0, a.length);
                                });
                        },
                    ]);
                var dt = i(55988);
                function ut(t, e) {
                    var i = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var r = Object.getOwnPropertySymbols(t);
                        e &&
                            (r = r.filter(function (e) {
                                return Object.getOwnPropertyDescriptor(t, e).enumerable;
                            })),
                            i.push.apply(i, r);
                    }
                    return i;
                }
                function pt(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var i = null != arguments[e] ? arguments[e] : {};
                        e % 2
                            ? ut(Object(i), !0).forEach(function (e) {
                                  mt(t, e, i[e]);
                              })
                            : Object.getOwnPropertyDescriptors
                            ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i))
                            : ut(Object(i)).forEach(function (e) {
                                  Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e));
                              });
                    }
                    return t;
                }
                function mt(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class ft {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new ft(t);
                    }
                    constructor(t) {
                        mt(this, "defaultConfig", { centeredSlides: !0, spaceBetween: 16 });
                        var e = t.targetSelector,
                            i = t.config,
                            r = void 0 === i ? {} : i;
                        if (((this.targetSelector = e), (this.swiper = null), (this.eSwiper = document.querySelector(e)), null === this.eSwiper)) throw new dt.s(dt.A.ELEMENT_NOT_FOUND, `Component with (selector: ${e}) not found.`);
                        this.getElements(), (this.finalConfig = this.setupConfigs(r)), this.setupModules(this.finalConfig);
                        var s = this.eArrowNext || this.eArrowPrev || this.ePagination;
                        s && this.configAccessibility(this.finalConfig), (this.swiper = new st(e, this.finalConfig)), s && this.setupAccessibility(), this.stylePagination();
                    }
                    getElements() {
                        (this.eArrowNext = this.eSwiper.querySelector(".swiper-button-next")), (this.eArrowPrev = this.eSwiper.querySelector(".swiper-button-prev")), (this.ePagination = this.eSwiper.querySelector(".brad-pagination"));
                    }
                    setupConfigs(t) {
                        var e, i;
                        return pt(
                            pt(pt({}, this.defaultConfig), t),
                            {},
                            { centeredSlides: null === (e = null == t ? void 0 : t.centeredSlides) || void 0 === e || e, spaceBetween: null !== (i = null == t ? void 0 : t.spaceBetween) && void 0 !== i ? i : 16 }
                        );
                    }
                    setupModules(t) {
                        st.use([nt, lt, ct, ht]),
                            (t.direction = "horizontal"),
                            (t.pagination = { el: ".brad-pagination", clickable: !0 }),
                            (t.navigation = { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }),
                            (t.a11y = {
                                prevSlideMessage: "Slide anterior",
                                nextSlideMessage: "PrÃ³ximo slide",
                                lastSlideMessage: "Ãšltimo slide",
                                paginationBulletMessage: "Ir atÃ© o slide {{index}}",
                                slideLabelMessage: "{{index}} de {{slidesLength}}",
                                clicked: !0,
                            });
                    }
                    configAccessibility(t) {
                        t.on = {
                            init: (t) => {
                                t.slides.forEach((t, e) => {
                                    e > 0 && (t.ariaHidden = !0);
                                }),
                                    !1 === this.finalConfig.loop && (this.eArrowPrev.ariaHidden = !0);
                            },
                        };
                    }
                    setupAccessibility() {
                        this.swiper.on("slideChange", () => {
                            this.updateSlideAriaHidden(), this.updateArrowAriaHidden();
                        });
                    }
                    updateSlideAriaHidden() {
                        var t = this.swiper.activeIndex,
                            e = this.swiper.slides[t];
                        this.swiper.slides.forEach((e, i) => {
                            e.ariaHidden = i !== t;
                        }),
                            e &&
                                ((e.ariaHidden = !1),
                                setTimeout(() => {
                                    (e.tabIndex = "-1"), e.focus();
                                }, 200));
                    }
                    updateArrowAriaHidden() {
                        var t = this.swiper.activeIndex,
                            e = this.swiper.slides.length - 1;
                        (this.eArrowNext.ariaHidden = t === e), (this.eArrowPrev.ariaHidden = 0 === t);
                    }
                    stylePagination() {
                        if (this.ePagination) {
                            var t = this.ePagination.getBoundingClientRect().width + "px";
                            this.ePagination.style.width = t;
                        }
                    }
                }
            },
            80929: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854);
                function s(t) {
                    return (t + 0.5) | 0;
                }
                var a = (t, e, i) => Math.max(Math.min(t, i), e);
                function n(t) {
                    return a(s(2.55 * t), 0, 255);
                }
                function o(t) {
                    return a(s(255 * t), 0, 255);
                }
                function l(t) {
                    return a(s(t / 2.55) / 100, 0, 1);
                }
                function h(t) {
                    return a(s(100 * t), 0, 100);
                }
                var c = { 0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15 },
                    d = [..."0123456789ABCDEF"],
                    u = (t) => d[15 & t],
                    p = (t) => d[(240 & t) >> 4] + d[15 & t],
                    m = (t) => (240 & t) >> 4 == (15 & t);
                function f(t) {
                    var e = ((t) => m(t.r) && m(t.g) && m(t.b) && m(t.a))(t) ? u : p;
                    return t ? "#" + e(t.r) + e(t.g) + e(t.b) + ((t, e) => (t < 255 ? e(t) : ""))(t.a, e) : void 0;
                }
                var g = /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
                function v(t, e, i) {
                    var r = e * Math.min(i, 1 - i),
                        s = (e, s = (e + t / 30) % 12) => i - r * Math.max(Math.min(s - 3, 9 - s, 1), -1);
                    return [s(0), s(8), s(4)];
                }
                function b(t, e, i) {
                    var r = (r, s = (r + t / 60) % 6) => i - i * e * Math.max(Math.min(s, 4 - s, 1), 0);
                    return [r(5), r(3), r(1)];
                }
                function y(t, e, i) {
                    var r,
                        s = v(t, 1, 0.5);
                    for (e + i > 1 && ((e *= r = 1 / (e + i)), (i *= r)), r = 0; r < 3; r++) (s[r] *= 1 - e - i), (s[r] += e);
                    return s;
                }
                function w(t) {
                    var e,
                        i,
                        r,
                        s = t.r / 255,
                        a = t.g / 255,
                        n = t.b / 255,
                        o = Math.max(s, a, n),
                        l = Math.min(s, a, n),
                        h = (o + l) / 2;
                    return (
                        o !== l &&
                            ((r = o - l),
                            (i = h > 0.5 ? r / (2 - o - l) : r / (o + l)),
                            (e = (function (t, e, i, r, s) {
                                return t === s ? (e - i) / r + (e < i ? 6 : 0) : e === s ? (i - t) / r + 2 : (t - e) / r + 4;
                            })(s, a, n, r, o)),
                            (e = 60 * e + 0.5)),
                        [0 | e, i || 0, h]
                    );
                }
                function x(t, e, i, r) {
                    return (Array.isArray(e) ? t(e[0], e[1], e[2]) : t(e, i, r)).map(o);
                }
                function E(t, e, i) {
                    return x(v, t, e, i);
                }
                function C(t) {
                    return ((t % 360) + 360) % 360;
                }
                function S(t) {
                    var e,
                        i = g.exec(t),
                        r = 255;
                    if (i) {
                        i[5] !== e && (r = i[6] ? n(+i[5]) : o(+i[5]));
                        var s = C(+i[2]),
                            a = +i[3] / 100,
                            l = +i[4] / 100;
                        return {
                            r: (e =
                                "hwb" === i[1]
                                    ? (function (t, e, i) {
                                          return x(y, t, e, i);
                                      })(s, a, l)
                                    : "hsv" === i[1]
                                    ? (function (t, e, i) {
                                          return x(b, t, e, i);
                                      })(s, a, l)
                                    : E(s, a, l))[0],
                            g: e[1],
                            b: e[2],
                            a: r,
                        };
                    }
                }
                var T,
                    _ = {
                        x: "dark",
                        Z: "light",
                        Y: "re",
                        X: "blu",
                        W: "gr",
                        V: "medium",
                        U: "slate",
                        A: "ee",
                        T: "ol",
                        S: "or",
                        B: "ra",
                        C: "lateg",
                        D: "ights",
                        R: "in",
                        Q: "turquois",
                        E: "hi",
                        P: "ro",
                        O: "al",
                        N: "le",
                        M: "de",
                        L: "yello",
                        F: "en",
                        K: "ch",
                        G: "arks",
                        H: "ea",
                        I: "ightg",
                        J: "wh",
                    },
                    M = {
                        OiceXe: "f0f8ff",
                        antiquewEte: "faebd7",
                        aqua: "ffff",
                        aquamarRe: "7fffd4",
                        azuY: "f0ffff",
                        beige: "f5f5dc",
                        bisque: "ffe4c4",
                        black: "0",
                        blanKedOmond: "ffebcd",
                        Xe: "ff",
                        XeviTet: "8a2be2",
                        bPwn: "a52a2a",
                        burlywood: "deb887",
                        caMtXe: "5f9ea0",
                        KartYuse: "7fff00",
                        KocTate: "d2691e",
                        cSO: "ff7f50",
                        cSnflowerXe: "6495ed",
                        cSnsilk: "fff8dc",
                        crimson: "dc143c",
                        cyan: "ffff",
                        xXe: "8b",
                        xcyan: "8b8b",
                        xgTMnPd: "b8860b",
                        xWay: "a9a9a9",
                        xgYF: "6400",
                        xgYy: "a9a9a9",
                        xkhaki: "bdb76b",
                        xmagFta: "8b008b",
                        xTivegYF: "556b2f",
                        xSange: "ff8c00",
                        xScEd: "9932cc",
                        xYd: "8b0000",
                        xsOmon: "e9967a",
                        xsHgYF: "8fbc8f",
                        xUXe: "483d8b",
                        xUWay: "2f4f4f",
                        xUgYy: "2f4f4f",
                        xQe: "ced1",
                        xviTet: "9400d3",
                        dAppRk: "ff1493",
                        dApskyXe: "bfff",
                        dimWay: "696969",
                        dimgYy: "696969",
                        dodgerXe: "1e90ff",
                        fiYbrick: "b22222",
                        flSOwEte: "fffaf0",
                        foYstWAn: "228b22",
                        fuKsia: "ff00ff",
                        gaRsbSo: "dcdcdc",
                        ghostwEte: "f8f8ff",
                        gTd: "ffd700",
                        gTMnPd: "daa520",
                        Way: "808080",
                        gYF: "8000",
                        gYFLw: "adff2f",
                        gYy: "808080",
                        honeyMw: "f0fff0",
                        hotpRk: "ff69b4",
                        RdianYd: "cd5c5c",
                        Rdigo: "4b0082",
                        ivSy: "fffff0",
                        khaki: "f0e68c",
                        lavFMr: "e6e6fa",
                        lavFMrXsh: "fff0f5",
                        lawngYF: "7cfc00",
                        NmoncEffon: "fffacd",
                        ZXe: "add8e6",
                        ZcSO: "f08080",
                        Zcyan: "e0ffff",
                        ZgTMnPdLw: "fafad2",
                        ZWay: "d3d3d3",
                        ZgYF: "90ee90",
                        ZgYy: "d3d3d3",
                        ZpRk: "ffb6c1",
                        ZsOmon: "ffa07a",
                        ZsHgYF: "20b2aa",
                        ZskyXe: "87cefa",
                        ZUWay: "778899",
                        ZUgYy: "778899",
                        ZstAlXe: "b0c4de",
                        ZLw: "ffffe0",
                        lime: "ff00",
                        limegYF: "32cd32",
                        lRF: "faf0e6",
                        magFta: "ff00ff",
                        maPon: "800000",
                        VaquamarRe: "66cdaa",
                        VXe: "cd",
                        VScEd: "ba55d3",
                        VpurpN: "9370db",
                        VsHgYF: "3cb371",
                        VUXe: "7b68ee",
                        VsprRggYF: "fa9a",
                        VQe: "48d1cc",
                        VviTetYd: "c71585",
                        midnightXe: "191970",
                        mRtcYam: "f5fffa",
                        mistyPse: "ffe4e1",
                        moccasR: "ffe4b5",
                        navajowEte: "ffdead",
                        navy: "80",
                        Tdlace: "fdf5e6",
                        Tive: "808000",
                        TivedBb: "6b8e23",
                        Sange: "ffa500",
                        SangeYd: "ff4500",
                        ScEd: "da70d6",
                        pOegTMnPd: "eee8aa",
                        pOegYF: "98fb98",
                        pOeQe: "afeeee",
                        pOeviTetYd: "db7093",
                        papayawEp: "ffefd5",
                        pHKpuff: "ffdab9",
                        peru: "cd853f",
                        pRk: "ffc0cb",
                        plum: "dda0dd",
                        powMrXe: "b0e0e6",
                        purpN: "800080",
                        YbeccapurpN: "663399",
                        Yd: "ff0000",
                        Psybrown: "bc8f8f",
                        PyOXe: "4169e1",
                        saddNbPwn: "8b4513",
                        sOmon: "fa8072",
                        sandybPwn: "f4a460",
                        sHgYF: "2e8b57",
                        sHshell: "fff5ee",
                        siFna: "a0522d",
                        silver: "c0c0c0",
                        skyXe: "87ceeb",
                        UXe: "6a5acd",
                        UWay: "708090",
                        UgYy: "708090",
                        snow: "fffafa",
                        sprRggYF: "ff7f",
                        stAlXe: "4682b4",
                        tan: "d2b48c",
                        teO: "8080",
                        tEstN: "d8bfd8",
                        tomato: "ff6347",
                        Qe: "40e0d0",
                        viTet: "ee82ee",
                        JHt: "f5deb3",
                        wEte: "ffffff",
                        wEtesmoke: "f5f5f5",
                        Lw: "ffff00",
                        LwgYF: "9acd32",
                    };
                function P(t) {
                    T ||
                        ((T = (function () {
                            var t,
                                e,
                                i,
                                r,
                                s,
                                a = {},
                                n = Object.keys(M),
                                o = Object.keys(_);
                            for (t = 0; t < n.length; t++) {
                                for (r = s = n[t], e = 0; e < o.length; e++) (i = o[e]), (s = s.replace(i, _[i]));
                                (i = parseInt(M[r], 16)), (a[s] = [(i >> 16) & 255, (i >> 8) & 255, 255 & i]);
                            }
                            return a;
                        })()).transparent = [0, 0, 0, 0]);
                    var e = T[t.toLowerCase()];
                    return e && { r: e[0], g: e[1], b: e[2], a: 4 === e.length ? e[3] : 255 };
                }
                var k = /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;
                var A = (t) => (t <= 0.0031308 ? 12.92 * t : 1.055 * Math.pow(t, 1 / 2.4) - 0.055),
                    D = (t) => (t <= 0.04045 ? t / 12.92 : Math.pow((t + 0.055) / 1.055, 2.4));
                function L(t, e, i) {
                    if (t) {
                        var r = w(t);
                        (r[e] = Math.max(0, Math.min(r[e] + r[e] * i, 0 === e ? 360 : 1))), (r = E(r)), (t.r = r[0]), (t.g = r[1]), (t.b = r[2]);
                    }
                }
                function I(t, e) {
                    return t ? Object.assign(e || {}, t) : t;
                }
                function R(t) {
                    var e = { r: 0, g: 0, b: 0, a: 255 };
                    return Array.isArray(t) ? t.length >= 3 && ((e = { r: t[0], g: t[1], b: t[2], a: 255 }), t.length > 3 && (e.a = o(t[3]))) : ((e = I(t, { r: 0, g: 0, b: 0, a: 1 })).a = o(e.a)), e;
                }
                function O(t) {
                    return "r" === t.charAt(0)
                        ? (function (t) {
                              var e,
                                  i,
                                  r,
                                  s = k.exec(t),
                                  o = 255;
                              if (s) {
                                  if (s[7] !== e) {
                                      var l = +s[7];
                                      o = s[8] ? n(l) : a(255 * l, 0, 255);
                                  }
                                  return (e = +s[1]), (i = +s[3]), (r = +s[5]), { r: (e = 255 & (s[2] ? n(e) : a(e, 0, 255))), g: (i = 255 & (s[4] ? n(i) : a(i, 0, 255))), b: (r = 255 & (s[6] ? n(r) : a(r, 0, 255))), a: o };
                              }
                          })(t)
                        : S(t);
                }
                class F {
                    constructor(t) {
                        if (t instanceof F) return t;
                        var e,
                            i,
                            r,
                            s,
                            a = typeof t;
                        "object" === a
                            ? (e = R(t))
                            : "string" === a &&
                              ((s = (i = t).length),
                              "#" === i[0] &&
                                  (4 === s || 5 === s
                                      ? (r = { r: 255 & (17 * c[i[1]]), g: 255 & (17 * c[i[2]]), b: 255 & (17 * c[i[3]]), a: 5 === s ? 17 * c[i[4]] : 255 })
                                      : (7 !== s && 9 !== s) || (r = { r: (c[i[1]] << 4) | c[i[2]], g: (c[i[3]] << 4) | c[i[4]], b: (c[i[5]] << 4) | c[i[6]], a: 9 === s ? (c[i[7]] << 4) | c[i[8]] : 255 })),
                              (e = r || P(t) || O(t))),
                            (this._rgb = e),
                            (this._valid = !!e);
                    }
                    get valid() {
                        return this._valid;
                    }
                    get rgb() {
                        var t = I(this._rgb);
                        return t && (t.a = l(t.a)), t;
                    }
                    set rgb(t) {
                        this._rgb = R(t);
                    }
                    rgbString() {
                        return this._valid ? (t = this._rgb) && (t.a < 255 ? `rgba(${t.r}, ${t.g}, ${t.b}, ${l(t.a)})` : `rgb(${t.r}, ${t.g}, ${t.b})`) : void 0;
                        var t;
                    }
                    hexString() {
                        return this._valid ? f(this._rgb) : void 0;
                    }
                    hslString() {
                        return this._valid
                            ? (function (t) {
                                  if (t) {
                                      var e = w(t),
                                          i = e[0],
                                          r = h(e[1]),
                                          s = h(e[2]);
                                      return t.a < 255 ? `hsla(${i}, ${r}%, ${s}%, ${l(t.a)})` : `hsl(${i}, ${r}%, ${s}%)`;
                                  }
                              })(this._rgb)
                            : void 0;
                    }
                    mix(t, e) {
                        if (t) {
                            var i,
                                r = this.rgb,
                                s = t.rgb,
                                a = e === i ? 0.5 : e,
                                n = 2 * a - 1,
                                o = r.a - s.a,
                                l = ((n * o == -1 ? n : (n + o) / (1 + n * o)) + 1) / 2;
                            (i = 1 - l), (r.r = 255 & (l * r.r + i * s.r + 0.5)), (r.g = 255 & (l * r.g + i * s.g + 0.5)), (r.b = 255 & (l * r.b + i * s.b + 0.5)), (r.a = a * r.a + (1 - a) * s.a), (this.rgb = r);
                        }
                        return this;
                    }
                    interpolate(t, e) {
                        return (
                            t &&
                                (this._rgb = (function (t, e, i) {
                                    var r = D(l(t.r)),
                                        s = D(l(t.g)),
                                        a = D(l(t.b));
                                    return { r: o(A(r + i * (D(l(e.r)) - r))), g: o(A(s + i * (D(l(e.g)) - s))), b: o(A(a + i * (D(l(e.b)) - a))), a: t.a + i * (e.a - t.a) };
                                })(this._rgb, t._rgb, e)),
                            this
                        );
                    }
                    clone() {
                        return new F(this.rgb);
                    }
                    alpha(t) {
                        return (this._rgb.a = o(t)), this;
                    }
                    clearer(t) {
                        return (this._rgb.a *= 1 - t), this;
                    }
                    greyscale() {
                        var t = this._rgb,
                            e = s(0.3 * t.r + 0.59 * t.g + 0.11 * t.b);
                        return (t.r = t.g = t.b = e), this;
                    }
                    opaquer(t) {
                        return (this._rgb.a *= 1 + t), this;
                    }
                    negate() {
                        var t = this._rgb;
                        return (t.r = 255 - t.r), (t.g = 255 - t.g), (t.b = 255 - t.b), this;
                    }
                    lighten(t) {
                        return L(this._rgb, 2, t), this;
                    }
                    darken(t) {
                        return L(this._rgb, 2, -t), this;
                    }
                    saturate(t) {
                        return L(this._rgb, 1, t), this;
                    }
                    desaturate(t) {
                        return L(this._rgb, 1, -t), this;
                    }
                    rotate(t) {
                        return (
                            (function (t, e) {
                                var i = w(t);
                                (i[0] = C(i[0] + e)), (i = E(i)), (t.r = i[0]), (t.g = i[1]), (t.b = i[2]);
                            })(this._rgb, t),
                            this
                        );
                    }
                }
                function B(t, e) {
                    var i = ("undefined" != typeof Symbol && t[Symbol.iterator]) || t["@@iterator"];
                    if (!i) {
                        if (
                            Array.isArray(t) ||
                            (i = (function (t, e) {
                                if (!t) return;
                                if ("string" == typeof t) return z(t, e);
                                var i = Object.prototype.toString.call(t).slice(8, -1);
                                "Object" === i && t.constructor && (i = t.constructor.name);
                                if ("Map" === i || "Set" === i) return Array.from(t);
                                if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return z(t, e);
                            })(t)) ||
                            (e && t && "number" == typeof t.length)
                        ) {
                            i && (t = i);
                            var r = 0,
                                s = function () {};
                            return {
                                s,
                                n: function () {
                                    return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] };
                                },
                                e: function (t) {
                                    throw t;
                                },
                                f: s,
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a,
                        n = !0,
                        o = !1;
                    return {
                        s: function () {
                            i = i.call(t);
                        },
                        n: function () {
                            var t = i.next();
                            return (n = t.done), t;
                        },
                        e: function (t) {
                            (o = !0), (a = t);
                        },
                        f: function () {
                            try {
                                n || null == i.return || i.return();
                            } finally {
                                if (o) throw a;
                            }
                        },
                    };
                }
                function z(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var i = 0, r = new Array(e); i < e; i++) r[i] = t[i];
                    return r;
                }
                function N() {}
                var V,
                    H = ((V = 0), () => V++);
                function j(t) {
                    return null == t;
                }
                function W(t) {
                    if (Array.isArray && Array.isArray(t)) return !0;
                    var e = Object.prototype.toString.call(t);
                    return "[object" === e.slice(0, 7) && "Array]" === e.slice(-6);
                }
                function G(t) {
                    return null !== t && "[object Object]" === Object.prototype.toString.call(t);
                }
                function q(t) {
                    return ("number" == typeof t || t instanceof Number) && isFinite(+t);
                }
                function $(t, e) {
                    return q(t) ? t : e;
                }
                function U(t, e) {
                    return void 0 === t ? e : t;
                }
                var Y = (t, e) => ("string" == typeof t && t.endsWith("%") ? (parseFloat(t) / 100) * e : +t);
                function X(t, e, i) {
                    if (t && "function" == typeof t.call) return t.apply(i, e);
                }
                function K(t, e, i, r) {
                    var s, a, n;
                    if (W(t))
                        if (((a = t.length), r)) for (s = a - 1; s >= 0; s--) e.call(i, t[s], s);
                        else for (s = 0; s < a; s++) e.call(i, t[s], s);
                    else if (G(t)) for (a = (n = Object.keys(t)).length, s = 0; s < a; s++) e.call(i, t[n[s]], n[s]);
                }
                function Z(t, e) {
                    var i, r, s, a;
                    if (!t || !e || t.length !== e.length) return !1;
                    for (i = 0, r = t.length; i < r; ++i) if (((s = t[i]), (a = e[i]), s.datasetIndex !== a.datasetIndex || s.index !== a.index)) return !1;
                    return !0;
                }
                function J(t) {
                    if (W(t)) return t.map(J);
                    if (G(t)) {
                        for (var e = Object.create(null), i = Object.keys(t), r = i.length, s = 0; s < r; ++s) e[i[s]] = J(t[i[s]]);
                        return e;
                    }
                    return t;
                }
                function Q(t) {
                    return -1 === ["__proto__", "prototype", "constructor"].indexOf(t);
                }
                function tt(t, e, i, r) {
                    if (Q(t)) {
                        var s = e[t],
                            a = i[t];
                        G(s) && G(a) ? et(s, a, r) : (e[t] = J(a));
                    }
                }
                function et(t, e, i) {
                    var r = W(e) ? e : [e],
                        s = r.length;
                    if (!G(t)) return t;
                    for (var a, n = (i = i || {}).merger || tt, o = 0; o < s; ++o) if (G((a = r[o]))) for (var l = Object.keys(a), h = 0, c = l.length; h < c; ++h) n(l[h], t, a, i);
                    return t;
                }
                function it(t, e) {
                    return et(t, e, { merger: rt });
                }
                function rt(t, e, i) {
                    if (Q(t)) {
                        var r = e[t],
                            s = i[t];
                        G(r) && G(s) ? it(r, s) : Object.prototype.hasOwnProperty.call(e, t) || (e[t] = J(s));
                    }
                }
                var st = { "": (t) => t, x: (t) => t.x, y: (t) => t.y };
                function at(t) {
                    var e = (function (t) {
                        var e,
                            i = [],
                            r = "",
                            s = B(t.split("."));
                        try {
                            for (s.s(); !(e = s.n()).done; ) (r += e.value).endsWith("\\") ? (r = r.slice(0, -1) + ".") : (i.push(r), (r = ""));
                        } catch (t) {
                            s.e(t);
                        } finally {
                            s.f();
                        }
                        return i;
                    })(t);
                    return (t) => {
                        var i,
                            r = B(e);
                        try {
                            for (r.s(); !(i = r.n()).done; ) {
                                var s = i.value;
                                if ("" === s) break;
                                t = t && t[s];
                            }
                        } catch (t) {
                            r.e(t);
                        } finally {
                            r.f();
                        }
                        return t;
                    };
                }
                function nt(t, e) {
                    return (st[e] || (st[e] = at(e)))(t);
                }
                function ot(t) {
                    return t.charAt(0).toUpperCase() + t.slice(1);
                }
                var lt = (t) => void 0 !== t,
                    ht = (t) => "function" == typeof t,
                    ct = (t, e) => {
                        if (t.size !== e.size) return !1;
                        var i,
                            r = B(t);
                        try {
                            for (r.s(); !(i = r.n()).done; ) {
                                var s = i.value;
                                if (!e.has(s)) return !1;
                            }
                        } catch (t) {
                            r.e(t);
                        } finally {
                            r.f();
                        }
                        return !0;
                    };
                var dt = Math.PI,
                    ut = 2 * dt,
                    pt = ut + dt,
                    mt = Number.POSITIVE_INFINITY,
                    ft = dt / 180,
                    gt = dt / 2,
                    vt = dt / 4,
                    bt = (2 * dt) / 3,
                    yt = Math.log10,
                    wt = Math.sign;
                function xt(t, e, i) {
                    return Math.abs(t - e) < i;
                }
                function Et(t) {
                    var e = Math.round(t);
                    t = xt(t, e, t / 1e3) ? e : t;
                    var i = Math.pow(10, Math.floor(yt(t))),
                        r = t / i;
                    return (r <= 1 ? 1 : r <= 2 ? 2 : r <= 5 ? 5 : 10) * i;
                }
                function Ct(t) {
                    return !isNaN(parseFloat(t)) && isFinite(t);
                }
                function St(t, e, i) {
                    var r, s, a;
                    for (r = 0, s = t.length; r < s; r++) (a = t[r][i]), isNaN(a) || ((e.min = Math.min(e.min, a)), (e.max = Math.max(e.max, a)));
                }
                function Tt(t) {
                    return t * (dt / 180);
                }
                function _t(t) {
                    return t * (180 / dt);
                }
                function Mt(t) {
                    if (q(t)) {
                        for (var e = 1, i = 0; Math.round(t * e) / e !== t; ) (e *= 10), i++;
                        return i;
                    }
                }
                function Pt(t, e) {
                    var i = e.x - t.x,
                        r = e.y - t.y,
                        s = Math.sqrt(i * i + r * r),
                        a = Math.atan2(r, i);
                    return a < -0.5 * dt && (a += ut), { angle: a, distance: s };
                }
                function kt(t, e) {
                    return Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2));
                }
                function At(t, e) {
                    return ((t - e + pt) % ut) - dt;
                }
                function Dt(t) {
                    return ((t % ut) + ut) % ut;
                }
                function Lt(t, e, i, r) {
                    var s = Dt(t),
                        a = Dt(e),
                        n = Dt(i),
                        o = Dt(a - s),
                        l = Dt(n - s),
                        h = Dt(s - a),
                        c = Dt(s - n);
                    return s === a || s === n || (r && a === n) || (o > l && h < c);
                }
                function It(t, e, i) {
                    return Math.max(e, Math.min(i, t));
                }
                function Rt(t, e, i, r = 1e-6) {
                    return t >= Math.min(e, i) - r && t <= Math.max(e, i) + r;
                }
                function Ot(t, e, i) {
                    i = i || ((i) => t[i] < e);
                    for (var r, s = t.length - 1, a = 0; s - a > 1; ) i((r = (a + s) >> 1)) ? (a = r) : (s = r);
                    return { lo: a, hi: s };
                }
                var Ft = (t, e, i, r) =>
                        Ot(
                            t,
                            i,
                            r
                                ? (r) => {
                                      var s = t[r][e];
                                      return s < i || (s === i && t[r + 1][e] === i);
                                  }
                                : (r) => t[r][e] < i
                        ),
                    Bt = (t, e, i) => Ot(t, i, (r) => t[r][e] >= i);
                var zt = ["push", "pop", "shift", "splice", "unshift"];
                function Nt(t, e) {
                    var i = t._chartjs;
                    if (i) {
                        var r = i.listeners,
                            s = r.indexOf(e);
                        -1 !== s && r.splice(s, 1),
                            r.length > 0 ||
                                (zt.forEach((e) => {
                                    delete t[e];
                                }),
                                delete t._chartjs);
                    }
                }
                function Vt(t) {
                    var e = new Set(t);
                    return e.size === t.length ? t : Array.from(e);
                }
                var Ht =
                    "undefined" == typeof window
                        ? function (t) {
                              return t();
                          }
                        : window.requestAnimationFrame;
                function jt(t, e) {
                    var i = [],
                        r = !1;
                    return function (...s) {
                        (i = s),
                            r ||
                                ((r = !0),
                                Ht.call(window, () => {
                                    (r = !1), t.apply(e, i);
                                }));
                    };
                }
                var Wt = (t) => ("start" === t ? "left" : "end" === t ? "right" : "center"),
                    Gt = (t, e, i) => ("start" === t ? e : "end" === t ? i : (e + i) / 2);
                function qt(t, e, i) {
                    var r = e.length,
                        s = 0,
                        a = r;
                    if (t._sorted) {
                        var n = t.iScale,
                            o = t._parsed,
                            l = n.axis,
                            h = n.getUserBounds(),
                            c = h.min,
                            d = h.max,
                            u = h.minDefined,
                            p = h.maxDefined;
                        u && (s = It(Math.min(Ft(o, l, c).lo, i ? r : Ft(e, l, n.getPixelForValue(c)).lo), 0, r - 1)),
                            (a = p ? It(Math.max(Ft(o, n.axis, d, !0).hi + 1, i ? 0 : Ft(e, l, n.getPixelForValue(d), !0).hi + 1), s, r) - s : r - s);
                    }
                    return { start: s, count: a };
                }
                function $t(t) {
                    var e = t.xScale,
                        i = t.yScale,
                        r = t._scaleRanges,
                        s = { xmin: e.min, xmax: e.max, ymin: i.min, ymax: i.max };
                    if (!r) return (t._scaleRanges = s), !0;
                    var a = r.xmin !== e.min || r.xmax !== e.max || r.ymin !== i.min || r.ymax !== i.max;
                    return Object.assign(r, s), a;
                }
                var Ut = (t) => 0 === t || 1 === t,
                    Yt = (t, e, i) => -Math.pow(2, 10 * (t -= 1)) * Math.sin(((t - e) * ut) / i),
                    Xt = (t, e, i) => Math.pow(2, -10 * t) * Math.sin(((t - e) * ut) / i) + 1,
                    Kt = {
                        linear: (t) => t,
                        easeInQuad: (t) => t * t,
                        easeOutQuad: (t) => -t * (t - 2),
                        easeInOutQuad: (t) => ((t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1)),
                        easeInCubic: (t) => t * t * t,
                        easeOutCubic: (t) => (t -= 1) * t * t + 1,
                        easeInOutCubic: (t) => ((t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2)),
                        easeInQuart: (t) => t * t * t * t,
                        easeOutQuart: (t) => -((t -= 1) * t * t * t - 1),
                        easeInOutQuart: (t) => ((t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2)),
                        easeInQuint: (t) => t * t * t * t * t,
                        easeOutQuint: (t) => (t -= 1) * t * t * t * t + 1,
                        easeInOutQuint: (t) => ((t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2)),
                        easeInSine: (t) => 1 - Math.cos(t * gt),
                        easeOutSine: (t) => Math.sin(t * gt),
                        easeInOutSine: (t) => -0.5 * (Math.cos(dt * t) - 1),
                        easeInExpo: (t) => (0 === t ? 0 : Math.pow(2, 10 * (t - 1))),
                        easeOutExpo: (t) => (1 === t ? 1 : 1 - Math.pow(2, -10 * t)),
                        easeInOutExpo: (t) => (Ut(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (2 * t - 1)) : 0.5 * (2 - Math.pow(2, -10 * (2 * t - 1)))),
                        easeInCirc: (t) => (t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1)),
                        easeOutCirc: (t) => Math.sqrt(1 - (t -= 1) * t),
                        easeInOutCirc: (t) => ((t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1)),
                        easeInElastic: (t) => (Ut(t) ? t : Yt(t, 0.075, 0.3)),
                        easeOutElastic: (t) => (Ut(t) ? t : Xt(t, 0.075, 0.3)),
                        easeInOutElastic(t) {
                            var e = 0.1125;
                            return Ut(t) ? t : t < 0.5 ? 0.5 * Yt(2 * t, e, 0.45) : 0.5 + 0.5 * Xt(2 * t - 1, e, 0.45);
                        },
                        easeInBack(t) {
                            var e = 1.70158;
                            return t * t * ((e + 1) * t - e);
                        },
                        easeOutBack(t) {
                            var e = 1.70158;
                            return (t -= 1) * t * ((e + 1) * t + e) + 1;
                        },
                        easeInOutBack(t) {
                            var e = 1.70158;
                            return (t /= 0.5) < 1 ? t * t * ((1 + (e *= 1.525)) * t - e) * 0.5 : 0.5 * ((t -= 2) * t * ((1 + (e *= 1.525)) * t + e) + 2);
                        },
                        easeInBounce: (t) => 1 - Kt.easeOutBounce(1 - t),
                        easeOutBounce(t) {
                            var e = 7.5625,
                                i = 2.75;
                            return t < 1 / i ? e * t * t : t < 2 / i ? e * (t -= 1.5 / i) * t + 0.75 : t < 2.5 / i ? e * (t -= 2.25 / i) * t + 0.9375 : e * (t -= 2.625 / i) * t + 0.984375;
                        },
                        easeInOutBounce: (t) => (t < 0.5 ? 0.5 * Kt.easeInBounce(2 * t) : 0.5 * Kt.easeOutBounce(2 * t - 1) + 0.5),
                    };
                function Zt(t) {
                    if (t && "object" == typeof t) {
                        var e = t.toString();
                        return "[object CanvasPattern]" === e || "[object CanvasGradient]" === e;
                    }
                    return !1;
                }
                function Jt(t) {
                    return Zt(t) ? t : new F(t);
                }
                function Qt(t) {
                    return Zt(t) ? t : new F(t).saturate(0.5).darken(0.1).hexString();
                }
                var te = ["x", "y", "borderWidth", "radius", "tension"],
                    ee = ["color", "borderColor", "backgroundColor"];
                var ie = new Map();
                function re(t, e, i) {
                    return (function (t, e) {
                        e = e || {};
                        var i = t + JSON.stringify(e),
                            r = ie.get(i);
                        return r || ((r = new Intl.NumberFormat(t, e)), ie.set(i, r)), r;
                    })(e, i).format(t);
                }
                var se = {
                    values: (t) => (W(t) ? t : "" + t),
                    numeric(t, e, i) {
                        if (0 === t) return "0";
                        var r,
                            s = this.chart.options.locale,
                            a = t;
                        if (i.length > 1) {
                            var n = Math.max(Math.abs(i[0].value), Math.abs(i[i.length - 1].value));
                            (n < 1e-4 || n > 1e15) && (r = "scientific"),
                                (a = (function (t, e) {
                                    var i = e.length > 3 ? e[2].value - e[1].value : e[1].value - e[0].value;
                                    Math.abs(i) >= 1 && t !== Math.floor(t) && (i = t - Math.floor(t));
                                    return i;
                                })(t, i));
                        }
                        var o = yt(Math.abs(a)),
                            l = isNaN(o) ? 1 : Math.max(Math.min(-1 * Math.floor(o), 20), 0),
                            h = { notation: r, minimumFractionDigits: l, maximumFractionDigits: l };
                        return Object.assign(h, this.options.ticks.format), re(t, s, h);
                    },
                    logarithmic(t, e, i) {
                        if (0 === t) return "0";
                        var r = i[e].significand || t / Math.pow(10, Math.floor(yt(t)));
                        return [1, 2, 3, 5, 10, 15].includes(r) || e > 0.8 * i.length ? se.numeric.call(this, t, e, i) : "";
                    },
                };
                var ae = { formatters: se };
                var ne = Object.create(null),
                    oe = Object.create(null);
                function le(t, e) {
                    if (!e) return t;
                    for (var i = e.split("."), r = 0, s = i.length; r < s; ++r) {
                        var a = i[r];
                        t = t[a] || (t[a] = Object.create(null));
                    }
                    return t;
                }
                function he(t, e, i) {
                    return "string" == typeof e ? et(le(t, e), i) : et(le(t, ""), e);
                }
                class ce {
                    constructor(t, e) {
                        (this.animation = void 0),
                            (this.backgroundColor = "rgba(0,0,0,0.1)"),
                            (this.borderColor = "rgba(0,0,0,0.1)"),
                            (this.color = "#666"),
                            (this.datasets = {}),
                            (this.devicePixelRatio = (t) => t.chart.platform.getDevicePixelRatio()),
                            (this.elements = {}),
                            (this.events = ["mousemove", "mouseout", "click", "touchstart", "touchmove"]),
                            (this.font = { family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif", size: 12, style: "normal", lineHeight: 1.2, weight: null }),
                            (this.hover = {}),
                            (this.hoverBackgroundColor = (t, e) => Qt(e.backgroundColor)),
                            (this.hoverBorderColor = (t, e) => Qt(e.borderColor)),
                            (this.hoverColor = (t, e) => Qt(e.color)),
                            (this.indexAxis = "x"),
                            (this.interaction = { mode: "nearest", intersect: !0, includeInvisible: !1 }),
                            (this.maintainAspectRatio = !0),
                            (this.onHover = null),
                            (this.onClick = null),
                            (this.parsing = !0),
                            (this.plugins = {}),
                            (this.responsive = !0),
                            (this.scale = void 0),
                            (this.scales = {}),
                            (this.showLine = !0),
                            (this.drawActiveElementsOnTop = !0),
                            this.describe(t),
                            this.apply(e);
                    }
                    set(t, e) {
                        return he(this, t, e);
                    }
                    get(t) {
                        return le(this, t);
                    }
                    describe(t, e) {
                        return he(oe, t, e);
                    }
                    override(t, e) {
                        return he(ne, t, e);
                    }
                    route(t, e, i, r) {
                        var s = le(this, t),
                            a = le(this, i),
                            n = "_" + e;
                        Object.defineProperties(s, {
                            [n]: { value: s[e], writable: !0 },
                            [e]: {
                                enumerable: !0,
                                get() {
                                    var t = this[n],
                                        e = a[r];
                                    return G(t) ? Object.assign({}, e, t) : U(t, e);
                                },
                                set(t) {
                                    this[n] = t;
                                },
                            },
                        });
                    }
                    apply(t) {
                        t.forEach((t) => t(this));
                    }
                }
                var de = new ce({ _scriptable: (t) => !t.startsWith("on"), _indexable: (t) => "events" !== t, hover: { _fallback: "interaction" }, interaction: { _scriptable: !1, _indexable: !1 } }, [
                    function (t) {
                        t.set("animation", { delay: void 0, duration: 1e3, easing: "easeOutQuart", fn: void 0, from: void 0, loop: void 0, to: void 0, type: void 0 }),
                            t.describe("animation", { _fallback: !1, _indexable: !1, _scriptable: (t) => "onProgress" !== t && "onComplete" !== t && "fn" !== t }),
                            t.set("animations", { colors: { type: "color", properties: ee }, numbers: { type: "number", properties: te } }),
                            t.describe("animations", { _fallback: "animation" }),
                            t.set("transitions", {
                                active: { animation: { duration: 400 } },
                                resize: { animation: { duration: 0 } },
                                show: { animations: { colors: { from: "transparent" }, visible: { type: "boolean", duration: 0 } } },
                                hide: { animations: { colors: { to: "transparent" }, visible: { type: "boolean", easing: "linear", fn: (t) => 0 | t } } },
                            });
                    },
                    function (t) {
                        t.set("layout", { autoPadding: !0, padding: { top: 0, right: 0, bottom: 0, left: 0 } });
                    },
                    function (t) {
                        t.set("scale", {
                            display: !0,
                            offset: !1,
                            reverse: !1,
                            beginAtZero: !1,
                            bounds: "ticks",
                            clip: !0,
                            grace: 0,
                            grid: { display: !0, lineWidth: 1, drawOnChartArea: !0, drawTicks: !0, tickLength: 8, tickWidth: (t, e) => e.lineWidth, tickColor: (t, e) => e.color, offset: !1 },
                            border: { display: !0, dash: [], dashOffset: 0, width: 1 },
                            title: { display: !1, text: "", padding: { top: 4, bottom: 4 } },
                            ticks: {
                                minRotation: 0,
                                maxRotation: 50,
                                mirror: !1,
                                textStrokeWidth: 0,
                                textStrokeColor: "",
                                padding: 3,
                                display: !0,
                                autoSkip: !0,
                                autoSkipPadding: 3,
                                labelOffset: 0,
                                callback: ae.formatters.values,
                                minor: {},
                                major: {},
                                align: "center",
                                crossAlign: "near",
                                showLabelBackdrop: !1,
                                backdropColor: "rgba(255, 255, 255, 0.75)",
                                backdropPadding: 2,
                            },
                        }),
                            t.route("scale.ticks", "color", "", "color"),
                            t.route("scale.grid", "color", "", "borderColor"),
                            t.route("scale.border", "color", "", "borderColor"),
                            t.route("scale.title", "color", "", "color"),
                            t.describe("scale", {
                                _fallback: !1,
                                _scriptable: (t) => !t.startsWith("before") && !t.startsWith("after") && "callback" !== t && "parser" !== t,
                                _indexable: (t) => "borderDash" !== t && "tickBorderDash" !== t && "dash" !== t,
                            }),
                            t.describe("scales", { _fallback: "scale" }),
                            t.describe("scale.ticks", { _scriptable: (t) => "backdropPadding" !== t && "callback" !== t, _indexable: (t) => "backdropPadding" !== t });
                    },
                ]);
                function ue(t, e, i, r, s) {
                    var a = e[s];
                    return a || ((a = e[s] = t.measureText(s).width), i.push(s)), a > r && (r = a), r;
                }
                function pe(t, e, i, r) {
                    var s = ((r = r || {}).data = r.data || {}),
                        a = (r.garbageCollect = r.garbageCollect || []);
                    r.font !== e && ((s = r.data = {}), (a = r.garbageCollect = []), (r.font = e)), t.save(), (t.font = e);
                    var n,
                        o,
                        l,
                        h,
                        c,
                        d = 0,
                        u = i.length;
                    for (n = 0; n < u; n++)
                        if (null == (h = i[n]) || W(h)) {
                            if (W(h)) for (o = 0, l = h.length; o < l; o++) null == (c = h[o]) || W(c) || (d = ue(t, s, a, d, c));
                        } else d = ue(t, s, a, d, h);
                    t.restore();
                    var p = a.length / 2;
                    if (p > i.length) {
                        for (n = 0; n < p; n++) delete s[a[n]];
                        a.splice(0, p);
                    }
                    return d;
                }
                function me(t, e, i) {
                    var r = t.currentDevicePixelRatio,
                        s = 0 !== i ? Math.max(i / 2, 0.5) : 0;
                    return Math.round((e - s) * r) / r + s;
                }
                function fe(t, e) {
                    (e = e || t.getContext("2d")).save(), e.resetTransform(), e.clearRect(0, 0, t.width, t.height), e.restore();
                }
                function ge(t, e, i, r) {
                    ve(t, e, i, r, null);
                }
                function ve(t, e, i, r, s) {
                    var a,
                        n,
                        o,
                        l,
                        h,
                        c,
                        d,
                        u,
                        p = e.pointStyle,
                        m = e.rotation,
                        f = e.radius,
                        g = (m || 0) * ft;
                    if (p && "object" == typeof p && ("[object HTMLImageElement]" === (a = p.toString()) || "[object HTMLCanvasElement]" === a))
                        return t.save(), t.translate(i, r), t.rotate(g), t.drawImage(p, -p.width / 2, -p.height / 2, p.width, p.height), void t.restore();
                    if (!(isNaN(f) || f <= 0)) {
                        switch ((t.beginPath(), p)) {
                            default:
                                s ? t.ellipse(i, r, s / 2, f, 0, 0, ut) : t.arc(i, r, f, 0, ut), t.closePath();
                                break;
                            case "triangle":
                                (c = s ? s / 2 : f),
                                    t.moveTo(i + Math.sin(g) * c, r - Math.cos(g) * f),
                                    (g += bt),
                                    t.lineTo(i + Math.sin(g) * c, r - Math.cos(g) * f),
                                    (g += bt),
                                    t.lineTo(i + Math.sin(g) * c, r - Math.cos(g) * f),
                                    t.closePath();
                                break;
                            case "rectRounded":
                                (l = f - (h = 0.516 * f)),
                                    (n = Math.cos(g + vt) * l),
                                    (d = Math.cos(g + vt) * (s ? s / 2 - h : l)),
                                    (o = Math.sin(g + vt) * l),
                                    (u = Math.sin(g + vt) * (s ? s / 2 - h : l)),
                                    t.arc(i - d, r - o, h, g - dt, g - gt),
                                    t.arc(i + u, r - n, h, g - gt, g),
                                    t.arc(i + d, r + o, h, g, g + gt),
                                    t.arc(i - u, r + n, h, g + gt, g + dt),
                                    t.closePath();
                                break;
                            case "rect":
                                if (!m) {
                                    (l = Math.SQRT1_2 * f), (c = s ? s / 2 : l), t.rect(i - c, r - l, 2 * c, 2 * l);
                                    break;
                                }
                                g += vt;
                            case "rectRot":
                                (d = Math.cos(g) * (s ? s / 2 : f)),
                                    (n = Math.cos(g) * f),
                                    (o = Math.sin(g) * f),
                                    (u = Math.sin(g) * (s ? s / 2 : f)),
                                    t.moveTo(i - d, r - o),
                                    t.lineTo(i + u, r - n),
                                    t.lineTo(i + d, r + o),
                                    t.lineTo(i - u, r + n),
                                    t.closePath();
                                break;
                            case "crossRot":
                                g += vt;
                            case "cross":
                                (d = Math.cos(g) * (s ? s / 2 : f)),
                                    (n = Math.cos(g) * f),
                                    (o = Math.sin(g) * f),
                                    (u = Math.sin(g) * (s ? s / 2 : f)),
                                    t.moveTo(i - d, r - o),
                                    t.lineTo(i + d, r + o),
                                    t.moveTo(i + u, r - n),
                                    t.lineTo(i - u, r + n);
                                break;
                            case "star":
                                (d = Math.cos(g) * (s ? s / 2 : f)),
                                    (n = Math.cos(g) * f),
                                    (o = Math.sin(g) * f),
                                    (u = Math.sin(g) * (s ? s / 2 : f)),
                                    t.moveTo(i - d, r - o),
                                    t.lineTo(i + d, r + o),
                                    t.moveTo(i + u, r - n),
                                    t.lineTo(i - u, r + n),
                                    (g += vt),
                                    (d = Math.cos(g) * (s ? s / 2 : f)),
                                    (n = Math.cos(g) * f),
                                    (o = Math.sin(g) * f),
                                    (u = Math.sin(g) * (s ? s / 2 : f)),
                                    t.moveTo(i - d, r - o),
                                    t.lineTo(i + d, r + o),
                                    t.moveTo(i + u, r - n),
                                    t.lineTo(i - u, r + n);
                                break;
                            case "line":
                                (n = s ? s / 2 : Math.cos(g) * f), (o = Math.sin(g) * f), t.moveTo(i - n, r - o), t.lineTo(i + n, r + o);
                                break;
                            case "dash":
                                t.moveTo(i, r), t.lineTo(i + Math.cos(g) * (s ? s / 2 : f), r + Math.sin(g) * f);
                                break;
                            case !1:
                                t.closePath();
                        }
                        t.fill(), e.borderWidth > 0 && t.stroke();
                    }
                }
                function be(t, e, i) {
                    return (i = i || 0.5), !e || (t && t.x > e.left - i && t.x < e.right + i && t.y > e.top - i && t.y < e.bottom + i);
                }
                function ye(t, e) {
                    t.save(), t.beginPath(), t.rect(e.left, e.top, e.right - e.left, e.bottom - e.top), t.clip();
                }
                function we(t) {
                    t.restore();
                }
                function xe(t, e, i, r, s) {
                    if (!e) return t.lineTo(i.x, i.y);
                    if ("middle" === s) {
                        var a = (e.x + i.x) / 2;
                        t.lineTo(a, e.y), t.lineTo(a, i.y);
                    } else ("after" === s) != !!r ? t.lineTo(e.x, i.y) : t.lineTo(i.x, e.y);
                    t.lineTo(i.x, i.y);
                }
                function Ee(t, e, i, r) {
                    if (!e) return t.lineTo(i.x, i.y);
                    t.bezierCurveTo(r ? e.cp1x : e.cp2x, r ? e.cp1y : e.cp2y, r ? i.cp2x : i.cp1x, r ? i.cp2y : i.cp1y, i.x, i.y);
                }
                function Ce(t, e, i, r, s) {
                    if (s.strikethrough || s.underline) {
                        var a = t.measureText(r),
                            n = e - a.actualBoundingBoxLeft,
                            o = e + a.actualBoundingBoxRight,
                            l = i - a.actualBoundingBoxAscent,
                            h = i + a.actualBoundingBoxDescent,
                            c = s.strikethrough ? (l + h) / 2 : h;
                        (t.strokeStyle = t.fillStyle), t.beginPath(), (t.lineWidth = s.decorationWidth || 2), t.moveTo(n, c), t.lineTo(o, c), t.stroke();
                    }
                }
                function Se(t, e) {
                    var i = t.fillStyle;
                    (t.fillStyle = e.color), t.fillRect(e.left, e.top, e.width, e.height), (t.fillStyle = i);
                }
                function Te(t, e, i, r, s, a = {}) {
                    var n,
                        o,
                        l = W(e) ? e : [e],
                        h = a.strokeWidth > 0 && "" !== a.strokeColor;
                    for (
                        t.save(),
                            t.font = s.string,
                            (function (t, e) {
                                e.translation && t.translate(e.translation[0], e.translation[1]),
                                    j(e.rotation) || t.rotate(e.rotation),
                                    e.color && (t.fillStyle = e.color),
                                    e.textAlign && (t.textAlign = e.textAlign),
                                    e.textBaseline && (t.textBaseline = e.textBaseline);
                            })(t, a),
                            n = 0;
                        n < l.length;
                        ++n
                    )
                        (o = l[n]),
                            a.backdrop && Se(t, a.backdrop),
                            h && (a.strokeColor && (t.strokeStyle = a.strokeColor), j(a.strokeWidth) || (t.lineWidth = a.strokeWidth), t.strokeText(o, i, r, a.maxWidth)),
                            t.fillText(o, i, r, a.maxWidth),
                            Ce(t, i, r, o, a),
                            (r += Number(s.lineHeight));
                    t.restore();
                }
                function _e(t, e) {
                    var i = e.x,
                        r = e.y,
                        s = e.w,
                        a = e.h,
                        n = e.radius;
                    t.arc(i + n.topLeft, r + n.topLeft, n.topLeft, 1.5 * dt, dt, !0),
                        t.lineTo(i, r + a - n.bottomLeft),
                        t.arc(i + n.bottomLeft, r + a - n.bottomLeft, n.bottomLeft, dt, gt, !0),
                        t.lineTo(i + s - n.bottomRight, r + a),
                        t.arc(i + s - n.bottomRight, r + a - n.bottomRight, n.bottomRight, gt, 0, !0),
                        t.lineTo(i + s, r + n.topRight),
                        t.arc(i + s - n.topRight, r + n.topRight, n.topRight, 0, -gt, !0),
                        t.lineTo(i + n.topLeft, r);
                }
                var Me = /^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,
                    Pe = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;
                function ke(t, e) {
                    var i = ("" + t).match(Me);
                    if (!i || "normal" === i[1]) return 1.2 * e;
                    switch (((t = +i[2]), i[3])) {
                        case "px":
                            return t;
                        case "%":
                            t /= 100;
                    }
                    return e * t;
                }
                var Ae = (t) => +t || 0;
                function De(t, e) {
                    var i,
                        r = {},
                        s = G(e),
                        a = s ? Object.keys(e) : e,
                        n = G(t) ? (s ? (i) => U(t[i], t[e[i]]) : (e) => t[e]) : () => t,
                        o = B(a);
                    try {
                        for (o.s(); !(i = o.n()).done; ) {
                            var l = i.value;
                            r[l] = Ae(n(l));
                        }
                    } catch (t) {
                        o.e(t);
                    } finally {
                        o.f();
                    }
                    return r;
                }
                function Le(t) {
                    return De(t, { top: "y", right: "x", bottom: "y", left: "x" });
                }
                function Ie(t) {
                    return De(t, ["topLeft", "topRight", "bottomLeft", "bottomRight"]);
                }
                function Re(t) {
                    var e = Le(t);
                    return (e.width = e.left + e.right), (e.height = e.top + e.bottom), e;
                }
                function Oe(t, e) {
                    (t = t || {}), (e = e || de.font);
                    var i = U(t.size, e.size);
                    "string" == typeof i && (i = parseInt(i, 10));
                    var r = U(t.style, e.style);
                    r && !("" + r).match(Pe) && (console.warn('Invalid font style specified: "' + r + '"'), (r = void 0));
                    var s = { family: U(t.family, e.family), lineHeight: ke(U(t.lineHeight, e.lineHeight), i), size: i, style: r, weight: U(t.weight, e.weight), string: "" };
                    return (
                        (s.string = (function (t) {
                            return !t || j(t.size) || j(t.family) ? null : (t.style ? t.style + " " : "") + (t.weight ? t.weight + " " : "") + t.size + "px " + t.family;
                        })(s)),
                        s
                    );
                }
                function Fe(t, e, i, r) {
                    var s,
                        a,
                        n,
                        o = !0;
                    for (s = 0, a = t.length; s < a; ++s)
                        if (void 0 !== (n = t[s]) && (void 0 !== e && "function" == typeof n && ((n = n(e)), (o = !1)), void 0 !== i && W(n) && ((n = n[i % n.length]), (o = !1)), void 0 !== n)) return r && !o && (r.cacheable = !1), n;
                }
                function Be(t, e) {
                    return Object.assign(Object.create(t), e);
                }
                function ze(t, e = [""], i, r, s = () => t[0]) {
                    var a = i || t;
                    void 0 === r && (r = Xe("_fallback", t));
                    var n = { [Symbol.toStringTag]: "Object", _cacheable: !0, _scopes: t, _rootScopes: a, _fallback: r, _getTarget: s, override: (i) => ze([i, ...t], e, a, r) };
                    return new Proxy(n, {
                        deleteProperty: (e, i) => (delete e[i], delete e._keys, delete t[0][i], !0),
                        get: (i, r) =>
                            We(i, r, () =>
                                (function (t, e, i, r) {
                                    var s,
                                        a,
                                        n = B(e);
                                    try {
                                        for (n.s(); !(a = n.n()).done; ) {
                                            var o = a.value;
                                            if (void 0 !== (s = Xe(He(o, t), i))) return je(t, s) ? Ue(i, r, t, s) : s;
                                        }
                                    } catch (t) {
                                        n.e(t);
                                    } finally {
                                        n.f();
                                    }
                                })(r, e, t, i)
                            ),
                        getOwnPropertyDescriptor: (t, e) => Reflect.getOwnPropertyDescriptor(t._scopes[0], e),
                        getPrototypeOf: () => Reflect.getPrototypeOf(t[0]),
                        has: (t, e) => Ke(t).includes(e),
                        ownKeys: (t) => Ke(t),
                        set(t, e, i) {
                            var r = t._storage || (t._storage = s());
                            return (t[e] = r[e] = i), delete t._keys, !0;
                        },
                    });
                }
                function Ne(t, e, i, r) {
                    var s = { _cacheable: !1, _proxy: t, _context: e, _subProxy: i, _stack: new Set(), _descriptors: Ve(t, r), setContext: (e) => Ne(t, e, i, r), override: (s) => Ne(t.override(s), e, i, r) };
                    return new Proxy(s, {
                        deleteProperty: (e, i) => (delete e[i], delete t[i], !0),
                        get: (t, e, i) =>
                            We(t, e, () =>
                                (function (t, e, i) {
                                    var r = t._proxy,
                                        s = t._context,
                                        a = t._subProxy,
                                        n = t._descriptors,
                                        o = r[e];
                                    ht(o) &&
                                        n.isScriptable(e) &&
                                        (o = (function (t, e, i, r) {
                                            var s = i._proxy,
                                                a = i._context,
                                                n = i._subProxy,
                                                o = i._stack;
                                            if (o.has(t)) throw new Error("Recursion detected: " + Array.from(o).join("->") + "->" + t);
                                            o.add(t);
                                            var l = e(a, n || r);
                                            o.delete(t), je(t, l) && (l = Ue(s._scopes, s, t, l));
                                            return l;
                                        })(e, o, t, i));
                                    W(o) &&
                                        o.length &&
                                        (o = (function (t, e, i, r) {
                                            var s = i._proxy,
                                                a = i._context,
                                                n = i._subProxy,
                                                o = i._descriptors;
                                            if (void 0 !== a.index && r(t)) return e[a.index % e.length];
                                            if (G(e[0])) {
                                                var l = e,
                                                    h = s._scopes.filter((t) => t !== l);
                                                e = [];
                                                var c,
                                                    d = B(l);
                                                try {
                                                    for (d.s(); !(c = d.n()).done; ) {
                                                        var u = Ue(h, s, t, c.value);
                                                        e.push(Ne(u, a, n && n[t], o));
                                                    }
                                                } catch (t) {
                                                    d.e(t);
                                                } finally {
                                                    d.f();
                                                }
                                            }
                                            return e;
                                        })(e, o, t, n.isIndexable));
                                    je(e, o) && (o = Ne(o, s, a && a[e], n));
                                    return o;
                                })(t, e, i)
                            ),
                        getOwnPropertyDescriptor: (e, i) => (e._descriptors.allKeys ? (Reflect.has(t, i) ? { enumerable: !0, configurable: !0 } : void 0) : Reflect.getOwnPropertyDescriptor(t, i)),
                        getPrototypeOf: () => Reflect.getPrototypeOf(t),
                        has: (e, i) => Reflect.has(t, i),
                        ownKeys: () => Reflect.ownKeys(t),
                        set: (e, i, r) => ((t[i] = r), delete e[i], !0),
                    });
                }
                function Ve(t, e = { scriptable: !0, indexable: !0 }) {
                    var i = t._scriptable,
                        r = void 0 === i ? e.scriptable : i,
                        s = t._indexable,
                        a = void 0 === s ? e.indexable : s,
                        n = t._allKeys;
                    return { allKeys: void 0 === n ? e.allKeys : n, scriptable: r, indexable: a, isScriptable: ht(r) ? r : () => r, isIndexable: ht(a) ? a : () => a };
                }
                var He = (t, e) => (t ? t + ot(e) : e),
                    je = (t, e) => G(e) && "adapters" !== t && (null === Object.getPrototypeOf(e) || e.constructor === Object);
                function We(t, e, i) {
                    if (Object.prototype.hasOwnProperty.call(t, e)) return t[e];
                    var r = i();
                    return (t[e] = r), r;
                }
                function Ge(t, e, i) {
                    return ht(t) ? t(e, i) : t;
                }
                var qe = (t, e) => (!0 === t ? e : "string" == typeof t ? nt(e, t) : void 0);
                function $e(t, e, i, r, s) {
                    var a,
                        n = B(e);
                    try {
                        for (n.s(); !(a = n.n()).done; ) {
                            var o = a.value,
                                l = qe(i, o);
                            if (l) {
                                t.add(l);
                                var h = Ge(l._fallback, i, s);
                                if (void 0 !== h && h !== i && h !== r) return h;
                            } else if (!1 === l && void 0 !== r && i !== r) return null;
                        }
                    } catch (t) {
                        n.e(t);
                    } finally {
                        n.f();
                    }
                    return !1;
                }
                function Ue(t, e, i, r) {
                    var s = e._rootScopes,
                        a = Ge(e._fallback, i, r),
                        n = [...t, ...s],
                        o = new Set();
                    o.add(r);
                    var l = Ye(o, n, i, a || i, r);
                    return (
                        null !== l &&
                        (void 0 === a || a === i || null !== (l = Ye(o, n, a, l, r))) &&
                        ze(Array.from(o), [""], s, a, () =>
                            (function (t, e, i) {
                                var r = t._getTarget();
                                e in r || (r[e] = {});
                                var s = r[e];
                                if (W(s) && G(i)) return i;
                                return s || {};
                            })(e, i, r)
                        )
                    );
                }
                function Ye(t, e, i, r, s) {
                    for (; i; ) i = $e(t, e, i, r, s);
                    return i;
                }
                function Xe(t, e) {
                    var i,
                        r = B(e);
                    try {
                        for (r.s(); !(i = r.n()).done; ) {
                            var s = i.value;
                            if (s) {
                                var a = s[t];
                                if (void 0 !== a) return a;
                            }
                        }
                    } catch (t) {
                        r.e(t);
                    } finally {
                        r.f();
                    }
                }
                function Ke(t) {
                    var e = t._keys;
                    return (
                        e ||
                            (e = t._keys = (function (t) {
                                var e,
                                    i = new Set(),
                                    r = B(t);
                                try {
                                    for (r.s(); !(e = r.n()).done; ) {
                                        var s,
                                            a = e.value,
                                            n = B(Object.keys(a).filter((t) => !t.startsWith("_")));
                                        try {
                                            for (n.s(); !(s = n.n()).done; ) {
                                                var o = s.value;
                                                i.add(o);
                                            }
                                        } catch (t) {
                                            n.e(t);
                                        } finally {
                                            n.f();
                                        }
                                    }
                                } catch (t) {
                                    r.e(t);
                                } finally {
                                    r.f();
                                }
                                return Array.from(i);
                            })(t._scopes)),
                        e
                    );
                }
                function Ze(t, e, i, r) {
                    var s,
                        a,
                        n,
                        o,
                        l = t.iScale,
                        h = this._parsing.key,
                        c = void 0 === h ? "r" : h,
                        d = new Array(r);
                    for (s = 0, a = r; s < a; ++s) (o = e[(n = s + i)]), (d[s] = { r: l.parse(nt(o, c), n) });
                    return d;
                }
                var Je = Number.EPSILON || 1e-14,
                    Qe = (t, e) => e < t.length && !t[e].skip && t[e],
                    ti = (t) => ("x" === t ? "y" : "x");
                function ei(t, e = "x") {
                    var i,
                        r,
                        s,
                        a = ti(e),
                        n = t.length,
                        o = Array(n).fill(0),
                        l = Array(n),
                        h = Qe(t, 0);
                    for (i = 0; i < n; ++i)
                        if (((r = s), (s = h), (h = Qe(t, i + 1)), s)) {
                            if (h) {
                                var c = h[e] - s[e];
                                o[i] = 0 !== c ? (h[a] - s[a]) / c : 0;
                            }
                            l[i] = r ? (h ? (wt(o[i - 1]) !== wt(o[i]) ? 0 : (o[i - 1] + o[i]) / 2) : o[i - 1]) : o[i];
                        }
                    !(function (t, e, i) {
                        for (var r, s, a, n, o, l = t.length, h = Qe(t, 0), c = 0; c < l - 1; ++c)
                            (o = h),
                                (h = Qe(t, c + 1)),
                                o &&
                                    h &&
                                    (xt(e[c], 0, Je)
                                        ? (i[c] = i[c + 1] = 0)
                                        : ((r = i[c] / e[c]), (s = i[c + 1] / e[c]), (n = Math.pow(r, 2) + Math.pow(s, 2)) <= 9 || ((a = 3 / Math.sqrt(n)), (i[c] = r * a * e[c]), (i[c + 1] = s * a * e[c]))));
                    })(t, o, l),
                        (function (t, e, i = "x") {
                            for (var r, s, a, n = ti(i), o = t.length, l = Qe(t, 0), h = 0; h < o; ++h)
                                if (((s = a), (a = l), (l = Qe(t, h + 1)), a)) {
                                    var c = a[i],
                                        d = a[n];
                                    s && ((r = (c - s[i]) / 3), (a[`cp1${i}`] = c - r), (a[`cp1${n}`] = d - r * e[h])), l && ((r = (l[i] - c) / 3), (a[`cp2${i}`] = c + r), (a[`cp2${n}`] = d + r * e[h]));
                                }
                        })(t, l, e);
                }
                function ii(t, e, i) {
                    return Math.max(Math.min(t, i), e);
                }
                function ri(t, e, i, r, s) {
                    var a, n, o, l, h, c, d, u, p, m, f, g, v, b, y, w, x;
                    if ((e.spanGaps && (t = t.filter((t) => !t.skip)), "monotone" === e.cubicInterpolationMode)) ei(t, s);
                    else {
                        var E = r ? t[t.length - 1] : t[0];
                        for (a = 0, n = t.length; a < n; ++a)
                            (o = t[a]),
                                (h = E),
                                (c = o),
                                (d = t[Math.min(a + 1, n - (r ? 0 : 1)) % n]),
                                (u = e.tension),
                                (p = void 0),
                                (m = void 0),
                                (f = void 0),
                                (g = void 0),
                                (v = void 0),
                                (b = void 0),
                                (y = void 0),
                                (w = void 0),
                                (x = void 0),
                                (p = h.skip ? c : h),
                                (m = c),
                                (f = d.skip ? c : d),
                                (g = kt(m, p)),
                                (v = kt(f, m)),
                                (b = g / (g + v)),
                                (y = v / (g + v)),
                                (w = u * (b = isNaN(b) ? 0 : b)),
                                (x = u * (y = isNaN(y) ? 0 : y)),
                                (l = { previous: { x: m.x - w * (f.x - p.x), y: m.y - w * (f.y - p.y) }, next: { x: m.x + x * (f.x - p.x), y: m.y + x * (f.y - p.y) } }),
                                (o.cp1x = l.previous.x),
                                (o.cp1y = l.previous.y),
                                (o.cp2x = l.next.x),
                                (o.cp2y = l.next.y),
                                (E = o);
                    }
                    e.capBezierPoints &&
                        (function (t, e) {
                            var i,
                                r,
                                s,
                                a,
                                n,
                                o = be(t[0], e);
                            for (i = 0, r = t.length; i < r; ++i)
                                (n = a),
                                    (a = o),
                                    (o = i < r - 1 && be(t[i + 1], e)),
                                    a && ((s = t[i]), n && ((s.cp1x = ii(s.cp1x, e.left, e.right)), (s.cp1y = ii(s.cp1y, e.top, e.bottom))), o && ((s.cp2x = ii(s.cp2x, e.left, e.right)), (s.cp2y = ii(s.cp2y, e.top, e.bottom))));
                        })(t, i);
                }
                function si() {
                    return "undefined" != typeof window && "undefined" != typeof document;
                }
                function ai(t) {
                    var e = t.parentNode;
                    return e && "[object ShadowRoot]" === e.toString() && (e = e.host), e;
                }
                function ni(t, e, i) {
                    var r;
                    return "string" == typeof t ? ((r = parseInt(t, 10)), -1 !== t.indexOf("%") && (r = (r / 100) * e.parentNode[i])) : (r = t), r;
                }
                var oi = (t) => t.ownerDocument.defaultView.getComputedStyle(t, null);
                var li = ["top", "right", "bottom", "left"];
                function hi(t, e, i) {
                    var r = {};
                    i = i ? "-" + i : "";
                    for (var s = 0; s < 4; s++) {
                        var a = li[s];
                        r[a] = parseFloat(t[e + "-" + a + i]) || 0;
                    }
                    return (r.width = r.left + r.right), (r.height = r.top + r.bottom), r;
                }
                var ci = (t, e, i) => (t > 0 || e > 0) && (!i || !i.shadowRoot);
                function di(t, e) {
                    if ("native" in t) return t;
                    var i = e.canvas,
                        r = e.currentDevicePixelRatio,
                        s = oi(i),
                        a = "border-box" === s.boxSizing,
                        n = hi(s, "padding"),
                        o = hi(s, "border", "width"),
                        l = (function (t, e) {
                            var i,
                                r,
                                s = t.touches,
                                a = s && s.length ? s[0] : t,
                                n = a.offsetX,
                                o = a.offsetY,
                                l = !1;
                            if (ci(n, o, t.target)) (i = n), (r = o);
                            else {
                                var h = e.getBoundingClientRect();
                                (i = a.clientX - h.left), (r = a.clientY - h.top), (l = !0);
                            }
                            return { x: i, y: r, box: l };
                        })(t, i),
                        h = l.x,
                        c = l.y,
                        d = l.box,
                        u = n.left + (d && o.left),
                        p = n.top + (d && o.top),
                        m = e.width,
                        f = e.height;
                    return a && ((m -= n.width + o.width), (f -= n.height + o.height)), { x: Math.round((((h - u) / m) * i.width) / r), y: Math.round((((c - p) / f) * i.height) / r) };
                }
                var ui = (t) => Math.round(10 * t) / 10;
                function pi(t, e, i, r) {
                    var s = oi(t),
                        a = hi(s, "margin"),
                        n = ni(s.maxWidth, t, "clientWidth") || mt,
                        o = ni(s.maxHeight, t, "clientHeight") || mt,
                        l = (function (t, e, i) {
                            var r, s;
                            if (void 0 === e || void 0 === i) {
                                var a = ai(t);
                                if (a) {
                                    var n = a.getBoundingClientRect(),
                                        o = oi(a),
                                        l = hi(o, "border", "width"),
                                        h = hi(o, "padding");
                                    (e = n.width - h.width - l.width), (i = n.height - h.height - l.height), (r = ni(o.maxWidth, a, "clientWidth")), (s = ni(o.maxHeight, a, "clientHeight"));
                                } else (e = t.clientWidth), (i = t.clientHeight);
                            }
                            return { width: e, height: i, maxWidth: r || mt, maxHeight: s || mt };
                        })(t, e, i),
                        h = l.width,
                        c = l.height;
                    if ("content-box" === s.boxSizing) {
                        var d = hi(s, "border", "width"),
                            u = hi(s, "padding");
                        (h -= u.width + d.width), (c -= u.height + d.height);
                    }
                    return (
                        (h = Math.max(0, h - a.width)),
                        (c = Math.max(0, r ? h / r : c - a.height)),
                        (h = ui(Math.min(h, n, l.maxWidth))),
                        (c = ui(Math.min(c, o, l.maxHeight))),
                        h && !c && (c = ui(h / 2)),
                        (void 0 !== e || void 0 !== i) && r && l.height && c > l.height && ((c = l.height), (h = ui(Math.floor(c * r)))),
                        { width: h, height: c }
                    );
                }
                function mi(t, e, i) {
                    var r = e || 1,
                        s = Math.floor(t.height * r),
                        a = Math.floor(t.width * r);
                    (t.height = Math.floor(t.height)), (t.width = Math.floor(t.width));
                    var n = t.canvas;
                    return (
                        n.style && (i || (!n.style.height && !n.style.width)) && ((n.style.height = `${t.height}px`), (n.style.width = `${t.width}px`)),
                        (t.currentDevicePixelRatio !== r || n.height !== s || n.width !== a) && ((t.currentDevicePixelRatio = r), (n.height = s), (n.width = a), t.ctx.setTransform(r, 0, 0, r, 0, 0), !0)
                    );
                }
                var fi = (function () {
                    var t = !1;
                    try {
                        var e = {
                            get passive() {
                                return (t = !0), !1;
                            },
                        };
                        si() && (window.addEventListener("test", null, e), window.removeEventListener("test", null, e));
                    } catch (t) {}
                    return t;
                })();
                function gi(t, e) {
                    var i = (function (t, e) {
                            return oi(t).getPropertyValue(e);
                        })(t, e),
                        r = i && i.match(/^(\d+)(\.\d+)?px$/);
                    return r ? +r[1] : void 0;
                }
                function vi(t, e, i, r) {
                    return { x: t.x + i * (e.x - t.x), y: t.y + i * (e.y - t.y) };
                }
                function bi(t, e, i, r) {
                    return { x: t.x + i * (e.x - t.x), y: "middle" === r ? (i < 0.5 ? t.y : e.y) : "after" === r ? (i < 1 ? t.y : e.y) : i > 0 ? e.y : t.y };
                }
                function yi(t, e, i, r) {
                    var s = { x: t.cp2x, y: t.cp2y },
                        a = { x: e.cp1x, y: e.cp1y },
                        n = vi(t, s, i),
                        o = vi(s, a, i),
                        l = vi(a, e, i),
                        h = vi(n, o, i),
                        c = vi(o, l, i);
                    return vi(h, c, i);
                }
                function wi(t, e, i) {
                    return t
                        ? (function (t, e) {
                              return {
                                  x: (i) => t + t + e - i,
                                  setWidth(t) {
                                      e = t;
                                  },
                                  textAlign: (t) => ("center" === t ? t : "right" === t ? "left" : "right"),
                                  xPlus: (t, e) => t - e,
                                  leftForLtr: (t, e) => t - e,
                              };
                          })(e, i)
                        : { x: (t) => t, setWidth(t) {}, textAlign: (t) => t, xPlus: (t, e) => t + e, leftForLtr: (t, e) => t };
                }
                function xi(t, e) {
                    var i, r;
                    ("ltr" !== e && "rtl" !== e) || ((r = [(i = t.canvas.style).getPropertyValue("direction"), i.getPropertyPriority("direction")]), i.setProperty("direction", e, "important"), (t.prevTextDirection = r));
                }
                function Ei(t, e) {
                    void 0 !== e && (delete t.prevTextDirection, t.canvas.style.setProperty("direction", e[0], e[1]));
                }
                function Ci(t) {
                    return "angle" === t ? { between: Lt, compare: At, normalize: Dt } : { between: Rt, compare: (t, e) => t - e, normalize: (t) => t };
                }
                function Si({ start: t, end: e, count: i, loop: r, style: s }) {
                    return { start: t % i, end: e % i, loop: r && (e - t + 1) % i == 0, style: s };
                }
                function Ti(t, e, i) {
                    if (!i) return [t];
                    for (
                        var r,
                            s,
                            a,
                            n = i.property,
                            o = i.start,
                            l = i.end,
                            h = e.length,
                            c = Ci(n),
                            d = c.compare,
                            u = c.between,
                            p = c.normalize,
                            m = (function (t, e, i) {
                                var r,
                                    s,
                                    a = i.property,
                                    n = i.start,
                                    o = i.end,
                                    l = Ci(a),
                                    h = l.between,
                                    c = l.normalize,
                                    d = e.length,
                                    u = t.start,
                                    p = t.end,
                                    m = t.loop;
                                if (m) {
                                    for (u += d, p += d, r = 0, s = d; r < s && h(c(e[u % d][a]), n, o); ++r) u--, p--;
                                    (u %= d), (p %= d);
                                }
                                return p < u && (p += d), { start: u, end: p, loop: m, style: t.style };
                            })(t, e, i),
                            f = m.start,
                            g = m.end,
                            v = m.loop,
                            b = m.style,
                            y = [],
                            w = !1,
                            x = null,
                            E = () => w || (u(o, a, r) && 0 !== d(o, a)),
                            C = () => !w || 0 === d(l, r) || u(l, a, r),
                            S = f,
                            T = f;
                        S <= g;
                        ++S
                    )
                        (s = e[S % h]).skip ||
                            ((r = p(s[n])) !== a && ((w = u(r, o, l)), null === x && E() && (x = 0 === d(r, o) ? S : T), null !== x && C() && (y.push(Si({ start: x, end: S, loop: v, count: h, style: b })), (x = null)), (T = S), (a = r)));
                    return null !== x && y.push(Si({ start: x, end: g, loop: v, count: h, style: b })), y;
                }
                function _i(t, e) {
                    for (var i = [], r = t.segments, s = 0; s < r.length; s++) {
                        var a = Ti(r[s], t.points, e);
                        a.length && i.push(...a);
                    }
                    return i;
                }
                function Mi(t, e, i, r) {
                    return r && r.setContext && i
                        ? (function (t, e, i, r) {
                              var s = t._chart.getContext(),
                                  a = Pi(t.options),
                                  n = t._datasetIndex,
                                  o = t.options.spanGaps,
                                  l = i.length,
                                  h = [],
                                  c = a,
                                  d = e[0].start,
                                  u = d;
                              function p(t, e, r, s) {
                                  var a = o ? -1 : 1;
                                  if (t !== e) {
                                      for (t += l; i[t % l].skip; ) t -= a;
                                      for (; i[e % l].skip; ) e += a;
                                      t % l != e % l && (h.push({ start: t % l, end: e % l, loop: r, style: s }), (c = s), (d = e % l));
                                  }
                              }
                              var m,
                                  f = B(e);
                              try {
                                  for (f.s(); !(m = f.n()).done; ) {
                                      var g = m.value;
                                      d = o ? d : g.start;
                                      var v = i[d % l],
                                          b = void 0;
                                      for (u = d + 1; u <= g.end; u++) {
                                          var y = i[u % l];
                                          ki((b = Pi(r.setContext(Be(s, { type: "segment", p0: v, p1: y, p0DataIndex: (u - 1) % l, p1DataIndex: u % l, datasetIndex: n })))), c) && p(d, u - 1, g.loop, c), (v = y), (c = b);
                                      }
                                      d < u - 1 && p(d, u - 1, g.loop, c);
                                  }
                              } catch (t) {
                                  f.e(t);
                              } finally {
                                  f.f();
                              }
                              return h;
                          })(t, e, i, r)
                        : e;
                }
                function Pi(t) {
                    return {
                        backgroundColor: t.backgroundColor,
                        borderCapStyle: t.borderCapStyle,
                        borderDash: t.borderDash,
                        borderDashOffset: t.borderDashOffset,
                        borderJoinStyle: t.borderJoinStyle,
                        borderWidth: t.borderWidth,
                        borderColor: t.borderColor,
                    };
                }
                function ki(t, e) {
                    if (!e) return !1;
                    var i = [],
                        r = function (t, e) {
                            return Zt(e) ? (i.includes(e) || i.push(e), i.indexOf(e)) : e;
                        };
                    return JSON.stringify(t, r) !== JSON.stringify(e, r);
                }
                function Ai(t, e) {
                    var i = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var r = Object.getOwnPropertySymbols(t);
                        e &&
                            (r = r.filter(function (e) {
                                return Object.getOwnPropertyDescriptor(t, e).enumerable;
                            })),
                            i.push.apply(i, r);
                    }
                    return i;
                }
                function Di(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var i = null != arguments[e] ? arguments[e] : {};
                        e % 2
                            ? Ai(Object(i), !0).forEach(function (e) {
                                  Ii(t, e, i[e]);
                              })
                            : Object.getOwnPropertyDescriptors
                            ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i))
                            : Ai(Object(i)).forEach(function (e) {
                                  Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e));
                              });
                    }
                    return t;
                }
                function Li(t, e) {
                    return (
                        (function (t) {
                            if (Array.isArray(t)) return t;
                        })(t) ||
                        (function (t, e) {
                            var i = null == t ? null : ("undefined" != typeof Symbol && t[Symbol.iterator]) || t["@@iterator"];
                            if (null != i) {
                                var r,
                                    s,
                                    a,
                                    n,
                                    o = [],
                                    l = !0,
                                    h = !1;
                                try {
                                    if (((a = (i = i.call(t)).next), 0 === e)) {
                                        if (Object(i) !== i) return;
                                        l = !1;
                                    } else for (; !(l = (r = a.call(i)).done) && (o.push(r.value), o.length !== e); l = !0);
                                } catch (t) {
                                    (h = !0), (s = t);
                                } finally {
                                    try {
                                        if (!l && null != i.return && ((n = i.return()), Object(n) !== n)) return;
                                    } finally {
                                        if (h) throw s;
                                    }
                                }
                                return o;
                            }
                        })(t, e) ||
                        Oi(t, e) ||
                        (function () {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                        })()
                    );
                }
                function Ii(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                function Ri(t, e) {
                    var i = ("undefined" != typeof Symbol && t[Symbol.iterator]) || t["@@iterator"];
                    if (!i) {
                        if (Array.isArray(t) || (i = Oi(t)) || (e && t && "number" == typeof t.length)) {
                            i && (t = i);
                            var r = 0,
                                s = function () {};
                            return {
                                s,
                                n: function () {
                                    return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] };
                                },
                                e: function (t) {
                                    throw t;
                                },
                                f: s,
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a,
                        n = !0,
                        o = !1;
                    return {
                        s: function () {
                            i = i.call(t);
                        },
                        n: function () {
                            var t = i.next();
                            return (n = t.done), t;
                        },
                        e: function (t) {
                            (o = !0), (a = t);
                        },
                        f: function () {
                            try {
                                n || null == i.return || i.return();
                            } finally {
                                if (o) throw a;
                            }
                        },
                    };
                }
                function Oi(t, e) {
                    if (t) {
                        if ("string" == typeof t) return Fi(t, e);
                        var i = Object.prototype.toString.call(t).slice(8, -1);
                        return "Object" === i && t.constructor && (i = t.constructor.name), "Map" === i || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? Fi(t, e) : void 0;
                    }
                }
                function Fi(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var i = 0, r = new Array(e); i < e; i++) r[i] = t[i];
                    return r;
                }
                class Bi {
                    constructor() {
                        (this._request = null), (this._charts = new Map()), (this._running = !1), (this._lastDate = void 0);
                    }
                    _notify(t, e, i, r) {
                        var s = e.listeners[r],
                            a = e.duration;
                        s.forEach((r) => r({ chart: t, initial: e.initial, numSteps: a, currentStep: Math.min(i - e.start, a) }));
                    }
                    _refresh() {
                        this._request ||
                            ((this._running = !0),
                            (this._request = Ht.call(window, () => {
                                this._update(), (this._request = null), this._running && this._refresh();
                            })));
                    }
                    _update(t = Date.now()) {
                        var e = 0;
                        this._charts.forEach((i, r) => {
                            if (i.running && i.items.length) {
                                for (var s, a = i.items, n = a.length - 1, o = !1; n >= 0; --n) (s = a[n])._active ? (s._total > i.duration && (i.duration = s._total), s.tick(t), (o = !0)) : ((a[n] = a[a.length - 1]), a.pop());
                                o && (r.draw(), this._notify(r, i, t, "progress")), a.length || ((i.running = !1), this._notify(r, i, t, "complete"), (i.initial = !1)), (e += a.length);
                            }
                        }),
                            (this._lastDate = t),
                            0 === e && (this._running = !1);
                    }
                    _getAnims(t) {
                        var e = this._charts,
                            i = e.get(t);
                        return i || ((i = { running: !1, initial: !0, items: [], listeners: { complete: [], progress: [] } }), e.set(t, i)), i;
                    }
                    listen(t, e, i) {
                        this._getAnims(t).listeners[e].push(i);
                    }
                    add(t, e) {
                        e && e.length && this._getAnims(t).items.push(...e);
                    }
                    has(t) {
                        return this._getAnims(t).items.length > 0;
                    }
                    start(t) {
                        var e = this._charts.get(t);
                        e && ((e.running = !0), (e.start = Date.now()), (e.duration = e.items.reduce((t, e) => Math.max(t, e._duration), 0)), this._refresh());
                    }
                    running(t) {
                        if (!this._running) return !1;
                        var e = this._charts.get(t);
                        return !!(e && e.running && e.items.length);
                    }
                    stop(t) {
                        var e = this._charts.get(t);
                        if (e && e.items.length) {
                            for (var i = e.items, r = i.length - 1; r >= 0; --r) i[r].cancel();
                            (e.items = []), this._notify(t, e, Date.now(), "complete");
                        }
                    }
                    remove(t) {
                        return this._charts.delete(t);
                    }
                }
                var zi = new Bi(),
                    Ni = "transparent",
                    Vi = {
                        boolean: (t, e, i) => (i > 0.5 ? e : t),
                        color(t, e, i) {
                            var r = Jt(t || Ni),
                                s = r.valid && Jt(e || Ni);
                            return s && s.valid ? s.mix(r, i).hexString() : e;
                        },
                        number: (t, e, i) => t + (e - t) * i,
                    };
                class Hi {
                    constructor(t, e, i, r) {
                        var s = e[i];
                        r = Fe([t.to, r, s, t.from]);
                        var a = Fe([t.from, s, r]);
                        (this._active = !0),
                            (this._fn = t.fn || Vi[t.type || typeof a]),
                            (this._easing = Kt[t.easing] || Kt.linear),
                            (this._start = Math.floor(Date.now() + (t.delay || 0))),
                            (this._duration = this._total = Math.floor(t.duration)),
                            (this._loop = !!t.loop),
                            (this._target = e),
                            (this._prop = i),
                            (this._from = a),
                            (this._to = r),
                            (this._promises = void 0);
                    }
                    active() {
                        return this._active;
                    }
                    update(t, e, i) {
                        if (this._active) {
                            this._notify(!1);
                            var r = this._target[this._prop],
                                s = i - this._start,
                                a = this._duration - s;
                            (this._start = i), (this._duration = Math.floor(Math.max(a, t.duration))), (this._total += s), (this._loop = !!t.loop), (this._to = Fe([t.to, e, r, t.from])), (this._from = Fe([t.from, r, e]));
                        }
                    }
                    cancel() {
                        this._active && (this.tick(Date.now()), (this._active = !1), this._notify(!1));
                    }
                    tick(t) {
                        var e,
                            i = t - this._start,
                            r = this._duration,
                            s = this._prop,
                            a = this._from,
                            n = this._loop,
                            o = this._to;
                        if (((this._active = a !== o && (n || i < r)), !this._active)) return (this._target[s] = o), void this._notify(!0);
                        i < 0 ? (this._target[s] = a) : ((e = (i / r) % 2), (e = n && e > 1 ? 2 - e : e), (e = this._easing(Math.min(1, Math.max(0, e)))), (this._target[s] = this._fn(a, o, e)));
                    }
                    wait() {
                        var t = this._promises || (this._promises = []);
                        return new Promise((e, i) => {
                            t.push({ res: e, rej: i });
                        });
                    }
                    _notify(t) {
                        for (var e = t ? "res" : "rej", i = this._promises || [], r = 0; r < i.length; r++) i[r][e]();
                    }
                }
                class ji {
                    constructor(t, e) {
                        (this._chart = t), (this._properties = new Map()), this.configure(e);
                    }
                    configure(t) {
                        if (G(t)) {
                            var e = Object.keys(de.animation),
                                i = this._properties;
                            Object.getOwnPropertyNames(t).forEach((r) => {
                                var s = t[r];
                                if (G(s)) {
                                    for (var a = {}, n = 0, o = e; n < o.length; n++) {
                                        var l = o[n];
                                        a[l] = s[l];
                                    }
                                    ((W(s.properties) && s.properties) || [r]).forEach((t) => {
                                        (t !== r && i.has(t)) || i.set(t, a);
                                    });
                                }
                            });
                        }
                    }
                    _animateOptions(t, e) {
                        var i = e.options,
                            r = (function (t, e) {
                                if (!e) return;
                                var i = t.options;
                                if (!i) return void (t.options = e);
                                i.$shared && (t.options = i = Object.assign({}, i, { $shared: !1, $animations: {} }));
                                return i;
                            })(t, i);
                        if (!r) return [];
                        var s = this._createAnimations(r, i);
                        return (
                            i.$shared &&
                                (function (t, e) {
                                    for (var i = [], r = Object.keys(e), s = 0; s < r.length; s++) {
                                        var a = t[r[s]];
                                        a && a.active() && i.push(a.wait());
                                    }
                                    return Promise.all(i);
                                })(t.options.$animations, i).then(
                                    () => {
                                        t.options = i;
                                    },
                                    () => {}
                                ),
                            s
                        );
                    }
                    _createAnimations(t, e) {
                        var i,
                            r = this._properties,
                            s = [],
                            a = t.$animations || (t.$animations = {}),
                            n = Object.keys(e),
                            o = Date.now();
                        for (i = n.length - 1; i >= 0; --i) {
                            var l = n[i];
                            if ("$" !== l.charAt(0))
                                if ("options" !== l) {
                                    var h = e[l],
                                        c = a[l],
                                        d = r.get(l);
                                    if (c) {
                                        if (d && c.active()) {
                                            c.update(d, h, o);
                                            continue;
                                        }
                                        c.cancel();
                                    }
                                    d && d.duration ? ((a[l] = c = new Hi(d, t, l, h)), s.push(c)) : (t[l] = h);
                                } else s.push(...this._animateOptions(t, e));
                        }
                        return s;
                    }
                    update(t, e) {
                        if (0 !== this._properties.size) {
                            var i = this._createAnimations(t, e);
                            return i.length ? (zi.add(this._chart, i), !0) : void 0;
                        }
                        Object.assign(t, e);
                    }
                }
                function Wi(t, e) {
                    var i = (t && t.options) || {},
                        r = i.reverse,
                        s = void 0 === i.min ? e : 0,
                        a = void 0 === i.max ? e : 0;
                    return { start: r ? a : s, end: r ? s : a };
                }
                function Gi(t, e) {
                    var i,
                        r,
                        s = [],
                        a = t._getSortedDatasetMetas(e);
                    for (i = 0, r = a.length; i < r; ++i) s.push(a[i].index);
                    return s;
                }
                function qi(t, e, i, r = {}) {
                    var s,
                        a,
                        n,
                        o,
                        l = t.keys,
                        h = "single" === r.mode;
                    if (null !== e) {
                        for (s = 0, a = l.length; s < a; ++s) {
                            if ((n = +l[s]) === i) {
                                if (r.all) continue;
                                break;
                            }
                            q((o = t.values[n])) && (h || 0 === e || wt(e) === wt(o)) && (e += o);
                        }
                        return e;
                    }
                }
                function $i(t, e) {
                    var i = t && t.options.stacked;
                    return i || (void 0 === i && void 0 !== e.stack);
                }
                function Ui(t, e, i) {
                    var r = t[e] || (t[e] = {});
                    return r[i] || (r[i] = {});
                }
                function Yi(t, e, i, r) {
                    var s,
                        a = Ri(e.getMatchingVisibleMetas(r).reverse());
                    try {
                        for (a.s(); !(s = a.n()).done; ) {
                            var n = s.value,
                                o = t[n.index];
                            if ((i && o > 0) || (!i && o < 0)) return n.index;
                        }
                    } catch (t) {
                        a.e(t);
                    } finally {
                        a.f();
                    }
                    return null;
                }
                function Xi(t, e) {
                    for (
                        var i,
                            r = t.chart,
                            s = t._cachedMeta,
                            a = r._stacks || (r._stacks = {}),
                            n = s.iScale,
                            o = s.vScale,
                            l = s.index,
                            h = n.axis,
                            c = o.axis,
                            d = (function (t, e, i) {
                                return `${t.id}.${e.id}.${i.stack || i.type}`;
                            })(n, o, s),
                            u = e.length,
                            p = 0;
                        p < u;
                        ++p
                    ) {
                        var m = e[p],
                            f = m[h],
                            g = m[c];
                        ((i = (m._stacks || (m._stacks = {}))[c] = Ui(a, d, f))[l] = g), (i._top = Yi(i, o, !0, s.type)), (i._bottom = Yi(i, o, !1, s.type)), ((i._visualValues || (i._visualValues = {}))[l] = g);
                    }
                }
                function Ki(t, e) {
                    var i = t.scales;
                    return Object.keys(i)
                        .filter((t) => i[t].axis === e)
                        .shift();
                }
                function Zi(t, e) {
                    var i = t.controller.index,
                        r = t.vScale && t.vScale.axis;
                    if (r) {
                        var s,
                            a = Ri((e = e || t._parsed));
                        try {
                            for (a.s(); !(s = a.n()).done; ) {
                                var n = s.value._stacks;
                                if (!n || void 0 === n[r] || void 0 === n[r][i]) return;
                                delete n[r][i], void 0 !== n[r]._visualValues && void 0 !== n[r]._visualValues[i] && delete n[r]._visualValues[i];
                            }
                        } catch (t) {
                            a.e(t);
                        } finally {
                            a.f();
                        }
                    }
                }
                var Ji = (t) => "reset" === t || "none" === t,
                    Qi = (t, e) => (e ? t : Object.assign({}, t));
                class tr {
                    constructor(t, e) {
                        (this.chart = t),
                            (this._ctx = t.ctx),
                            (this.index = e),
                            (this._cachedDataOpts = {}),
                            (this._cachedMeta = this.getMeta()),
                            (this._type = this._cachedMeta.type),
                            (this.options = void 0),
                            (this._parsing = !1),
                            (this._data = void 0),
                            (this._objectData = void 0),
                            (this._sharedOptions = void 0),
                            (this._drawStart = void 0),
                            (this._drawCount = void 0),
                            (this.enableOptionSharing = !1),
                            (this.supportsDecimation = !1),
                            (this.$context = void 0),
                            (this._syncList = []),
                            (this.datasetElementType = new.target.datasetElementType),
                            (this.dataElementType = new.target.dataElementType),
                            this.initialize();
                    }
                    initialize() {
                        var t = this._cachedMeta;
                        this.configure(),
                            this.linkScales(),
                            (t._stacked = $i(t.vScale, t)),
                            this.addElements(),
                            this.options.fill &&
                                !this.chart.isPluginEnabled("filler") &&
                                console.warn("Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options");
                    }
                    updateIndex(t) {
                        this.index !== t && Zi(this._cachedMeta), (this.index = t);
                    }
                    linkScales() {
                        var t = this.chart,
                            e = this._cachedMeta,
                            i = this.getDataset(),
                            r = (t, e, i, r) => ("x" === t ? e : "r" === t ? r : i),
                            s = (e.xAxisID = U(i.xAxisID, Ki(t, "x"))),
                            a = (e.yAxisID = U(i.yAxisID, Ki(t, "y"))),
                            n = (e.rAxisID = U(i.rAxisID, Ki(t, "r"))),
                            o = e.indexAxis,
                            l = (e.iAxisID = r(o, s, a, n)),
                            h = (e.vAxisID = r(o, a, s, n));
                        (e.xScale = this.getScaleForId(s)), (e.yScale = this.getScaleForId(a)), (e.rScale = this.getScaleForId(n)), (e.iScale = this.getScaleForId(l)), (e.vScale = this.getScaleForId(h));
                    }
                    getDataset() {
                        return this.chart.data.datasets[this.index];
                    }
                    getMeta() {
                        return this.chart.getDatasetMeta(this.index);
                    }
                    getScaleForId(t) {
                        return this.chart.scales[t];
                    }
                    _getOtherScale(t) {
                        var e = this._cachedMeta;
                        return t === e.iScale ? e.vScale : e.iScale;
                    }
                    reset() {
                        this._update("reset");
                    }
                    _destroy() {
                        var t = this._cachedMeta;
                        this._data && Nt(this._data, this), t._stacked && Zi(t);
                    }
                    _dataCheck() {
                        var t,
                            e,
                            i = this.getDataset(),
                            r = i.data || (i.data = []),
                            s = this._data;
                        if (G(r))
                            this._data = (function (t) {
                                var e,
                                    i,
                                    r,
                                    s = Object.keys(t),
                                    a = new Array(s.length);
                                for (e = 0, i = s.length; e < i; ++e) (r = s[e]), (a[e] = { x: r, y: t[r] });
                                return a;
                            })(r);
                        else if (s !== r) {
                            if (s) {
                                Nt(s, this);
                                var a = this._cachedMeta;
                                Zi(a), (a._parsed = []);
                            }
                            r &&
                                Object.isExtensible(r) &&
                                ((e = this),
                                (t = r)._chartjs
                                    ? t._chartjs.listeners.push(e)
                                    : (Object.defineProperty(t, "_chartjs", { configurable: !0, enumerable: !1, value: { listeners: [e] } }),
                                      zt.forEach((e) => {
                                          var i = "_onData" + ot(e),
                                              r = t[e];
                                          Object.defineProperty(t, e, {
                                              configurable: !0,
                                              enumerable: !1,
                                              value(...e) {
                                                  var s = r.apply(this, e);
                                                  return (
                                                      t._chartjs.listeners.forEach((t) => {
                                                          "function" == typeof t[i] && t[i](...e);
                                                      }),
                                                      s
                                                  );
                                              },
                                          });
                                      }))),
                                (this._syncList = []),
                                (this._data = r);
                        }
                    }
                    addElements() {
                        var t = this._cachedMeta;
                        this._dataCheck(), this.datasetElementType && (t.dataset = new this.datasetElementType());
                    }
                    buildOrUpdateElements(t) {
                        var e = this._cachedMeta,
                            i = this.getDataset(),
                            r = !1;
                        this._dataCheck();
                        var s = e._stacked;
                        (e._stacked = $i(e.vScale, e)), e.stack !== i.stack && ((r = !0), Zi(e), (e.stack = i.stack)), this._resyncElements(t), (r || s !== e._stacked) && Xi(this, e._parsed);
                    }
                    configure() {
                        var t = this.chart.config,
                            e = t.datasetScopeKeys(this._type),
                            i = t.getOptionScopes(this.getDataset(), e, !0);
                        (this.options = t.createResolver(i, this.getContext())), (this._parsing = this.options.parsing), (this._cachedDataOpts = {});
                    }
                    parse(t, e) {
                        var i,
                            r,
                            s,
                            a = this._cachedMeta,
                            n = this._data,
                            o = a.iScale,
                            l = a._stacked,
                            h = o.axis,
                            c = (0 === t && e === n.length) || a._sorted,
                            d = t > 0 && a._parsed[t - 1];
                        if (!1 === this._parsing) (a._parsed = n), (a._sorted = !0), (s = n);
                        else {
                            s = W(n[t]) ? this.parseArrayData(a, n, t, e) : G(n[t]) ? this.parseObjectData(a, n, t, e) : this.parsePrimitiveData(a, n, t, e);
                            for (i = 0; i < e; ++i) (a._parsed[i + t] = r = s[i]), c && ((null === r[h] || (d && r[h] < d[h])) && (c = !1), (d = r));
                            a._sorted = c;
                        }
                        l && Xi(this, s);
                    }
                    parsePrimitiveData(t, e, i, r) {
                        var s,
                            a,
                            n,
                            o = t.iScale,
                            l = t.vScale,
                            h = o.axis,
                            c = l.axis,
                            d = o.getLabels(),
                            u = o === l,
                            p = new Array(r);
                        for (s = 0, a = r; s < a; ++s) (n = s + i), (p[s] = { [h]: u || o.parse(d[n], n), [c]: l.parse(e[n], n) });
                        return p;
                    }
                    parseArrayData(t, e, i, r) {
                        var s,
                            a,
                            n,
                            o,
                            l = t.xScale,
                            h = t.yScale,
                            c = new Array(r);
                        for (s = 0, a = r; s < a; ++s) (o = e[(n = s + i)]), (c[s] = { x: l.parse(o[0], n), y: h.parse(o[1], n) });
                        return c;
                    }
                    parseObjectData(t, e, i, r) {
                        var s,
                            a,
                            n,
                            o,
                            l = t.xScale,
                            h = t.yScale,
                            c = this._parsing,
                            d = c.xAxisKey,
                            u = void 0 === d ? "x" : d,
                            p = c.yAxisKey,
                            m = void 0 === p ? "y" : p,
                            f = new Array(r);
                        for (s = 0, a = r; s < a; ++s) (o = e[(n = s + i)]), (f[s] = { x: l.parse(nt(o, u), n), y: h.parse(nt(o, m), n) });
                        return f;
                    }
                    getParsed(t) {
                        return this._cachedMeta._parsed[t];
                    }
                    getDataElement(t) {
                        return this._cachedMeta.data[t];
                    }
                    applyStack(t, e, i) {
                        var r = this.chart,
                            s = this._cachedMeta,
                            a = e[t.axis];
                        return qi({ keys: Gi(r, !0), values: e._stacks[t.axis]._visualValues }, a, s.index, { mode: i });
                    }
                    updateRangeFromParsed(t, e, i, r) {
                        var s = i[e.axis],
                            a = null === s ? NaN : s,
                            n = r && i._stacks[e.axis];
                        r && n && ((r.values = n), (a = qi(r, s, this._cachedMeta.index))), (t.min = Math.min(t.min, a)), (t.max = Math.max(t.max, a));
                    }
                    getMinMax(t, e) {
                        var i,
                            r,
                            s = this._cachedMeta,
                            a = s._parsed,
                            n = s._sorted && t === s.iScale,
                            o = a.length,
                            l = this._getOtherScale(t),
                            h = ((t, e, i) => t && !e.hidden && e._stacked && { keys: Gi(i, !0), values: null })(e, s, this.chart),
                            c = { min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY },
                            d = (function (t) {
                                var e = t.getUserBounds(),
                                    i = e.min,
                                    r = e.max,
                                    s = e.minDefined,
                                    a = e.maxDefined;
                                return { min: s ? i : Number.NEGATIVE_INFINITY, max: a ? r : Number.POSITIVE_INFINITY };
                            })(l),
                            u = d.min,
                            p = d.max;
                        function m() {
                            var e = (r = a[i])[l.axis];
                            return !q(r[t.axis]) || u > e || p < e;
                        }
                        for (i = 0; i < o && (m() || (this.updateRangeFromParsed(c, t, r, h), !n)); ++i);
                        if (n)
                            for (i = o - 1; i >= 0; --i)
                                if (!m()) {
                                    this.updateRangeFromParsed(c, t, r, h);
                                    break;
                                }
                        return c;
                    }
                    getAllParsedValues(t) {
                        var e,
                            i,
                            r,
                            s = this._cachedMeta._parsed,
                            a = [];
                        for (e = 0, i = s.length; e < i; ++e) q((r = s[e][t.axis])) && a.push(r);
                        return a;
                    }
                    getMaxOverflow() {
                        return !1;
                    }
                    getLabelAndValue(t) {
                        var e = this._cachedMeta,
                            i = e.iScale,
                            r = e.vScale,
                            s = this.getParsed(t);
                        return { label: i ? "" + i.getLabelForValue(s[i.axis]) : "", value: r ? "" + r.getLabelForValue(s[r.axis]) : "" };
                    }
                    _update(t) {
                        var e,
                            i,
                            r,
                            s,
                            a,
                            n = this._cachedMeta;
                        this.update(t || "default"),
                            (n._clip =
                                (G(
                                    (e = U(
                                        this.options.clip,
                                        (function (t, e, i) {
                                            if (!1 === i) return !1;
                                            var r = Wi(t, i),
                                                s = Wi(e, i);
                                            return { top: s.end, right: r.end, bottom: s.start, left: r.start };
                                        })(n.xScale, n.yScale, this.getMaxOverflow())
                                    ))
                                )
                                    ? ((i = e.top), (r = e.right), (s = e.bottom), (a = e.left))
                                    : (i = r = s = a = e),
                                { top: i, right: r, bottom: s, left: a, disabled: !1 === e }));
                    }
                    update(t) {}
                    draw() {
                        var t,
                            e = this._ctx,
                            i = this.chart,
                            r = this._cachedMeta,
                            s = r.data || [],
                            a = i.chartArea,
                            n = [],
                            o = this._drawStart || 0,
                            l = this._drawCount || s.length - o,
                            h = this.options.drawActiveElementsOnTop;
                        for (r.dataset && r.dataset.draw(e, a, o, l), t = o; t < o + l; ++t) {
                            var c = s[t];
                            c.hidden || (c.active && h ? n.push(c) : c.draw(e, a));
                        }
                        for (t = 0; t < n.length; ++t) n[t].draw(e, a);
                    }
                    getStyle(t, e) {
                        var i = e ? "active" : "default";
                        return void 0 === t && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(i) : this.resolveDataElementOptions(t || 0, i);
                    }
                    getContext(t, e, i) {
                        var r,
                            s = this.getDataset();
                        if (t >= 0 && t < this._cachedMeta.data.length) {
                            var a = this._cachedMeta.data[t];
                            (r =
                                a.$context ||
                                (a.$context = (function (t, e, i) {
                                    return Be(t, { active: !1, dataIndex: e, parsed: void 0, raw: void 0, element: i, index: e, mode: "default", type: "data" });
                                })(this.getContext(), t, a))),
                                (r.parsed = this.getParsed(t)),
                                (r.raw = s.data[t]),
                                (r.index = r.dataIndex = t);
                        } else
                            (r =
                                this.$context ||
                                (this.$context = (function (t, e) {
                                    return Be(t, { active: !1, dataset: void 0, datasetIndex: e, index: e, mode: "default", type: "dataset" });
                                })(this.chart.getContext(), this.index))),
                                (r.dataset = s),
                                (r.index = r.datasetIndex = this.index);
                        return (r.active = !!e), (r.mode = i), r;
                    }
                    resolveDatasetElementOptions(t) {
                        return this._resolveElementOptions(this.datasetElementType.id, t);
                    }
                    resolveDataElementOptions(t, e) {
                        return this._resolveElementOptions(this.dataElementType.id, e, t);
                    }
                    _resolveElementOptions(t, e = "default", i) {
                        var r = "active" === e,
                            s = this._cachedDataOpts,
                            a = t + "-" + e,
                            n = s[a],
                            o = this.enableOptionSharing && lt(i);
                        if (n) return Qi(n, o);
                        var l = this.chart.config,
                            h = l.datasetElementScopeKeys(this._type, t),
                            c = r ? [`${t}Hover`, "hover", t, ""] : [t, ""],
                            d = l.getOptionScopes(this.getDataset(), h),
                            u = Object.keys(de.elements[t]),
                            p = l.resolveNamedOptions(d, u, () => this.getContext(i, r, e), c);
                        return p.$shared && ((p.$shared = o), (s[a] = Object.freeze(Qi(p, o)))), p;
                    }
                    _resolveAnimations(t, e, i) {
                        var r,
                            s = this.chart,
                            a = this._cachedDataOpts,
                            n = `animation-${e}`,
                            o = a[n];
                        if (o) return o;
                        if (!1 !== s.options.animation) {
                            var l = this.chart.config,
                                h = l.datasetAnimationScopeKeys(this._type, e),
                                c = l.getOptionScopes(this.getDataset(), h);
                            r = l.createResolver(c, this.getContext(t, i, e));
                        }
                        var d = new ji(s, r && r.animations);
                        return r && r._cacheable && (a[n] = Object.freeze(d)), d;
                    }
                    getSharedOptions(t) {
                        if (t.$shared) return this._sharedOptions || (this._sharedOptions = Object.assign({}, t));
                    }
                    includeOptions(t, e) {
                        return !e || Ji(t) || this.chart._animationsDisabled;
                    }
                    _getSharedOptions(t, e) {
                        var i = this.resolveDataElementOptions(t, e),
                            r = this._sharedOptions,
                            s = this.getSharedOptions(i),
                            a = this.includeOptions(e, s) || s !== r;
                        return this.updateSharedOptions(s, e, i), { sharedOptions: s, includeOptions: a };
                    }
                    updateElement(t, e, i, r) {
                        Ji(r) ? Object.assign(t, i) : this._resolveAnimations(e, r).update(t, i);
                    }
                    updateSharedOptions(t, e, i) {
                        t && !Ji(e) && this._resolveAnimations(void 0, e).update(t, i);
                    }
                    _setStyle(t, e, i, r) {
                        t.active = r;
                        var s = this.getStyle(e, r);
                        this._resolveAnimations(e, i, r).update(t, { options: (!r && this.getSharedOptions(s)) || s });
                    }
                    removeHoverStyle(t, e, i) {
                        this._setStyle(t, i, "active", !1);
                    }
                    setHoverStyle(t, e, i) {
                        this._setStyle(t, i, "active", !0);
                    }
                    _removeDatasetHoverStyle() {
                        var t = this._cachedMeta.dataset;
                        t && this._setStyle(t, void 0, "active", !1);
                    }
                    _setDatasetHoverStyle() {
                        var t = this._cachedMeta.dataset;
                        t && this._setStyle(t, void 0, "active", !0);
                    }
                    _resyncElements(t) {
                        var e,
                            i = this._data,
                            r = this._cachedMeta.data,
                            s = Ri(this._syncList);
                        try {
                            for (s.s(); !(e = s.n()).done; ) {
                                var a = Li(e.value, 3),
                                    n = a[0],
                                    o = a[1],
                                    l = a[2];
                                this[n](o, l);
                            }
                        } catch (t) {
                            s.e(t);
                        } finally {
                            s.f();
                        }
                        this._syncList = [];
                        var h = r.length,
                            c = i.length,
                            d = Math.min(c, h);
                        d && this.parse(0, d), c > h ? this._insertElements(h, c - h, t) : c < h && this._removeElements(c, h - c);
                    }
                    _insertElements(t, e, i = !0) {
                        var r,
                            s = this._cachedMeta,
                            a = s.data,
                            n = t + e,
                            o = (t) => {
                                for (t.length += e, r = t.length - 1; r >= n; r--) t[r] = t[r - e];
                            };
                        for (o(a), r = t; r < n; ++r) a[r] = new this.dataElementType();
                        this._parsing && o(s._parsed), this.parse(t, e), i && this.updateElements(a, t, e, "reset");
                    }
                    updateElements(t, e, i, r) {}
                    _removeElements(t, e) {
                        var i = this._cachedMeta;
                        if (this._parsing) {
                            var r = i._parsed.splice(t, e);
                            i._stacked && Zi(i, r);
                        }
                        i.data.splice(t, e);
                    }
                    _sync(t) {
                        if (this._parsing) this._syncList.push(t);
                        else {
                            var e = Li(t, 3),
                                i = e[0],
                                r = e[1],
                                s = e[2];
                            this[i](r, s);
                        }
                        this.chart._dataChanges.push([this.index, ...t]);
                    }
                    _onDataPush() {
                        var t = arguments.length;
                        this._sync(["_insertElements", this.getDataset().data.length - t, t]);
                    }
                    _onDataPop() {
                        this._sync(["_removeElements", this._cachedMeta.data.length - 1, 1]);
                    }
                    _onDataShift() {
                        this._sync(["_removeElements", 0, 1]);
                    }
                    _onDataSplice(t, e) {
                        e && this._sync(["_removeElements", t, e]);
                        var i = arguments.length - 2;
                        i && this._sync(["_insertElements", t, i]);
                    }
                    _onDataUnshift() {
                        this._sync(["_insertElements", 0, arguments.length]);
                    }
                }
                function er(t) {
                    var e,
                        i,
                        r,
                        s,
                        a = t.iScale,
                        n = (function (t, e) {
                            if (!t._cache.$bar) {
                                for (var i = t.getMatchingVisibleMetas(e), r = [], s = 0, a = i.length; s < a; s++) r = r.concat(i[s].controller.getAllParsedValues(t));
                                t._cache.$bar = Vt(r.sort((t, e) => t - e));
                            }
                            return t._cache.$bar;
                        })(a, t.type),
                        o = a._length,
                        l = () => {
                            32767 !== r && -32768 !== r && (lt(s) && (o = Math.min(o, Math.abs(r - s) || o)), (s = r));
                        };
                    for (e = 0, i = n.length; e < i; ++e) (r = a.getPixelForValue(n[e])), l();
                    for (s = void 0, e = 0, i = a.ticks.length; e < i; ++e) (r = a.getPixelForTick(e)), l();
                    return o;
                }
                function ir(t, e, i, r) {
                    return (
                        W(t)
                            ? (function (t, e, i, r) {
                                  var s = i.parse(t[0], r),
                                      a = i.parse(t[1], r),
                                      n = Math.min(s, a),
                                      o = Math.max(s, a),
                                      l = n,
                                      h = o;
                                  Math.abs(n) > Math.abs(o) && ((l = o), (h = n)), (e[i.axis] = h), (e._custom = { barStart: l, barEnd: h, start: s, end: a, min: n, max: o });
                              })(t, e, i, r)
                            : (e[i.axis] = i.parse(t, r)),
                        e
                    );
                }
                function rr(t, e, i, r) {
                    var s,
                        a,
                        n,
                        o,
                        l = t.iScale,
                        h = t.vScale,
                        c = l.getLabels(),
                        d = l === h,
                        u = [];
                    for (s = i, a = i + r; s < a; ++s) (o = e[s]), ((n = {})[l.axis] = d || l.parse(c[s], s)), u.push(ir(o, n, h, s));
                    return u;
                }
                function sr(t) {
                    return t && void 0 !== t.barStart && void 0 !== t.barEnd;
                }
                function ar(t, e, i, r) {
                    var s = e.borderSkipped,
                        a = {};
                    if (s)
                        if (!0 !== s) {
                            var n = (function (t) {
                                    var e, i, r, s, a;
                                    return (
                                        t.horizontal ? ((e = t.base > t.x), (i = "left"), (r = "right")) : ((e = t.base < t.y), (i = "bottom"), (r = "top")),
                                        e ? ((s = "end"), (a = "start")) : ((s = "start"), (a = "end")),
                                        { start: i, end: r, reverse: e, top: s, bottom: a }
                                    );
                                })(t),
                                o = n.start,
                                l = n.end,
                                h = n.reverse,
                                c = n.top,
                                d = n.bottom;
                            "middle" === s && i && ((t.enableBorderRadius = !0), (i._top || 0) === r ? (s = c) : (i._bottom || 0) === r ? (s = d) : ((a[nr(d, o, l, h)] = !0), (s = c))), (a[nr(s, o, l, h)] = !0), (t.borderSkipped = a);
                        } else t.borderSkipped = { top: !0, right: !0, bottom: !0, left: !0 };
                    else t.borderSkipped = a;
                }
                function nr(t, e, i, r) {
                    var s, a, n;
                    return r ? ((n = i), (t = or((t = (s = t) === (a = e) ? n : s === n ? a : s), i, e))) : (t = or(t, e, i)), t;
                }
                function or(t, e, i) {
                    return "start" === t ? e : "end" === t ? i : t;
                }
                function lr(t, { inflateAmount: e }, i) {
                    t.inflateAmount = "auto" === e ? (1 === i ? 0.33 : 0) : e;
                }
                Ii(tr, "defaults", {}), Ii(tr, "datasetElementType", null), Ii(tr, "dataElementType", null);
                class hr extends tr {
                    parsePrimitiveData(t, e, i, r) {
                        return rr(t, e, i, r);
                    }
                    parseArrayData(t, e, i, r) {
                        return rr(t, e, i, r);
                    }
                    parseObjectData(t, e, i, r) {
                        var s,
                            a,
                            n,
                            o,
                            l = t.iScale,
                            h = t.vScale,
                            c = this._parsing,
                            d = c.xAxisKey,
                            u = void 0 === d ? "x" : d,
                            p = c.yAxisKey,
                            m = void 0 === p ? "y" : p,
                            f = "x" === l.axis ? u : m,
                            g = "x" === h.axis ? u : m,
                            v = [];
                        for (s = i, a = i + r; s < a; ++s) (o = e[s]), ((n = {})[l.axis] = l.parse(nt(o, f), s)), v.push(ir(nt(o, g), n, h, s));
                        return v;
                    }
                    updateRangeFromParsed(t, e, i, r) {
                        super.updateRangeFromParsed(t, e, i, r);
                        var s = i._custom;
                        s && e === this._cachedMeta.vScale && ((t.min = Math.min(t.min, s.min)), (t.max = Math.max(t.max, s.max)));
                    }
                    getMaxOverflow() {
                        return 0;
                    }
                    getLabelAndValue(t) {
                        var e = this._cachedMeta,
                            i = e.iScale,
                            r = e.vScale,
                            s = this.getParsed(t),
                            a = s._custom,
                            n = sr(a) ? "[" + a.start + ", " + a.end + "]" : "" + r.getLabelForValue(s[r.axis]);
                        return { label: "" + i.getLabelForValue(s[i.axis]), value: n };
                    }
                    initialize() {
                        (this.enableOptionSharing = !0), super.initialize(), (this._cachedMeta.stack = this.getDataset().stack);
                    }
                    update(t) {
                        var e = this._cachedMeta;
                        this.updateElements(e.data, 0, e.data.length, t);
                    }
                    updateElements(t, e, i, r) {
                        for (
                            var s = "reset" === r,
                                a = this.index,
                                n = this._cachedMeta.vScale,
                                o = n.getBasePixel(),
                                l = n.isHorizontal(),
                                h = this._getRuler(),
                                c = this._getSharedOptions(e, r),
                                d = c.sharedOptions,
                                u = c.includeOptions,
                                p = e;
                            p < e + i;
                            p++
                        ) {
                            var m = this.getParsed(p),
                                f = s || j(m[n.axis]) ? { base: o, head: o } : this._calculateBarValuePixels(p),
                                g = this._calculateBarIndexPixels(p, h),
                                v = (m._stacks || {})[n.axis],
                                b = {
                                    horizontal: l,
                                    base: f.base,
                                    enableBorderRadius: !v || sr(m._custom) || a === v._top || a === v._bottom,
                                    x: l ? f.head : g.center,
                                    y: l ? g.center : f.head,
                                    height: l ? g.size : Math.abs(f.size),
                                    width: l ? Math.abs(f.size) : g.size,
                                };
                            u && (b.options = d || this.resolveDataElementOptions(p, t[p].active ? "active" : r));
                            var y = b.options || t[p].options;
                            ar(b, y, v, a), lr(b, y, h.ratio), this.updateElement(t[p], p, b, r);
                        }
                    }
                    _getStacks(t, e) {
                        var i,
                            r = this._cachedMeta.iScale,
                            s = r.getMatchingVisibleMetas(this._type).filter((t) => t.controller.options.grouped),
                            a = r.options.stacked,
                            n = [],
                            o = (t) => {
                                var i = t.controller.getParsed(e),
                                    r = i && i[t.vScale.axis];
                                if (j(r) || isNaN(r)) return !0;
                            },
                            l = Ri(s);
                        try {
                            for (l.s(); !(i = l.n()).done; ) {
                                var h = i.value;
                                if ((void 0 === e || !o(h)) && ((!1 === a || -1 === n.indexOf(h.stack) || (void 0 === a && void 0 === h.stack)) && n.push(h.stack), h.index === t)) break;
                            }
                        } catch (t) {
                            l.e(t);
                        } finally {
                            l.f();
                        }
                        return n.length || n.push(void 0), n;
                    }
                    _getStackCount(t) {
                        return this._getStacks(void 0, t).length;
                    }
                    _getStackIndex(t, e, i) {
                        var r = this._getStacks(t, i),
                            s = void 0 !== e ? r.indexOf(e) : -1;
                        return -1 === s ? r.length - 1 : s;
                    }
                    _getRuler() {
                        var t,
                            e,
                            i = this.options,
                            r = this._cachedMeta,
                            s = r.iScale,
                            a = [];
                        for (t = 0, e = r.data.length; t < e; ++t) a.push(s.getPixelForValue(this.getParsed(t)[s.axis], t));
                        var n = i.barThickness;
                        return { min: n || er(r), pixels: a, start: s._startPixel, end: s._endPixel, stackCount: this._getStackCount(), scale: s, grouped: i.grouped, ratio: n ? 1 : i.categoryPercentage * i.barPercentage };
                    }
                    _calculateBarValuePixels(t) {
                        var e,
                            i,
                            r = this._cachedMeta,
                            s = r.vScale,
                            a = r._stacked,
                            n = r.index,
                            o = this.options,
                            l = o.base,
                            h = o.minBarLength,
                            c = l || 0,
                            d = this.getParsed(t),
                            u = d._custom,
                            p = sr(u),
                            m = d[s.axis],
                            f = 0,
                            g = a ? this.applyStack(s, d, a) : m;
                        g !== m && ((f = g - m), (g = m)), p && ((m = u.barStart), (g = u.barEnd - u.barStart), 0 !== m && wt(m) !== wt(u.barEnd) && (f = 0), (f += m));
                        var v = j(l) || p ? f : l,
                            b = s.getPixelForValue(v);
                        if (((i = (e = this.chart.getDataVisibility(t) ? s.getPixelForValue(f + g) : b) - b), Math.abs(i) < h)) {
                            (i =
                                (function (t, e, i) {
                                    return 0 !== t ? wt(t) : (e.isHorizontal() ? 1 : -1) * (e.min >= i ? 1 : -1);
                                })(i, s, c) * h),
                                m === c && (b -= i / 2);
                            var y = s.getPixelForDecimal(0),
                                w = s.getPixelForDecimal(1),
                                x = Math.min(y, w),
                                E = Math.max(y, w);
                            (e = (b = Math.max(Math.min(b, E), x)) + i), a && !p && (d._stacks[s.axis]._visualValues[n] = s.getValueForPixel(e) - s.getValueForPixel(b));
                        }
                        if (b === s.getPixelForValue(c)) {
                            var C = (wt(i) * s.getLineWidthForValue(c)) / 2;
                            (b += C), (i -= C);
                        }
                        return { size: i, base: b, head: e, center: e + i / 2 };
                    }
                    _calculateBarIndexPixels(t, e) {
                        var i,
                            r,
                            s = e.scale,
                            a = this.options,
                            n = a.skipNull,
                            o = U(a.maxBarThickness, 1 / 0);
                        if (e.grouped) {
                            var l = n ? this._getStackCount(t) : e.stackCount,
                                h =
                                    "flex" === a.barThickness
                                        ? (function (t, e, i, r) {
                                              var s = e.pixels,
                                                  a = s[t],
                                                  n = t > 0 ? s[t - 1] : null,
                                                  o = t < s.length - 1 ? s[t + 1] : null,
                                                  l = i.categoryPercentage;
                                              null === n && (n = a - (null === o ? e.end - e.start : o - a)), null === o && (o = a + a - n);
                                              var h = a - ((a - Math.min(n, o)) / 2) * l;
                                              return { chunk: ((Math.abs(o - n) / 2) * l) / r, ratio: i.barPercentage, start: h };
                                          })(t, e, a, l)
                                        : (function (t, e, i, r) {
                                              var s,
                                                  a,
                                                  n = i.barThickness;
                                              return j(n) ? ((s = e.min * i.categoryPercentage), (a = i.barPercentage)) : ((s = n * r), (a = 1)), { chunk: s / r, ratio: a, start: e.pixels[t] - s / 2 };
                                          })(t, e, a, l),
                                c = this._getStackIndex(this.index, this._cachedMeta.stack, n ? t : void 0);
                            (i = h.start + h.chunk * c + h.chunk / 2), (r = Math.min(o, h.chunk * h.ratio));
                        } else (i = s.getPixelForValue(this.getParsed(t)[s.axis], t)), (r = Math.min(o, e.min * e.ratio));
                        return { base: i - r / 2, head: i + r / 2, center: i, size: r };
                    }
                    draw() {
                        for (var t = this._cachedMeta, e = t.vScale, i = t.data, r = i.length, s = 0; s < r; ++s) null !== this.getParsed(s)[e.axis] && i[s].draw(this._ctx);
                    }
                }
                Ii(hr, "id", "bar"),
                    Ii(hr, "defaults", {
                        datasetElementType: !1,
                        dataElementType: "bar",
                        categoryPercentage: 0.8,
                        barPercentage: 0.9,
                        grouped: !0,
                        animations: { numbers: { type: "number", properties: ["x", "y", "base", "width", "height"] } },
                    }),
                    Ii(hr, "overrides", { scales: { _index_: { type: "category", offset: !0, grid: { offset: !0 } }, _value_: { type: "linear", beginAtZero: !0 } } });
                class cr extends tr {
                    initialize() {
                        (this.enableOptionSharing = !0), super.initialize();
                    }
                    parsePrimitiveData(t, e, i, r) {
                        for (var s = super.parsePrimitiveData(t, e, i, r), a = 0; a < s.length; a++) s[a]._custom = this.resolveDataElementOptions(a + i).radius;
                        return s;
                    }
                    parseArrayData(t, e, i, r) {
                        for (var s = super.parseArrayData(t, e, i, r), a = 0; a < s.length; a++) {
                            var n = e[i + a];
                            s[a]._custom = U(n[2], this.resolveDataElementOptions(a + i).radius);
                        }
                        return s;
                    }
                    parseObjectData(t, e, i, r) {
                        for (var s = super.parseObjectData(t, e, i, r), a = 0; a < s.length; a++) {
                            var n = e[i + a];
                            s[a]._custom = U(n && n.r && +n.r, this.resolveDataElementOptions(a + i).radius);
                        }
                        return s;
                    }
                    getMaxOverflow() {
                        for (var t = this._cachedMeta.data, e = 0, i = t.length - 1; i >= 0; --i) e = Math.max(e, t[i].size(this.resolveDataElementOptions(i)) / 2);
                        return e > 0 && e;
                    }
                    getLabelAndValue(t) {
                        var e = this._cachedMeta,
                            i = this.chart.data.labels || [],
                            r = e.xScale,
                            s = e.yScale,
                            a = this.getParsed(t),
                            n = r.getLabelForValue(a.x),
                            o = s.getLabelForValue(a.y),
                            l = a._custom;
                        return { label: i[t] || "", value: "(" + n + ", " + o + (l ? ", " + l : "") + ")" };
                    }
                    update(t) {
                        var e = this._cachedMeta.data;
                        this.updateElements(e, 0, e.length, t);
                    }
                    updateElements(t, e, i, r) {
                        for (var s = "reset" === r, a = this._cachedMeta, n = a.iScale, o = a.vScale, l = this._getSharedOptions(e, r), h = l.sharedOptions, c = l.includeOptions, d = n.axis, u = o.axis, p = e; p < e + i; p++) {
                            var m = t[p],
                                f = !s && this.getParsed(p),
                                g = {},
                                v = (g[d] = s ? n.getPixelForDecimal(0.5) : n.getPixelForValue(f[d])),
                                b = (g[u] = s ? o.getBasePixel() : o.getPixelForValue(f[u]));
                            (g.skip = isNaN(v) || isNaN(b)), c && ((g.options = h || this.resolveDataElementOptions(p, m.active ? "active" : r)), s && (g.options.radius = 0)), this.updateElement(m, p, g, r);
                        }
                    }
                    resolveDataElementOptions(t, e) {
                        var i = this.getParsed(t),
                            r = super.resolveDataElementOptions(t, e);
                        r.$shared && (r = Object.assign({}, r, { $shared: !1 }));
                        var s = r.radius;
                        return "active" !== e && (r.radius = 0), (r.radius += U(i && i._custom, s)), r;
                    }
                }
                Ii(cr, "id", "bubble"),
                    Ii(cr, "defaults", { datasetElementType: !1, dataElementType: "point", animations: { numbers: { type: "number", properties: ["x", "y", "borderWidth", "radius"] } } }),
                    Ii(cr, "overrides", { scales: { x: { type: "linear" }, y: { type: "linear" } } });
                class dr extends tr {
                    constructor(t, e) {
                        super(t, e), (this.enableOptionSharing = !0), (this.innerRadius = void 0), (this.outerRadius = void 0), (this.offsetX = void 0), (this.offsetY = void 0);
                    }
                    linkScales() {}
                    parse(t, e) {
                        var i = this.getDataset().data,
                            r = this._cachedMeta;
                        if (!1 === this._parsing) r._parsed = i;
                        else {
                            var s,
                                a,
                                n = (t) => +i[t];
                            if (G(i[t])) {
                                var o = this._parsing.key,
                                    l = void 0 === o ? "value" : o;
                                n = (t) => +nt(i[t], l);
                            }
                            for (s = t, a = t + e; s < a; ++s) r._parsed[s] = n(s);
                        }
                    }
                    _getRotation() {
                        return Tt(this.options.rotation - 90);
                    }
                    _getCircumference() {
                        return Tt(this.options.circumference);
                    }
                    _getRotationExtents() {
                        for (var t = ut, e = -ut, i = 0; i < this.chart.data.datasets.length; ++i)
                            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {
                                var r = this.chart.getDatasetMeta(i).controller,
                                    s = r._getRotation(),
                                    a = r._getCircumference();
                                (t = Math.min(t, s)), (e = Math.max(e, s + a));
                            }
                        return { rotation: t, circumference: e - t };
                    }
                    update(t) {
                        var e,
                            i,
                            r = this.chart.chartArea,
                            s = this._cachedMeta,
                            a = s.data,
                            n = this.getMaxBorderWidth() + this.getMaxOffset(a) + this.options.spacing,
                            o = Math.max((Math.min(r.width, r.height) - n) / 2, 0),
                            l = Math.min(((e = this.options.cutout), (i = o), "string" == typeof e && e.endsWith("%") ? parseFloat(e) / 100 : +e / i), 1),
                            h = this._getRingWeight(this.index),
                            c = this._getRotationExtents(),
                            d = c.circumference,
                            u = (function (t, e, i) {
                                var r = 1,
                                    s = 1,
                                    a = 0,
                                    n = 0;
                                if (e < ut) {
                                    var o = t,
                                        l = o + e,
                                        h = Math.cos(o),
                                        c = Math.sin(o),
                                        d = Math.cos(l),
                                        u = Math.sin(l),
                                        p = (t, e, r) => (Lt(t, o, l, !0) ? 1 : Math.max(e, e * i, r, r * i)),
                                        m = (t, e, r) => (Lt(t, o, l, !0) ? -1 : Math.min(e, e * i, r, r * i)),
                                        f = p(0, h, d),
                                        g = p(gt, c, u),
                                        v = m(dt, h, d),
                                        b = m(dt + gt, c, u);
                                    (r = (f - v) / 2), (s = (g - b) / 2), (a = -(f + v) / 2), (n = -(g + b) / 2);
                                }
                                return { ratioX: r, ratioY: s, offsetX: a, offsetY: n };
                            })(c.rotation, d, l),
                            p = u.ratioX,
                            m = u.ratioY,
                            f = u.offsetX,
                            g = u.offsetY,
                            v = (r.width - n) / p,
                            b = (r.height - n) / m,
                            y = Math.max(Math.min(v, b) / 2, 0),
                            w = Y(this.options.radius, y),
                            x = (w - Math.max(w * l, 0)) / this._getVisibleDatasetWeightTotal();
                        (this.offsetX = f * w),
                            (this.offsetY = g * w),
                            (s.total = this.calculateTotal()),
                            (this.outerRadius = w - x * this._getRingWeightOffset(this.index)),
                            (this.innerRadius = Math.max(this.outerRadius - x * h, 0)),
                            this.updateElements(a, 0, a.length, t);
                    }
                    _circumference(t, e) {
                        var i = this.options,
                            r = this._cachedMeta,
                            s = this._getCircumference();
                        return (e && i.animation.animateRotate) || !this.chart.getDataVisibility(t) || null === r._parsed[t] || r.data[t].hidden ? 0 : this.calculateCircumference((r._parsed[t] * s) / ut);
                    }
                    updateElements(t, e, i, r) {
                        var s,
                            a = "reset" === r,
                            n = this.chart,
                            o = n.chartArea,
                            l = n.options.animation,
                            h = (o.left + o.right) / 2,
                            c = (o.top + o.bottom) / 2,
                            d = a && l.animateScale,
                            u = d ? 0 : this.innerRadius,
                            p = d ? 0 : this.outerRadius,
                            m = this._getSharedOptions(e, r),
                            f = m.sharedOptions,
                            g = m.includeOptions,
                            v = this._getRotation();
                        for (s = 0; s < e; ++s) v += this._circumference(s, a);
                        for (s = e; s < e + i; ++s) {
                            var b = this._circumference(s, a),
                                y = t[s],
                                w = { x: h + this.offsetX, y: c + this.offsetY, startAngle: v, endAngle: v + b, circumference: b, outerRadius: p, innerRadius: u };
                            g && (w.options = f || this.resolveDataElementOptions(s, y.active ? "active" : r)), (v += b), this.updateElement(y, s, w, r);
                        }
                    }
                    calculateTotal() {
                        var t,
                            e = this._cachedMeta,
                            i = e.data,
                            r = 0;
                        for (t = 0; t < i.length; t++) {
                            var s = e._parsed[t];
                            null === s || isNaN(s) || !this.chart.getDataVisibility(t) || i[t].hidden || (r += Math.abs(s));
                        }
                        return r;
                    }
                    calculateCircumference(t) {
                        var e = this._cachedMeta.total;
                        return e > 0 && !isNaN(t) ? ut * (Math.abs(t) / e) : 0;
                    }
                    getLabelAndValue(t) {
                        var e = this._cachedMeta,
                            i = this.chart,
                            r = i.data.labels || [],
                            s = re(e._parsed[t], i.options.locale);
                        return { label: r[t] || "", value: s };
                    }
                    getMaxBorderWidth(t) {
                        var e,
                            i,
                            r,
                            s,
                            a,
                            n = 0,
                            o = this.chart;
                        if (!t)
                            for (e = 0, i = o.data.datasets.length; e < i; ++e)
                                if (o.isDatasetVisible(e)) {
                                    (t = (r = o.getDatasetMeta(e)).data), (s = r.controller);
                                    break;
                                }
                        if (!t) return 0;
                        for (e = 0, i = t.length; e < i; ++e) "inner" !== (a = s.resolveDataElementOptions(e)).borderAlign && (n = Math.max(n, a.borderWidth || 0, a.hoverBorderWidth || 0));
                        return n;
                    }
                    getMaxOffset(t) {
                        for (var e = 0, i = 0, r = t.length; i < r; ++i) {
                            var s = this.resolveDataElementOptions(i);
                            e = Math.max(e, s.offset || 0, s.hoverOffset || 0);
                        }
                        return e;
                    }
                    _getRingWeightOffset(t) {
                        for (var e = 0, i = 0; i < t; ++i) this.chart.isDatasetVisible(i) && (e += this._getRingWeight(i));
                        return e;
                    }
                    _getRingWeight(t) {
                        return Math.max(U(this.chart.data.datasets[t].weight, 1), 0);
                    }
                    _getVisibleDatasetWeightTotal() {
                        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;
                    }
                }
                Ii(dr, "id", "doughnut"),
                    Ii(dr, "defaults", {
                        datasetElementType: !1,
                        dataElementType: "arc",
                        animation: { animateRotate: !0, animateScale: !1 },
                        animations: { numbers: { type: "number", properties: ["circumference", "endAngle", "innerRadius", "outerRadius", "startAngle", "x", "y", "offset", "borderWidth", "spacing"] } },
                        cutout: "50%",
                        rotation: 0,
                        circumference: 360,
                        radius: "100%",
                        spacing: 0,
                        indexAxis: "r",
                    }),
                    Ii(dr, "descriptors", { _scriptable: (t) => "spacing" !== t, _indexable: (t) => "spacing" !== t && !t.startsWith("borderDash") && !t.startsWith("hoverBorderDash") }),
                    Ii(dr, "overrides", {
                        aspectRatio: 1,
                        plugins: {
                            legend: {
                                labels: {
                                    generateLabels(t) {
                                        var e = t.data;
                                        if (e.labels.length && e.datasets.length) {
                                            var i = t.legend.options.labels,
                                                r = i.pointStyle,
                                                s = i.color;
                                            return e.labels.map((e, i) => {
                                                var a = t.getDatasetMeta(0).controller.getStyle(i);
                                                return { text: e, fillStyle: a.backgroundColor, strokeStyle: a.borderColor, fontColor: s, lineWidth: a.borderWidth, pointStyle: r, hidden: !t.getDataVisibility(i), index: i };
                                            });
                                        }
                                        return [];
                                    },
                                },
                                onClick(t, e, i) {
                                    i.chart.toggleDataVisibility(e.index), i.chart.update();
                                },
                            },
                        },
                    });
                class ur extends tr {
                    initialize() {
                        (this.enableOptionSharing = !0), (this.supportsDecimation = !0), super.initialize();
                    }
                    update(t) {
                        var e = this._cachedMeta,
                            i = e.dataset,
                            r = e.data,
                            s = void 0 === r ? [] : r,
                            a = e._dataset,
                            n = this.chart._animationsDisabled,
                            o = qt(e, s, n),
                            l = o.start,
                            h = o.count;
                        (this._drawStart = l), (this._drawCount = h), $t(e) && ((l = 0), (h = s.length)), (i._chart = this.chart), (i._datasetIndex = this.index), (i._decimated = !!a._decimated), (i.points = s);
                        var c = this.resolveDatasetElementOptions(t);
                        this.options.showLine || (c.borderWidth = 0), (c.segment = this.options.segment), this.updateElement(i, void 0, { animated: !n, options: c }, t), this.updateElements(s, l, h, t);
                    }
                    updateElements(t, e, i, r) {
                        for (
                            var s = "reset" === r,
                                a = this._cachedMeta,
                                n = a.iScale,
                                o = a.vScale,
                                l = a._stacked,
                                h = a._dataset,
                                c = this._getSharedOptions(e, r),
                                d = c.sharedOptions,
                                u = c.includeOptions,
                                p = n.axis,
                                m = o.axis,
                                f = this.options,
                                g = f.spanGaps,
                                v = f.segment,
                                b = Ct(g) ? g : Number.POSITIVE_INFINITY,
                                y = this.chart._animationsDisabled || s || "none" === r,
                                w = e + i,
                                x = t.length,
                                E = e > 0 && this.getParsed(e - 1),
                                C = 0;
                            C < x;
                            ++C
                        ) {
                            var S = t[C],
                                T = y ? S : {};
                            if (C < e || C >= w) T.skip = !0;
                            else {
                                var _ = this.getParsed(C),
                                    M = j(_[m]),
                                    P = (T[p] = n.getPixelForValue(_[p], C)),
                                    k = (T[m] = s || M ? o.getBasePixel() : o.getPixelForValue(l ? this.applyStack(o, _, l) : _[m], C));
                                (T.skip = isNaN(P) || isNaN(k) || M),
                                    (T.stop = C > 0 && Math.abs(_[p] - E[p]) > b),
                                    v && ((T.parsed = _), (T.raw = h.data[C])),
                                    u && (T.options = d || this.resolveDataElementOptions(C, S.active ? "active" : r)),
                                    y || this.updateElement(S, C, T, r),
                                    (E = _);
                            }
                        }
                    }
                    getMaxOverflow() {
                        var t = this._cachedMeta,
                            e = t.dataset,
                            i = (e.options && e.options.borderWidth) || 0,
                            r = t.data || [];
                        if (!r.length) return i;
                        var s = r[0].size(this.resolveDataElementOptions(0)),
                            a = r[r.length - 1].size(this.resolveDataElementOptions(r.length - 1));
                        return Math.max(i, s, a) / 2;
                    }
                    draw() {
                        var t = this._cachedMeta;
                        t.dataset.updateControlPoints(this.chart.chartArea, t.iScale.axis), super.draw();
                    }
                }
                Ii(ur, "id", "line"), Ii(ur, "defaults", { datasetElementType: "line", dataElementType: "point", showLine: !0, spanGaps: !1 }), Ii(ur, "overrides", { scales: { _index_: { type: "category" }, _value_: { type: "linear" } } });
                class pr extends tr {
                    constructor(t, e) {
                        super(t, e), (this.innerRadius = void 0), (this.outerRadius = void 0);
                    }
                    getLabelAndValue(t) {
                        var e = this._cachedMeta,
                            i = this.chart,
                            r = i.data.labels || [],
                            s = re(e._parsed[t].r, i.options.locale);
                        return { label: r[t] || "", value: s };
                    }
                    parseObjectData(t, e, i, r) {
                        return Ze.bind(this)(t, e, i, r);
                    }
                    update(t) {
                        var e = this._cachedMeta.data;
                        this._updateRadius(), this.updateElements(e, 0, e.length, t);
                    }
                    getMinMax() {
                        var t = this._cachedMeta,
                            e = { min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY };
                        return (
                            t.data.forEach((t, i) => {
                                var r = this.getParsed(i).r;
                                !isNaN(r) && this.chart.getDataVisibility(i) && (r < e.min && (e.min = r), r > e.max && (e.max = r));
                            }),
                            e
                        );
                    }
                    _updateRadius() {
                        var t = this.chart,
                            e = t.chartArea,
                            i = t.options,
                            r = Math.min(e.right - e.left, e.bottom - e.top),
                            s = Math.max(r / 2, 0),
                            a = (s - Math.max(i.cutoutPercentage ? (s / 100) * i.cutoutPercentage : 1, 0)) / t.getVisibleDatasetCount();
                        (this.outerRadius = s - a * this.index), (this.innerRadius = this.outerRadius - a);
                    }
                    updateElements(t, e, i, r) {
                        var s,
                            a = "reset" === r,
                            n = this.chart,
                            o = n.options.animation,
                            l = this._cachedMeta.rScale,
                            h = l.xCenter,
                            c = l.yCenter,
                            d = l.getIndexAngle(0) - 0.5 * dt,
                            u = d,
                            p = 360 / this.countVisibleElements();
                        for (s = 0; s < e; ++s) u += this._computeAngle(s, r, p);
                        for (s = e; s < e + i; s++) {
                            var m = t[s],
                                f = u,
                                g = u + this._computeAngle(s, r, p),
                                v = n.getDataVisibility(s) ? l.getDistanceFromCenterForValue(this.getParsed(s).r) : 0;
                            (u = g), a && (o.animateScale && (v = 0), o.animateRotate && (f = g = d));
                            var b = { x: h, y: c, innerRadius: 0, outerRadius: v, startAngle: f, endAngle: g, options: this.resolveDataElementOptions(s, m.active ? "active" : r) };
                            this.updateElement(m, s, b, r);
                        }
                    }
                    countVisibleElements() {
                        var t = this._cachedMeta,
                            e = 0;
                        return (
                            t.data.forEach((t, i) => {
                                !isNaN(this.getParsed(i).r) && this.chart.getDataVisibility(i) && e++;
                            }),
                            e
                        );
                    }
                    _computeAngle(t, e, i) {
                        return this.chart.getDataVisibility(t) ? Tt(this.resolveDataElementOptions(t, e).angle || i) : 0;
                    }
                }
                Ii(pr, "id", "polarArea"),
                    Ii(pr, "defaults", {
                        dataElementType: "arc",
                        animation: { animateRotate: !0, animateScale: !0 },
                        animations: { numbers: { type: "number", properties: ["x", "y", "startAngle", "endAngle", "innerRadius", "outerRadius"] } },
                        indexAxis: "r",
                        startAngle: 0,
                    }),
                    Ii(pr, "overrides", {
                        aspectRatio: 1,
                        plugins: {
                            legend: {
                                labels: {
                                    generateLabels(t) {
                                        var e = t.data;
                                        if (e.labels.length && e.datasets.length) {
                                            var i = t.legend.options.labels,
                                                r = i.pointStyle,
                                                s = i.color;
                                            return e.labels.map((e, i) => {
                                                var a = t.getDatasetMeta(0).controller.getStyle(i);
                                                return { text: e, fillStyle: a.backgroundColor, strokeStyle: a.borderColor, fontColor: s, lineWidth: a.borderWidth, pointStyle: r, hidden: !t.getDataVisibility(i), index: i };
                                            });
                                        }
                                        return [];
                                    },
                                },
                                onClick(t, e, i) {
                                    i.chart.toggleDataVisibility(e.index), i.chart.update();
                                },
                            },
                        },
                        scales: { r: { type: "radialLinear", angleLines: { display: !1 }, beginAtZero: !0, grid: { circular: !0 }, pointLabels: { display: !1 }, startAngle: 0 } },
                    });
                class mr extends dr {}
                Ii(mr, "id", "pie"), Ii(mr, "defaults", { cutout: 0, rotation: 0, circumference: 360, radius: "100%" });
                class fr extends tr {
                    getLabelAndValue(t) {
                        var e = this._cachedMeta.vScale,
                            i = this.getParsed(t);
                        return { label: e.getLabels()[t], value: "" + e.getLabelForValue(i[e.axis]) };
                    }
                    parseObjectData(t, e, i, r) {
                        return Ze.bind(this)(t, e, i, r);
                    }
                    update(t) {
                        var e = this._cachedMeta,
                            i = e.dataset,
                            r = e.data || [],
                            s = e.iScale.getLabels();
                        if (((i.points = r), "resize" !== t)) {
                            var a = this.resolveDatasetElementOptions(t);
                            this.options.showLine || (a.borderWidth = 0);
                            var n = { _loop: !0, _fullLoop: s.length === r.length, options: a };
                            this.updateElement(i, void 0, n, t);
                        }
                        this.updateElements(r, 0, r.length, t);
                    }
                    updateElements(t, e, i, r) {
                        for (var s = this._cachedMeta.rScale, a = "reset" === r, n = e; n < e + i; n++) {
                            var o = t[n],
                                l = this.resolveDataElementOptions(n, o.active ? "active" : r),
                                h = s.getPointPositionForValue(n, this.getParsed(n).r),
                                c = a ? s.xCenter : h.x,
                                d = a ? s.yCenter : h.y,
                                u = { x: c, y: d, angle: h.angle, skip: isNaN(c) || isNaN(d), options: l };
                            this.updateElement(o, n, u, r);
                        }
                    }
                }
                Ii(fr, "id", "radar"),
                    Ii(fr, "defaults", { datasetElementType: "line", dataElementType: "point", indexAxis: "r", showLine: !0, elements: { line: { fill: "start" } } }),
                    Ii(fr, "overrides", { aspectRatio: 1, scales: { r: { type: "radialLinear" } } });
                class gr extends tr {
                    getLabelAndValue(t) {
                        var e = this._cachedMeta,
                            i = this.chart.data.labels || [],
                            r = e.xScale,
                            s = e.yScale,
                            a = this.getParsed(t),
                            n = r.getLabelForValue(a.x),
                            o = s.getLabelForValue(a.y);
                        return { label: i[t] || "", value: "(" + n + ", " + o + ")" };
                    }
                    update(t) {
                        var e = this._cachedMeta,
                            i = e.data,
                            r = void 0 === i ? [] : i,
                            s = this.chart._animationsDisabled,
                            a = qt(e, r, s),
                            n = a.start,
                            o = a.count;
                        if (((this._drawStart = n), (this._drawCount = o), $t(e) && ((n = 0), (o = r.length)), this.options.showLine)) {
                            this.datasetElementType || this.addElements();
                            var l = e.dataset,
                                h = e._dataset;
                            (l._chart = this.chart), (l._datasetIndex = this.index), (l._decimated = !!h._decimated), (l.points = r);
                            var c = this.resolveDatasetElementOptions(t);
                            (c.segment = this.options.segment), this.updateElement(l, void 0, { animated: !s, options: c }, t);
                        } else this.datasetElementType && (delete e.dataset, (this.datasetElementType = !1));
                        this.updateElements(r, n, o, t);
                    }
                    addElements() {
                        var t = this.options.showLine;
                        !this.datasetElementType && t && (this.datasetElementType = this.chart.registry.getElement("line")), super.addElements();
                    }
                    updateElements(t, e, i, r) {
                        for (
                            var s = "reset" === r,
                                a = this._cachedMeta,
                                n = a.iScale,
                                o = a.vScale,
                                l = a._stacked,
                                h = a._dataset,
                                c = this.resolveDataElementOptions(e, r),
                                d = this.getSharedOptions(c),
                                u = this.includeOptions(r, d),
                                p = n.axis,
                                m = o.axis,
                                f = this.options,
                                g = f.spanGaps,
                                v = f.segment,
                                b = Ct(g) ? g : Number.POSITIVE_INFINITY,
                                y = this.chart._animationsDisabled || s || "none" === r,
                                w = e > 0 && this.getParsed(e - 1),
                                x = e;
                            x < e + i;
                            ++x
                        ) {
                            var E = t[x],
                                C = this.getParsed(x),
                                S = y ? E : {},
                                T = j(C[m]),
                                _ = (S[p] = n.getPixelForValue(C[p], x)),
                                M = (S[m] = s || T ? o.getBasePixel() : o.getPixelForValue(l ? this.applyStack(o, C, l) : C[m], x));
                            (S.skip = isNaN(_) || isNaN(M) || T),
                                (S.stop = x > 0 && Math.abs(C[p] - w[p]) > b),
                                v && ((S.parsed = C), (S.raw = h.data[x])),
                                u && (S.options = d || this.resolveDataElementOptions(x, E.active ? "active" : r)),
                                y || this.updateElement(E, x, S, r),
                                (w = C);
                        }
                        this.updateSharedOptions(d, r, c);
                    }
                    getMaxOverflow() {
                        var t = this._cachedMeta,
                            e = t.data || [];
                        if (!this.options.showLine) {
                            for (var i = 0, r = e.length - 1; r >= 0; --r) i = Math.max(i, e[r].size(this.resolveDataElementOptions(r)) / 2);
                            return i > 0 && i;
                        }
                        var s = t.dataset,
                            a = (s.options && s.options.borderWidth) || 0;
                        if (!e.length) return a;
                        var n = e[0].size(this.resolveDataElementOptions(0)),
                            o = e[e.length - 1].size(this.resolveDataElementOptions(e.length - 1));
                        return Math.max(a, n, o) / 2;
                    }
                }
                Ii(gr, "id", "scatter"),
                    Ii(gr, "defaults", { datasetElementType: !1, dataElementType: "point", showLine: !1, fill: !1 }),
                    Ii(gr, "overrides", { interaction: { mode: "point" }, scales: { x: { type: "linear" }, y: { type: "linear" } } });
                var vr = Object.freeze({ __proto__: null, BarController: hr, BubbleController: cr, DoughnutController: dr, LineController: ur, PieController: mr, PolarAreaController: pr, RadarController: fr, ScatterController: gr });
                function br() {
                    throw new Error("This method is not implemented: Check that a complete date adapter is provided.");
                }
                class yr {
                    static override(t) {
                        Object.assign(yr.prototype, t);
                    }
                    constructor(t) {
                        Ii(this, "options", void 0), (this.options = t || {});
                    }
                    init() {}
                    formats() {
                        return br();
                    }
                    parse() {
                        return br();
                    }
                    format() {
                        return br();
                    }
                    add() {
                        return br();
                    }
                    diff() {
                        return br();
                    }
                    startOf() {
                        return br();
                    }
                    endOf() {
                        return br();
                    }
                }
                var wr = yr;
                function xr(t, e, i, r) {
                    var s = t.controller,
                        a = t.data,
                        n = t._sorted,
                        o = s._cachedMeta.iScale;
                    if (o && e === o.axis && "r" !== e && n && a.length) {
                        var l = o._reversePixels ? Bt : Ft;
                        if (!r) return l(a, e, i);
                        if (s._sharedOptions) {
                            var h = a[0],
                                c = "function" == typeof h.getRange && h.getRange(e);
                            if (c) {
                                var d = l(a, e, i - c),
                                    u = l(a, e, i + c);
                                return { lo: d.lo, hi: u.hi };
                            }
                        }
                    }
                    return { lo: 0, hi: a.length - 1 };
                }
                function Er(t, e, i, r, s) {
                    for (var a = t.getSortedVisibleDatasetMetas(), n = i[e], o = 0, l = a.length; o < l; ++o)
                        for (var h = a[o], c = h.index, d = h.data, u = xr(a[o], e, n, s), p = u.lo, m = u.hi, f = p; f <= m; ++f) {
                            var g = d[f];
                            g.skip || r(g, c, f);
                        }
                }
                function Cr(t, e, i, r, s) {
                    var a = [];
                    if (!s && !t.isPointInArea(e)) return a;
                    return (
                        Er(
                            t,
                            i,
                            e,
                            function (i, n, o) {
                                (s || be(i, t.chartArea, 0)) && i.inRange(e.x, e.y, r) && a.push({ element: i, datasetIndex: n, index: o });
                            },
                            !0
                        ),
                        a
                    );
                }
                function Sr(t, e, i, r, s, a) {
                    var n = [],
                        o = (function (t) {
                            var e = -1 !== t.indexOf("x"),
                                i = -1 !== t.indexOf("y");
                            return function (t, r) {
                                var s = e ? Math.abs(t.x - r.x) : 0,
                                    a = i ? Math.abs(t.y - r.y) : 0;
                                return Math.sqrt(Math.pow(s, 2) + Math.pow(a, 2));
                            };
                        })(i),
                        l = Number.POSITIVE_INFINITY;
                    return (
                        Er(t, i, e, function (i, h, c) {
                            var d = i.inRange(e.x, e.y, s);
                            if (!r || d) {
                                var u = i.getCenterPoint(s);
                                if (!!a || t.isPointInArea(u) || d) {
                                    var p = o(e, u);
                                    p < l ? ((n = [{ element: i, datasetIndex: h, index: c }]), (l = p)) : p === l && n.push({ element: i, datasetIndex: h, index: c });
                                }
                            }
                        }),
                        n
                    );
                }
                function Tr(t, e, i, r, s, a) {
                    return a || t.isPointInArea(e)
                        ? "r" !== i || r
                            ? Sr(t, e, i, r, s, a)
                            : (function (t, e, i, r) {
                                  var s = [];
                                  return (
                                      Er(t, i, e, function (t, i, a) {
                                          var n = t.getProps(["startAngle", "endAngle"], r),
                                              o = n.startAngle,
                                              l = n.endAngle;
                                          Lt(Pt(t, { x: e.x, y: e.y }).angle, o, l) && s.push({ element: t, datasetIndex: i, index: a });
                                      }),
                                      s
                                  );
                              })(t, e, i, s)
                        : [];
                }
                function _r(t, e, i, r, s) {
                    var a = [],
                        n = "x" === i ? "inXRange" : "inYRange",
                        o = !1;
                    return (
                        Er(t, i, e, (t, r, l) => {
                            t[n](e[i], s) && (a.push({ element: t, datasetIndex: r, index: l }), (o = o || t.inRange(e.x, e.y, s)));
                        }),
                        r && !o ? [] : a
                    );
                }
                var Mr = {
                        evaluateInteractionItems: Er,
                        modes: {
                            index(t, e, i, r) {
                                var s = di(e, t),
                                    a = i.axis || "x",
                                    n = i.includeInvisible || !1,
                                    o = i.intersect ? Cr(t, s, a, r, n) : Tr(t, s, a, !1, r, n),
                                    l = [];
                                return o.length
                                    ? (t.getSortedVisibleDatasetMetas().forEach((t) => {
                                          var e = o[0].index,
                                              i = t.data[e];
                                          i && !i.skip && l.push({ element: i, datasetIndex: t.index, index: e });
                                      }),
                                      l)
                                    : [];
                            },
                            dataset(t, e, i, r) {
                                var s = di(e, t),
                                    a = i.axis || "xy",
                                    n = i.includeInvisible || !1,
                                    o = i.intersect ? Cr(t, s, a, r, n) : Tr(t, s, a, !1, r, n);
                                if (o.length > 0) {
                                    var l = o[0].datasetIndex,
                                        h = t.getDatasetMeta(l).data;
                                    o = [];
                                    for (var c = 0; c < h.length; ++c) o.push({ element: h[c], datasetIndex: l, index: c });
                                }
                                return o;
                            },
                            point: (t, e, i, r) => Cr(t, di(e, t), i.axis || "xy", r, i.includeInvisible || !1),
                            nearest(t, e, i, r) {
                                var s = di(e, t),
                                    a = i.axis || "xy",
                                    n = i.includeInvisible || !1;
                                return Tr(t, s, a, i.intersect, r, n);
                            },
                            x: (t, e, i, r) => _r(t, di(e, t), "x", i.intersect, r),
                            y: (t, e, i, r) => _r(t, di(e, t), "y", i.intersect, r),
                        },
                    },
                    Pr = ["left", "top", "right", "bottom"];
                function kr(t, e) {
                    return t.filter((t) => t.pos === e);
                }
                function Ar(t, e) {
                    return t.filter((t) => -1 === Pr.indexOf(t.pos) && t.box.axis === e);
                }
                function Dr(t, e) {
                    return t.sort((t, i) => {
                        var r = e ? i : t,
                            s = e ? t : i;
                        return r.weight === s.weight ? r.index - s.index : r.weight - s.weight;
                    });
                }
                function Lr(t, e) {
                    var i,
                        r,
                        s,
                        a = (function (t) {
                            var e,
                                i = {},
                                r = Ri(t);
                            try {
                                for (r.s(); !(e = r.n()).done; ) {
                                    var s = e.value,
                                        a = s.stack,
                                        n = s.pos,
                                        o = s.stackWeight;
                                    if (a && Pr.includes(n)) {
                                        var l = i[a] || (i[a] = { count: 0, placed: 0, weight: 0, size: 0 });
                                        l.count++, (l.weight += o);
                                    }
                                }
                            } catch (t) {
                                r.e(t);
                            } finally {
                                r.f();
                            }
                            return i;
                        })(t),
                        n = e.vBoxMaxWidth,
                        o = e.hBoxMaxHeight;
                    for (i = 0, r = t.length; i < r; ++i) {
                        var l = (s = t[i]).box.fullSize,
                            h = a[s.stack],
                            c = h && s.stackWeight / h.weight;
                        s.horizontal ? ((s.width = c ? c * n : l && e.availableWidth), (s.height = o)) : ((s.width = n), (s.height = c ? c * o : l && e.availableHeight));
                    }
                    return a;
                }
                function Ir(t, e, i, r) {
                    return Math.max(t[i], e[i]) + Math.max(t[r], e[r]);
                }
                function Rr(t, e) {
                    (t.top = Math.max(t.top, e.top)), (t.left = Math.max(t.left, e.left)), (t.bottom = Math.max(t.bottom, e.bottom)), (t.right = Math.max(t.right, e.right));
                }
                function Or(t, e, i, r) {
                    var s = i.pos,
                        a = i.box,
                        n = t.maxPadding;
                    if (!G(s)) {
                        i.size && (t[s] -= i.size);
                        var o = r[i.stack] || { size: 0, count: 1 };
                        (o.size = Math.max(o.size, i.horizontal ? a.height : a.width)), (i.size = o.size / o.count), (t[s] += i.size);
                    }
                    a.getPadding && Rr(n, a.getPadding());
                    var l = Math.max(0, e.outerWidth - Ir(n, t, "left", "right")),
                        h = Math.max(0, e.outerHeight - Ir(n, t, "top", "bottom")),
                        c = l !== t.w,
                        d = h !== t.h;
                    return (t.w = l), (t.h = h), i.horizontal ? { same: c, other: d } : { same: d, other: c };
                }
                function Fr(t, e) {
                    var i = e.maxPadding;
                    function r(t) {
                        var r = { left: 0, top: 0, right: 0, bottom: 0 };
                        return (
                            t.forEach((t) => {
                                r[t] = Math.max(e[t], i[t]);
                            }),
                            r
                        );
                    }
                    return r(t ? ["left", "right"] : ["top", "bottom"]);
                }
                function Br(t, e, i, r) {
                    var s,
                        a,
                        n,
                        o,
                        l,
                        h,
                        c = [];
                    for (s = 0, a = t.length, l = 0; s < a; ++s) {
                        (o = (n = t[s]).box).update(n.width || e.w, n.height || e.h, Fr(n.horizontal, e));
                        var d = Or(e, i, n, r),
                            u = d.same,
                            p = d.other;
                        (l |= u && c.length), (h = h || p), o.fullSize || c.push(n);
                    }
                    return (l && Br(c, e, i, r)) || h;
                }
                function zr(t, e, i, r, s) {
                    (t.top = i), (t.left = e), (t.right = e + r), (t.bottom = i + s), (t.width = r), (t.height = s);
                }
                function Nr(t, e, i, r) {
                    var s,
                        a = i.padding,
                        n = e.x,
                        o = e.y,
                        l = Ri(t);
                    try {
                        for (l.s(); !(s = l.n()).done; ) {
                            var h = s.value,
                                c = h.box,
                                d = r[h.stack] || { count: 1, placed: 0, weight: 1 },
                                u = h.stackWeight / d.weight || 1;
                            if (h.horizontal) {
                                var p = e.w * u,
                                    m = d.size || c.height;
                                lt(d.start) && (o = d.start), c.fullSize ? zr(c, a.left, o, i.outerWidth - a.right - a.left, m) : zr(c, e.left + d.placed, o, p, m), (d.start = o), (d.placed += p), (o = c.bottom);
                            } else {
                                var f = e.h * u,
                                    g = d.size || c.width;
                                lt(d.start) && (n = d.start), c.fullSize ? zr(c, n, a.top, g, i.outerHeight - a.bottom - a.top) : zr(c, n, e.top + d.placed, g, f), (d.start = n), (d.placed += f), (n = c.right);
                            }
                        }
                    } catch (t) {
                        l.e(t);
                    } finally {
                        l.f();
                    }
                    (e.x = n), (e.y = o);
                }
                var Vr = {
                    addBox(t, e) {
                        t.boxes || (t.boxes = []),
                            (e.fullSize = e.fullSize || !1),
                            (e.position = e.position || "top"),
                            (e.weight = e.weight || 0),
                            (e._layers =
                                e._layers ||
                                function () {
                                    return [
                                        {
                                            z: 0,
                                            draw(t) {
                                                e.draw(t);
                                            },
                                        },
                                    ];
                                }),
                            t.boxes.push(e);
                    },
                    removeBox(t, e) {
                        var i = t.boxes ? t.boxes.indexOf(e) : -1;
                        -1 !== i && t.boxes.splice(i, 1);
                    },
                    configure(t, e, i) {
                        (e.fullSize = i.fullSize), (e.position = i.position), (e.weight = i.weight);
                    },
                    update(t, e, i, r) {
                        if (t) {
                            var s = Re(t.options.layout.padding),
                                a = Math.max(e - s.width, 0),
                                n = Math.max(i - s.height, 0),
                                o = (function (t) {
                                    var e = (function (t) {
                                            var e,
                                                i,
                                                r,
                                                s,
                                                a,
                                                n,
                                                o = [];
                                            for (e = 0, i = (t || []).length; e < i; ++e) {
                                                var l = (r = t[e]);
                                                s = l.position;
                                                var h = l.options;
                                                a = h.stack;
                                                var c = h.stackWeight;
                                                (n = void 0 === c ? 1 : c), o.push({ index: e, box: r, pos: s, horizontal: r.isHorizontal(), weight: r.weight, stack: a && s + a, stackWeight: n });
                                            }
                                            return o;
                                        })(t),
                                        i = Dr(
                                            e.filter((t) => t.box.fullSize),
                                            !0
                                        ),
                                        r = Dr(kr(e, "left"), !0),
                                        s = Dr(kr(e, "right")),
                                        a = Dr(kr(e, "top"), !0),
                                        n = Dr(kr(e, "bottom")),
                                        o = Ar(e, "x"),
                                        l = Ar(e, "y");
                                    return { fullSize: i, leftAndTop: r.concat(a), rightAndBottom: s.concat(l).concat(n).concat(o), chartArea: kr(e, "chartArea"), vertical: r.concat(s).concat(l), horizontal: a.concat(n).concat(o) };
                                })(t.boxes),
                                l = o.vertical,
                                h = o.horizontal;
                            K(t.boxes, (t) => {
                                "function" == typeof t.beforeLayout && t.beforeLayout();
                            });
                            var c = l.reduce((t, e) => (e.box.options && !1 === e.box.options.display ? t : t + 1), 0) || 1,
                                d = Object.freeze({ outerWidth: e, outerHeight: i, padding: s, availableWidth: a, availableHeight: n, vBoxMaxWidth: a / 2 / c, hBoxMaxHeight: n / 2 }),
                                u = Object.assign({}, s);
                            Rr(u, Re(r));
                            var p = Object.assign({ maxPadding: u, w: a, h: n, x: s.left, y: s.top }, s),
                                m = Lr(l.concat(h), d);
                            Br(o.fullSize, p, d, m),
                                Br(l, p, d, m),
                                Br(h, p, d, m) && Br(l, p, d, m),
                                (function (t) {
                                    var e = t.maxPadding;
                                    function i(i) {
                                        var r = Math.max(e[i] - t[i], 0);
                                        return (t[i] += r), r;
                                    }
                                    (t.y += i("top")), (t.x += i("left")), i("right"), i("bottom");
                                })(p),
                                Nr(o.leftAndTop, p, d, m),
                                (p.x += p.w),
                                (p.y += p.h),
                                Nr(o.rightAndBottom, p, d, m),
                                (t.chartArea = { left: p.left, top: p.top, right: p.left + p.w, bottom: p.top + p.h, height: p.h, width: p.w }),
                                K(o.chartArea, (e) => {
                                    var i = e.box;
                                    Object.assign(i, t.chartArea), i.update(p.w, p.h, { left: 0, top: 0, right: 0, bottom: 0 });
                                });
                        }
                    },
                };
                class Hr {
                    acquireContext(t, e) {}
                    releaseContext(t) {
                        return !1;
                    }
                    addEventListener(t, e, i) {}
                    removeEventListener(t, e, i) {}
                    getDevicePixelRatio() {
                        return 1;
                    }
                    getMaximumSize(t, e, i, r) {
                        return (e = Math.max(0, e || t.width)), (i = i || t.height), { width: e, height: Math.max(0, r ? Math.floor(e / r) : i) };
                    }
                    isAttached(t) {
                        return !0;
                    }
                    updateConfig(t) {}
                }
                class jr extends Hr {
                    acquireContext(t) {
                        return (t && t.getContext && t.getContext("2d")) || null;
                    }
                    updateConfig(t) {
                        t.options.animation = !1;
                    }
                }
                var Wr = "$chartjs",
                    Gr = {
                        touchstart: "mousedown",
                        touchmove: "mousemove",
                        touchend: "mouseup",
                        pointerenter: "mouseenter",
                        pointerdown: "mousedown",
                        pointermove: "mousemove",
                        pointerup: "mouseup",
                        pointerleave: "mouseout",
                        pointerout: "mouseout",
                    },
                    qr = (t) => null === t || "" === t;
                var $r = !!fi && { passive: !0 };
                function Ur(t, e, i) {
                    t.canvas.removeEventListener(e, i, $r);
                }
                function Yr(t, e) {
                    var i,
                        r = Ri(t);
                    try {
                        for (r.s(); !(i = r.n()).done; ) {
                            var s = i.value;
                            if (s === e || s.contains(e)) return !0;
                        }
                    } catch (t) {
                        r.e(t);
                    } finally {
                        r.f();
                    }
                }
                function Xr(t, e, i) {
                    var r = t.canvas,
                        s = new MutationObserver((t) => {
                            var e,
                                s = !1,
                                a = Ri(t);
                            try {
                                for (a.s(); !(e = a.n()).done; ) {
                                    var n = e.value;
                                    s = (s = s || Yr(n.addedNodes, r)) && !Yr(n.removedNodes, r);
                                }
                            } catch (t) {
                                a.e(t);
                            } finally {
                                a.f();
                            }
                            s && i();
                        });
                    return s.observe(document, { childList: !0, subtree: !0 }), s;
                }
                function Kr(t, e, i) {
                    var r = t.canvas,
                        s = new MutationObserver((t) => {
                            var e,
                                s = !1,
                                a = Ri(t);
                            try {
                                for (a.s(); !(e = a.n()).done; ) {
                                    var n = e.value;
                                    s = (s = s || Yr(n.removedNodes, r)) && !Yr(n.addedNodes, r);
                                }
                            } catch (t) {
                                a.e(t);
                            } finally {
                                a.f();
                            }
                            s && i();
                        });
                    return s.observe(document, { childList: !0, subtree: !0 }), s;
                }
                var Zr = new Map(),
                    Jr = 0;
                function Qr() {
                    var t = window.devicePixelRatio;
                    t !== Jr &&
                        ((Jr = t),
                        Zr.forEach((e, i) => {
                            i.currentDevicePixelRatio !== t && e();
                        }));
                }
                function ts(t, e, i) {
                    var r = t.canvas,
                        s = r && ai(r);
                    if (s) {
                        var a = jt((t, e) => {
                                var r = s.clientWidth;
                                i(t, e), r < s.clientWidth && i();
                            }, window),
                            n = new ResizeObserver((t) => {
                                var e = t[0],
                                    i = e.contentRect.width,
                                    r = e.contentRect.height;
                                (0 === i && 0 === r) || a(i, r);
                            });
                        return (
                            n.observe(s),
                            (function (t, e) {
                                Zr.size || window.addEventListener("resize", Qr), Zr.set(t, e);
                            })(t, a),
                            n
                        );
                    }
                }
                function es(t, e, i) {
                    i && i.disconnect(),
                        "resize" === e &&
                            (function (t) {
                                Zr.delete(t), Zr.size || window.removeEventListener("resize", Qr);
                            })(t);
                }
                function is(t, e, i) {
                    var r = t.canvas,
                        s = jt((e) => {
                            null !== t.ctx &&
                                i(
                                    (function (t, e) {
                                        var i = Gr[t.type] || t.type,
                                            r = di(t, e),
                                            s = r.x,
                                            a = r.y;
                                        return { type: i, chart: e, native: t, x: void 0 !== s ? s : null, y: void 0 !== a ? a : null };
                                    })(e, t)
                                );
                        }, t);
                    return (
                        (function (t, e, i) {
                            t.addEventListener(e, i, $r);
                        })(r, e, s),
                        s
                    );
                }
                class rs extends Hr {
                    acquireContext(t, e) {
                        var i = t && t.getContext && t.getContext("2d");
                        return i && i.canvas === t
                            ? ((function (t, e) {
                                  var i = t.style,
                                      r = t.getAttribute("height"),
                                      s = t.getAttribute("width");
                                  if (
                                      ((t[Wr] = { initial: { height: r, width: s, style: { display: i.display, height: i.height, width: i.width } } }), (i.display = i.display || "block"), (i.boxSizing = i.boxSizing || "border-box"), qr(s))
                                  ) {
                                      var a = gi(t, "width");
                                      void 0 !== a && (t.width = a);
                                  }
                                  if (qr(r))
                                      if ("" === t.style.height) t.height = t.width / (e || 2);
                                      else {
                                          var n = gi(t, "height");
                                          void 0 !== n && (t.height = n);
                                      }
                              })(t, e),
                              i)
                            : null;
                    }
                    releaseContext(t) {
                        var e = t.canvas;
                        if (!e[Wr]) return !1;
                        var i = e[Wr].initial;
                        ["height", "width"].forEach((t) => {
                            var r = i[t];
                            j(r) ? e.removeAttribute(t) : e.setAttribute(t, r);
                        });
                        var r = i.style || {};
                        return (
                            Object.keys(r).forEach((t) => {
                                e.style[t] = r[t];
                            }),
                            (e.width = e.width),
                            delete e[Wr],
                            !0
                        );
                    }
                    addEventListener(t, e, i) {
                        this.removeEventListener(t, e);
                        var r = t.$proxies || (t.$proxies = {}),
                            s = { attach: Xr, detach: Kr, resize: ts }[e] || is;
                        r[e] = s(t, e, i);
                    }
                    removeEventListener(t, e) {
                        var i = t.$proxies || (t.$proxies = {}),
                            r = i[e];
                        r && (({ attach: es, detach: es, resize: es }[e] || Ur)(t, e, r), (i[e] = void 0));
                    }
                    getDevicePixelRatio() {
                        return window.devicePixelRatio;
                    }
                    getMaximumSize(t, e, i, r) {
                        return pi(t, e, i, r);
                    }
                    isAttached(t) {
                        var e = ai(t);
                        return !(!e || !e.isConnected);
                    }
                }
                class ss {
                    constructor() {
                        Ii(this, "x", void 0), Ii(this, "y", void 0), Ii(this, "active", !1), Ii(this, "options", void 0), Ii(this, "$animations", void 0);
                    }
                    tooltipPosition(t) {
                        var e = this.getProps(["x", "y"], t);
                        return { x: e.x, y: e.y };
                    }
                    hasValue() {
                        return Ct(this.x) && Ct(this.y);
                    }
                    getProps(t, e) {
                        var i = this.$animations;
                        if (!e || !i) return this;
                        var r = {};
                        return (
                            t.forEach((t) => {
                                r[t] = i[t] && i[t].active() ? i[t]._to : this[t];
                            }),
                            r
                        );
                    }
                }
                function as(t, e) {
                    var i = t.options.ticks,
                        r = (function (t) {
                            var e = t.options.offset,
                                i = t._tickSize(),
                                r = t._length / i + (e ? 0 : 1),
                                s = t._maxLength / i;
                            return Math.floor(Math.min(r, s));
                        })(t),
                        s = Math.min(i.maxTicksLimit || r, r),
                        a = i.major.enabled
                            ? (function (t) {
                                  var e,
                                      i,
                                      r = [];
                                  for (e = 0, i = t.length; e < i; e++) t[e].major && r.push(e);
                                  return r;
                              })(e)
                            : [],
                        n = a.length,
                        o = a[0],
                        l = a[n - 1],
                        h = [];
                    if (n > s)
                        return (
                            (function (t, e, i, r) {
                                var s,
                                    a = 0,
                                    n = i[0];
                                for (r = Math.ceil(r), s = 0; s < t.length; s++) s === n && (e.push(t[s]), (n = i[++a * r]));
                            })(e, h, a, n / s),
                            h
                        );
                    var c = (function (t, e, i) {
                        var r = (function (t) {
                                var e,
                                    i,
                                    r = t.length;
                                if (r < 2) return !1;
                                for (i = t[0], e = 1; e < r; ++e) if (t[e] - t[e - 1] !== i) return !1;
                                return i;
                            })(t),
                            s = e.length / i;
                        if (!r) return Math.max(s, 1);
                        for (
                            var a = (function (t) {
                                    var e,
                                        i = [],
                                        r = Math.sqrt(t);
                                    for (e = 1; e < r; e++) t % e == 0 && (i.push(e), i.push(t / e));
                                    return r === (0 | r) && i.push(r), i.sort((t, e) => t - e).pop(), i;
                                })(r),
                                n = 0,
                                o = a.length - 1;
                            n < o;
                            n++
                        ) {
                            var l = a[n];
                            if (l > s) return l;
                        }
                        return Math.max(s, 1);
                    })(a, e, s);
                    if (n > 0) {
                        var d,
                            u,
                            p = n > 1 ? Math.round((l - o) / (n - 1)) : null;
                        for (ns(e, h, c, j(p) ? 0 : o - p, o), d = 0, u = n - 1; d < u; d++) ns(e, h, c, a[d], a[d + 1]);
                        return ns(e, h, c, l, j(p) ? e.length : l + p), h;
                    }
                    return ns(e, h, c), h;
                }
                function ns(t, e, i, r, s) {
                    var a,
                        n,
                        o,
                        l = U(r, 0),
                        h = Math.min(U(s, t.length), t.length),
                        c = 0;
                    for (i = Math.ceil(i), s && (i = (a = s - r) / Math.floor(a / i)), o = l; o < 0; ) c++, (o = Math.round(l + c * i));
                    for (n = Math.max(l, 0); n < h; n++) n === o && (e.push(t[n]), c++, (o = Math.round(l + c * i)));
                }
                Ii(ss, "defaults", {}), Ii(ss, "defaultRoutes", void 0);
                var os = (t, e, i) => ("top" === e || "left" === e ? t[e] + i : t[e] - i),
                    ls = (t, e) => Math.min(e || t, t);
                function hs(t, e) {
                    for (var i = [], r = t.length / e, s = t.length, a = 0; a < s; a += r) i.push(t[Math.floor(a)]);
                    return i;
                }
                function cs(t, e, i) {
                    var r,
                        s = t.ticks.length,
                        a = Math.min(e, s - 1),
                        n = t._startPixel,
                        o = t._endPixel,
                        l = 1e-6,
                        h = t.getPixelForTick(a);
                    if (!(i && ((r = 1 === s ? Math.max(h - n, o - h) : 0 === e ? (t.getPixelForTick(1) - h) / 2 : (h - t.getPixelForTick(a - 1)) / 2), (h += a < e ? r : -r) < n - l || h > o + l))) return h;
                }
                function ds(t) {
                    return t.drawTicks ? t.tickLength : 0;
                }
                function us(t, e) {
                    if (!t.display) return 0;
                    var i = Oe(t.font, e),
                        r = Re(t.padding);
                    return (W(t.text) ? t.text.length : 1) * i.lineHeight + r.height;
                }
                function ps(t, e, i) {
                    var r = Wt(t);
                    return ((i && "right" !== e) || (!i && "right" === e)) && (r = ((t) => ("left" === t ? "right" : "right" === t ? "left" : t))(r)), r;
                }
                class ms extends ss {
                    constructor(t) {
                        super(),
                            (this.id = t.id),
                            (this.type = t.type),
                            (this.options = void 0),
                            (this.ctx = t.ctx),
                            (this.chart = t.chart),
                            (this.top = void 0),
                            (this.bottom = void 0),
                            (this.left = void 0),
                            (this.right = void 0),
                            (this.width = void 0),
                            (this.height = void 0),
                            (this._margins = { left: 0, right: 0, top: 0, bottom: 0 }),
                            (this.maxWidth = void 0),
                            (this.maxHeight = void 0),
                            (this.paddingTop = void 0),
                            (this.paddingBottom = void 0),
                            (this.paddingLeft = void 0),
                            (this.paddingRight = void 0),
                            (this.axis = void 0),
                            (this.labelRotation = void 0),
                            (this.min = void 0),
                            (this.max = void 0),
                            (this._range = void 0),
                            (this.ticks = []),
                            (this._gridLineItems = null),
                            (this._labelItems = null),
                            (this._labelSizes = null),
                            (this._length = 0),
                            (this._maxLength = 0),
                            (this._longestTextCache = {}),
                            (this._startPixel = void 0),
                            (this._endPixel = void 0),
                            (this._reversePixels = !1),
                            (this._userMax = void 0),
                            (this._userMin = void 0),
                            (this._suggestedMax = void 0),
                            (this._suggestedMin = void 0),
                            (this._ticksLength = 0),
                            (this._borderValue = 0),
                            (this._cache = {}),
                            (this._dataLimitsCached = !1),
                            (this.$context = void 0);
                    }
                    init(t) {
                        (this.options = t.setContext(this.getContext())),
                            (this.axis = t.axis),
                            (this._userMin = this.parse(t.min)),
                            (this._userMax = this.parse(t.max)),
                            (this._suggestedMin = this.parse(t.suggestedMin)),
                            (this._suggestedMax = this.parse(t.suggestedMax));
                    }
                    parse(t, e) {
                        return t;
                    }
                    getUserBounds() {
                        var t = this._userMin,
                            e = this._userMax,
                            i = this._suggestedMin,
                            r = this._suggestedMax;
                        return (
                            (t = $(t, Number.POSITIVE_INFINITY)),
                            (e = $(e, Number.NEGATIVE_INFINITY)),
                            (i = $(i, Number.POSITIVE_INFINITY)),
                            (r = $(r, Number.NEGATIVE_INFINITY)),
                            { min: $(t, i), max: $(e, r), minDefined: q(t), maxDefined: q(e) }
                        );
                    }
                    getMinMax(t) {
                        var e,
                            i = this.getUserBounds(),
                            r = i.min,
                            s = i.max,
                            a = i.minDefined,
                            n = i.maxDefined;
                        if (a && n) return { min: r, max: s };
                        for (var o = this.getMatchingVisibleMetas(), l = 0, h = o.length; l < h; ++l) (e = o[l].controller.getMinMax(this, t)), a || (r = Math.min(r, e.min)), n || (s = Math.max(s, e.max));
                        return { min: $((r = n && r > s ? s : r), $((s = a && r > s ? r : s), r)), max: $(s, $(r, s)) };
                    }
                    getPadding() {
                        return { left: this.paddingLeft || 0, top: this.paddingTop || 0, right: this.paddingRight || 0, bottom: this.paddingBottom || 0 };
                    }
                    getTicks() {
                        return this.ticks;
                    }
                    getLabels() {
                        var t = this.chart.data;
                        return this.options.labels || (this.isHorizontal() ? t.xLabels : t.yLabels) || t.labels || [];
                    }
                    getLabelItems(t = this.chart.chartArea) {
                        return this._labelItems || (this._labelItems = this._computeLabelItems(t));
                    }
                    beforeLayout() {
                        (this._cache = {}), (this._dataLimitsCached = !1);
                    }
                    beforeUpdate() {
                        X(this.options.beforeUpdate, [this]);
                    }
                    update(t, e, i) {
                        var r = this.options,
                            s = r.beginAtZero,
                            a = r.grace,
                            n = r.ticks,
                            o = n.sampleSize;
                        this.beforeUpdate(),
                            (this.maxWidth = t),
                            (this.maxHeight = e),
                            (this._margins = i = Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, i)),
                            (this.ticks = null),
                            (this._labelSizes = null),
                            (this._gridLineItems = null),
                            (this._labelItems = null),
                            this.beforeSetDimensions(),
                            this.setDimensions(),
                            this.afterSetDimensions(),
                            (this._maxLength = this.isHorizontal() ? this.width + i.left + i.right : this.height + i.top + i.bottom),
                            this._dataLimitsCached ||
                                (this.beforeDataLimits(),
                                this.determineDataLimits(),
                                this.afterDataLimits(),
                                (this._range = (function (t, e, i) {
                                    var r = t.min,
                                        s = t.max,
                                        a = Y(e, (s - r) / 2),
                                        n = (t, e) => (i && 0 === t ? 0 : t + e);
                                    return { min: n(r, -Math.abs(a)), max: n(s, a) };
                                })(this, a, s)),
                                (this._dataLimitsCached = !0)),
                            this.beforeBuildTicks(),
                            (this.ticks = this.buildTicks() || []),
                            this.afterBuildTicks();
                        var l = o < this.ticks.length;
                        this._convertTicksToLabels(l ? hs(this.ticks, o) : this.ticks),
                            this.configure(),
                            this.beforeCalculateLabelRotation(),
                            this.calculateLabelRotation(),
                            this.afterCalculateLabelRotation(),
                            n.display && (n.autoSkip || "auto" === n.source) && ((this.ticks = as(this, this.ticks)), (this._labelSizes = null), this.afterAutoSkip()),
                            l && this._convertTicksToLabels(this.ticks),
                            this.beforeFit(),
                            this.fit(),
                            this.afterFit(),
                            this.afterUpdate();
                    }
                    configure() {
                        var t,
                            e,
                            i = this.options.reverse;
                        this.isHorizontal() ? ((t = this.left), (e = this.right)) : ((t = this.top), (e = this.bottom), (i = !i)),
                            (this._startPixel = t),
                            (this._endPixel = e),
                            (this._reversePixels = i),
                            (this._length = e - t),
                            (this._alignToPixels = this.options.alignToPixels);
                    }
                    afterUpdate() {
                        X(this.options.afterUpdate, [this]);
                    }
                    beforeSetDimensions() {
                        X(this.options.beforeSetDimensions, [this]);
                    }
                    setDimensions() {
                        this.isHorizontal() ? ((this.width = this.maxWidth), (this.left = 0), (this.right = this.width)) : ((this.height = this.maxHeight), (this.top = 0), (this.bottom = this.height)),
                            (this.paddingLeft = 0),
                            (this.paddingTop = 0),
                            (this.paddingRight = 0),
                            (this.paddingBottom = 0);
                    }
                    afterSetDimensions() {
                        X(this.options.afterSetDimensions, [this]);
                    }
                    _callHooks(t) {
                        this.chart.notifyPlugins(t, this.getContext()), X(this.options[t], [this]);
                    }
                    beforeDataLimits() {
                        this._callHooks("beforeDataLimits");
                    }
                    determineDataLimits() {}
                    afterDataLimits() {
                        this._callHooks("afterDataLimits");
                    }
                    beforeBuildTicks() {
                        this._callHooks("beforeBuildTicks");
                    }
                    buildTicks() {
                        return [];
                    }
                    afterBuildTicks() {
                        this._callHooks("afterBuildTicks");
                    }
                    beforeTickToLabelConversion() {
                        X(this.options.beforeTickToLabelConversion, [this]);
                    }
                    generateTickLabels(t) {
                        var e,
                            i,
                            r,
                            s = this.options.ticks;
                        for (e = 0, i = t.length; e < i; e++) (r = t[e]).label = X(s.callback, [r.value, e, t], this);
                    }
                    afterTickToLabelConversion() {
                        X(this.options.afterTickToLabelConversion, [this]);
                    }
                    beforeCalculateLabelRotation() {
                        X(this.options.beforeCalculateLabelRotation, [this]);
                    }
                    calculateLabelRotation() {
                        var t,
                            e,
                            i,
                            r = this.options,
                            s = r.ticks,
                            a = ls(this.ticks.length, r.ticks.maxTicksLimit),
                            n = s.minRotation || 0,
                            o = s.maxRotation,
                            l = n;
                        if (!this._isVisible() || !s.display || n >= o || a <= 1 || !this.isHorizontal()) this.labelRotation = n;
                        else {
                            var h = this._getLabelSizes(),
                                c = h.widest.width,
                                d = h.highest.height,
                                u = It(this.chart.width - c, 0, this.maxWidth);
                            c + 6 > (t = r.offset ? this.maxWidth / a : u / (a - 1)) &&
                                ((t = u / (a - (r.offset ? 0.5 : 1))),
                                (e = this.maxHeight - ds(r.grid) - s.padding - us(r.title, this.chart.options.font)),
                                (i = Math.sqrt(c * c + d * d)),
                                (l = _t(Math.min(Math.asin(It((h.highest.height + 6) / t, -1, 1)), Math.asin(It(e / i, -1, 1)) - Math.asin(It(d / i, -1, 1))))),
                                (l = Math.max(n, Math.min(o, l)))),
                                (this.labelRotation = l);
                        }
                    }
                    afterCalculateLabelRotation() {
                        X(this.options.afterCalculateLabelRotation, [this]);
                    }
                    afterAutoSkip() {}
                    beforeFit() {
                        X(this.options.beforeFit, [this]);
                    }
                    fit() {
                        var t = { width: 0, height: 0 },
                            e = this.chart,
                            i = this.options,
                            r = i.ticks,
                            s = i.title,
                            a = i.grid,
                            n = this._isVisible(),
                            o = this.isHorizontal();
                        if (n) {
                            var l = us(s, e.options.font);
                            if ((o ? ((t.width = this.maxWidth), (t.height = ds(a) + l)) : ((t.height = this.maxHeight), (t.width = ds(a) + l)), r.display && this.ticks.length)) {
                                var h = this._getLabelSizes(),
                                    c = h.first,
                                    d = h.last,
                                    u = h.widest,
                                    p = h.highest,
                                    m = 2 * r.padding,
                                    f = Tt(this.labelRotation),
                                    g = Math.cos(f),
                                    v = Math.sin(f);
                                if (o) {
                                    var b = r.mirror ? 0 : v * u.width + g * p.height;
                                    t.height = Math.min(this.maxHeight, t.height + b + m);
                                } else {
                                    var y = r.mirror ? 0 : g * u.width + v * p.height;
                                    t.width = Math.min(this.maxWidth, t.width + y + m);
                                }
                                this._calculatePadding(c, d, v, g);
                            }
                        }
                        this._handleMargins(),
                            o
                                ? ((this.width = this._length = e.width - this._margins.left - this._margins.right), (this.height = t.height))
                                : ((this.width = t.width), (this.height = this._length = e.height - this._margins.top - this._margins.bottom));
                    }
                    _calculatePadding(t, e, i, r) {
                        var s = this.options,
                            a = s.ticks,
                            n = a.align,
                            o = a.padding,
                            l = s.position,
                            h = 0 !== this.labelRotation,
                            c = "top" !== l && "x" === this.axis;
                        if (this.isHorizontal()) {
                            var d = this.getPixelForTick(0) - this.left,
                                u = this.right - this.getPixelForTick(this.ticks.length - 1),
                                p = 0,
                                m = 0;
                            h ? (c ? ((p = r * t.width), (m = i * e.height)) : ((p = i * t.height), (m = r * e.width))) : "start" === n ? (m = e.width) : "end" === n ? (p = t.width) : "inner" !== n && ((p = t.width / 2), (m = e.width / 2)),
                                (this.paddingLeft = Math.max(((p - d + o) * this.width) / (this.width - d), 0)),
                                (this.paddingRight = Math.max(((m - u + o) * this.width) / (this.width - u), 0));
                        } else {
                            var f = e.height / 2,
                                g = t.height / 2;
                            "start" === n ? ((f = 0), (g = t.height)) : "end" === n && ((f = e.height), (g = 0)), (this.paddingTop = f + o), (this.paddingBottom = g + o);
                        }
                    }
                    _handleMargins() {
                        this._margins &&
                            ((this._margins.left = Math.max(this.paddingLeft, this._margins.left)),
                            (this._margins.top = Math.max(this.paddingTop, this._margins.top)),
                            (this._margins.right = Math.max(this.paddingRight, this._margins.right)),
                            (this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom)));
                    }
                    afterFit() {
                        X(this.options.afterFit, [this]);
                    }
                    isHorizontal() {
                        var t = this.options,
                            e = t.axis,
                            i = t.position;
                        return "top" === i || "bottom" === i || "x" === e;
                    }
                    isFullSize() {
                        return this.options.fullSize;
                    }
                    _convertTicksToLabels(t) {
                        var e, i;
                        for (this.beforeTickToLabelConversion(), this.generateTickLabels(t), e = 0, i = t.length; e < i; e++) j(t[e].label) && (t.splice(e, 1), i--, e--);
                        this.afterTickToLabelConversion();
                    }
                    _getLabelSizes() {
                        var t = this._labelSizes;
                        if (!t) {
                            var e = this.options.ticks.sampleSize,
                                i = this.ticks;
                            e < i.length && (i = hs(i, e)), (this._labelSizes = t = this._computeLabelSizes(i, i.length, this.options.ticks.maxTicksLimit));
                        }
                        return t;
                    }
                    _computeLabelSizes(t, e, i) {
                        var r,
                            s,
                            a,
                            n,
                            o,
                            l,
                            h,
                            c,
                            d,
                            u,
                            p,
                            m = this.ctx,
                            f = this._longestTextCache,
                            g = [],
                            v = [],
                            b = Math.floor(e / ls(e, i)),
                            y = 0,
                            w = 0;
                        for (r = 0; r < e; r += b) {
                            if (((n = t[r].label), (o = this._resolveTickFontOptions(r)), (m.font = l = o.string), (h = f[l] = f[l] || { data: {}, gc: [] }), (c = o.lineHeight), (d = u = 0), j(n) || W(n))) {
                                if (W(n)) for (s = 0, a = n.length; s < a; ++s) j((p = n[s])) || W(p) || ((d = ue(m, h.data, h.gc, d, p)), (u += c));
                            } else (d = ue(m, h.data, h.gc, d, n)), (u = c);
                            g.push(d), v.push(u), (y = Math.max(d, y)), (w = Math.max(u, w));
                        }
                        !(function (t, e) {
                            K(t, (t) => {
                                var i,
                                    r = t.gc,
                                    s = r.length / 2;
                                if (s > e) {
                                    for (i = 0; i < s; ++i) delete t.data[r[i]];
                                    r.splice(0, s);
                                }
                            });
                        })(f, e);
                        var x = g.indexOf(y),
                            E = v.indexOf(w),
                            C = (t) => ({ width: g[t] || 0, height: v[t] || 0 });
                        return { first: C(0), last: C(e - 1), widest: C(x), highest: C(E), widths: g, heights: v };
                    }
                    getLabelForValue(t) {
                        return t;
                    }
                    getPixelForValue(t, e) {
                        return NaN;
                    }
                    getValueForPixel(t) {}
                    getPixelForTick(t) {
                        var e = this.ticks;
                        return t < 0 || t > e.length - 1 ? null : this.getPixelForValue(e[t].value);
                    }
                    getPixelForDecimal(t) {
                        this._reversePixels && (t = 1 - t);
                        var e = this._startPixel + t * this._length;
                        return It(this._alignToPixels ? me(this.chart, e, 0) : e, -32768, 32767);
                    }
                    getDecimalForPixel(t) {
                        var e = (t - this._startPixel) / this._length;
                        return this._reversePixels ? 1 - e : e;
                    }
                    getBasePixel() {
                        return this.getPixelForValue(this.getBaseValue());
                    }
                    getBaseValue() {
                        var t = this.min,
                            e = this.max;
                        return t < 0 && e < 0 ? e : t > 0 && e > 0 ? t : 0;
                    }
                    getContext(t) {
                        var e = this.ticks || [];
                        if (t >= 0 && t < e.length) {
                            var i = e[t];
                            return (
                                i.$context ||
                                (i.$context = (function (t, e, i) {
                                    return Be(t, { tick: i, index: e, type: "tick" });
                                })(this.getContext(), t, i))
                            );
                        }
                        return this.$context || (this.$context = Be(this.chart.getContext(), { scale: this, type: "scale" }));
                    }
                    _tickSize() {
                        var t = this.options.ticks,
                            e = Tt(this.labelRotation),
                            i = Math.abs(Math.cos(e)),
                            r = Math.abs(Math.sin(e)),
                            s = this._getLabelSizes(),
                            a = t.autoSkipPadding || 0,
                            n = s ? s.widest.width + a : 0,
                            o = s ? s.highest.height + a : 0;
                        return this.isHorizontal() ? (o * i > n * r ? n / i : o / r) : o * r < n * i ? o / i : n / r;
                    }
                    _isVisible() {
                        var t = this.options.display;
                        return "auto" !== t ? !!t : this.getMatchingVisibleMetas().length > 0;
                    }
                    _computeGridLineItems(t) {
                        var e,
                            i,
                            r,
                            s,
                            a,
                            n,
                            o,
                            l,
                            h,
                            c,
                            d,
                            u,
                            p = this.axis,
                            m = this.chart,
                            f = this.options,
                            g = f.grid,
                            v = f.position,
                            b = f.border,
                            y = g.offset,
                            w = this.isHorizontal(),
                            x = this.ticks.length + (y ? 1 : 0),
                            E = ds(g),
                            C = [],
                            S = b.setContext(this.getContext()),
                            T = S.display ? S.width : 0,
                            _ = T / 2,
                            M = function (t) {
                                return me(m, t, T);
                            };
                        if ("top" === v) (e = M(this.bottom)), (n = this.bottom - E), (l = e - _), (c = M(t.top) + _), (u = t.bottom);
                        else if ("bottom" === v) (e = M(this.top)), (c = t.top), (u = M(t.bottom) - _), (n = e + _), (l = this.top + E);
                        else if ("left" === v) (e = M(this.right)), (a = this.right - E), (o = e - _), (h = M(t.left) + _), (d = t.right);
                        else if ("right" === v) (e = M(this.left)), (h = t.left), (d = M(t.right) - _), (a = e + _), (o = this.left + E);
                        else if ("x" === p) {
                            if ("center" === v) e = M((t.top + t.bottom) / 2 + 0.5);
                            else if (G(v)) {
                                var P = Object.keys(v)[0],
                                    k = v[P];
                                e = M(this.chart.scales[P].getPixelForValue(k));
                            }
                            (c = t.top), (u = t.bottom), (l = (n = e + _) + E);
                        } else if ("y" === p) {
                            if ("center" === v) e = M((t.left + t.right) / 2);
                            else if (G(v)) {
                                var A = Object.keys(v)[0],
                                    D = v[A];
                                e = M(this.chart.scales[A].getPixelForValue(D));
                            }
                            (o = (a = e - _) - E), (h = t.left), (d = t.right);
                        }
                        var L = U(f.ticks.maxTicksLimit, x),
                            I = Math.max(1, Math.ceil(x / L));
                        for (i = 0; i < x; i += I) {
                            var R = this.getContext(i),
                                O = g.setContext(R),
                                F = b.setContext(R),
                                B = O.lineWidth,
                                z = O.color,
                                N = F.dash || [],
                                V = F.dashOffset,
                                H = O.tickWidth,
                                j = O.tickColor,
                                W = O.tickBorderDash || [],
                                q = O.tickBorderDashOffset;
                            void 0 !== (r = cs(this, i, y)) &&
                                ((s = me(m, r, B)),
                                w ? (a = o = h = d = s) : (n = l = c = u = s),
                                C.push({ tx1: a, ty1: n, tx2: o, ty2: l, x1: h, y1: c, x2: d, y2: u, width: B, color: z, borderDash: N, borderDashOffset: V, tickWidth: H, tickColor: j, tickBorderDash: W, tickBorderDashOffset: q }));
                        }
                        return (this._ticksLength = x), (this._borderValue = e), C;
                    }
                    _computeLabelItems(t) {
                        var e,
                            i,
                            r,
                            s,
                            a,
                            n,
                            o,
                            l,
                            h,
                            c,
                            d,
                            u = this.axis,
                            p = this.options,
                            m = p.position,
                            f = p.ticks,
                            g = this.isHorizontal(),
                            v = this.ticks,
                            b = f.align,
                            y = f.crossAlign,
                            w = f.padding,
                            x = f.mirror,
                            E = ds(p.grid),
                            C = E + w,
                            S = x ? -w : C,
                            T = -Tt(this.labelRotation),
                            _ = [],
                            M = "middle";
                        if ("top" === m) (a = this.bottom - S), (n = this._getXAxisLabelAlignment());
                        else if ("bottom" === m) (a = this.top + S), (n = this._getXAxisLabelAlignment());
                        else if ("left" === m) {
                            var P = this._getYAxisLabelAlignment(E);
                            (n = P.textAlign), (s = P.x);
                        } else if ("right" === m) {
                            var k = this._getYAxisLabelAlignment(E);
                            (n = k.textAlign), (s = k.x);
                        } else if ("x" === u) {
                            if ("center" === m) a = (t.top + t.bottom) / 2 + C;
                            else if (G(m)) {
                                var A = Object.keys(m)[0],
                                    D = m[A];
                                a = this.chart.scales[A].getPixelForValue(D) + C;
                            }
                            n = this._getXAxisLabelAlignment();
                        } else if ("y" === u) {
                            if ("center" === m) s = (t.left + t.right) / 2 - C;
                            else if (G(m)) {
                                var L = Object.keys(m)[0],
                                    I = m[L];
                                s = this.chart.scales[L].getPixelForValue(I);
                            }
                            n = this._getYAxisLabelAlignment(E).textAlign;
                        }
                        "y" === u && ("start" === b ? (M = "top") : "end" === b && (M = "bottom"));
                        var R = this._getLabelSizes();
                        for (e = 0, i = v.length; e < i; ++e) {
                            r = v[e].label;
                            var O = f.setContext(this.getContext(e));
                            (o = this.getPixelForTick(e) + f.labelOffset), (h = (l = this._resolveTickFontOptions(e)).lineHeight);
                            var F = (c = W(r) ? r.length : 1) / 2,
                                B = O.color,
                                z = O.textStrokeColor,
                                N = O.textStrokeWidth,
                                V = n;
                            g
                                ? ((s = o),
                                  "inner" === n && (V = e === i - 1 ? (this.options.reverse ? "left" : "right") : 0 === e ? (this.options.reverse ? "right" : "left") : "center"),
                                  (d =
                                      "top" === m
                                          ? "near" === y || 0 !== T
                                              ? -c * h + h / 2
                                              : "center" === y
                                              ? -R.highest.height / 2 - F * h + h
                                              : -R.highest.height + h / 2
                                          : "near" === y || 0 !== T
                                          ? h / 2
                                          : "center" === y
                                          ? R.highest.height / 2 - F * h
                                          : R.highest.height - c * h),
                                  x && (d *= -1),
                                  0 === T || O.showLabelBackdrop || (s += (h / 2) * Math.sin(T)))
                                : ((a = o), (d = ((1 - c) * h) / 2));
                            var H = void 0;
                            if (O.showLabelBackdrop) {
                                var j = Re(O.backdropPadding),
                                    q = R.heights[e],
                                    $ = R.widths[e],
                                    U = d - j.top,
                                    Y = 0 - j.left;
                                switch (M) {
                                    case "middle":
                                        U -= q / 2;
                                        break;
                                    case "bottom":
                                        U -= q;
                                }
                                switch (n) {
                                    case "center":
                                        Y -= $ / 2;
                                        break;
                                    case "right":
                                        Y -= $;
                                        break;
                                    case "inner":
                                        e === i - 1 ? (Y -= $) : e > 0 && (Y -= $ / 2);
                                }
                                H = { left: Y, top: U, width: $ + j.width, height: q + j.height, color: O.backdropColor };
                            }
                            _.push({ label: r, font: l, textOffset: d, options: { rotation: T, color: B, strokeColor: z, strokeWidth: N, textAlign: V, textBaseline: M, translation: [s, a], backdrop: H } });
                        }
                        return _;
                    }
                    _getXAxisLabelAlignment() {
                        var t = this.options,
                            e = t.position,
                            i = t.ticks;
                        if (-Tt(this.labelRotation)) return "top" === e ? "left" : "right";
                        var r = "center";
                        return "start" === i.align ? (r = "left") : "end" === i.align ? (r = "right") : "inner" === i.align && (r = "inner"), r;
                    }
                    _getYAxisLabelAlignment(t) {
                        var e,
                            i,
                            r = this.options,
                            s = r.position,
                            a = r.ticks,
                            n = a.crossAlign,
                            o = a.mirror,
                            l = a.padding,
                            h = t + l,
                            c = this._getLabelSizes().widest.width;
                        return (
                            "left" === s
                                ? o
                                    ? ((i = this.right + l), "near" === n ? (e = "left") : "center" === n ? ((e = "center"), (i += c / 2)) : ((e = "right"), (i += c)))
                                    : ((i = this.right - h), "near" === n ? (e = "right") : "center" === n ? ((e = "center"), (i -= c / 2)) : ((e = "left"), (i = this.left)))
                                : "right" === s
                                ? o
                                    ? ((i = this.left + l), "near" === n ? (e = "right") : "center" === n ? ((e = "center"), (i -= c / 2)) : ((e = "left"), (i -= c)))
                                    : ((i = this.left + h), "near" === n ? (e = "left") : "center" === n ? ((e = "center"), (i += c / 2)) : ((e = "right"), (i = this.right)))
                                : (e = "right"),
                            { textAlign: e, x: i }
                        );
                    }
                    _computeLabelArea() {
                        if (!this.options.ticks.mirror) {
                            var t = this.chart,
                                e = this.options.position;
                            return "left" === e || "right" === e ? { top: 0, left: this.left, bottom: t.height, right: this.right } : "top" === e || "bottom" === e ? { top: this.top, left: 0, bottom: this.bottom, right: t.width } : void 0;
                        }
                    }
                    drawBackground() {
                        var t = this.ctx,
                            e = this.options.backgroundColor,
                            i = this.left,
                            r = this.top,
                            s = this.width,
                            a = this.height;
                        e && (t.save(), (t.fillStyle = e), t.fillRect(i, r, s, a), t.restore());
                    }
                    getLineWidthForValue(t) {
                        var e = this.options.grid;
                        if (!this._isVisible() || !e.display) return 0;
                        var i = this.ticks.findIndex((e) => e.value === t);
                        return i >= 0 ? e.setContext(this.getContext(i)).lineWidth : 0;
                    }
                    drawGrid(t) {
                        var e,
                            i,
                            r = this.options.grid,
                            s = this.ctx,
                            a = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(t)),
                            n = (t, e, i) => {
                                i.width &&
                                    i.color &&
                                    (s.save(),
                                    (s.lineWidth = i.width),
                                    (s.strokeStyle = i.color),
                                    s.setLineDash(i.borderDash || []),
                                    (s.lineDashOffset = i.borderDashOffset),
                                    s.beginPath(),
                                    s.moveTo(t.x, t.y),
                                    s.lineTo(e.x, e.y),
                                    s.stroke(),
                                    s.restore());
                            };
                        if (r.display)
                            for (e = 0, i = a.length; e < i; ++e) {
                                var o = a[e];
                                r.drawOnChartArea && n({ x: o.x1, y: o.y1 }, { x: o.x2, y: o.y2 }, o),
                                    r.drawTicks && n({ x: o.tx1, y: o.ty1 }, { x: o.tx2, y: o.ty2 }, { color: o.tickColor, width: o.tickWidth, borderDash: o.tickBorderDash, borderDashOffset: o.tickBorderDashOffset });
                            }
                    }
                    drawBorder() {
                        var t = this.chart,
                            e = this.ctx,
                            i = this.options,
                            r = i.border,
                            s = i.grid,
                            a = r.setContext(this.getContext()),
                            n = r.display ? a.width : 0;
                        if (n) {
                            var o,
                                l,
                                h,
                                c,
                                d = s.setContext(this.getContext(0)).lineWidth,
                                u = this._borderValue;
                            this.isHorizontal() ? ((o = me(t, this.left, n) - n / 2), (l = me(t, this.right, d) + d / 2), (h = c = u)) : ((h = me(t, this.top, n) - n / 2), (c = me(t, this.bottom, d) + d / 2), (o = l = u)),
                                e.save(),
                                (e.lineWidth = a.width),
                                (e.strokeStyle = a.color),
                                e.beginPath(),
                                e.moveTo(o, h),
                                e.lineTo(l, c),
                                e.stroke(),
                                e.restore();
                        }
                    }
                    drawLabels(t) {
                        if (this.options.ticks.display) {
                            var e = this.ctx,
                                i = this._computeLabelArea();
                            i && ye(e, i);
                            var r,
                                s = Ri(this.getLabelItems(t));
                            try {
                                for (s.s(); !(r = s.n()).done; ) {
                                    var a = r.value,
                                        n = a.options,
                                        o = a.font;
                                    Te(e, a.label, 0, a.textOffset, o, n);
                                }
                            } catch (t) {
                                s.e(t);
                            } finally {
                                s.f();
                            }
                            i && we(e);
                        }
                    }
                    drawTitle() {
                        var t = this.ctx,
                            e = this.options,
                            i = e.position,
                            r = e.title,
                            s = e.reverse;
                        if (r.display) {
                            var a = Oe(r.font),
                                n = Re(r.padding),
                                o = r.align,
                                l = a.lineHeight / 2;
                            "bottom" === i || "center" === i || G(i) ? ((l += n.bottom), W(r.text) && (l += a.lineHeight * (r.text.length - 1))) : (l += n.top);
                            var h = (function (t, e, i, r) {
                                    var s,
                                        a,
                                        n,
                                        o = t.top,
                                        l = t.left,
                                        h = t.bottom,
                                        c = t.right,
                                        d = t.chart,
                                        u = d.chartArea,
                                        p = d.scales,
                                        m = 0,
                                        f = h - o,
                                        g = c - l;
                                    if (t.isHorizontal()) {
                                        if (((a = Gt(r, l, c)), G(i))) {
                                            var v = Object.keys(i)[0],
                                                b = i[v];
                                            n = p[v].getPixelForValue(b) + f - e;
                                        } else n = "center" === i ? (u.bottom + u.top) / 2 + f - e : os(t, i, e);
                                        s = c - l;
                                    } else {
                                        if (G(i)) {
                                            var y = Object.keys(i)[0],
                                                w = i[y];
                                            a = p[y].getPixelForValue(w) - g + e;
                                        } else a = "center" === i ? (u.left + u.right) / 2 - g + e : os(t, i, e);
                                        (n = Gt(r, h, o)), (m = "left" === i ? -gt : gt);
                                    }
                                    return { titleX: a, titleY: n, maxWidth: s, rotation: m };
                                })(this, l, i, o),
                                c = h.titleX,
                                d = h.titleY,
                                u = h.maxWidth,
                                p = h.rotation;
                            Te(t, r.text, 0, 0, a, { color: r.color, maxWidth: u, rotation: p, textAlign: ps(o, i, s), textBaseline: "middle", translation: [c, d] });
                        }
                    }
                    draw(t) {
                        this._isVisible() && (this.drawBackground(), this.drawGrid(t), this.drawBorder(), this.drawTitle(), this.drawLabels(t));
                    }
                    _layers() {
                        var t = this.options,
                            e = (t.ticks && t.ticks.z) || 0,
                            i = U(t.grid && t.grid.z, -1),
                            r = U(t.border && t.border.z, 0);
                        return this._isVisible() && this.draw === ms.prototype.draw
                            ? [
                                  {
                                      z: i,
                                      draw: (t) => {
                                          this.drawBackground(), this.drawGrid(t), this.drawTitle();
                                      },
                                  },
                                  {
                                      z: r,
                                      draw: () => {
                                          this.drawBorder();
                                      },
                                  },
                                  {
                                      z: e,
                                      draw: (t) => {
                                          this.drawLabels(t);
                                      },
                                  },
                              ]
                            : [
                                  {
                                      z: e,
                                      draw: (t) => {
                                          this.draw(t);
                                      },
                                  },
                              ];
                    }
                    getMatchingVisibleMetas(t) {
                        var e,
                            i,
                            r = this.chart.getSortedVisibleDatasetMetas(),
                            s = this.axis + "AxisID",
                            a = [];
                        for (e = 0, i = r.length; e < i; ++e) {
                            var n = r[e];
                            n[s] !== this.id || (t && n.type !== t) || a.push(n);
                        }
                        return a;
                    }
                    _resolveTickFontOptions(t) {
                        return Oe(this.options.ticks.setContext(this.getContext(t)).font);
                    }
                    _maxDigits() {
                        var t = this._resolveTickFontOptions(0).lineHeight;
                        return (this.isHorizontal() ? this.width : this.height) / t;
                    }
                }
                class fs {
                    constructor(t, e, i) {
                        (this.type = t), (this.scope = e), (this.override = i), (this.items = Object.create(null));
                    }
                    isForType(t) {
                        return Object.prototype.isPrototypeOf.call(this.type.prototype, t.prototype);
                    }
                    register(t) {
                        var e,
                            i = Object.getPrototypeOf(t);
                        (function (t) {
                            return "id" in t && "defaults" in t;
                        })(i) && (e = this.register(i));
                        var r = this.items,
                            s = t.id,
                            a = this.scope + "." + s;
                        if (!s) throw new Error("class does not have id: " + t);
                        return (
                            s in r ||
                                ((r[s] = t),
                                (function (t, e, i) {
                                    var r = et(Object.create(null), [i ? de.get(i) : {}, de.get(e), t.defaults]);
                                    de.set(e, r),
                                        t.defaultRoutes &&
                                            (function (t, e) {
                                                Object.keys(e).forEach((i) => {
                                                    var r = i.split("."),
                                                        s = r.pop(),
                                                        a = [t].concat(r).join("."),
                                                        n = e[i].split("."),
                                                        o = n.pop(),
                                                        l = n.join(".");
                                                    de.route(a, s, l, o);
                                                });
                                            })(e, t.defaultRoutes);
                                    t.descriptors && de.describe(e, t.descriptors);
                                })(t, a, e),
                                this.override && de.override(t.id, t.overrides)),
                            a
                        );
                    }
                    get(t) {
                        return this.items[t];
                    }
                    unregister(t) {
                        var e = this.items,
                            i = t.id,
                            r = this.scope;
                        i in e && delete e[i], r && i in de[r] && (delete de[r][i], this.override && delete ne[i]);
                    }
                }
                class gs {
                    constructor() {
                        (this.controllers = new fs(tr, "datasets", !0)),
                            (this.elements = new fs(ss, "elements")),
                            (this.plugins = new fs(Object, "plugins")),
                            (this.scales = new fs(ms, "scales")),
                            (this._typedRegistries = [this.controllers, this.scales, this.elements]);
                    }
                    add(...t) {
                        this._each("register", t);
                    }
                    remove(...t) {
                        this._each("unregister", t);
                    }
                    addControllers(...t) {
                        this._each("register", t, this.controllers);
                    }
                    addElements(...t) {
                        this._each("register", t, this.elements);
                    }
                    addPlugins(...t) {
                        this._each("register", t, this.plugins);
                    }
                    addScales(...t) {
                        this._each("register", t, this.scales);
                    }
                    getController(t) {
                        return this._get(t, this.controllers, "controller");
                    }
                    getElement(t) {
                        return this._get(t, this.elements, "element");
                    }
                    getPlugin(t) {
                        return this._get(t, this.plugins, "plugin");
                    }
                    getScale(t) {
                        return this._get(t, this.scales, "scale");
                    }
                    removeControllers(...t) {
                        this._each("unregister", t, this.controllers);
                    }
                    removeElements(...t) {
                        this._each("unregister", t, this.elements);
                    }
                    removePlugins(...t) {
                        this._each("unregister", t, this.plugins);
                    }
                    removeScales(...t) {
                        this._each("unregister", t, this.scales);
                    }
                    _each(t, e, i) {
                        [...e].forEach((e) => {
                            var r = i || this._getRegistryForType(e);
                            i || r.isForType(e) || (r === this.plugins && e.id)
                                ? this._exec(t, r, e)
                                : K(e, (e) => {
                                      var r = i || this._getRegistryForType(e);
                                      this._exec(t, r, e);
                                  });
                        });
                    }
                    _exec(t, e, i) {
                        var r = ot(t);
                        X(i["before" + r], [], i), e[t](i), X(i["after" + r], [], i);
                    }
                    _getRegistryForType(t) {
                        for (var e = 0; e < this._typedRegistries.length; e++) {
                            var i = this._typedRegistries[e];
                            if (i.isForType(t)) return i;
                        }
                        return this.plugins;
                    }
                    _get(t, e, i) {
                        var r = e.get(t);
                        if (void 0 === r) throw new Error('"' + t + '" is not a registered ' + i + ".");
                        return r;
                    }
                }
                var vs = new gs();
                class bs {
                    constructor() {
                        this._init = [];
                    }
                    notify(t, e, i, r) {
                        "beforeInit" === e && ((this._init = this._createDescriptors(t, !0)), this._notify(this._init, t, "install"));
                        var s = r ? this._descriptors(t).filter(r) : this._descriptors(t),
                            a = this._notify(s, t, e, i);
                        return "afterDestroy" === e && (this._notify(s, t, "stop"), this._notify(this._init, t, "uninstall")), a;
                    }
                    _notify(t, e, i, r) {
                        r = r || {};
                        var s,
                            a = Ri(t);
                        try {
                            for (a.s(); !(s = a.n()).done; ) {
                                var n = s.value,
                                    o = n.plugin;
                                if (!1 === X(o[i], [e, r, n.options], o) && r.cancelable) return !1;
                            }
                        } catch (t) {
                            a.e(t);
                        } finally {
                            a.f();
                        }
                        return !0;
                    }
                    invalidate() {
                        j(this._cache) || ((this._oldCache = this._cache), (this._cache = void 0));
                    }
                    _descriptors(t) {
                        if (this._cache) return this._cache;
                        var e = (this._cache = this._createDescriptors(t));
                        return this._notifyStateChanges(t), e;
                    }
                    _createDescriptors(t, e) {
                        var i = t && t.config,
                            r = U(i.options && i.options.plugins, {}),
                            s = (function (t) {
                                for (var e = {}, i = [], r = Object.keys(vs.plugins.items), s = 0; s < r.length; s++) i.push(vs.getPlugin(r[s]));
                                for (var a = t.plugins || [], n = 0; n < a.length; n++) {
                                    var o = a[n];
                                    -1 === i.indexOf(o) && (i.push(o), (e[o.id] = !0));
                                }
                                return { plugins: i, localIds: e };
                            })(i);
                        return !1 !== r || e
                            ? (function (t, { plugins: e, localIds: i }, r, s) {
                                  var a,
                                      n = [],
                                      o = t.getContext(),
                                      l = Ri(e);
                                  try {
                                      for (l.s(); !(a = l.n()).done; ) {
                                          var h = a.value,
                                              c = h.id,
                                              d = ys(r[c], s);
                                          null !== d && n.push({ plugin: h, options: ws(t.config, { plugin: h, local: i[c] }, d, o) });
                                      }
                                  } catch (t) {
                                      l.e(t);
                                  } finally {
                                      l.f();
                                  }
                                  return n;
                              })(t, s, r, e)
                            : [];
                    }
                    _notifyStateChanges(t) {
                        var e = this._oldCache || [],
                            i = this._cache,
                            r = (t, e) => t.filter((t) => !e.some((e) => t.plugin.id === e.plugin.id));
                        this._notify(r(e, i), t, "stop"), this._notify(r(i, e), t, "start");
                    }
                }
                function ys(t, e) {
                    return e || !1 !== t ? (!0 === t ? {} : t) : null;
                }
                function ws(t, { plugin: e, local: i }, r, s) {
                    var a = t.pluginScopeKeys(e),
                        n = t.getOptionScopes(r, a);
                    return i && e.defaults && n.push(e.defaults), t.createResolver(n, s, [""], { scriptable: !1, indexable: !1, allKeys: !0 });
                }
                function xs(t, e) {
                    var i = de.datasets[t] || {};
                    return ((e.datasets || {})[t] || {}).indexAxis || e.indexAxis || i.indexAxis || "x";
                }
                function Es(t) {
                    if ("x" === t || "y" === t || "r" === t) return t;
                }
                function Cs(t, ...e) {
                    if (Es(t)) return t;
                    for (var i = 0, r = e; i < r.length; i++) {
                        var s = r[i],
                            a = s.axis || ("top" === (n = s.position) || "bottom" === n ? "x" : "left" === n || "right" === n ? "y" : void 0) || (t.length > 1 && Es(t[0].toLowerCase()));
                        if (a) return a;
                    }
                    var n;
                    throw new Error(`Cannot determine type of '${t}' axis. Please provide 'axis' or 'position' option.`);
                }
                function Ss(t, e, i) {
                    if (i[e + "AxisID"] === t) return { axis: e };
                }
                function Ts(t, e) {
                    var i = ne[t.type] || { scales: {} },
                        r = e.scales || {},
                        s = xs(t.type, e),
                        a = Object.create(null);
                    return (
                        Object.keys(r).forEach((e) => {
                            var n = r[e];
                            if (!G(n)) return console.error(`Invalid scale configuration for scale: ${e}`);
                            if (n._proxy) return console.warn(`Ignoring resolver passed as options for scale: ${e}`);
                            var o = Cs(
                                    e,
                                    n,
                                    (function (t, e) {
                                        if (e.data && e.data.datasets) {
                                            var i = e.data.datasets.filter((e) => e.xAxisID === t || e.yAxisID === t);
                                            if (i.length) return Ss(t, "x", i[0]) || Ss(t, "y", i[0]);
                                        }
                                        return {};
                                    })(e, t),
                                    de.scales[n.type]
                                ),
                                l = (function (t, e) {
                                    return t === e ? "_index_" : "_value_";
                                })(o, s),
                                h = i.scales || {};
                            a[e] = it(Object.create(null), [{ axis: o }, n, h[o], h[l]]);
                        }),
                        t.data.datasets.forEach((i) => {
                            var s = i.type || t.type,
                                n = i.indexAxis || xs(s, e),
                                o = (ne[s] || {}).scales || {};
                            Object.keys(o).forEach((t) => {
                                var e = (function (t, e) {
                                        var i = t;
                                        return "_index_" === t ? (i = e) : "_value_" === t && (i = "x" === e ? "y" : "x"), i;
                                    })(t, n),
                                    s = i[e + "AxisID"] || e;
                                (a[s] = a[s] || Object.create(null)), it(a[s], [{ axis: e }, r[s], o[t]]);
                            });
                        }),
                        Object.keys(a).forEach((t) => {
                            var e = a[t];
                            it(e, [de.scales[e.type], de.scale]);
                        }),
                        a
                    );
                }
                function _s(t) {
                    var e = t.options || (t.options = {});
                    (e.plugins = U(e.plugins, {})), (e.scales = Ts(t, e));
                }
                function Ms(t) {
                    return ((t = t || {}).datasets = t.datasets || []), (t.labels = t.labels || []), t;
                }
                var Ps = new Map(),
                    ks = new Set();
                function As(t, e) {
                    var i = Ps.get(t);
                    return i || ((i = e()), Ps.set(t, i), ks.add(i)), i;
                }
                var Ds = (t, e, i) => {
                    var r = nt(e, i);
                    void 0 !== r && t.add(r);
                };
                class Ls {
                    constructor(t) {
                        (this._config = (function (t) {
                            return ((t = t || {}).data = Ms(t.data)), _s(t), t;
                        })(t)),
                            (this._scopeCache = new Map()),
                            (this._resolverCache = new Map());
                    }
                    get platform() {
                        return this._config.platform;
                    }
                    get type() {
                        return this._config.type;
                    }
                    set type(t) {
                        this._config.type = t;
                    }
                    get data() {
                        return this._config.data;
                    }
                    set data(t) {
                        this._config.data = Ms(t);
                    }
                    get options() {
                        return this._config.options;
                    }
                    set options(t) {
                        this._config.options = t;
                    }
                    get plugins() {
                        return this._config.plugins;
                    }
                    update() {
                        var t = this._config;
                        this.clearCache(), _s(t);
                    }
                    clearCache() {
                        this._scopeCache.clear(), this._resolverCache.clear();
                    }
                    datasetScopeKeys(t) {
                        return As(t, () => [[`datasets.${t}`, ""]]);
                    }
                    datasetAnimationScopeKeys(t, e) {
                        return As(`${t}.transition.${e}`, () => [
                            [`datasets.${t}.transitions.${e}`, `transitions.${e}`],
                            [`datasets.${t}`, ""],
                        ]);
                    }
                    datasetElementScopeKeys(t, e) {
                        return As(`${t}-${e}`, () => [[`datasets.${t}.elements.${e}`, `datasets.${t}`, `elements.${e}`, ""]]);
                    }
                    pluginScopeKeys(t) {
                        var e = t.id;
                        return As(`${this.type}-plugin-${e}`, () => [[`plugins.${e}`, ...(t.additionalOptionScopes || [])]]);
                    }
                    _cachedScopes(t, e) {
                        var i = this._scopeCache,
                            r = i.get(t);
                        return (r && !e) || ((r = new Map()), i.set(t, r)), r;
                    }
                    getOptionScopes(t, e, i) {
                        var r = this.options,
                            s = this.type,
                            a = this._cachedScopes(t, i),
                            n = a.get(e);
                        if (n) return n;
                        var o = new Set();
                        e.forEach((e) => {
                            t && (o.add(t), e.forEach((e) => Ds(o, t, e))), e.forEach((t) => Ds(o, r, t)), e.forEach((t) => Ds(o, ne[s] || {}, t)), e.forEach((t) => Ds(o, de, t)), e.forEach((t) => Ds(o, oe, t));
                        });
                        var l = Array.from(o);
                        return 0 === l.length && l.push(Object.create(null)), ks.has(e) && a.set(e, l), l;
                    }
                    chartOptionScopes() {
                        var t = this.options,
                            e = this.type;
                        return [t, ne[e] || {}, de.datasets[e] || {}, { type: e }, de, oe];
                    }
                    resolveNamedOptions(t, e, i, r = [""]) {
                        var s = { $shared: !0 },
                            a = Is(this._resolverCache, t, r),
                            n = a.resolver,
                            o = a.subPrefixes,
                            l = n;
                        (function (t, e) {
                            var i,
                                r = Ve(t),
                                s = r.isScriptable,
                                a = r.isIndexable,
                                n = Ri(e);
                            try {
                                for (n.s(); !(i = n.n()).done; ) {
                                    var o = i.value,
                                        l = s(o),
                                        h = a(o),
                                        c = (h || l) && t[o];
                                    if ((l && (ht(c) || Rs(c))) || (h && W(c))) return !0;
                                }
                            } catch (t) {
                                n.e(t);
                            } finally {
                                n.f();
                            }
                            return !1;
                        })(n, e) && ((s.$shared = !1), (l = Ne(n, (i = ht(i) ? i() : i), this.createResolver(t, i, o))));
                        var h,
                            c = Ri(e);
                        try {
                            for (c.s(); !(h = c.n()).done; ) {
                                var d = h.value;
                                s[d] = l[d];
                            }
                        } catch (t) {
                            c.e(t);
                        } finally {
                            c.f();
                        }
                        return s;
                    }
                    createResolver(t, e, i = [""], r) {
                        var s = Is(this._resolverCache, t, i).resolver;
                        return G(e) ? Ne(s, e, void 0, r) : s;
                    }
                }
                function Is(t, e, i) {
                    var r = t.get(e);
                    r || ((r = new Map()), t.set(e, r));
                    var s = i.join(),
                        a = r.get(s);
                    a || ((a = { resolver: ze(e, i), subPrefixes: i.filter((t) => !t.toLowerCase().includes("hover")) }), r.set(s, a));
                    return a;
                }
                var Rs = (t) => G(t) && Object.getOwnPropertyNames(t).some((e) => ht(t[e]));
                var Os = ["top", "bottom", "left", "right", "chartArea"];
                function Fs(t, e) {
                    return "top" === t || "bottom" === t || (-1 === Os.indexOf(t) && "x" === e);
                }
                function Bs(t, e) {
                    return function (i, r) {
                        return i[t] === r[t] ? i[e] - r[e] : i[t] - r[t];
                    };
                }
                function zs(t) {
                    var e = t.chart,
                        i = e.options.animation;
                    e.notifyPlugins("afterRender"), X(i && i.onComplete, [t], e);
                }
                function Ns(t) {
                    var e = t.chart,
                        i = e.options.animation;
                    X(i && i.onProgress, [t], e);
                }
                function Vs(t) {
                    return si() && "string" == typeof t ? (t = document.getElementById(t)) : t && t.length && (t = t[0]), t && t.canvas && (t = t.canvas), t;
                }
                var Hs = {},
                    js = (t) => {
                        var e = Vs(t);
                        return Object.values(Hs)
                            .filter((t) => t.canvas === e)
                            .pop();
                    };
                function Ws(t, e, i) {
                    for (var r = 0, s = Object.keys(t); r < s.length; r++) {
                        var a = s[r],
                            n = +a;
                        if (n >= e) {
                            var o = t[a];
                            delete t[a], (i > 0 || n > e) && (t[n + i] = o);
                        }
                    }
                }
                function Gs(t, e, i) {
                    return t.options.clip ? t[i] : e[i];
                }
                class qs {
                    static register(...t) {
                        vs.add(...t), $s();
                    }
                    static unregister(...t) {
                        vs.remove(...t), $s();
                    }
                    constructor(t, e) {
                        var i = (this.config = new Ls(e)),
                            r = Vs(t),
                            s = js(r);
                        if (s) throw new Error("Canvas is already in use. Chart with ID '" + s.id + "' must be destroyed before the canvas with ID '" + s.canvas.id + "' can be reused.");
                        var a = i.createResolver(i.chartOptionScopes(), this.getContext());
                        (this.platform = new (i.platform ||
                            (function (t) {
                                return !si() || ("undefined" != typeof OffscreenCanvas && t instanceof OffscreenCanvas) ? jr : rs;
                            })(r))()),
                            this.platform.updateConfig(i);
                        var n,
                            o,
                            l,
                            h = this.platform.acquireContext(r, a.aspectRatio),
                            c = h && h.canvas,
                            d = c && c.height,
                            u = c && c.width;
                        (this.id = H()),
                            (this.ctx = h),
                            (this.canvas = c),
                            (this.width = u),
                            (this.height = d),
                            (this._options = a),
                            (this._aspectRatio = this.aspectRatio),
                            (this._layers = []),
                            (this._metasets = []),
                            (this._stacks = void 0),
                            (this.boxes = []),
                            (this.currentDevicePixelRatio = void 0),
                            (this.chartArea = void 0),
                            (this._active = []),
                            (this._lastEvent = void 0),
                            (this._listeners = {}),
                            (this._responsiveListeners = void 0),
                            (this._sortedMetasets = []),
                            (this.scales = {}),
                            (this._plugins = new bs()),
                            (this.$proxies = {}),
                            (this._hiddenIndices = {}),
                            (this.attached = !1),
                            (this._animationsDisabled = void 0),
                            (this.$context = void 0),
                            (this._doResize =
                                ((n = (t) => this.update(t)),
                                (o = a.resizeDelay || 0),
                                function (...t) {
                                    return o ? (clearTimeout(l), (l = setTimeout(n, o, t))) : n.apply(this, t), o;
                                })),
                            (this._dataChanges = []),
                            (Hs[this.id] = this),
                            h && c
                                ? (zi.listen(this, "complete", zs), zi.listen(this, "progress", Ns), this._initialize(), this.attached && this.update())
                                : console.error("Failed to create chart: can't acquire context from the given item");
                    }
                    get aspectRatio() {
                        var t = this.options,
                            e = t.aspectRatio,
                            i = t.maintainAspectRatio,
                            r = this.width,
                            s = this.height,
                            a = this._aspectRatio;
                        return j(e) ? (i && a ? a : s ? r / s : null) : e;
                    }
                    get data() {
                        return this.config.data;
                    }
                    set data(t) {
                        this.config.data = t;
                    }
                    get options() {
                        return this._options;
                    }
                    set options(t) {
                        this.config.options = t;
                    }
                    get registry() {
                        return vs;
                    }
                    _initialize() {
                        return this.notifyPlugins("beforeInit"), this.options.responsive ? this.resize() : mi(this, this.options.devicePixelRatio), this.bindEvents(), this.notifyPlugins("afterInit"), this;
                    }
                    clear() {
                        return fe(this.canvas, this.ctx), this;
                    }
                    stop() {
                        return zi.stop(this), this;
                    }
                    resize(t, e) {
                        zi.running(this) ? (this._resizeBeforeDraw = { width: t, height: e }) : this._resize(t, e);
                    }
                    _resize(t, e) {
                        var i = this.options,
                            r = this.canvas,
                            s = i.maintainAspectRatio && this.aspectRatio,
                            a = this.platform.getMaximumSize(r, t, e, s),
                            n = i.devicePixelRatio || this.platform.getDevicePixelRatio(),
                            o = this.width ? "resize" : "attach";
                        (this.width = a.width),
                            (this.height = a.height),
                            (this._aspectRatio = this.aspectRatio),
                            mi(this, n, !0) && (this.notifyPlugins("resize", { size: a }), X(i.onResize, [this, a], this), this.attached && this._doResize(o) && this.render());
                    }
                    ensureScalesHaveIDs() {
                        K(this.options.scales || {}, (t, e) => {
                            t.id = e;
                        });
                    }
                    buildOrUpdateScales() {
                        var t = this.options,
                            e = t.scales,
                            i = this.scales,
                            r = Object.keys(i).reduce((t, e) => ((t[e] = !1), t), {}),
                            s = [];
                        e &&
                            (s = s.concat(
                                Object.keys(e).map((t) => {
                                    var i = e[t],
                                        r = Cs(t, i),
                                        s = "r" === r,
                                        a = "x" === r;
                                    return { options: i, dposition: s ? "chartArea" : a ? "bottom" : "left", dtype: s ? "radialLinear" : a ? "category" : "linear" };
                                })
                            )),
                            K(s, (e) => {
                                var s = e.options,
                                    a = s.id,
                                    n = Cs(a, s),
                                    o = U(s.type, e.dtype);
                                (void 0 !== s.position && Fs(s.position, n) === Fs(e.dposition)) || (s.position = e.dposition), (r[a] = !0);
                                var l = null;
                                a in i && i[a].type === o ? (l = i[a]) : ((l = new (vs.getScale(o))({ id: a, type: o, ctx: this.ctx, chart: this })), (i[l.id] = l));
                                l.init(s, t);
                            }),
                            K(r, (t, e) => {
                                t || delete i[e];
                            }),
                            K(i, (t) => {
                                Vr.configure(this, t, t.options), Vr.addBox(this, t);
                            });
                    }
                    _updateMetasets() {
                        var t = this._metasets,
                            e = this.data.datasets.length,
                            i = t.length;
                        if ((t.sort((t, e) => t.index - e.index), i > e)) {
                            for (var r = e; r < i; ++r) this._destroyDatasetMeta(r);
                            t.splice(e, i - e);
                        }
                        this._sortedMetasets = t.slice(0).sort(Bs("order", "index"));
                    }
                    _removeUnreferencedMetasets() {
                        var t = this._metasets,
                            e = this.data.datasets;
                        t.length > e.length && delete this._stacks,
                            t.forEach((t, i) => {
                                0 === e.filter((e) => e === t._dataset).length && this._destroyDatasetMeta(i);
                            });
                    }
                    buildOrUpdateControllers() {
                        var t,
                            e,
                            i = [],
                            r = this.data.datasets;
                        for (this._removeUnreferencedMetasets(), t = 0, e = r.length; t < e; t++) {
                            var s = r[t],
                                a = this.getDatasetMeta(t),
                                n = s.type || this.config.type;
                            if (
                                (a.type && a.type !== n && (this._destroyDatasetMeta(t), (a = this.getDatasetMeta(t))),
                                (a.type = n),
                                (a.indexAxis = s.indexAxis || xs(n, this.options)),
                                (a.order = s.order || 0),
                                (a.index = t),
                                (a.label = "" + s.label),
                                (a.visible = this.isDatasetVisible(t)),
                                a.controller)
                            )
                                a.controller.updateIndex(t), a.controller.linkScales();
                            else {
                                var o = vs.getController(n),
                                    l = de.datasets[n],
                                    h = l.datasetElementType,
                                    c = l.dataElementType;
                                Object.assign(o, { dataElementType: vs.getElement(c), datasetElementType: h && vs.getElement(h) }), (a.controller = new o(this, t)), i.push(a.controller);
                            }
                        }
                        return this._updateMetasets(), i;
                    }
                    _resetElements() {
                        K(
                            this.data.datasets,
                            (t, e) => {
                                this.getDatasetMeta(e).controller.reset();
                            },
                            this
                        );
                    }
                    reset() {
                        this._resetElements(), this.notifyPlugins("reset");
                    }
                    update(t) {
                        var e = this.config;
                        e.update();
                        var i = (this._options = e.createResolver(e.chartOptionScopes(), this.getContext())),
                            r = (this._animationsDisabled = !i.animation);
                        if ((this._updateScales(), this._checkEventBindings(), this._updateHiddenIndices(), this._plugins.invalidate(), !1 !== this.notifyPlugins("beforeUpdate", { mode: t, cancelable: !0 }))) {
                            var s = this.buildOrUpdateControllers();
                            this.notifyPlugins("beforeElementsUpdate");
                            for (var a = 0, n = 0, o = this.data.datasets.length; n < o; n++) {
                                var l = this.getDatasetMeta(n).controller,
                                    h = !r && -1 === s.indexOf(l);
                                l.buildOrUpdateElements(h), (a = Math.max(+l.getMaxOverflow(), a));
                            }
                            (a = this._minPadding = i.layout.autoPadding ? a : 0),
                                this._updateLayout(a),
                                r ||
                                    K(s, (t) => {
                                        t.reset();
                                    }),
                                this._updateDatasets(t),
                                this.notifyPlugins("afterUpdate", { mode: t }),
                                this._layers.sort(Bs("z", "_idx"));
                            var c = this._active,
                                d = this._lastEvent;
                            d ? this._eventHandler(d, !0) : c.length && this._updateHoverStyles(c, c, !0), this.render();
                        }
                    }
                    _updateScales() {
                        K(this.scales, (t) => {
                            Vr.removeBox(this, t);
                        }),
                            this.ensureScalesHaveIDs(),
                            this.buildOrUpdateScales();
                    }
                    _checkEventBindings() {
                        var t = this.options,
                            e = new Set(Object.keys(this._listeners)),
                            i = new Set(t.events);
                        (ct(e, i) && !!this._responsiveListeners === t.responsive) || (this.unbindEvents(), this.bindEvents());
                    }
                    _updateHiddenIndices() {
                        var t,
                            e = this._hiddenIndices,
                            i = Ri(this._getUniformDataChanges() || []);
                        try {
                            for (i.s(); !(t = i.n()).done; ) {
                                var r = t.value,
                                    s = r.method,
                                    a = r.start,
                                    n = r.count;
                                Ws(e, a, "_removeElements" === s ? -n : n);
                            }
                        } catch (t) {
                            i.e(t);
                        } finally {
                            i.f();
                        }
                    }
                    _getUniformDataChanges() {
                        var t = this._dataChanges;
                        if (t && t.length) {
                            this._dataChanges = [];
                            for (var e = this.data.datasets.length, i = (e) => new Set(t.filter((t) => t[0] === e).map((t, e) => e + "," + t.splice(1).join(","))), r = i(0), s = 1; s < e; s++) if (!ct(r, i(s))) return;
                            return Array.from(r)
                                .map((t) => t.split(","))
                                .map((t) => ({ method: t[1], start: +t[2], count: +t[3] }));
                        }
                    }
                    _updateLayout(t) {
                        if (!1 !== this.notifyPlugins("beforeLayout", { cancelable: !0 })) {
                            Vr.update(this, this.width, this.height, t);
                            var e = this.chartArea,
                                i = e.width <= 0 || e.height <= 0;
                            (this._layers = []),
                                K(
                                    this.boxes,
                                    (t) => {
                                        (i && "chartArea" === t.position) || (t.configure && t.configure(), this._layers.push(...t._layers()));
                                    },
                                    this
                                ),
                                this._layers.forEach((t, e) => {
                                    t._idx = e;
                                }),
                                this.notifyPlugins("afterLayout");
                        }
                    }
                    _updateDatasets(t) {
                        if (!1 !== this.notifyPlugins("beforeDatasetsUpdate", { mode: t, cancelable: !0 })) {
                            for (var e = 0, i = this.data.datasets.length; e < i; ++e) this.getDatasetMeta(e).controller.configure();
                            for (var r = 0, s = this.data.datasets.length; r < s; ++r) this._updateDataset(r, ht(t) ? t({ datasetIndex: r }) : t);
                            this.notifyPlugins("afterDatasetsUpdate", { mode: t });
                        }
                    }
                    _updateDataset(t, e) {
                        var i = this.getDatasetMeta(t),
                            r = { meta: i, index: t, mode: e, cancelable: !0 };
                        !1 !== this.notifyPlugins("beforeDatasetUpdate", r) && (i.controller._update(e), (r.cancelable = !1), this.notifyPlugins("afterDatasetUpdate", r));
                    }
                    render() {
                        !1 !== this.notifyPlugins("beforeRender", { cancelable: !0 }) && (zi.has(this) ? this.attached && !zi.running(this) && zi.start(this) : (this.draw(), zs({ chart: this })));
                    }
                    draw() {
                        var t;
                        if (this._resizeBeforeDraw) {
                            var e = this._resizeBeforeDraw,
                                i = e.width,
                                r = e.height;
                            this._resize(i, r), (this._resizeBeforeDraw = null);
                        }
                        if ((this.clear(), !(this.width <= 0 || this.height <= 0) && !1 !== this.notifyPlugins("beforeDraw", { cancelable: !0 }))) {
                            var s = this._layers;
                            for (t = 0; t < s.length && s[t].z <= 0; ++t) s[t].draw(this.chartArea);
                            for (this._drawDatasets(); t < s.length; ++t) s[t].draw(this.chartArea);
                            this.notifyPlugins("afterDraw");
                        }
                    }
                    _getSortedDatasetMetas(t) {
                        var e,
                            i,
                            r = this._sortedMetasets,
                            s = [];
                        for (e = 0, i = r.length; e < i; ++e) {
                            var a = r[e];
                            (t && !a.visible) || s.push(a);
                        }
                        return s;
                    }
                    getSortedVisibleDatasetMetas() {
                        return this._getSortedDatasetMetas(!0);
                    }
                    _drawDatasets() {
                        if (!1 !== this.notifyPlugins("beforeDatasetsDraw", { cancelable: !0 })) {
                            for (var t = this.getSortedVisibleDatasetMetas(), e = t.length - 1; e >= 0; --e) this._drawDataset(t[e]);
                            this.notifyPlugins("afterDatasetsDraw");
                        }
                    }
                    _drawDataset(t) {
                        var e = this.ctx,
                            i = t._clip,
                            r = !i.disabled,
                            s = (function (t, e) {
                                var i = t.xScale,
                                    r = t.yScale;
                                return i && r ? { left: Gs(i, e, "left"), right: Gs(i, e, "right"), top: Gs(r, e, "top"), bottom: Gs(r, e, "bottom") } : e;
                            })(t, this.chartArea),
                            a = { meta: t, index: t.index, cancelable: !0 };
                        !1 !== this.notifyPlugins("beforeDatasetDraw", a) &&
                            (r &&
                                ye(e, {
                                    left: !1 === i.left ? 0 : s.left - i.left,
                                    right: !1 === i.right ? this.width : s.right + i.right,
                                    top: !1 === i.top ? 0 : s.top - i.top,
                                    bottom: !1 === i.bottom ? this.height : s.bottom + i.bottom,
                                }),
                            t.controller.draw(),
                            r && we(e),
                            (a.cancelable = !1),
                            this.notifyPlugins("afterDatasetDraw", a));
                    }
                    isPointInArea(t) {
                        return be(t, this.chartArea, this._minPadding);
                    }
                    getElementsAtEventForMode(t, e, i, r) {
                        var s = Mr.modes[e];
                        return "function" == typeof s ? s(this, t, i, r) : [];
                    }
                    getDatasetMeta(t) {
                        var e = this.data.datasets[t],
                            i = this._metasets,
                            r = i.filter((t) => t && t._dataset === e).pop();
                        return r || ((r = { type: null, data: [], dataset: null, controller: null, hidden: null, xAxisID: null, yAxisID: null, order: (e && e.order) || 0, index: t, _dataset: e, _parsed: [], _sorted: !1 }), i.push(r)), r;
                    }
                    getContext() {
                        return this.$context || (this.$context = Be(null, { chart: this, type: "chart" }));
                    }
                    getVisibleDatasetCount() {
                        return this.getSortedVisibleDatasetMetas().length;
                    }
                    isDatasetVisible(t) {
                        var e = this.data.datasets[t];
                        if (!e) return !1;
                        var i = this.getDatasetMeta(t);
                        return "boolean" == typeof i.hidden ? !i.hidden : !e.hidden;
                    }
                    setDatasetVisibility(t, e) {
                        this.getDatasetMeta(t).hidden = !e;
                    }
                    toggleDataVisibility(t) {
                        this._hiddenIndices[t] = !this._hiddenIndices[t];
                    }
                    getDataVisibility(t) {
                        return !this._hiddenIndices[t];
                    }
                    _updateVisibility(t, e, i) {
                        var r = i ? "show" : "hide",
                            s = this.getDatasetMeta(t),
                            a = s.controller._resolveAnimations(void 0, r);
                        lt(e) ? ((s.data[e].hidden = !i), this.update()) : (this.setDatasetVisibility(t, i), a.update(s, { visible: i }), this.update((e) => (e.datasetIndex === t ? r : void 0)));
                    }
                    hide(t, e) {
                        this._updateVisibility(t, e, !1);
                    }
                    show(t, e) {
                        this._updateVisibility(t, e, !0);
                    }
                    _destroyDatasetMeta(t) {
                        var e = this._metasets[t];
                        e && e.controller && e.controller._destroy(), delete this._metasets[t];
                    }
                    _stop() {
                        var t, e;
                        for (this.stop(), zi.remove(this), t = 0, e = this.data.datasets.length; t < e; ++t) this._destroyDatasetMeta(t);
                    }
                    destroy() {
                        this.notifyPlugins("beforeDestroy");
                        var t = this.canvas,
                            e = this.ctx;
                        this._stop(), this.config.clearCache(), t && (this.unbindEvents(), fe(t, e), this.platform.releaseContext(e), (this.canvas = null), (this.ctx = null)), delete Hs[this.id], this.notifyPlugins("afterDestroy");
                    }
                    toBase64Image(...t) {
                        return this.canvas.toDataURL(...t);
                    }
                    bindEvents() {
                        this.bindUserEvents(), this.options.responsive ? this.bindResponsiveEvents() : (this.attached = !0);
                    }
                    bindUserEvents() {
                        var t = this._listeners,
                            e = this.platform,
                            i = (i, r) => {
                                e.addEventListener(this, i, r), (t[i] = r);
                            },
                            r = (t, e, i) => {
                                (t.offsetX = e), (t.offsetY = i), this._eventHandler(t);
                            };
                        K(this.options.events, (t) => i(t, r));
                    }
                    bindResponsiveEvents() {
                        this._responsiveListeners || (this._responsiveListeners = {});
                        var t,
                            e = this._responsiveListeners,
                            i = this.platform,
                            r = (t, r) => {
                                i.addEventListener(this, t, r), (e[t] = r);
                            },
                            s = (t, r) => {
                                e[t] && (i.removeEventListener(this, t, r), delete e[t]);
                            },
                            a = (t, e) => {
                                this.canvas && this.resize(t, e);
                            },
                            n = () => {
                                s("attach", n), (this.attached = !0), this.resize(), r("resize", a), r("detach", t);
                            };
                        (t = () => {
                            (this.attached = !1), s("resize", a), this._stop(), this._resize(0, 0), r("attach", n);
                        }),
                            i.isAttached(this.canvas) ? n() : t();
                    }
                    unbindEvents() {
                        K(this._listeners, (t, e) => {
                            this.platform.removeEventListener(this, e, t);
                        }),
                            (this._listeners = {}),
                            K(this._responsiveListeners, (t, e) => {
                                this.platform.removeEventListener(this, e, t);
                            }),
                            (this._responsiveListeners = void 0);
                    }
                    updateHoverStyle(t, e, i) {
                        var r,
                            s,
                            a,
                            n = i ? "set" : "remove";
                        for ("dataset" === e && this.getDatasetMeta(t[0].datasetIndex).controller["_" + n + "DatasetHoverStyle"](), s = 0, a = t.length; s < a; ++s) {
                            var o = (r = t[s]) && this.getDatasetMeta(r.datasetIndex).controller;
                            o && o[n + "HoverStyle"](r.element, r.datasetIndex, r.index);
                        }
                    }
                    getActiveElements() {
                        return this._active || [];
                    }
                    setActiveElements(t) {
                        var e = this._active || [],
                            i = t.map(({ datasetIndex: t, index: e }) => {
                                var i = this.getDatasetMeta(t);
                                if (!i) throw new Error("No dataset found at index " + t);
                                return { datasetIndex: t, element: i.data[e], index: e };
                            });
                        !Z(i, e) && ((this._active = i), (this._lastEvent = null), this._updateHoverStyles(i, e));
                    }
                    notifyPlugins(t, e, i) {
                        return this._plugins.notify(this, t, e, i);
                    }
                    isPluginEnabled(t) {
                        return 1 === this._plugins._cache.filter((e) => e.plugin.id === t).length;
                    }
                    _updateHoverStyles(t, e, i) {
                        var r = this.options.hover,
                            s = (t, e) => t.filter((t) => !e.some((e) => t.datasetIndex === e.datasetIndex && t.index === e.index)),
                            a = s(e, t),
                            n = i ? t : s(t, e);
                        a.length && this.updateHoverStyle(a, r.mode, !1), n.length && r.mode && this.updateHoverStyle(n, r.mode, !0);
                    }
                    _eventHandler(t, e) {
                        var i = { event: t, replay: e, cancelable: !0, inChartArea: this.isPointInArea(t) },
                            r = (e) => (e.options.events || this.options.events).includes(t.native.type);
                        if (!1 !== this.notifyPlugins("beforeEvent", i, r)) {
                            var s = this._handleEvent(t, e, i.inChartArea);
                            return (i.cancelable = !1), this.notifyPlugins("afterEvent", i, r), (s || i.changed) && this.render(), this;
                        }
                    }
                    _handleEvent(t, e, i) {
                        var r = this._active,
                            s = void 0 === r ? [] : r,
                            a = this.options,
                            n = e,
                            o = this._getActiveElements(t, s, i, n),
                            l = (function (t) {
                                return "mouseup" === t.type || "click" === t.type || "contextmenu" === t.type;
                            })(t),
                            h = (function (t, e, i, r) {
                                return i && "mouseout" !== t.type ? (r ? e : t) : null;
                            })(t, this._lastEvent, i, l);
                        i && ((this._lastEvent = null), X(a.onHover, [t, o, this], this), l && X(a.onClick, [t, o, this], this));
                        var c = !Z(o, s);
                        return (c || e) && ((this._active = o), this._updateHoverStyles(o, s, e)), (this._lastEvent = h), c;
                    }
                    _getActiveElements(t, e, i, r) {
                        if ("mouseout" === t.type) return [];
                        if (!i) return e;
                        var s = this.options.hover;
                        return this.getElementsAtEventForMode(t, s.mode, s, r);
                    }
                }
                function $s() {
                    return K(qs.instances, (t) => t._plugins.invalidate());
                }
                function Us(t, e, i, r) {
                    var s = De(t.options.borderRadius, ["outerStart", "outerEnd", "innerStart", "innerEnd"]),
                        a = (i - e) / 2,
                        n = Math.min(a, (r * e) / 2),
                        o = (t) => {
                            var e = ((i - Math.min(a, t)) * r) / 2;
                            return It(t, 0, Math.min(a, e));
                        };
                    return { outerStart: o(s.outerStart), outerEnd: o(s.outerEnd), innerStart: It(s.innerStart, 0, n), innerEnd: It(s.innerEnd, 0, n) };
                }
                function Ys(t, e, i, r) {
                    return { x: i + t * Math.cos(e), y: r + t * Math.sin(e) };
                }
                function Xs(t, e, i, r, s, a) {
                    var n = e.x,
                        o = e.y,
                        l = e.startAngle,
                        h = e.pixelMargin,
                        c = e.innerRadius,
                        d = Math.max(e.outerRadius + r + i - h, 0),
                        u = c > 0 ? c + r + i + h : 0,
                        p = 0,
                        m = s - l;
                    if (r) {
                        var f = ((c > 0 ? c - r : 0) + (d > 0 ? d - r : 0)) / 2;
                        p = (m - (0 !== f ? (m * f) / (f + r) : m)) / 2;
                    }
                    var g = (m - Math.max(0.001, m * d - i / dt) / d) / 2,
                        v = l + g + p,
                        b = s - g - p,
                        y = Us(e, u, d, b - v),
                        w = y.outerStart,
                        x = y.outerEnd,
                        E = y.innerStart,
                        C = y.innerEnd,
                        S = d - w,
                        T = d - x,
                        _ = v + w / S,
                        M = b - x / T,
                        P = u + E,
                        k = u + C,
                        A = v + E / P,
                        D = b - C / k;
                    if ((t.beginPath(), a)) {
                        var L = (_ + M) / 2;
                        if ((t.arc(n, o, d, _, L), t.arc(n, o, d, L, M), x > 0)) {
                            var I = Ys(T, M, n, o);
                            t.arc(I.x, I.y, x, M, b + gt);
                        }
                        var R = Ys(k, b, n, o);
                        if ((t.lineTo(R.x, R.y), C > 0)) {
                            var O = Ys(k, D, n, o);
                            t.arc(O.x, O.y, C, b + gt, D + Math.PI);
                        }
                        var F = (b - C / u + (v + E / u)) / 2;
                        if ((t.arc(n, o, u, b - C / u, F, !0), t.arc(n, o, u, F, v + E / u, !0), E > 0)) {
                            var B = Ys(P, A, n, o);
                            t.arc(B.x, B.y, E, A + Math.PI, v - gt);
                        }
                        var z = Ys(S, v, n, o);
                        if ((t.lineTo(z.x, z.y), w > 0)) {
                            var N = Ys(S, _, n, o);
                            t.arc(N.x, N.y, w, v - gt, _);
                        }
                    } else {
                        t.moveTo(n, o);
                        var V = Math.cos(_) * d + n,
                            H = Math.sin(_) * d + o;
                        t.lineTo(V, H);
                        var j = Math.cos(M) * d + n,
                            W = Math.sin(M) * d + o;
                        t.lineTo(j, W);
                    }
                    t.closePath();
                }
                function Ks(t, e, i, r, s) {
                    var a = e.fullCircles,
                        n = e.startAngle,
                        o = e.circumference,
                        l = e.options,
                        h = l.borderWidth,
                        c = l.borderJoinStyle,
                        d = l.borderDash,
                        u = l.borderDashOffset,
                        p = "inner" === l.borderAlign;
                    if (h) {
                        t.setLineDash(d || []), (t.lineDashOffset = u), p ? ((t.lineWidth = 2 * h), (t.lineJoin = c || "round")) : ((t.lineWidth = h), (t.lineJoin = c || "bevel"));
                        var m = e.endAngle;
                        if (a) {
                            Xs(t, e, i, r, m, s);
                            for (var f = 0; f < a; ++f) t.stroke();
                            isNaN(o) || (m = n + (o % ut || ut));
                        }
                        p &&
                            (function (t, e, i) {
                                var r = e.startAngle,
                                    s = e.pixelMargin,
                                    a = e.x,
                                    n = e.y,
                                    o = e.outerRadius,
                                    l = e.innerRadius,
                                    h = s / o;
                                t.beginPath(), t.arc(a, n, o, r - h, i + h), l > s ? ((h = s / l), t.arc(a, n, l, i + h, r - h, !0)) : t.arc(a, n, s, i + gt, r - gt), t.closePath(), t.clip();
                            })(t, e, m),
                            a || (Xs(t, e, i, r, m, s), t.stroke());
                    }
                }
                Ii(qs, "defaults", de), Ii(qs, "instances", Hs), Ii(qs, "overrides", ne), Ii(qs, "registry", vs), Ii(qs, "version", "4.4.1"), Ii(qs, "getChart", js);
                class Zs extends ss {
                    constructor(t) {
                        super(),
                            Ii(this, "circumference", void 0),
                            Ii(this, "endAngle", void 0),
                            Ii(this, "fullCircles", void 0),
                            Ii(this, "innerRadius", void 0),
                            Ii(this, "outerRadius", void 0),
                            Ii(this, "pixelMargin", void 0),
                            Ii(this, "startAngle", void 0),
                            (this.options = void 0),
                            (this.circumference = void 0),
                            (this.startAngle = void 0),
                            (this.endAngle = void 0),
                            (this.innerRadius = void 0),
                            (this.outerRadius = void 0),
                            (this.pixelMargin = 0),
                            (this.fullCircles = 0),
                            t && Object.assign(this, t);
                    }
                    inRange(t, e, i) {
                        var r = Pt(this.getProps(["x", "y"], i), { x: t, y: e }),
                            s = r.angle,
                            a = r.distance,
                            n = this.getProps(["startAngle", "endAngle", "innerRadius", "outerRadius", "circumference"], i),
                            o = n.startAngle,
                            l = n.endAngle,
                            h = n.innerRadius,
                            c = n.outerRadius,
                            d = n.circumference,
                            u = (this.options.spacing + this.options.borderWidth) / 2,
                            p = U(d, l - o) >= ut || Lt(s, o, l),
                            m = Rt(a, h + u, c + u);
                        return p && m;
                    }
                    getCenterPoint(t) {
                        var e = this.getProps(["x", "y", "startAngle", "endAngle", "innerRadius", "outerRadius"], t),
                            i = e.x,
                            r = e.y,
                            s = e.startAngle,
                            a = e.endAngle,
                            n = e.innerRadius,
                            o = e.outerRadius,
                            l = this.options,
                            h = l.offset,
                            c = (s + a) / 2,
                            d = (n + o + l.spacing + h) / 2;
                        return { x: i + Math.cos(c) * d, y: r + Math.sin(c) * d };
                    }
                    tooltipPosition(t) {
                        return this.getCenterPoint(t);
                    }
                    draw(t) {
                        var e = this.options,
                            i = this.circumference,
                            r = (e.offset || 0) / 4,
                            s = (e.spacing || 0) / 2,
                            a = e.circular;
                        if (((this.pixelMargin = "inner" === e.borderAlign ? 0.33 : 0), (this.fullCircles = i > ut ? Math.floor(i / ut) : 0), !(0 === i || this.innerRadius < 0 || this.outerRadius < 0))) {
                            t.save();
                            var n = (this.startAngle + this.endAngle) / 2;
                            t.translate(Math.cos(n) * r, Math.sin(n) * r);
                            var o = r * (1 - Math.sin(Math.min(dt, i || 0)));
                            (t.fillStyle = e.backgroundColor),
                                (t.strokeStyle = e.borderColor),
                                (function (t, e, i, r, s) {
                                    var a = e.fullCircles,
                                        n = e.startAngle,
                                        o = e.circumference,
                                        l = e.endAngle;
                                    if (a) {
                                        Xs(t, e, i, r, l, s);
                                        for (var h = 0; h < a; ++h) t.fill();
                                        isNaN(o) || (l = n + (o % ut || ut));
                                    }
                                    Xs(t, e, i, r, l, s), t.fill();
                                })(t, this, o, s, a),
                                Ks(t, this, o, s, a),
                                t.restore();
                        }
                    }
                }
                function Js(t, e, i = e) {
                    (t.lineCap = U(i.borderCapStyle, e.borderCapStyle)),
                        t.setLineDash(U(i.borderDash, e.borderDash)),
                        (t.lineDashOffset = U(i.borderDashOffset, e.borderDashOffset)),
                        (t.lineJoin = U(i.borderJoinStyle, e.borderJoinStyle)),
                        (t.lineWidth = U(i.borderWidth, e.borderWidth)),
                        (t.strokeStyle = U(i.borderColor, e.borderColor));
                }
                function Qs(t, e, i) {
                    t.lineTo(i.x, i.y);
                }
                function ta(t, e, i = {}) {
                    var r = t.length,
                        s = i.start,
                        a = void 0 === s ? 0 : s,
                        n = i.end,
                        o = void 0 === n ? r - 1 : n,
                        l = e.start,
                        h = e.end,
                        c = Math.max(a, l),
                        d = Math.min(o, h),
                        u = (a < l && o < l) || (a > h && o > h);
                    return { count: r, start: c, loop: e.loop, ilen: d < c && !u ? r + d - c : d - c };
                }
                function ea(t, e, i, r) {
                    var s,
                        a,
                        n,
                        o = e.points,
                        l = e.options,
                        h = ta(o, i, r),
                        c = h.count,
                        d = h.start,
                        u = h.loop,
                        p = h.ilen,
                        m = (function (t) {
                            return t.stepped ? xe : t.tension || "monotone" === t.cubicInterpolationMode ? Ee : Qs;
                        })(l),
                        f = r || {},
                        g = f.move,
                        v = void 0 === g || g,
                        b = f.reverse;
                    for (s = 0; s <= p; ++s) (a = o[(d + (b ? p - s : s)) % c]).skip || (v ? (t.moveTo(a.x, a.y), (v = !1)) : m(t, n, a, b, l.stepped), (n = a));
                    return u && m(t, n, (a = o[(d + (b ? p : 0)) % c]), b, l.stepped), !!u;
                }
                function ia(t, e, i, r) {
                    var s,
                        a,
                        n,
                        o,
                        l,
                        h,
                        c = e.points,
                        d = ta(c, i, r),
                        u = d.count,
                        p = d.start,
                        m = d.ilen,
                        f = r || {},
                        g = f.move,
                        v = void 0 === g || g,
                        b = f.reverse,
                        y = 0,
                        w = 0,
                        x = (t) => (p + (b ? m - t : t)) % u,
                        E = () => {
                            o !== l && (t.lineTo(y, l), t.lineTo(y, o), t.lineTo(y, h));
                        };
                    for (v && ((a = c[x(0)]), t.moveTo(a.x, a.y)), s = 0; s <= m; ++s)
                        if (!(a = c[x(s)]).skip) {
                            var C = a.x,
                                S = a.y,
                                T = 0 | C;
                            T === n ? (S < o ? (o = S) : S > l && (l = S), (y = (w * y + C) / ++w)) : (E(), t.lineTo(C, S), (n = T), (w = 0), (o = l = S)), (h = S);
                        }
                    E();
                }
                function ra(t) {
                    var e = t.options,
                        i = e.borderDash && e.borderDash.length;
                    return !(t._decimated || t._loop || e.tension || "monotone" === e.cubicInterpolationMode || e.stepped || i) ? ia : ea;
                }
                Ii(Zs, "id", "arc"),
                    Ii(Zs, "defaults", { borderAlign: "center", borderColor: "#fff", borderDash: [], borderDashOffset: 0, borderJoinStyle: void 0, borderRadius: 0, borderWidth: 2, offset: 0, spacing: 0, angle: void 0, circular: !0 }),
                    Ii(Zs, "defaultRoutes", { backgroundColor: "backgroundColor" }),
                    Ii(Zs, "descriptors", { _scriptable: !0, _indexable: (t) => "borderDash" !== t });
                var sa = "function" == typeof Path2D;
                function aa(t, e, i, r) {
                    sa && !e.options.segment
                        ? (function (t, e, i, r) {
                              var s = e._path;
                              s || ((s = e._path = new Path2D()), e.path(s, i, r) && s.closePath()), Js(t, e.options), t.stroke(s);
                          })(t, e, i, r)
                        : (function (t, e, i, r) {
                              var s,
                                  a = e.segments,
                                  n = e.options,
                                  o = ra(e),
                                  l = Ri(a);
                              try {
                                  for (l.s(); !(s = l.n()).done; ) {
                                      var h = s.value;
                                      Js(t, n, h.style), t.beginPath(), o(t, e, h, { start: i, end: i + r - 1 }) && t.closePath(), t.stroke();
                                  }
                              } catch (t) {
                                  l.e(t);
                              } finally {
                                  l.f();
                              }
                          })(t, e, i, r);
                }
                class na extends ss {
                    constructor(t) {
                        super(),
                            (this.animated = !0),
                            (this.options = void 0),
                            (this._chart = void 0),
                            (this._loop = void 0),
                            (this._fullLoop = void 0),
                            (this._path = void 0),
                            (this._points = void 0),
                            (this._segments = void 0),
                            (this._decimated = !1),
                            (this._pointsUpdated = !1),
                            (this._datasetIndex = void 0),
                            t && Object.assign(this, t);
                    }
                    updateControlPoints(t, e) {
                        var i = this.options;
                        if ((i.tension || "monotone" === i.cubicInterpolationMode) && !i.stepped && !this._pointsUpdated) {
                            var r = i.spanGaps ? this._loop : this._fullLoop;
                            ri(this._points, i, t, r, e), (this._pointsUpdated = !0);
                        }
                    }
                    set points(t) {
                        (this._points = t), delete this._segments, delete this._path, (this._pointsUpdated = !1);
                    }
                    get points() {
                        return this._points;
                    }
                    get segments() {
                        return (
                            this._segments ||
                            (this._segments = (function (t, e) {
                                var i = t.points,
                                    r = t.options.spanGaps,
                                    s = i.length;
                                if (!s) return [];
                                var a = !!t._loop,
                                    n = (function (t, e, i, r) {
                                        var s = 0,
                                            a = e - 1;
                                        if (i && !r) for (; s < e && !t[s].skip; ) s++;
                                        for (; s < e && t[s].skip; ) s++;
                                        for (s %= e, i && (a += s); a > s && t[a % e].skip; ) a--;
                                        return { start: s, end: (a %= e) };
                                    })(i, s, a, r),
                                    o = n.start,
                                    l = n.end;
                                return Mi(
                                    t,
                                    !0 === r
                                        ? [{ start: o, end: l, loop: a }]
                                        : (function (t, e, i, r) {
                                              var s,
                                                  a = t.length,
                                                  n = [],
                                                  o = e,
                                                  l = t[e];
                                              for (s = e + 1; s <= i; ++s) {
                                                  var h = t[s % a];
                                                  h.skip || h.stop ? l.skip || ((r = !1), n.push({ start: e % a, end: (s - 1) % a, loop: r }), (e = o = h.stop ? s : null)) : ((o = s), l.skip && (e = s)), (l = h);
                                              }
                                              return null !== o && n.push({ start: e % a, end: o % a, loop: r }), n;
                                          })(i, o, l < o ? l + s : l, !!t._fullLoop && 0 === o && l === s - 1),
                                    i,
                                    e
                                );
                            })(this, this.options.segment))
                        );
                    }
                    first() {
                        var t = this.segments,
                            e = this.points;
                        return t.length && e[t[0].start];
                    }
                    last() {
                        var t = this.segments,
                            e = this.points,
                            i = t.length;
                        return i && e[t[i - 1].end];
                    }
                    interpolate(t, e) {
                        var i = this.options,
                            r = t[e],
                            s = this.points,
                            a = _i(this, { property: e, start: r, end: r });
                        if (a.length) {
                            var n,
                                o,
                                l = [],
                                h = (function (t) {
                                    return t.stepped ? bi : t.tension || "monotone" === t.cubicInterpolationMode ? yi : vi;
                                })(i);
                            for (n = 0, o = a.length; n < o; ++n) {
                                var c = a[n],
                                    d = c.start,
                                    u = c.end,
                                    p = s[d],
                                    m = s[u];
                                if (p !== m) {
                                    var f = h(p, m, Math.abs((r - p[e]) / (m[e] - p[e])), i.stepped);
                                    (f[e] = t[e]), l.push(f);
                                } else l.push(p);
                            }
                            return 1 === l.length ? l[0] : l;
                        }
                    }
                    pathSegment(t, e, i) {
                        return ra(this)(t, this, e, i);
                    }
                    path(t, e, i) {
                        var r = this.segments,
                            s = ra(this),
                            a = this._loop;
                        (e = e || 0), (i = i || this.points.length - e);
                        var n,
                            o = Ri(r);
                        try {
                            for (o.s(); !(n = o.n()).done; ) {
                                a &= s(t, this, n.value, { start: e, end: e + i - 1 });
                            }
                        } catch (t) {
                            o.e(t);
                        } finally {
                            o.f();
                        }
                        return !!a;
                    }
                    draw(t, e, i, r) {
                        var s = this.options || {};
                        (this.points || []).length && s.borderWidth && (t.save(), aa(t, this, i, r), t.restore()), this.animated && ((this._pointsUpdated = !1), (this._path = void 0));
                    }
                }
                function oa(t, e, i, r) {
                    var s = t.options,
                        a = t.getProps([i], r)[i];
                    return Math.abs(e - a) < s.radius + s.hitRadius;
                }
                Ii(na, "id", "line"),
                    Ii(na, "defaults", {
                        borderCapStyle: "butt",
                        borderDash: [],
                        borderDashOffset: 0,
                        borderJoinStyle: "miter",
                        borderWidth: 3,
                        capBezierPoints: !0,
                        cubicInterpolationMode: "default",
                        fill: !1,
                        spanGaps: !1,
                        stepped: !1,
                        tension: 0,
                    }),
                    Ii(na, "defaultRoutes", { backgroundColor: "backgroundColor", borderColor: "borderColor" }),
                    Ii(na, "descriptors", { _scriptable: !0, _indexable: (t) => "borderDash" !== t && "fill" !== t });
                class la extends ss {
                    constructor(t) {
                        super(), Ii(this, "parsed", void 0), Ii(this, "skip", void 0), Ii(this, "stop", void 0), (this.options = void 0), (this.parsed = void 0), (this.skip = void 0), (this.stop = void 0), t && Object.assign(this, t);
                    }
                    inRange(t, e, i) {
                        var r = this.options,
                            s = this.getProps(["x", "y"], i),
                            a = s.x,
                            n = s.y;
                        return Math.pow(t - a, 2) + Math.pow(e - n, 2) < Math.pow(r.hitRadius + r.radius, 2);
                    }
                    inXRange(t, e) {
                        return oa(this, t, "x", e);
                    }
                    inYRange(t, e) {
                        return oa(this, t, "y", e);
                    }
                    getCenterPoint(t) {
                        var e = this.getProps(["x", "y"], t);
                        return { x: e.x, y: e.y };
                    }
                    size(t) {
                        var e = (t = t || this.options || {}).radius || 0;
                        return 2 * ((e = Math.max(e, (e && t.hoverRadius) || 0)) + ((e && t.borderWidth) || 0));
                    }
                    draw(t, e) {
                        var i = this.options;
                        this.skip || i.radius < 0.1 || !be(this, e, this.size(i) / 2) || ((t.strokeStyle = i.borderColor), (t.lineWidth = i.borderWidth), (t.fillStyle = i.backgroundColor), ge(t, i, this.x, this.y));
                    }
                    getRange() {
                        var t = this.options || {};
                        return t.radius + t.hitRadius;
                    }
                }
                function ha(t, e) {
                    var i,
                        r,
                        s,
                        a,
                        n,
                        o = t.getProps(["x", "y", "base", "width", "height"], e),
                        l = o.x,
                        h = o.y,
                        c = o.base,
                        d = o.width,
                        u = o.height;
                    return (
                        t.horizontal ? ((n = u / 2), (i = Math.min(l, c)), (r = Math.max(l, c)), (s = h - n), (a = h + n)) : ((i = l - (n = d / 2)), (r = l + n), (s = Math.min(h, c)), (a = Math.max(h, c))),
                        { left: i, top: s, right: r, bottom: a }
                    );
                }
                function ca(t, e, i, r) {
                    return t ? 0 : It(e, i, r);
                }
                function da(t) {
                    var e = ha(t),
                        i = e.right - e.left,
                        r = e.bottom - e.top,
                        s = (function (t, e, i) {
                            var r = t.options.borderWidth,
                                s = t.borderSkipped,
                                a = Le(r);
                            return { t: ca(s.top, a.top, 0, i), r: ca(s.right, a.right, 0, e), b: ca(s.bottom, a.bottom, 0, i), l: ca(s.left, a.left, 0, e) };
                        })(t, i / 2, r / 2),
                        a = (function (t, e, i) {
                            var r = t.getProps(["enableBorderRadius"]).enableBorderRadius,
                                s = t.options.borderRadius,
                                a = Ie(s),
                                n = Math.min(e, i),
                                o = t.borderSkipped,
                                l = r || G(s);
                            return {
                                topLeft: ca(!l || o.top || o.left, a.topLeft, 0, n),
                                topRight: ca(!l || o.top || o.right, a.topRight, 0, n),
                                bottomLeft: ca(!l || o.bottom || o.left, a.bottomLeft, 0, n),
                                bottomRight: ca(!l || o.bottom || o.right, a.bottomRight, 0, n),
                            };
                        })(t, i / 2, r / 2);
                    return {
                        outer: { x: e.left, y: e.top, w: i, h: r, radius: a },
                        inner: {
                            x: e.left + s.l,
                            y: e.top + s.t,
                            w: i - s.l - s.r,
                            h: r - s.t - s.b,
                            radius: {
                                topLeft: Math.max(0, a.topLeft - Math.max(s.t, s.l)),
                                topRight: Math.max(0, a.topRight - Math.max(s.t, s.r)),
                                bottomLeft: Math.max(0, a.bottomLeft - Math.max(s.b, s.l)),
                                bottomRight: Math.max(0, a.bottomRight - Math.max(s.b, s.r)),
                            },
                        },
                    };
                }
                function ua(t, e, i, r) {
                    var s = null === e,
                        a = null === i,
                        n = t && !(s && a) && ha(t, r);
                    return n && (s || Rt(e, n.left, n.right)) && (a || Rt(i, n.top, n.bottom));
                }
                function pa(t, e) {
                    t.rect(e.x, e.y, e.w, e.h);
                }
                function ma(t, e, i = {}) {
                    var r = t.x !== i.x ? -e : 0,
                        s = t.y !== i.y ? -e : 0,
                        a = (t.x + t.w !== i.x + i.w ? e : 0) - r,
                        n = (t.y + t.h !== i.y + i.h ? e : 0) - s;
                    return { x: t.x + r, y: t.y + s, w: t.w + a, h: t.h + n, radius: t.radius };
                }
                Ii(la, "id", "point"),
                    Ii(la, "defaults", { borderWidth: 1, hitRadius: 1, hoverBorderWidth: 1, hoverRadius: 4, pointStyle: "circle", radius: 3, rotation: 0 }),
                    Ii(la, "defaultRoutes", { backgroundColor: "backgroundColor", borderColor: "borderColor" });
                class fa extends ss {
                    constructor(t) {
                        super(), (this.options = void 0), (this.horizontal = void 0), (this.base = void 0), (this.width = void 0), (this.height = void 0), (this.inflateAmount = void 0), t && Object.assign(this, t);
                    }
                    draw(t) {
                        var e,
                            i = this.inflateAmount,
                            r = this.options,
                            s = r.borderColor,
                            a = r.backgroundColor,
                            n = da(this),
                            o = n.inner,
                            l = n.outer,
                            h = (e = l.radius).topLeft || e.topRight || e.bottomLeft || e.bottomRight ? _e : pa;
                        t.save(),
                            (l.w === o.w && l.h === o.h) || (t.beginPath(), h(t, ma(l, i, o)), t.clip(), h(t, ma(o, -i, l)), (t.fillStyle = s), t.fill("evenodd")),
                            t.beginPath(),
                            h(t, ma(o, i)),
                            (t.fillStyle = a),
                            t.fill(),
                            t.restore();
                    }
                    inRange(t, e, i) {
                        return ua(this, t, e, i);
                    }
                    inXRange(t, e) {
                        return ua(this, t, null, e);
                    }
                    inYRange(t, e) {
                        return ua(this, null, t, e);
                    }
                    getCenterPoint(t) {
                        var e = this.getProps(["x", "y", "base", "horizontal"], t),
                            i = e.x,
                            r = e.y,
                            s = e.base,
                            a = e.horizontal;
                        return { x: a ? (i + s) / 2 : i, y: a ? r : (r + s) / 2 };
                    }
                    getRange(t) {
                        return "x" === t ? this.width / 2 : this.height / 2;
                    }
                }
                Ii(fa, "id", "bar"),
                    Ii(fa, "defaults", { borderSkipped: "start", borderWidth: 0, borderRadius: 0, inflateAmount: "auto", pointStyle: void 0 }),
                    Ii(fa, "defaultRoutes", { backgroundColor: "backgroundColor", borderColor: "borderColor" });
                var ga = Object.freeze({ __proto__: null, ArcElement: Zs, BarElement: fa, LineElement: na, PointElement: la }),
                    va = ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
                    ba = va.map((t) => t.replace("rgb(", "rgba(").replace(")", ", 0.5)"));
                function ya(t) {
                    return va[t % va.length];
                }
                function wa(t) {
                    return ba[t % ba.length];
                }
                function xa(t) {
                    var e = 0;
                    return (i, r) => {
                        var s = t.getDatasetMeta(r).controller;
                        s instanceof dr
                            ? (e = (function (t, e) {
                                  return (t.backgroundColor = t.data.map(() => ya(e++))), e;
                              })(i, e))
                            : s instanceof pr
                            ? (e = (function (t, e) {
                                  return (t.backgroundColor = t.data.map(() => wa(e++))), e;
                              })(i, e))
                            : s &&
                              (e = (function (t, e) {
                                  return (t.borderColor = ya(e)), (t.backgroundColor = wa(e)), ++e;
                              })(i, e));
                    };
                }
                function Ea(t) {
                    var e;
                    for (e in t) if (t[e].borderColor || t[e].backgroundColor) return !0;
                    return !1;
                }
                var Ca = {
                    id: "colors",
                    defaults: { enabled: !0, forceOverride: !1 },
                    beforeLayout(t, e, i) {
                        if (i.enabled) {
                            var r = t.config,
                                s = r.data.datasets,
                                a = r.options,
                                n = a.elements;
                            if (i.forceOverride || !(Ea(s) || ((o = a), o && (o.borderColor || o.backgroundColor)) || (n && Ea(n)))) {
                                var o,
                                    l = xa(t);
                                s.forEach(l);
                            }
                        }
                    },
                };
                function Sa(t) {
                    if (t._decimated) {
                        var e = t._data;
                        delete t._decimated, delete t._data, Object.defineProperty(t, "data", { configurable: !0, enumerable: !0, writable: !0, value: e });
                    }
                }
                function Ta(t) {
                    t.data.datasets.forEach((t) => {
                        Sa(t);
                    });
                }
                var _a = {
                    id: "decimation",
                    defaults: { algorithm: "min-max", enabled: !1 },
                    beforeElementsUpdate: (t, e, i) => {
                        if (i.enabled) {
                            var r = t.width;
                            t.data.datasets.forEach((e, s) => {
                                var a = e._data,
                                    n = e.indexAxis,
                                    o = t.getDatasetMeta(s),
                                    l = a || e.data;
                                if ("y" !== Fe([n, t.options.indexAxis]) && o.controller.supportsDecimation) {
                                    var h = t.scales[o.xAxisID];
                                    if (("linear" === h.type || "time" === h.type) && !t.options.parsing) {
                                        var c = (function (t, e) {
                                                var i = e.length,
                                                    r = 0,
                                                    s = t.iScale,
                                                    a = s.getUserBounds(),
                                                    n = a.min,
                                                    o = a.max,
                                                    l = a.minDefined,
                                                    h = a.maxDefined;
                                                return l && (r = It(Ft(e, s.axis, n).lo, 0, i - 1)), { start: r, count: h ? It(Ft(e, s.axis, o).hi + 1, r, i) - r : i - r };
                                            })(o, l),
                                            d = c.start,
                                            u = c.count;
                                        if (u <= (i.threshold || 4 * r)) Sa(e);
                                        else {
                                            var p;
                                            switch (
                                                (j(a) &&
                                                    ((e._data = l),
                                                    delete e.data,
                                                    Object.defineProperty(e, "data", {
                                                        configurable: !0,
                                                        enumerable: !0,
                                                        get: function () {
                                                            return this._decimated;
                                                        },
                                                        set: function (t) {
                                                            this._data = t;
                                                        },
                                                    })),
                                                i.algorithm)
                                            ) {
                                                case "lttb":
                                                    p = (function (t, e, i, r, s) {
                                                        var a = s.samples || r;
                                                        if (a >= i) return t.slice(e, e + i);
                                                        var n,
                                                            o,
                                                            l,
                                                            h,
                                                            c,
                                                            d = [],
                                                            u = (i - 2) / (a - 2),
                                                            p = 0,
                                                            m = e + i - 1,
                                                            f = e;
                                                        for (d[p++] = t[f], n = 0; n < a - 2; n++) {
                                                            var g = 0,
                                                                v = 0,
                                                                b = void 0,
                                                                y = Math.floor((n + 1) * u) + 1 + e,
                                                                w = Math.min(Math.floor((n + 2) * u) + 1, i) + e,
                                                                x = w - y;
                                                            for (b = y; b < w; b++) (g += t[b].x), (v += t[b].y);
                                                            (g /= x), (v /= x);
                                                            var E = Math.floor(n * u) + 1 + e,
                                                                C = Math.min(Math.floor((n + 1) * u) + 1, i) + e,
                                                                S = t[f],
                                                                T = S.x,
                                                                _ = S.y;
                                                            for (l = h = -1, b = E; b < C; b++) (h = 0.5 * Math.abs((T - g) * (t[b].y - _) - (T - t[b].x) * (v - _))) > l && ((l = h), (o = t[b]), (c = b));
                                                            (d[p++] = o), (f = c);
                                                        }
                                                        return (d[p++] = t[m]), d;
                                                    })(l, d, u, r, i);
                                                    break;
                                                case "min-max":
                                                    p = (function (t, e, i, r) {
                                                        var s,
                                                            a,
                                                            n,
                                                            o,
                                                            l,
                                                            h,
                                                            c,
                                                            d,
                                                            u,
                                                            p,
                                                            m = 0,
                                                            f = 0,
                                                            g = [],
                                                            v = e + i - 1,
                                                            b = t[e].x,
                                                            y = t[v].x - b;
                                                        for (s = e; s < e + i; ++s) {
                                                            (n = (((a = t[s]).x - b) / y) * r), (o = a.y);
                                                            var w = 0 | n;
                                                            if (w === l) o < u ? ((u = o), (h = s)) : o > p && ((p = o), (c = s)), (m = (f * m + a.x) / ++f);
                                                            else {
                                                                var x = s - 1;
                                                                if (!j(h) && !j(c)) {
                                                                    var E = Math.min(h, c),
                                                                        C = Math.max(h, c);
                                                                    E !== d && E !== x && g.push(Di(Di({}, t[E]), {}, { x: m })), C !== d && C !== x && g.push(Di(Di({}, t[C]), {}, { x: m }));
                                                                }
                                                                s > 0 && x !== d && g.push(t[x]), g.push(a), (l = w), (f = 0), (u = p = o), (h = c = d = s);
                                                            }
                                                        }
                                                        return g;
                                                    })(l, d, u, r);
                                                    break;
                                                default:
                                                    throw new Error(`Unsupported decimation algorithm '${i.algorithm}'`);
                                            }
                                            e._decimated = p;
                                        }
                                    }
                                }
                            });
                        } else Ta(t);
                    },
                    destroy(t) {
                        Ta(t);
                    },
                };
                function Ma(t, e, i, r) {
                    if (!r) {
                        var s = e[t],
                            a = i[t];
                        return "angle" === t && ((s = Dt(s)), (a = Dt(a))), { property: t, start: s, end: a };
                    }
                }
                function Pa(t, e, i) {
                    for (; e > t; e--) {
                        var r = i[e];
                        if (!isNaN(r.x) && !isNaN(r.y)) break;
                    }
                    return e;
                }
                function ka(t, e, i, r) {
                    return t && e ? r(t[i], e[i]) : t ? t[i] : e ? e[i] : 0;
                }
                function Aa(t, e) {
                    var i = [],
                        r = !1;
                    return (
                        W(t)
                            ? ((r = !0), (i = t))
                            : (i = (function (t, e) {
                                  var i = t || {},
                                      r = i.x,
                                      s = void 0 === r ? null : r,
                                      a = i.y,
                                      n = void 0 === a ? null : a,
                                      o = e.points,
                                      l = [];
                                  return (
                                      e.segments.forEach(({ start: t, end: e }) => {
                                          e = Pa(t, e, o);
                                          var i = o[t],
                                              r = o[e];
                                          null !== n ? (l.push({ x: i.x, y: n }), l.push({ x: r.x, y: n })) : null !== s && (l.push({ x: s, y: i.y }), l.push({ x: s, y: r.y }));
                                      }),
                                      l
                                  );
                              })(t, e)),
                        i.length ? new na({ points: i, options: { tension: 0 }, _loop: r, _fullLoop: r }) : null
                    );
                }
                function Da(t) {
                    return t && !1 !== t.fill;
                }
                function La(t, e, i) {
                    var r,
                        s = t[e].fill,
                        a = [e];
                    if (!i) return s;
                    for (; !1 !== s && -1 === a.indexOf(s); ) {
                        if (!q(s)) return s;
                        if (!(r = t[s])) return !1;
                        if (r.visible) return s;
                        a.push(s), (s = r.fill);
                    }
                    return !1;
                }
                function Ia(t, e, i) {
                    var r = (function (t) {
                        var e = t.options,
                            i = e.fill,
                            r = U(i && i.target, i);
                        void 0 === r && (r = !!e.backgroundColor);
                        if (!1 === r || null === r) return !1;
                        if (!0 === r) return "origin";
                        return r;
                    })(t);
                    if (G(r)) return !isNaN(r.value) && r;
                    var s = parseFloat(r);
                    return q(s) && Math.floor(s) === s
                        ? (function (t, e, i, r) {
                              ("-" !== t && "+" !== t) || (i = e + i);
                              if (i === e || i < 0 || i >= r) return !1;
                              return i;
                          })(r[0], e, s, i)
                        : ["origin", "start", "end", "stack", "shape"].indexOf(r) >= 0 && r;
                }
                function Ra(t, e, i) {
                    for (var r = [], s = 0; s < i.length; s++) {
                        var a = Oa(i[s], e, "x"),
                            n = a.first,
                            o = a.last,
                            l = a.point;
                        if (!(!l || (n && o)))
                            if (n) r.unshift(l);
                            else if ((t.push(l), !o)) break;
                    }
                    t.push(...r);
                }
                function Oa(t, e, i) {
                    var r = t.interpolate(e, i);
                    if (!r) return {};
                    for (var s = r[i], a = t.segments, n = t.points, o = !1, l = !1, h = 0; h < a.length; h++) {
                        var c = a[h],
                            d = n[c.start][i],
                            u = n[c.end][i];
                        if (Rt(s, d, u)) {
                            (o = s === d), (l = s === u);
                            break;
                        }
                    }
                    return { first: o, last: l, point: r };
                }
                class Fa {
                    constructor(t) {
                        (this.x = t.x), (this.y = t.y), (this.radius = t.radius);
                    }
                    pathSegment(t, e, i) {
                        var r = this.x,
                            s = this.y,
                            a = this.radius;
                        return (e = e || { start: 0, end: ut }), t.arc(r, s, a, e.end, e.start, !0), !i.bounds;
                    }
                    interpolate(t) {
                        var e = this.x,
                            i = this.y,
                            r = this.radius,
                            s = t.angle;
                        return { x: e + Math.cos(s) * r, y: i + Math.sin(s) * r, angle: s };
                    }
                }
                function Ba(t) {
                    var e = t.chart,
                        i = t.fill,
                        r = t.line;
                    if (q(i))
                        return (function (t, e) {
                            var i = t.getDatasetMeta(e),
                                r = i && t.isDatasetVisible(e);
                            return r ? i.dataset : null;
                        })(e, i);
                    if ("stack" === i)
                        return (function (t) {
                            var e = t.scale,
                                i = t.index,
                                r = t.line,
                                s = [],
                                a = r.segments,
                                n = r.points,
                                o = (function (t, e) {
                                    for (var i = [], r = t.getMatchingVisibleMetas("line"), s = 0; s < r.length; s++) {
                                        var a = r[s];
                                        if (a.index === e) break;
                                        a.hidden || i.unshift(a.dataset);
                                    }
                                    return i;
                                })(e, i);
                            o.push(Aa({ x: null, y: e.bottom }, r));
                            for (var l = 0; l < a.length; l++) for (var h = a[l], c = h.start; c <= h.end; c++) Ra(s, n[c], o);
                            return new na({ points: s, options: {} });
                        })(t);
                    if ("shape" === i) return !0;
                    var s = (function (t) {
                        var e = t.scale || {};
                        if (e.getPointPositionForValue)
                            return (function (t) {
                                var e = t.scale,
                                    i = t.fill,
                                    r = e.options,
                                    s = e.getLabels().length,
                                    a = r.reverse ? e.max : e.min,
                                    n = (function (t, e, i) {
                                        return "start" === t ? i : "end" === t ? (e.options.reverse ? e.min : e.max) : G(t) ? t.value : e.getBaseValue();
                                    })(i, e, a),
                                    o = [];
                                if (r.grid.circular) {
                                    var l = e.getPointPositionForValue(0, a);
                                    return new Fa({ x: l.x, y: l.y, radius: e.getDistanceFromCenterForValue(n) });
                                }
                                for (var h = 0; h < s; ++h) o.push(e.getPointPositionForValue(h, n));
                                return o;
                            })(t);
                        return (function (t) {
                            var e = t.scale,
                                i = void 0 === e ? {} : e,
                                r = t.fill,
                                s = (function (t, e) {
                                    var i = null;
                                    return "start" === t ? (i = e.bottom) : "end" === t ? (i = e.top) : G(t) ? (i = e.getPixelForValue(t.value)) : e.getBasePixel && (i = e.getBasePixel()), i;
                                })(r, i);
                            if (q(s)) {
                                var a = i.isHorizontal();
                                return { x: a ? s : null, y: a ? null : s };
                            }
                            return null;
                        })(t);
                    })(t);
                    return s instanceof Fa ? s : Aa(s, r);
                }
                function za(t, e, i) {
                    var r = Ba(e),
                        s = e.line,
                        a = e.scale,
                        n = e.axis,
                        o = s.options,
                        l = o.fill,
                        h = o.backgroundColor,
                        c = l || {},
                        d = c.above,
                        u = void 0 === d ? h : d,
                        p = c.below,
                        m = void 0 === p ? h : p;
                    r &&
                        s.points.length &&
                        (ye(t, i),
                        (function (t, e) {
                            var i = e.line,
                                r = e.target,
                                s = e.above,
                                a = e.below,
                                n = e.area,
                                o = e.scale,
                                l = i._loop ? "angle" : e.axis;
                            t.save(), "x" === l && a !== s && (Na(t, r, n.top), Va(t, { line: i, target: r, color: s, scale: o, property: l }), t.restore(), t.save(), Na(t, r, n.bottom));
                            Va(t, { line: i, target: r, color: a, scale: o, property: l }), t.restore();
                        })(t, { line: s, target: r, above: u, below: m, area: i, scale: a, axis: n }),
                        we(t));
                }
                function Na(t, e, i) {
                    var r = e.segments,
                        s = e.points,
                        a = !0,
                        n = !1;
                    t.beginPath();
                    var o,
                        l = Ri(r);
                    try {
                        for (l.s(); !(o = l.n()).done; ) {
                            var h = o.value,
                                c = h.start,
                                d = h.end,
                                u = s[c],
                                p = s[Pa(c, d, s)];
                            a ? (t.moveTo(u.x, u.y), (a = !1)) : (t.lineTo(u.x, i), t.lineTo(u.x, u.y)), (n = !!e.pathSegment(t, h, { move: n })) ? t.closePath() : t.lineTo(p.x, i);
                        }
                    } catch (t) {
                        l.e(t);
                    } finally {
                        l.f();
                    }
                    t.lineTo(e.first().x, i), t.closePath(), t.clip();
                }
                function Va(t, e) {
                    var i,
                        r = e.line,
                        s = e.target,
                        a = e.property,
                        n = e.color,
                        o = e.scale,
                        l = (function (t, e, i) {
                            var r,
                                s = t.segments,
                                a = t.points,
                                n = e.points,
                                o = [],
                                l = Ri(s);
                            try {
                                for (l.s(); !(r = l.n()).done; ) {
                                    var h = r.value,
                                        c = h.start,
                                        d = h.end;
                                    d = Pa(c, d, a);
                                    var u = Ma(i, a[c], a[d], h.loop);
                                    if (e.segments) {
                                        var p,
                                            m = Ri(_i(e, u));
                                        try {
                                            for (m.s(); !(p = m.n()).done; ) {
                                                var f,
                                                    g = p.value,
                                                    v = Ma(i, n[g.start], n[g.end], g.loop),
                                                    b = Ri(Ti(h, a, v));
                                                try {
                                                    for (b.s(); !(f = b.n()).done; ) {
                                                        var y = f.value;
                                                        o.push({ source: y, target: g, start: { [i]: ka(u, v, "start", Math.max) }, end: { [i]: ka(u, v, "end", Math.min) } });
                                                    }
                                                } catch (t) {
                                                    b.e(t);
                                                } finally {
                                                    b.f();
                                                }
                                            }
                                        } catch (t) {
                                            m.e(t);
                                        } finally {
                                            m.f();
                                        }
                                    } else o.push({ source: h, target: u, start: a[c], end: a[d] });
                                }
                            } catch (t) {
                                l.e(t);
                            } finally {
                                l.f();
                            }
                            return o;
                        })(r, s, a),
                        h = Ri(l);
                    try {
                        for (h.s(); !(i = h.n()).done; ) {
                            var c = i.value,
                                d = c.source,
                                u = c.target,
                                p = c.start,
                                m = c.end,
                                f = d.style,
                                g = (void 0 === f ? {} : f).backgroundColor,
                                v = void 0 === g ? n : g,
                                b = !0 !== s;
                            t.save(), (t.fillStyle = v), Ha(t, o, b && Ma(a, p, m)), t.beginPath();
                            var y = !!r.pathSegment(t, d),
                                w = void 0;
                            if (b) {
                                y ? t.closePath() : ja(t, s, m, a);
                                var x = !!s.pathSegment(t, u, { move: y, reverse: !0 });
                                (w = y && x) || ja(t, s, p, a);
                            }
                            t.closePath(), t.fill(w ? "evenodd" : "nonzero"), t.restore();
                        }
                    } catch (t) {
                        h.e(t);
                    } finally {
                        h.f();
                    }
                }
                function Ha(t, e, i) {
                    var r = e.chart.chartArea,
                        s = r.top,
                        a = r.bottom,
                        n = i || {},
                        o = n.property,
                        l = n.start,
                        h = n.end;
                    "x" === o && (t.beginPath(), t.rect(l, s, h - l, a - s), t.clip());
                }
                function ja(t, e, i, r) {
                    var s = e.interpolate(i, r);
                    s && t.lineTo(s.x, s.y);
                }
                var Wa = {
                        id: "filler",
                        afterDatasetsUpdate(t, e, i) {
                            var r,
                                s,
                                a,
                                n,
                                o = (t.data.datasets || []).length,
                                l = [];
                            for (s = 0; s < o; ++s)
                                (n = null),
                                    (a = (r = t.getDatasetMeta(s)).dataset) &&
                                        a.options &&
                                        a instanceof na &&
                                        (n = { visible: t.isDatasetVisible(s), index: s, fill: Ia(a, s, o), chart: t, axis: r.controller.options.indexAxis, scale: r.vScale, line: a }),
                                    (r.$filler = n),
                                    l.push(n);
                            for (s = 0; s < o; ++s) (n = l[s]) && !1 !== n.fill && (n.fill = La(l, s, i.propagate));
                        },
                        beforeDraw(t, e, i) {
                            for (var r = "beforeDraw" === i.drawTime, s = t.getSortedVisibleDatasetMetas(), a = t.chartArea, n = s.length - 1; n >= 0; --n) {
                                var o = s[n].$filler;
                                o && (o.line.updateControlPoints(a, o.axis), r && o.fill && za(t.ctx, o, a));
                            }
                        },
                        beforeDatasetsDraw(t, e, i) {
                            if ("beforeDatasetsDraw" === i.drawTime)
                                for (var r = t.getSortedVisibleDatasetMetas(), s = r.length - 1; s >= 0; --s) {
                                    var a = r[s].$filler;
                                    Da(a) && za(t.ctx, a, t.chartArea);
                                }
                        },
                        beforeDatasetDraw(t, e, i) {
                            var r = e.meta.$filler;
                            Da(r) && "beforeDatasetDraw" === i.drawTime && za(t.ctx, r, t.chartArea);
                        },
                        defaults: { propagate: !0, drawTime: "beforeDatasetDraw" },
                    },
                    Ga = (t, e) => {
                        var i = t.boxHeight,
                            r = void 0 === i ? e : i,
                            s = t.boxWidth,
                            a = void 0 === s ? e : s;
                        return t.usePointStyle && ((r = Math.min(r, e)), (a = t.pointStyleWidth || Math.min(a, e))), { boxWidth: a, boxHeight: r, itemHeight: Math.max(e, r) };
                    };
                class qa extends ss {
                    constructor(t) {
                        super(),
                            (this._added = !1),
                            (this.legendHitBoxes = []),
                            (this._hoveredItem = null),
                            (this.doughnutMode = !1),
                            (this.chart = t.chart),
                            (this.options = t.options),
                            (this.ctx = t.ctx),
                            (this.legendItems = void 0),
                            (this.columnSizes = void 0),
                            (this.lineWidths = void 0),
                            (this.maxHeight = void 0),
                            (this.maxWidth = void 0),
                            (this.top = void 0),
                            (this.bottom = void 0),
                            (this.left = void 0),
                            (this.right = void 0),
                            (this.height = void 0),
                            (this.width = void 0),
                            (this._margins = void 0),
                            (this.position = void 0),
                            (this.weight = void 0),
                            (this.fullSize = void 0);
                    }
                    update(t, e, i) {
                        (this.maxWidth = t), (this.maxHeight = e), (this._margins = i), this.setDimensions(), this.buildLabels(), this.fit();
                    }
                    setDimensions() {
                        this.isHorizontal() ? ((this.width = this.maxWidth), (this.left = this._margins.left), (this.right = this.width)) : ((this.height = this.maxHeight), (this.top = this._margins.top), (this.bottom = this.height));
                    }
                    buildLabels() {
                        var t = this.options.labels || {},
                            e = X(t.generateLabels, [this.chart], this) || [];
                        t.filter && (e = e.filter((e) => t.filter(e, this.chart.data))), t.sort && (e = e.sort((e, i) => t.sort(e, i, this.chart.data))), this.options.reverse && e.reverse(), (this.legendItems = e);
                    }
                    fit() {
                        var t = this.options,
                            e = this.ctx;
                        if (t.display) {
                            var i,
                                r,
                                s = t.labels,
                                a = Oe(s.font),
                                n = a.size,
                                o = this._computeTitleHeight(),
                                l = Ga(s, n),
                                h = l.boxWidth,
                                c = l.itemHeight;
                            (e.font = a.string),
                                this.isHorizontal() ? ((i = this.maxWidth), (r = this._fitRows(o, n, h, c) + 10)) : ((r = this.maxHeight), (i = this._fitCols(o, a, h, c) + 10)),
                                (this.width = Math.min(i, t.maxWidth || this.maxWidth)),
                                (this.height = Math.min(r, t.maxHeight || this.maxHeight));
                        } else this.width = this.height = 0;
                    }
                    _fitRows(t, e, i, r) {
                        var s = this.ctx,
                            a = this.maxWidth,
                            n = this.options.labels.padding,
                            o = (this.legendHitBoxes = []),
                            l = (this.lineWidths = [0]),
                            h = r + n,
                            c = t;
                        (s.textAlign = "left"), (s.textBaseline = "middle");
                        var d = -1,
                            u = -h;
                        return (
                            this.legendItems.forEach((t, p) => {
                                var m = i + e / 2 + s.measureText(t.text).width;
                                (0 === p || l[l.length - 1] + m + 2 * n > a) && ((c += h), (l[l.length - (p > 0 ? 0 : 1)] = 0), (u += h), d++), (o[p] = { left: 0, top: u, row: d, width: m, height: r }), (l[l.length - 1] += m + n);
                            }),
                            c
                        );
                    }
                    _fitCols(t, e, i, r) {
                        var s = this.ctx,
                            a = this.maxHeight,
                            n = this.options.labels.padding,
                            o = (this.legendHitBoxes = []),
                            l = (this.columnSizes = []),
                            h = a - t,
                            c = n,
                            d = 0,
                            u = 0,
                            p = 0,
                            m = 0;
                        return (
                            this.legendItems.forEach((t, a) => {
                                var f = (function (t, e, i, r, s) {
                                        var a = (function (t, e, i, r) {
                                                var s = t.text;
                                                s && "string" != typeof s && (s = s.reduce((t, e) => (t.length > e.length ? t : e)));
                                                return e + i.size / 2 + r.measureText(s).width;
                                            })(r, t, e, i),
                                            n = (function (t, e, i) {
                                                var r = t;
                                                "string" != typeof e.text && (r = $a(e, i));
                                                return r;
                                            })(s, r, e.lineHeight);
                                        return { itemWidth: a, itemHeight: n };
                                    })(i, e, s, t, r),
                                    g = f.itemWidth,
                                    v = f.itemHeight;
                                a > 0 && u + v + 2 * n > h && ((c += d + n), l.push({ width: d, height: u }), (p += d + n), m++, (d = u = 0)), (o[a] = { left: p, top: u, col: m, width: g, height: v }), (d = Math.max(d, g)), (u += v + n);
                            }),
                            (c += d),
                            l.push({ width: d, height: u }),
                            c
                        );
                    }
                    adjustHitBoxes() {
                        if (this.options.display) {
                            var t = this._computeTitleHeight(),
                                e = this.legendHitBoxes,
                                i = this.options,
                                r = i.align,
                                s = i.labels.padding,
                                a = wi(i.rtl, this.left, this.width);
                            if (this.isHorizontal()) {
                                var n,
                                    o = 0,
                                    l = Gt(r, this.left + s, this.right - this.lineWidths[o]),
                                    h = Ri(e);
                                try {
                                    for (h.s(); !(n = h.n()).done; ) {
                                        var c = n.value;
                                        o !== c.row && ((o = c.row), (l = Gt(r, this.left + s, this.right - this.lineWidths[o]))), (c.top += this.top + t + s), (c.left = a.leftForLtr(a.x(l), c.width)), (l += c.width + s);
                                    }
                                } catch (t) {
                                    h.e(t);
                                } finally {
                                    h.f();
                                }
                            } else {
                                var d,
                                    u = 0,
                                    p = Gt(r, this.top + t + s, this.bottom - this.columnSizes[u].height),
                                    m = Ri(e);
                                try {
                                    for (m.s(); !(d = m.n()).done; ) {
                                        var f = d.value;
                                        f.col !== u && ((u = f.col), (p = Gt(r, this.top + t + s, this.bottom - this.columnSizes[u].height))),
                                            (f.top = p),
                                            (f.left += this.left + s),
                                            (f.left = a.leftForLtr(a.x(f.left), f.width)),
                                            (p += f.height + s);
                                    }
                                } catch (t) {
                                    m.e(t);
                                } finally {
                                    m.f();
                                }
                            }
                        }
                    }
                    isHorizontal() {
                        return "top" === this.options.position || "bottom" === this.options.position;
                    }
                    draw() {
                        if (this.options.display) {
                            var t = this.ctx;
                            ye(t, this), this._draw(), we(t);
                        }
                    }
                    _draw() {
                        var t,
                            e = this.options,
                            i = this.columnSizes,
                            r = this.lineWidths,
                            s = this.ctx,
                            a = e.align,
                            n = e.labels,
                            o = de.color,
                            l = wi(e.rtl, this.left, this.width),
                            h = Oe(n.font),
                            c = n.padding,
                            d = h.size,
                            u = d / 2;
                        this.drawTitle(), (s.textAlign = l.textAlign("left")), (s.textBaseline = "middle"), (s.lineWidth = 0.5), (s.font = h.string);
                        var p = Ga(n, d),
                            m = p.boxWidth,
                            f = p.boxHeight,
                            g = p.itemHeight,
                            v = this.isHorizontal(),
                            b = this._computeTitleHeight();
                        (t = v ? { x: Gt(a, this.left + c, this.right - r[0]), y: this.top + c + b, line: 0 } : { x: this.left + c, y: Gt(a, this.top + b + c, this.bottom - i[0].height), line: 0 }), xi(this.ctx, e.textDirection);
                        var y = g + c;
                        this.legendItems.forEach((p, w) => {
                            (s.strokeStyle = p.fontColor), (s.fillStyle = p.fontColor);
                            var x = s.measureText(p.text).width,
                                E = l.textAlign(p.textAlign || (p.textAlign = n.textAlign)),
                                C = m + u + x,
                                S = t.x,
                                T = t.y;
                            if (
                                (l.setWidth(this.width),
                                v
                                    ? w > 0 && S + C + c > this.right && ((T = t.y += y), t.line++, (S = t.x = Gt(a, this.left + c, this.right - r[t.line])))
                                    : w > 0 && T + y > this.bottom && ((S = t.x = S + i[t.line].width + c), t.line++, (T = t.y = Gt(a, this.top + b + c, this.bottom - i[t.line].height))),
                                (function (t, e, i) {
                                    if (!(isNaN(m) || m <= 0 || isNaN(f) || f < 0)) {
                                        s.save();
                                        var r = U(i.lineWidth, 1);
                                        if (
                                            ((s.fillStyle = U(i.fillStyle, o)),
                                            (s.lineCap = U(i.lineCap, "butt")),
                                            (s.lineDashOffset = U(i.lineDashOffset, 0)),
                                            (s.lineJoin = U(i.lineJoin, "miter")),
                                            (s.lineWidth = r),
                                            (s.strokeStyle = U(i.strokeStyle, o)),
                                            s.setLineDash(U(i.lineDash, [])),
                                            n.usePointStyle)
                                        ) {
                                            var a = { radius: (f * Math.SQRT2) / 2, pointStyle: i.pointStyle, rotation: i.rotation, borderWidth: r },
                                                h = l.xPlus(t, m / 2);
                                            ve(s, a, h, e + u, n.pointStyleWidth && m);
                                        } else {
                                            var c = e + Math.max((d - f) / 2, 0),
                                                p = l.leftForLtr(t, m),
                                                g = Ie(i.borderRadius);
                                            s.beginPath(), Object.values(g).some((t) => 0 !== t) ? _e(s, { x: p, y: c, w: m, h: f, radius: g }) : s.rect(p, c, m, f), s.fill(), 0 !== r && s.stroke();
                                        }
                                        s.restore();
                                    }
                                })(l.x(S), T, p),
                                (S = ((t, e, i, r) => (t === (r ? "left" : "right") ? i : "center" === t ? (e + i) / 2 : e))(E, S + m + u, v ? S + C : this.right, e.rtl)),
                                (function (t, e, i) {
                                    Te(s, i.text, t, e + g / 2, h, { strikethrough: i.hidden, textAlign: l.textAlign(i.textAlign) });
                                })(l.x(S), T, p),
                                v)
                            )
                                t.x += C + c;
                            else if ("string" != typeof p.text) {
                                var _ = h.lineHeight;
                                t.y += $a(p, _) + c;
                            } else t.y += y;
                        }),
                            Ei(this.ctx, e.textDirection);
                    }
                    drawTitle() {
                        var t = this.options,
                            e = t.title,
                            i = Oe(e.font),
                            r = Re(e.padding);
                        if (e.display) {
                            var s,
                                a = wi(t.rtl, this.left, this.width),
                                n = this.ctx,
                                o = e.position,
                                l = i.size / 2,
                                h = r.top + l,
                                c = this.left,
                                d = this.width;
                            if (this.isHorizontal()) (d = Math.max(...this.lineWidths)), (s = this.top + h), (c = Gt(t.align, c, this.right - d));
                            else {
                                var u = this.columnSizes.reduce((t, e) => Math.max(t, e.height), 0);
                                s = h + Gt(t.align, this.top, this.bottom - u - t.labels.padding - this._computeTitleHeight());
                            }
                            var p = Gt(o, c, c + d);
                            (n.textAlign = a.textAlign(Wt(o))), (n.textBaseline = "middle"), (n.strokeStyle = e.color), (n.fillStyle = e.color), (n.font = i.string), Te(n, e.text, p, s, i);
                        }
                    }
                    _computeTitleHeight() {
                        var t = this.options.title,
                            e = Oe(t.font),
                            i = Re(t.padding);
                        return t.display ? e.lineHeight + i.height : 0;
                    }
                    _getLegendItemAt(t, e) {
                        var i, r, s;
                        if (Rt(t, this.left, this.right) && Rt(e, this.top, this.bottom))
                            for (s = this.legendHitBoxes, i = 0; i < s.length; ++i) if (Rt(t, (r = s[i]).left, r.left + r.width) && Rt(e, r.top, r.top + r.height)) return this.legendItems[i];
                        return null;
                    }
                    handleEvent(t) {
                        var e = this.options;
                        if (
                            (function (t, e) {
                                if (("mousemove" === t || "mouseout" === t) && (e.onHover || e.onLeave)) return !0;
                                if (e.onClick && ("click" === t || "mouseup" === t)) return !0;
                                return !1;
                            })(t.type, e)
                        ) {
                            var i,
                                r,
                                s = this._getLegendItemAt(t.x, t.y);
                            if ("mousemove" === t.type || "mouseout" === t.type) {
                                var a = this._hoveredItem,
                                    n = ((r = s), null !== (i = a) && null !== r && i.datasetIndex === r.datasetIndex && i.index === r.index);
                                a && !n && X(e.onLeave, [t, a, this], this), (this._hoveredItem = s), s && !n && X(e.onHover, [t, s, this], this);
                            } else s && X(e.onClick, [t, s, this], this);
                        }
                    }
                }
                function $a(t, e) {
                    return e * (t.text ? t.text.length : 0);
                }
                var Ua = {
                    id: "legend",
                    _element: qa,
                    start(t, e, i) {
                        var r = (t.legend = new qa({ ctx: t.ctx, options: i, chart: t }));
                        Vr.configure(t, r, i), Vr.addBox(t, r);
                    },
                    stop(t) {
                        Vr.removeBox(t, t.legend), delete t.legend;
                    },
                    beforeUpdate(t, e, i) {
                        var r = t.legend;
                        Vr.configure(t, r, i), (r.options = i);
                    },
                    afterUpdate(t) {
                        var e = t.legend;
                        e.buildLabels(), e.adjustHitBoxes();
                    },
                    afterEvent(t, e) {
                        e.replay || t.legend.handleEvent(e.event);
                    },
                    defaults: {
                        display: !0,
                        position: "top",
                        align: "center",
                        fullSize: !0,
                        reverse: !1,
                        weight: 1e3,
                        onClick(t, e, i) {
                            var r = e.datasetIndex,
                                s = i.chart;
                            s.isDatasetVisible(r) ? (s.hide(r), (e.hidden = !0)) : (s.show(r), (e.hidden = !1));
                        },
                        onHover: null,
                        onLeave: null,
                        labels: {
                            color: (t) => t.chart.options.color,
                            boxWidth: 40,
                            padding: 10,
                            generateLabels(t) {
                                var e = t.data.datasets,
                                    i = t.legend.options.labels,
                                    r = i.usePointStyle,
                                    s = i.pointStyle,
                                    a = i.textAlign,
                                    n = i.color,
                                    o = i.useBorderRadius,
                                    l = i.borderRadius;
                                return t._getSortedDatasetMetas().map((t) => {
                                    var i = t.controller.getStyle(r ? 0 : void 0),
                                        h = Re(i.borderWidth);
                                    return {
                                        text: e[t.index].label,
                                        fillStyle: i.backgroundColor,
                                        fontColor: n,
                                        hidden: !t.visible,
                                        lineCap: i.borderCapStyle,
                                        lineDash: i.borderDash,
                                        lineDashOffset: i.borderDashOffset,
                                        lineJoin: i.borderJoinStyle,
                                        lineWidth: (h.width + h.height) / 4,
                                        strokeStyle: i.borderColor,
                                        pointStyle: s || i.pointStyle,
                                        rotation: i.rotation,
                                        textAlign: a || i.textAlign,
                                        borderRadius: o && (l || i.borderRadius),
                                        datasetIndex: t.index,
                                    };
                                }, this);
                            },
                        },
                        title: { color: (t) => t.chart.options.color, display: !1, position: "center", text: "" },
                    },
                    descriptors: { _scriptable: (t) => !t.startsWith("on"), labels: { _scriptable: (t) => !["generateLabels", "filter", "sort"].includes(t) } },
                };
                class Ya extends ss {
                    constructor(t) {
                        super(),
                            (this.chart = t.chart),
                            (this.options = t.options),
                            (this.ctx = t.ctx),
                            (this._padding = void 0),
                            (this.top = void 0),
                            (this.bottom = void 0),
                            (this.left = void 0),
                            (this.right = void 0),
                            (this.width = void 0),
                            (this.height = void 0),
                            (this.position = void 0),
                            (this.weight = void 0),
                            (this.fullSize = void 0);
                    }
                    update(t, e) {
                        var i = this.options;
                        if (((this.left = 0), (this.top = 0), i.display)) {
                            (this.width = this.right = t), (this.height = this.bottom = e);
                            var r = W(i.text) ? i.text.length : 1;
                            this._padding = Re(i.padding);
                            var s = r * Oe(i.font).lineHeight + this._padding.height;
                            this.isHorizontal() ? (this.height = s) : (this.width = s);
                        } else this.width = this.height = this.right = this.bottom = 0;
                    }
                    isHorizontal() {
                        var t = this.options.position;
                        return "top" === t || "bottom" === t;
                    }
                    _drawArgs(t) {
                        var e,
                            i,
                            r,
                            s = this.top,
                            a = this.left,
                            n = this.bottom,
                            o = this.right,
                            l = this.options,
                            h = l.align,
                            c = 0;
                        return (
                            this.isHorizontal() ? ((i = Gt(h, a, o)), (r = s + t), (e = o - a)) : ("left" === l.position ? ((i = a + t), (r = Gt(h, n, s)), (c = -0.5 * dt)) : ((i = o - t), (r = Gt(h, s, n)), (c = 0.5 * dt)), (e = n - s)),
                            { titleX: i, titleY: r, maxWidth: e, rotation: c }
                        );
                    }
                    draw() {
                        var t = this.ctx,
                            e = this.options;
                        if (e.display) {
                            var i = Oe(e.font),
                                r = i.lineHeight / 2 + this._padding.top,
                                s = this._drawArgs(r),
                                a = s.titleX,
                                n = s.titleY,
                                o = s.maxWidth,
                                l = s.rotation;
                            Te(t, e.text, 0, 0, i, { color: e.color, maxWidth: o, rotation: l, textAlign: Wt(e.align), textBaseline: "middle", translation: [a, n] });
                        }
                    }
                }
                var Xa = {
                        id: "title",
                        _element: Ya,
                        start(t, e, i) {
                            !(function (t, e) {
                                var i = new Ya({ ctx: t.ctx, options: e, chart: t });
                                Vr.configure(t, i, e), Vr.addBox(t, i), (t.titleBlock = i);
                            })(t, i);
                        },
                        stop(t) {
                            var e = t.titleBlock;
                            Vr.removeBox(t, e), delete t.titleBlock;
                        },
                        beforeUpdate(t, e, i) {
                            var r = t.titleBlock;
                            Vr.configure(t, r, i), (r.options = i);
                        },
                        defaults: { align: "center", display: !1, font: { weight: "bold" }, fullSize: !0, padding: 10, position: "top", text: "", weight: 2e3 },
                        defaultRoutes: { color: "color" },
                        descriptors: { _scriptable: !0, _indexable: !1 },
                    },
                    Ka = new WeakMap(),
                    Za = {
                        id: "subtitle",
                        start(t, e, i) {
                            var r = new Ya({ ctx: t.ctx, options: i, chart: t });
                            Vr.configure(t, r, i), Vr.addBox(t, r), Ka.set(t, r);
                        },
                        stop(t) {
                            Vr.removeBox(t, Ka.get(t)), Ka.delete(t);
                        },
                        beforeUpdate(t, e, i) {
                            var r = Ka.get(t);
                            Vr.configure(t, r, i), (r.options = i);
                        },
                        defaults: { align: "center", display: !1, font: { weight: "normal" }, fullSize: !0, padding: 0, position: "top", text: "", weight: 1500 },
                        defaultRoutes: { color: "color" },
                        descriptors: { _scriptable: !0, _indexable: !1 },
                    },
                    Ja = {
                        average(t) {
                            if (!t.length) return !1;
                            var e,
                                i,
                                r = 0,
                                s = 0,
                                a = 0;
                            for (e = 0, i = t.length; e < i; ++e) {
                                var n = t[e].element;
                                if (n && n.hasValue()) {
                                    var o = n.tooltipPosition();
                                    (r += o.x), (s += o.y), ++a;
                                }
                            }
                            return { x: r / a, y: s / a };
                        },
                        nearest(t, e) {
                            if (!t.length) return !1;
                            var i,
                                r,
                                s,
                                a = e.x,
                                n = e.y,
                                o = Number.POSITIVE_INFINITY;
                            for (i = 0, r = t.length; i < r; ++i) {
                                var l = t[i].element;
                                if (l && l.hasValue()) {
                                    var h = kt(e, l.getCenterPoint());
                                    h < o && ((o = h), (s = l));
                                }
                            }
                            if (s) {
                                var c = s.tooltipPosition();
                                (a = c.x), (n = c.y);
                            }
                            return { x: a, y: n };
                        },
                    };
                function Qa(t, e) {
                    return e && (W(e) ? Array.prototype.push.apply(t, e) : t.push(e)), t;
                }
                function tn(t) {
                    return ("string" == typeof t || t instanceof String) && t.indexOf("\n") > -1 ? t.split("\n") : t;
                }
                function en(t, e) {
                    var i = e.element,
                        r = e.datasetIndex,
                        s = e.index,
                        a = t.getDatasetMeta(r).controller,
                        n = a.getLabelAndValue(s),
                        o = n.label,
                        l = n.value;
                    return { chart: t, label: o, parsed: a.getParsed(s), raw: t.data.datasets[r].data[s], formattedValue: l, dataset: a.getDataset(), dataIndex: s, datasetIndex: r, element: i };
                }
                function rn(t, e) {
                    var i = t.chart.ctx,
                        r = t.body,
                        s = t.footer,
                        a = t.title,
                        n = e.boxWidth,
                        o = e.boxHeight,
                        l = Oe(e.bodyFont),
                        h = Oe(e.titleFont),
                        c = Oe(e.footerFont),
                        d = a.length,
                        u = s.length,
                        p = r.length,
                        m = Re(e.padding),
                        f = m.height,
                        g = 0,
                        v = r.reduce((t, e) => t + e.before.length + e.lines.length + e.after.length, 0);
                    ((v += t.beforeBody.length + t.afterBody.length), d && (f += d * h.lineHeight + (d - 1) * e.titleSpacing + e.titleMarginBottom), v) &&
                        (f += p * (e.displayColors ? Math.max(o, l.lineHeight) : l.lineHeight) + (v - p) * l.lineHeight + (v - 1) * e.bodySpacing);
                    u && (f += e.footerMarginTop + u * c.lineHeight + (u - 1) * e.footerSpacing);
                    var b = 0,
                        y = function (t) {
                            g = Math.max(g, i.measureText(t).width + b);
                        };
                    return (
                        i.save(),
                        (i.font = h.string),
                        K(t.title, y),
                        (i.font = l.string),
                        K(t.beforeBody.concat(t.afterBody), y),
                        (b = e.displayColors ? n + 2 + e.boxPadding : 0),
                        K(r, (t) => {
                            K(t.before, y), K(t.lines, y), K(t.after, y);
                        }),
                        (b = 0),
                        (i.font = c.string),
                        K(t.footer, y),
                        i.restore(),
                        { width: (g += m.width), height: f }
                    );
                }
                function sn(t, e, i, r) {
                    var s = i.x,
                        a = i.width,
                        n = t.width,
                        o = t.chartArea,
                        l = o.left,
                        h = o.right,
                        c = "center";
                    return (
                        "center" === r ? (c = s <= (l + h) / 2 ? "left" : "right") : s <= a / 2 ? (c = "left") : s >= n - a / 2 && (c = "right"),
                        (function (t, e, i, r) {
                            var s = r.x,
                                a = r.width,
                                n = i.caretSize + i.caretPadding;
                            return ("left" === t && s + a + n > e.width) || ("right" === t && s - a - n < 0) || void 0;
                        })(c, t, e, i) && (c = "center"),
                        c
                    );
                }
                function an(t, e, i) {
                    var r =
                        i.yAlign ||
                        e.yAlign ||
                        (function (t, e) {
                            var i = e.y,
                                r = e.height;
                            return i < r / 2 ? "top" : i > t.height - r / 2 ? "bottom" : "center";
                        })(t, i);
                    return { xAlign: i.xAlign || e.xAlign || sn(t, e, i, r), yAlign: r };
                }
                function nn(t, e, i, r) {
                    var s = t.caretSize,
                        a = t.caretPadding,
                        n = t.cornerRadius,
                        o = i.xAlign,
                        l = i.yAlign,
                        h = s + a,
                        c = Ie(n),
                        d = c.topLeft,
                        u = c.topRight,
                        p = c.bottomLeft,
                        m = c.bottomRight,
                        f = (function (t, e) {
                            var i = t.x,
                                r = t.width;
                            return "right" === e ? (i -= r) : "center" === e && (i -= r / 2), i;
                        })(e, o),
                        g = (function (t, e, i) {
                            var r = t.y,
                                s = t.height;
                            return "top" === e ? (r += i) : (r -= "bottom" === e ? s + i : s / 2), r;
                        })(e, l, h);
                    return (
                        "center" === l ? ("left" === o ? (f += h) : "right" === o && (f -= h)) : "left" === o ? (f -= Math.max(d, p) + s) : "right" === o && (f += Math.max(u, m) + s),
                        { x: It(f, 0, r.width - e.width), y: It(g, 0, r.height - e.height) }
                    );
                }
                function on(t, e, i) {
                    var r = Re(i.padding);
                    return "center" === e ? t.x + t.width / 2 : "right" === e ? t.x + t.width - r.right : t.x + r.left;
                }
                function ln(t) {
                    return Qa([], tn(t));
                }
                function hn(t, e) {
                    var i = e && e.dataset && e.dataset.tooltip && e.dataset.tooltip.callbacks;
                    return i ? t.override(i) : t;
                }
                var cn = {
                    beforeTitle: N,
                    title(t) {
                        if (t.length > 0) {
                            var e = t[0],
                                i = e.chart.data.labels,
                                r = i ? i.length : 0;
                            if (this && this.options && "dataset" === this.options.mode) return e.dataset.label || "";
                            if (e.label) return e.label;
                            if (r > 0 && e.dataIndex < r) return i[e.dataIndex];
                        }
                        return "";
                    },
                    afterTitle: N,
                    beforeBody: N,
                    beforeLabel: N,
                    label(t) {
                        if (this && this.options && "dataset" === this.options.mode) return t.label + ": " + t.formattedValue || t.formattedValue;
                        var e = t.dataset.label || "";
                        e && (e += ": ");
                        var i = t.formattedValue;
                        return j(i) || (e += i), e;
                    },
                    labelColor(t) {
                        var e = t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);
                        return { borderColor: e.borderColor, backgroundColor: e.backgroundColor, borderWidth: e.borderWidth, borderDash: e.borderDash, borderDashOffset: e.borderDashOffset, borderRadius: 0 };
                    },
                    labelTextColor() {
                        return this.options.bodyColor;
                    },
                    labelPointStyle(t) {
                        var e = t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);
                        return { pointStyle: e.pointStyle, rotation: e.rotation };
                    },
                    afterLabel: N,
                    afterBody: N,
                    beforeFooter: N,
                    footer: N,
                    afterFooter: N,
                };
                function dn(t, e, i, r) {
                    var s = t[e].call(i, r);
                    return void 0 === s ? cn[e].call(i, r) : s;
                }
                class un extends ss {
                    constructor(t) {
                        super(),
                            (this.opacity = 0),
                            (this._active = []),
                            (this._eventPosition = void 0),
                            (this._size = void 0),
                            (this._cachedAnimations = void 0),
                            (this._tooltipItems = []),
                            (this.$animations = void 0),
                            (this.$context = void 0),
                            (this.chart = t.chart),
                            (this.options = t.options),
                            (this.dataPoints = void 0),
                            (this.title = void 0),
                            (this.beforeBody = void 0),
                            (this.body = void 0),
                            (this.afterBody = void 0),
                            (this.footer = void 0),
                            (this.xAlign = void 0),
                            (this.yAlign = void 0),
                            (this.x = void 0),
                            (this.y = void 0),
                            (this.height = void 0),
                            (this.width = void 0),
                            (this.caretX = void 0),
                            (this.caretY = void 0),
                            (this.labelColors = void 0),
                            (this.labelPointStyles = void 0),
                            (this.labelTextColors = void 0);
                    }
                    initialize(t) {
                        (this.options = t), (this._cachedAnimations = void 0), (this.$context = void 0);
                    }
                    _resolveAnimations() {
                        var t = this._cachedAnimations;
                        if (t) return t;
                        var e = this.chart,
                            i = this.options.setContext(this.getContext()),
                            r = i.enabled && e.options.animation && i.animations,
                            s = new ji(this.chart, r);
                        return r._cacheable && (this._cachedAnimations = Object.freeze(s)), s;
                    }
                    getContext() {
                        return this.$context || (this.$context = ((t = this.chart.getContext()), (e = this), (i = this._tooltipItems), Be(t, { tooltip: e, tooltipItems: i, type: "tooltip" })));
                        var t, e, i;
                    }
                    getTitle(t, e) {
                        var i = e.callbacks,
                            r = dn(i, "beforeTitle", this, t),
                            s = dn(i, "title", this, t),
                            a = dn(i, "afterTitle", this, t),
                            n = [];
                        return (n = Qa(n, tn(r))), (n = Qa(n, tn(s))), (n = Qa(n, tn(a)));
                    }
                    getBeforeBody(t, e) {
                        return ln(dn(e.callbacks, "beforeBody", this, t));
                    }
                    getBody(t, e) {
                        var i = e.callbacks,
                            r = [];
                        return (
                            K(t, (t) => {
                                var e = { before: [], lines: [], after: [] },
                                    s = hn(i, t);
                                Qa(e.before, tn(dn(s, "beforeLabel", this, t))), Qa(e.lines, dn(s, "label", this, t)), Qa(e.after, tn(dn(s, "afterLabel", this, t))), r.push(e);
                            }),
                            r
                        );
                    }
                    getAfterBody(t, e) {
                        return ln(dn(e.callbacks, "afterBody", this, t));
                    }
                    getFooter(t, e) {
                        var i = e.callbacks,
                            r = dn(i, "beforeFooter", this, t),
                            s = dn(i, "footer", this, t),
                            a = dn(i, "afterFooter", this, t),
                            n = [];
                        return (n = Qa(n, tn(r))), (n = Qa(n, tn(s))), (n = Qa(n, tn(a)));
                    }
                    _createItems(t) {
                        var e,
                            i,
                            r = this._active,
                            s = this.chart.data,
                            a = [],
                            n = [],
                            o = [],
                            l = [];
                        for (e = 0, i = r.length; e < i; ++e) l.push(en(this.chart, r[e]));
                        return (
                            t.filter && (l = l.filter((e, i, r) => t.filter(e, i, r, s))),
                            t.itemSort && (l = l.sort((e, i) => t.itemSort(e, i, s))),
                            K(l, (e) => {
                                var i = hn(t.callbacks, e);
                                a.push(dn(i, "labelColor", this, e)), n.push(dn(i, "labelPointStyle", this, e)), o.push(dn(i, "labelTextColor", this, e));
                            }),
                            (this.labelColors = a),
                            (this.labelPointStyles = n),
                            (this.labelTextColors = o),
                            (this.dataPoints = l),
                            l
                        );
                    }
                    update(t, e) {
                        var i,
                            r = this.options.setContext(this.getContext()),
                            s = this._active,
                            a = [];
                        if (s.length) {
                            var n = Ja[r.position].call(this, s, this._eventPosition);
                            (a = this._createItems(r)),
                                (this.title = this.getTitle(a, r)),
                                (this.beforeBody = this.getBeforeBody(a, r)),
                                (this.body = this.getBody(a, r)),
                                (this.afterBody = this.getAfterBody(a, r)),
                                (this.footer = this.getFooter(a, r));
                            var o = (this._size = rn(this, r)),
                                l = Object.assign({}, n, o),
                                h = an(this.chart, r, l),
                                c = nn(r, l, h, this.chart);
                            (this.xAlign = h.xAlign), (this.yAlign = h.yAlign), (i = { opacity: 1, x: c.x, y: c.y, width: o.width, height: o.height, caretX: n.x, caretY: n.y });
                        } else 0 !== this.opacity && (i = { opacity: 0 });
                        (this._tooltipItems = a), (this.$context = void 0), i && this._resolveAnimations().update(this, i), t && r.external && r.external.call(this, { chart: this.chart, tooltip: this, replay: e });
                    }
                    drawCaret(t, e, i, r) {
                        var s = this.getCaretPosition(t, i, r);
                        e.lineTo(s.x1, s.y1), e.lineTo(s.x2, s.y2), e.lineTo(s.x3, s.y3);
                    }
                    getCaretPosition(t, e, i) {
                        var r,
                            s,
                            a,
                            n,
                            o,
                            l,
                            h = this.xAlign,
                            c = this.yAlign,
                            d = i.caretSize,
                            u = Ie(i.cornerRadius),
                            p = u.topLeft,
                            m = u.topRight,
                            f = u.bottomLeft,
                            g = u.bottomRight,
                            v = t.x,
                            b = t.y,
                            y = e.width,
                            w = e.height;
                        return (
                            "center" === c
                                ? ((o = b + w / 2), "left" === h ? ((s = (r = v) - d), (n = o + d), (l = o - d)) : ((s = (r = v + y) + d), (n = o - d), (l = o + d)), (a = r))
                                : ((s = "left" === h ? v + Math.max(p, f) + d : "right" === h ? v + y - Math.max(m, g) - d : this.caretX),
                                  "top" === c ? ((o = (n = b) - d), (r = s - d), (a = s + d)) : ((o = (n = b + w) + d), (r = s + d), (a = s - d)),
                                  (l = n)),
                            { x1: r, x2: s, x3: a, y1: n, y2: o, y3: l }
                        );
                    }
                    drawTitle(t, e, i) {
                        var r,
                            s,
                            a,
                            n = this.title,
                            o = n.length;
                        if (o) {
                            var l = wi(i.rtl, this.x, this.width);
                            for (t.x = on(this, i.titleAlign, i), e.textAlign = l.textAlign(i.titleAlign), e.textBaseline = "middle", r = Oe(i.titleFont), s = i.titleSpacing, e.fillStyle = i.titleColor, e.font = r.string, a = 0; a < o; ++a)
                                e.fillText(n[a], l.x(t.x), t.y + r.lineHeight / 2), (t.y += r.lineHeight + s), a + 1 === o && (t.y += i.titleMarginBottom - s);
                        }
                    }
                    _drawColorBox(t, e, i, r, s) {
                        var a = this.labelColors[i],
                            n = this.labelPointStyles[i],
                            o = s.boxHeight,
                            l = s.boxWidth,
                            h = Oe(s.bodyFont),
                            c = on(this, "left", s),
                            d = r.x(c),
                            u = o < h.lineHeight ? (h.lineHeight - o) / 2 : 0,
                            p = e.y + u;
                        if (s.usePointStyle) {
                            var m = { radius: Math.min(l, o) / 2, pointStyle: n.pointStyle, rotation: n.rotation, borderWidth: 1 },
                                f = r.leftForLtr(d, l) + l / 2,
                                g = p + o / 2;
                            (t.strokeStyle = s.multiKeyBackground), (t.fillStyle = s.multiKeyBackground), ge(t, m, f, g), (t.strokeStyle = a.borderColor), (t.fillStyle = a.backgroundColor), ge(t, m, f, g);
                        } else {
                            (t.lineWidth = G(a.borderWidth) ? Math.max(...Object.values(a.borderWidth)) : a.borderWidth || 1), (t.strokeStyle = a.borderColor), t.setLineDash(a.borderDash || []), (t.lineDashOffset = a.borderDashOffset || 0);
                            var v = r.leftForLtr(d, l),
                                b = r.leftForLtr(r.xPlus(d, 1), l - 2),
                                y = Ie(a.borderRadius);
                            Object.values(y).some((t) => 0 !== t)
                                ? (t.beginPath(),
                                  (t.fillStyle = s.multiKeyBackground),
                                  _e(t, { x: v, y: p, w: l, h: o, radius: y }),
                                  t.fill(),
                                  t.stroke(),
                                  (t.fillStyle = a.backgroundColor),
                                  t.beginPath(),
                                  _e(t, { x: b, y: p + 1, w: l - 2, h: o - 2, radius: y }),
                                  t.fill())
                                : ((t.fillStyle = s.multiKeyBackground), t.fillRect(v, p, l, o), t.strokeRect(v, p, l, o), (t.fillStyle = a.backgroundColor), t.fillRect(b, p + 1, l - 2, o - 2));
                        }
                        t.fillStyle = this.labelTextColors[i];
                    }
                    drawBody(t, e, i) {
                        var r,
                            s,
                            a,
                            n,
                            o,
                            l,
                            h,
                            c = this.body,
                            d = i.bodySpacing,
                            u = i.bodyAlign,
                            p = i.displayColors,
                            m = i.boxHeight,
                            f = i.boxWidth,
                            g = i.boxPadding,
                            v = Oe(i.bodyFont),
                            b = v.lineHeight,
                            y = 0,
                            w = wi(i.rtl, this.x, this.width),
                            x = function (i) {
                                e.fillText(i, w.x(t.x + y), t.y + b / 2), (t.y += b + d);
                            },
                            E = w.textAlign(u);
                        for (
                            e.textAlign = u,
                                e.textBaseline = "middle",
                                e.font = v.string,
                                t.x = on(this, E, i),
                                e.fillStyle = i.bodyColor,
                                K(this.beforeBody, x),
                                y = p && "right" !== E ? ("center" === u ? f / 2 + g : f + 2 + g) : 0,
                                n = 0,
                                l = c.length;
                            n < l;
                            ++n
                        ) {
                            for (r = c[n], s = this.labelTextColors[n], e.fillStyle = s, K(r.before, x), a = r.lines, p && a.length && (this._drawColorBox(e, t, n, w, i), (b = Math.max(v.lineHeight, m))), o = 0, h = a.length; o < h; ++o)
                                x(a[o]), (b = v.lineHeight);
                            K(r.after, x);
                        }
                        (y = 0), (b = v.lineHeight), K(this.afterBody, x), (t.y -= d);
                    }
                    drawFooter(t, e, i) {
                        var r,
                            s,
                            a = this.footer,
                            n = a.length;
                        if (n) {
                            var o = wi(i.rtl, this.x, this.width);
                            for (
                                t.x = on(this, i.footerAlign, i), t.y += i.footerMarginTop, e.textAlign = o.textAlign(i.footerAlign), e.textBaseline = "middle", r = Oe(i.footerFont), e.fillStyle = i.footerColor, e.font = r.string, s = 0;
                                s < n;
                                ++s
                            )
                                e.fillText(a[s], o.x(t.x), t.y + r.lineHeight / 2), (t.y += r.lineHeight + i.footerSpacing);
                        }
                    }
                    drawBackground(t, e, i, r) {
                        var s = this.xAlign,
                            a = this.yAlign,
                            n = t.x,
                            o = t.y,
                            l = i.width,
                            h = i.height,
                            c = Ie(r.cornerRadius),
                            d = c.topLeft,
                            u = c.topRight,
                            p = c.bottomLeft,
                            m = c.bottomRight;
                        (e.fillStyle = r.backgroundColor),
                            (e.strokeStyle = r.borderColor),
                            (e.lineWidth = r.borderWidth),
                            e.beginPath(),
                            e.moveTo(n + d, o),
                            "top" === a && this.drawCaret(t, e, i, r),
                            e.lineTo(n + l - u, o),
                            e.quadraticCurveTo(n + l, o, n + l, o + u),
                            "center" === a && "right" === s && this.drawCaret(t, e, i, r),
                            e.lineTo(n + l, o + h - m),
                            e.quadraticCurveTo(n + l, o + h, n + l - m, o + h),
                            "bottom" === a && this.drawCaret(t, e, i, r),
                            e.lineTo(n + p, o + h),
                            e.quadraticCurveTo(n, o + h, n, o + h - p),
                            "center" === a && "left" === s && this.drawCaret(t, e, i, r),
                            e.lineTo(n, o + d),
                            e.quadraticCurveTo(n, o, n + d, o),
                            e.closePath(),
                            e.fill(),
                            r.borderWidth > 0 && e.stroke();
                    }
                    _updateAnimationTarget(t) {
                        var e = this.chart,
                            i = this.$animations,
                            r = i && i.x,
                            s = i && i.y;
                        if (r || s) {
                            var a = Ja[t.position].call(this, this._active, this._eventPosition);
                            if (!a) return;
                            var n = (this._size = rn(this, t)),
                                o = Object.assign({}, a, this._size),
                                l = an(e, t, o),
                                h = nn(t, o, l, e);
                            (r._to === h.x && s._to === h.y) ||
                                ((this.xAlign = l.xAlign), (this.yAlign = l.yAlign), (this.width = n.width), (this.height = n.height), (this.caretX = a.x), (this.caretY = a.y), this._resolveAnimations().update(this, h));
                        }
                    }
                    _willRender() {
                        return !!this.opacity;
                    }
                    draw(t) {
                        var e = this.options.setContext(this.getContext()),
                            i = this.opacity;
                        if (i) {
                            this._updateAnimationTarget(e);
                            var r = { width: this.width, height: this.height },
                                s = { x: this.x, y: this.y };
                            i = Math.abs(i) < 0.001 ? 0 : i;
                            var a = Re(e.padding),
                                n = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;
                            e.enabled &&
                                n &&
                                (t.save(),
                                (t.globalAlpha = i),
                                this.drawBackground(s, t, r, e),
                                xi(t, e.textDirection),
                                (s.y += a.top),
                                this.drawTitle(s, t, e),
                                this.drawBody(s, t, e),
                                this.drawFooter(s, t, e),
                                Ei(t, e.textDirection),
                                t.restore());
                        }
                    }
                    getActiveElements() {
                        return this._active || [];
                    }
                    setActiveElements(t, e) {
                        var i = this._active,
                            r = t.map(({ datasetIndex: t, index: e }) => {
                                var i = this.chart.getDatasetMeta(t);
                                if (!i) throw new Error("Cannot find a dataset at index " + t);
                                return { datasetIndex: t, element: i.data[e], index: e };
                            }),
                            s = !Z(i, r),
                            a = this._positionChanged(r, e);
                        (s || a) && ((this._active = r), (this._eventPosition = e), (this._ignoreReplayEvents = !0), this.update(!0));
                    }
                    handleEvent(t, e, i = !0) {
                        if (e && this._ignoreReplayEvents) return !1;
                        this._ignoreReplayEvents = !1;
                        var r = this.options,
                            s = this._active || [],
                            a = this._getActiveElements(t, s, e, i),
                            n = this._positionChanged(a, t),
                            o = e || !Z(a, s) || n;
                        return o && ((this._active = a), (r.enabled || r.external) && ((this._eventPosition = { x: t.x, y: t.y }), this.update(!0, e))), o;
                    }
                    _getActiveElements(t, e, i, r) {
                        var s = this.options;
                        if ("mouseout" === t.type) return [];
                        if (!r) return e.filter((t) => this.chart.data.datasets[t.datasetIndex] && void 0 !== this.chart.getDatasetMeta(t.datasetIndex).controller.getParsed(t.index));
                        var a = this.chart.getElementsAtEventForMode(t, s.mode, s, i);
                        return s.reverse && a.reverse(), a;
                    }
                    _positionChanged(t, e) {
                        var i = this.caretX,
                            r = this.caretY,
                            s = this.options,
                            a = Ja[s.position].call(this, t, e);
                        return !1 !== a && (i !== a.x || r !== a.y);
                    }
                }
                Ii(un, "positioners", Ja);
                var pn = {
                        id: "tooltip",
                        _element: un,
                        positioners: Ja,
                        afterInit(t, e, i) {
                            i && (t.tooltip = new un({ chart: t, options: i }));
                        },
                        beforeUpdate(t, e, i) {
                            t.tooltip && t.tooltip.initialize(i);
                        },
                        reset(t, e, i) {
                            t.tooltip && t.tooltip.initialize(i);
                        },
                        afterDraw(t) {
                            var e = t.tooltip;
                            if (e && e._willRender()) {
                                var i = { tooltip: e };
                                if (!1 === t.notifyPlugins("beforeTooltipDraw", Di(Di({}, i), {}, { cancelable: !0 }))) return;
                                e.draw(t.ctx), t.notifyPlugins("afterTooltipDraw", i);
                            }
                        },
                        afterEvent(t, e) {
                            if (t.tooltip) {
                                var i = e.replay;
                                t.tooltip.handleEvent(e.event, i, e.inChartArea) && (e.changed = !0);
                            }
                        },
                        defaults: {
                            enabled: !0,
                            external: null,
                            position: "average",
                            backgroundColor: "rgba(0,0,0,0.8)",
                            titleColor: "#fff",
                            titleFont: { weight: "bold" },
                            titleSpacing: 2,
                            titleMarginBottom: 6,
                            titleAlign: "left",
                            bodyColor: "#fff",
                            bodySpacing: 2,
                            bodyFont: {},
                            bodyAlign: "left",
                            footerColor: "#fff",
                            footerSpacing: 2,
                            footerMarginTop: 6,
                            footerFont: { weight: "bold" },
                            footerAlign: "left",
                            padding: 6,
                            caretPadding: 2,
                            caretSize: 5,
                            cornerRadius: 6,
                            boxHeight: (t, e) => e.bodyFont.size,
                            boxWidth: (t, e) => e.bodyFont.size,
                            multiKeyBackground: "#fff",
                            displayColors: !0,
                            boxPadding: 0,
                            borderColor: "rgba(0,0,0,0)",
                            borderWidth: 0,
                            animation: { duration: 400, easing: "easeOutQuart" },
                            animations: { numbers: { type: "number", properties: ["x", "y", "width", "height", "caretX", "caretY"] }, opacity: { easing: "linear", duration: 200 } },
                            callbacks: cn,
                        },
                        defaultRoutes: { bodyFont: "font", footerFont: "font", titleFont: "font" },
                        descriptors: {
                            _scriptable: (t) => "filter" !== t && "itemSort" !== t && "external" !== t,
                            _indexable: !1,
                            callbacks: { _scriptable: !1, _indexable: !1 },
                            animation: { _fallback: !1 },
                            animations: { _fallback: "animation" },
                        },
                        additionalOptionScopes: ["interaction"],
                    },
                    mn = Object.freeze({ __proto__: null, Colors: Ca, Decimation: _a, Filler: Wa, Legend: Ua, SubTitle: Za, Title: Xa, Tooltip: pn });
                function fn(t, e, i, r) {
                    var s = t.indexOf(e);
                    return -1 === s ? ((t, e, i, r) => ("string" == typeof e ? ((i = t.push(e) - 1), r.unshift({ index: i, label: e })) : isNaN(e) && (i = null), i))(t, e, i, r) : s !== t.lastIndexOf(e) ? i : s;
                }
                function gn(t) {
                    var e = this.getLabels();
                    return t >= 0 && t < e.length ? e[t] : t;
                }
                class vn extends ms {
                    constructor(t) {
                        super(t), (this._startValue = void 0), (this._valueRange = 0), (this._addedLabels = []);
                    }
                    init(t) {
                        var e = this._addedLabels;
                        if (e.length) {
                            var i,
                                r = this.getLabels(),
                                s = Ri(e);
                            try {
                                for (s.s(); !(i = s.n()).done; ) {
                                    var a = i.value,
                                        n = a.index,
                                        o = a.label;
                                    r[n] === o && r.splice(n, 1);
                                }
                            } catch (t) {
                                s.e(t);
                            } finally {
                                s.f();
                            }
                            this._addedLabels = [];
                        }
                        super.init(t);
                    }
                    parse(t, e) {
                        if (j(t)) return null;
                        var i = this.getLabels();
                        return ((t, e) => (null === t ? null : It(Math.round(t), 0, e)))((e = isFinite(e) && i[e] === t ? e : fn(i, t, U(e, t), this._addedLabels)), i.length - 1);
                    }
                    determineDataLimits() {
                        var t = this.getUserBounds(),
                            e = t.minDefined,
                            i = t.maxDefined,
                            r = this.getMinMax(!0),
                            s = r.min,
                            a = r.max;
                        "ticks" === this.options.bounds && (e || (s = 0), i || (a = this.getLabels().length - 1)), (this.min = s), (this.max = a);
                    }
                    buildTicks() {
                        var t = this.min,
                            e = this.max,
                            i = this.options.offset,
                            r = [],
                            s = this.getLabels();
                        (s = 0 === t && e === s.length - 1 ? s : s.slice(t, e + 1)), (this._valueRange = Math.max(s.length - (i ? 0 : 1), 1)), (this._startValue = this.min - (i ? 0.5 : 0));
                        for (var a = t; a <= e; a++) r.push({ value: a });
                        return r;
                    }
                    getLabelForValue(t) {
                        return gn.call(this, t);
                    }
                    configure() {
                        super.configure(), this.isHorizontal() || (this._reversePixels = !this._reversePixels);
                    }
                    getPixelForValue(t) {
                        return "number" != typeof t && (t = this.parse(t)), null === t ? NaN : this.getPixelForDecimal((t - this._startValue) / this._valueRange);
                    }
                    getPixelForTick(t) {
                        var e = this.ticks;
                        return t < 0 || t > e.length - 1 ? null : this.getPixelForValue(e[t].value);
                    }
                    getValueForPixel(t) {
                        return Math.round(this._startValue + this.getDecimalForPixel(t) * this._valueRange);
                    }
                    getBasePixel() {
                        return this.bottom;
                    }
                }
                function bn(t, e) {
                    var i,
                        r,
                        s,
                        a,
                        n,
                        o,
                        l,
                        h = [],
                        c = t.bounds,
                        d = t.step,
                        u = t.min,
                        p = t.max,
                        m = t.precision,
                        f = t.count,
                        g = t.maxTicks,
                        v = t.maxDigits,
                        b = t.includeBounds,
                        y = d || 1,
                        w = g - 1,
                        x = e.min,
                        E = e.max,
                        C = !j(u),
                        S = !j(p),
                        T = !j(f),
                        _ = (E - x) / (v + 1),
                        M = Et((E - x) / w / y) * y;
                    if (M < 1e-14 && !C && !S) return [{ value: x }, { value: E }];
                    (a = Math.ceil(E / M) - Math.floor(x / M)) > w && (M = Et((a * M) / w / y) * y),
                        j(m) || ((i = Math.pow(10, m)), (M = Math.ceil(M * i) / i)),
                        "ticks" === c ? ((r = Math.floor(x / M) * M), (s = Math.ceil(E / M) * M)) : ((r = x), (s = E)),
                        C && S && d && ((n = (p - u) / d), (o = M / 1e3), (l = Math.round(n)) - o <= n && l + o >= n)
                            ? ((M = (p - u) / (a = Math.round(Math.min((p - u) / M, g)))), (r = u), (s = p))
                            : T
                            ? (M = ((s = S ? p : s) - (r = C ? u : r)) / (a = f - 1))
                            : (a = xt((a = (s - r) / M), Math.round(a), M / 1e3) ? Math.round(a) : Math.ceil(a));
                    var P = Math.max(Mt(M), Mt(r));
                    (i = Math.pow(10, j(m) ? P : m)), (r = Math.round(r * i) / i), (s = Math.round(s * i) / i);
                    var k = 0;
                    for (C && (b && r !== u ? (h.push({ value: u }), r < u && k++, xt(Math.round((r + k * M) * i) / i, u, yn(u, _, t)) && k++) : r < u && k++); k < a; ++k) {
                        var A = Math.round((r + k * M) * i) / i;
                        if (S && A > p) break;
                        h.push({ value: A });
                    }
                    return S && b && s !== p ? (h.length && xt(h[h.length - 1].value, p, yn(p, _, t)) ? (h[h.length - 1].value = p) : h.push({ value: p })) : (S && s !== p) || h.push({ value: s }), h;
                }
                function yn(t, e, { horizontal: i, minRotation: r }) {
                    var s = Tt(r),
                        a = (i ? Math.sin(s) : Math.cos(s)) || 0.001,
                        n = 0.75 * e * ("" + t).length;
                    return Math.min(e / a, n);
                }
                Ii(vn, "id", "category"), Ii(vn, "defaults", { ticks: { callback: gn } });
                class wn extends ms {
                    constructor(t) {
                        super(t), (this.start = void 0), (this.end = void 0), (this._startValue = void 0), (this._endValue = void 0), (this._valueRange = 0);
                    }
                    parse(t, e) {
                        return j(t) || (("number" == typeof t || t instanceof Number) && !isFinite(+t)) ? null : +t;
                    }
                    handleTickRangeOptions() {
                        var t = this.options.beginAtZero,
                            e = this.getUserBounds(),
                            i = e.minDefined,
                            r = e.maxDefined,
                            s = this.min,
                            a = this.max,
                            n = (t) => (s = i ? s : t),
                            o = (t) => (a = r ? a : t);
                        if (t) {
                            var l = wt(s),
                                h = wt(a);
                            l < 0 && h < 0 ? o(0) : l > 0 && h > 0 && n(0);
                        }
                        if (s === a) {
                            var c = 0 === a ? 1 : Math.abs(0.05 * a);
                            o(a + c), t || n(s - c);
                        }
                        (this.min = s), (this.max = a);
                    }
                    getTickLimit() {
                        var t,
                            e = this.options.ticks,
                            i = e.maxTicksLimit,
                            r = e.stepSize;
                        return (
                            r
                                ? (t = Math.ceil(this.max / r) - Math.floor(this.min / r) + 1) > 1e3 && (console.warn(`scales.${this.id}.ticks.stepSize: ${r} would result generating up to ${t} ticks. Limiting to 1000.`), (t = 1e3))
                                : ((t = this.computeTickLimit()), (i = i || 11)),
                            i && (t = Math.min(i, t)),
                            t
                        );
                    }
                    computeTickLimit() {
                        return Number.POSITIVE_INFINITY;
                    }
                    buildTicks() {
                        var t = this.options,
                            e = t.ticks,
                            i = this.getTickLimit(),
                            r = bn(
                                {
                                    maxTicks: (i = Math.max(2, i)),
                                    bounds: t.bounds,
                                    min: t.min,
                                    max: t.max,
                                    precision: e.precision,
                                    step: e.stepSize,
                                    count: e.count,
                                    maxDigits: this._maxDigits(),
                                    horizontal: this.isHorizontal(),
                                    minRotation: e.minRotation || 0,
                                    includeBounds: !1 !== e.includeBounds,
                                },
                                this._range || this
                            );
                        return "ticks" === t.bounds && St(r, this, "value"), t.reverse ? (r.reverse(), (this.start = this.max), (this.end = this.min)) : ((this.start = this.min), (this.end = this.max)), r;
                    }
                    configure() {
                        var t = this.ticks,
                            e = this.min,
                            i = this.max;
                        if ((super.configure(), this.options.offset && t.length)) {
                            var r = (i - e) / Math.max(t.length - 1, 1) / 2;
                            (e -= r), (i += r);
                        }
                        (this._startValue = e), (this._endValue = i), (this._valueRange = i - e);
                    }
                    getLabelForValue(t) {
                        return re(t, this.chart.options.locale, this.options.ticks.format);
                    }
                }
                class xn extends wn {
                    determineDataLimits() {
                        var t = this.getMinMax(!0),
                            e = t.min,
                            i = t.max;
                        (this.min = q(e) ? e : 0), (this.max = q(i) ? i : 1), this.handleTickRangeOptions();
                    }
                    computeTickLimit() {
                        var t = this.isHorizontal(),
                            e = t ? this.width : this.height,
                            i = Tt(this.options.ticks.minRotation),
                            r = (t ? Math.sin(i) : Math.cos(i)) || 0.001,
                            s = this._resolveTickFontOptions(0);
                        return Math.ceil(e / Math.min(40, s.lineHeight / r));
                    }
                    getPixelForValue(t) {
                        return null === t ? NaN : this.getPixelForDecimal((t - this._startValue) / this._valueRange);
                    }
                    getValueForPixel(t) {
                        return this._startValue + this.getDecimalForPixel(t) * this._valueRange;
                    }
                }
                Ii(xn, "id", "linear"), Ii(xn, "defaults", { ticks: { callback: ae.formatters.numeric } });
                var En = (t) => Math.floor(yt(t)),
                    Cn = (t, e) => Math.pow(10, En(t) + e);
                function Sn(t) {
                    return 1 === t / Math.pow(10, En(t));
                }
                function Tn(t, e, i) {
                    var r = Math.pow(10, i),
                        s = Math.floor(t / r);
                    return Math.ceil(e / r) - s;
                }
                function _n(t, { min: e, max: i }) {
                    e = $(t.min, e);
                    for (
                        var r = [],
                            s = En(e),
                            a = (function (t, e) {
                                for (var i = En(e - t); Tn(t, e, i) > 10; ) i++;
                                for (; Tn(t, e, i) < 10; ) i--;
                                return Math.min(i, En(t));
                            })(e, i),
                            n = a < 0 ? Math.pow(10, Math.abs(a)) : 1,
                            o = Math.pow(10, a),
                            l = s > a ? Math.pow(10, s) : 0,
                            h = Math.round((e - l) * n) / n,
                            c = Math.floor((e - l) / o / 10) * o * 10,
                            d = Math.floor((h - c) / Math.pow(10, a)),
                            u = $(t.min, Math.round((l + c + d * Math.pow(10, a)) * n) / n);
                        u < i;

                    )
                        r.push({ value: u, major: Sn(u), significand: d }), d >= 10 ? (d = d < 15 ? 15 : 20) : d++, d >= 20 && ((d = 2), (n = ++a >= 0 ? 1 : n)), (u = Math.round((l + c + d * Math.pow(10, a)) * n) / n);
                    var p = $(t.max, u);
                    return r.push({ value: p, major: Sn(p), significand: d }), r;
                }
                class Mn extends ms {
                    constructor(t) {
                        super(t), (this.start = void 0), (this.end = void 0), (this._startValue = void 0), (this._valueRange = 0);
                    }
                    parse(t, e) {
                        var i = wn.prototype.parse.apply(this, [t, e]);
                        if (0 !== i) return q(i) && i > 0 ? i : null;
                        this._zero = !0;
                    }
                    determineDataLimits() {
                        var t = this.getMinMax(!0),
                            e = t.min,
                            i = t.max;
                        (this.min = q(e) ? Math.max(0, e) : null),
                            (this.max = q(i) ? Math.max(0, i) : null),
                            this.options.beginAtZero && (this._zero = !0),
                            this._zero && this.min !== this._suggestedMin && !q(this._userMin) && (this.min = e === Cn(this.min, 0) ? Cn(this.min, -1) : Cn(this.min, 0)),
                            this.handleTickRangeOptions();
                    }
                    handleTickRangeOptions() {
                        var t = this.getUserBounds(),
                            e = t.minDefined,
                            i = t.maxDefined,
                            r = this.min,
                            s = this.max,
                            a = (t) => (r = e ? r : t),
                            n = (t) => (s = i ? s : t);
                        r === s && (r <= 0 ? (a(1), n(10)) : (a(Cn(r, -1)), n(Cn(s, 1)))), r <= 0 && a(Cn(s, -1)), s <= 0 && n(Cn(r, 1)), (this.min = r), (this.max = s);
                    }
                    buildTicks() {
                        var t = this.options,
                            e = _n({ min: this._userMin, max: this._userMax }, this);
                        return "ticks" === t.bounds && St(e, this, "value"), t.reverse ? (e.reverse(), (this.start = this.max), (this.end = this.min)) : ((this.start = this.min), (this.end = this.max)), e;
                    }
                    getLabelForValue(t) {
                        return void 0 === t ? "0" : re(t, this.chart.options.locale, this.options.ticks.format);
                    }
                    configure() {
                        var t = this.min;
                        super.configure(), (this._startValue = yt(t)), (this._valueRange = yt(this.max) - yt(t));
                    }
                    getPixelForValue(t) {
                        return (void 0 !== t && 0 !== t) || (t = this.min), null === t || isNaN(t) ? NaN : this.getPixelForDecimal(t === this.min ? 0 : (yt(t) - this._startValue) / this._valueRange);
                    }
                    getValueForPixel(t) {
                        var e = this.getDecimalForPixel(t);
                        return Math.pow(10, this._startValue + e * this._valueRange);
                    }
                }
                function Pn(t) {
                    var e = t.ticks;
                    if (e.display && t.display) {
                        var i = Re(e.backdropPadding);
                        return U(e.font && e.font.size, de.font.size) + i.height;
                    }
                    return 0;
                }
                function kn(t, e, i, r, s) {
                    return t === r || t === s ? { start: e - i / 2, end: e + i / 2 } : t < r || t > s ? { start: e - i, end: e } : { start: e, end: e + i };
                }
                function An(t) {
                    for (
                        var e,
                            i,
                            r,
                            s = { l: t.left + t._padding.left, r: t.right - t._padding.right, t: t.top + t._padding.top, b: t.bottom - t._padding.bottom },
                            a = Object.assign({}, s),
                            n = [],
                            o = [],
                            l = t._pointLabels.length,
                            h = t.options.pointLabels,
                            c = h.centerPointLabels ? dt / l : 0,
                            d = 0;
                        d < l;
                        d++
                    ) {
                        var u = h.setContext(t.getPointLabelContext(d));
                        o[d] = u.padding;
                        var p = t.getPointPosition(d, t.drawingArea + o[d], c),
                            m = Oe(u.font),
                            f = ((e = t.ctx), (i = m), (r = W((r = t._pointLabels[d])) ? r : [r]), { w: pe(e, i.string, r), h: r.length * i.lineHeight });
                        n[d] = f;
                        var g = Dt(t.getIndexAngle(d) + c),
                            v = Math.round(_t(g));
                        Dn(a, s, g, kn(v, p.x, f.w, 0, 180), kn(v, p.y, f.h, 90, 270));
                    }
                    t.setCenterPoint(s.l - a.l, a.r - s.r, s.t - a.t, a.b - s.b),
                        (t._pointLabelItems = (function (t, e, i) {
                            for (var r, s = [], a = t._pointLabels.length, n = t.options, o = n.pointLabels, l = o.centerPointLabels, h = o.display, c = { extra: Pn(n) / 2, additionalAngle: l ? dt / a : 0 }, d = 0; d < a; d++) {
                                (c.padding = i[d]), (c.size = e[d]);
                                var u = Ln(t, d, c);
                                s.push(u), "auto" === h && ((u.visible = In(u, r)), u.visible && (r = u));
                            }
                            return s;
                        })(t, n, o));
                }
                function Dn(t, e, i, r, s) {
                    var a = Math.abs(Math.sin(i)),
                        n = Math.abs(Math.cos(i)),
                        o = 0,
                        l = 0;
                    r.start < e.l ? ((o = (e.l - r.start) / a), (t.l = Math.min(t.l, e.l - o))) : r.end > e.r && ((o = (r.end - e.r) / a), (t.r = Math.max(t.r, e.r + o))),
                        s.start < e.t ? ((l = (e.t - s.start) / n), (t.t = Math.min(t.t, e.t - l))) : s.end > e.b && ((l = (s.end - e.b) / n), (t.b = Math.max(t.b, e.b + l)));
                }
                function Ln(t, e, i) {
                    var r = t.drawingArea,
                        s = i.extra,
                        a = i.additionalAngle,
                        n = i.padding,
                        o = i.size,
                        l = t.getPointPosition(e, r + s + n, a),
                        h = Math.round(_t(Dt(l.angle + gt))),
                        c = (function (t, e, i) {
                            90 === i || 270 === i ? (t -= e / 2) : (i > 270 || i < 90) && (t -= e);
                            return t;
                        })(l.y, o.h, h),
                        d = (function (t) {
                            if (0 === t || 180 === t) return "center";
                            if (t < 180) return "left";
                            return "right";
                        })(h),
                        u = (function (t, e, i) {
                            "right" === i ? (t -= e) : "center" === i && (t -= e / 2);
                            return t;
                        })(l.x, o.w, d);
                    return { visible: !0, x: l.x, y: c, textAlign: d, left: u, top: c, right: u + o.w, bottom: c + o.h };
                }
                function In(t, e) {
                    if (!e) return !0;
                    var i = t.left,
                        r = t.top,
                        s = t.right,
                        a = t.bottom;
                    return !(be({ x: i, y: r }, e) || be({ x: i, y: a }, e) || be({ x: s, y: r }, e) || be({ x: s, y: a }, e));
                }
                function Rn(t, e, i) {
                    var r = i.left,
                        s = i.top,
                        a = i.right,
                        n = i.bottom,
                        o = e.backdropColor;
                    if (!j(o)) {
                        var l = Ie(e.borderRadius),
                            h = Re(e.backdropPadding);
                        t.fillStyle = o;
                        var c = r - h.left,
                            d = s - h.top,
                            u = a - r + h.width,
                            p = n - s + h.height;
                        Object.values(l).some((t) => 0 !== t) ? (t.beginPath(), _e(t, { x: c, y: d, w: u, h: p, radius: l }), t.fill()) : t.fillRect(c, d, u, p);
                    }
                }
                function On(t, e, i, r) {
                    var s = t.ctx;
                    if (i) s.arc(t.xCenter, t.yCenter, e, 0, ut);
                    else {
                        var a = t.getPointPosition(0, e);
                        s.moveTo(a.x, a.y);
                        for (var n = 1; n < r; n++) (a = t.getPointPosition(n, e)), s.lineTo(a.x, a.y);
                    }
                }
                Ii(Mn, "id", "logarithmic"), Ii(Mn, "defaults", { ticks: { callback: ae.formatters.logarithmic, major: { enabled: !0 } } });
                class Fn extends wn {
                    constructor(t) {
                        super(t), (this.xCenter = void 0), (this.yCenter = void 0), (this.drawingArea = void 0), (this._pointLabels = []), (this._pointLabelItems = []);
                    }
                    setDimensions() {
                        var t = (this._padding = Re(Pn(this.options) / 2)),
                            e = (this.width = this.maxWidth - t.width),
                            i = (this.height = this.maxHeight - t.height);
                        (this.xCenter = Math.floor(this.left + e / 2 + t.left)), (this.yCenter = Math.floor(this.top + i / 2 + t.top)), (this.drawingArea = Math.floor(Math.min(e, i) / 2));
                    }
                    determineDataLimits() {
                        var t = this.getMinMax(!1),
                            e = t.min,
                            i = t.max;
                        (this.min = q(e) && !isNaN(e) ? e : 0), (this.max = q(i) && !isNaN(i) ? i : 0), this.handleTickRangeOptions();
                    }
                    computeTickLimit() {
                        return Math.ceil(this.drawingArea / Pn(this.options));
                    }
                    generateTickLabels(t) {
                        wn.prototype.generateTickLabels.call(this, t),
                            (this._pointLabels = this.getLabels()
                                .map((t, e) => {
                                    var i = X(this.options.pointLabels.callback, [t, e], this);
                                    return i || 0 === i ? i : "";
                                })
                                .filter((t, e) => this.chart.getDataVisibility(e)));
                    }
                    fit() {
                        var t = this.options;
                        t.display && t.pointLabels.display ? An(this) : this.setCenterPoint(0, 0, 0, 0);
                    }
                    setCenterPoint(t, e, i, r) {
                        (this.xCenter += Math.floor((t - e) / 2)), (this.yCenter += Math.floor((i - r) / 2)), (this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(t, e, i, r)));
                    }
                    getIndexAngle(t) {
                        return Dt(t * (ut / (this._pointLabels.length || 1)) + Tt(this.options.startAngle || 0));
                    }
                    getDistanceFromCenterForValue(t) {
                        if (j(t)) return NaN;
                        var e = this.drawingArea / (this.max - this.min);
                        return this.options.reverse ? (this.max - t) * e : (t - this.min) * e;
                    }
                    getValueForDistanceFromCenter(t) {
                        if (j(t)) return NaN;
                        var e = t / (this.drawingArea / (this.max - this.min));
                        return this.options.reverse ? this.max - e : this.min + e;
                    }
                    getPointLabelContext(t) {
                        var e = this._pointLabels || [];
                        if (t >= 0 && t < e.length) {
                            var i = e[t];
                            return (function (t, e, i) {
                                return Be(t, { label: i, index: e, type: "pointLabel" });
                            })(this.getContext(), t, i);
                        }
                    }
                    getPointPosition(t, e, i = 0) {
                        var r = this.getIndexAngle(t) - gt + i;
                        return { x: Math.cos(r) * e + this.xCenter, y: Math.sin(r) * e + this.yCenter, angle: r };
                    }
                    getPointPositionForValue(t, e) {
                        return this.getPointPosition(t, this.getDistanceFromCenterForValue(e));
                    }
                    getBasePosition(t) {
                        return this.getPointPositionForValue(t || 0, this.getBaseValue());
                    }
                    getPointLabelPosition(t) {
                        var e = this._pointLabelItems[t];
                        return { left: e.left, top: e.top, right: e.right, bottom: e.bottom };
                    }
                    drawBackground() {
                        var t = this.options,
                            e = t.backgroundColor,
                            i = t.grid.circular;
                        if (e) {
                            var r = this.ctx;
                            r.save(), r.beginPath(), On(this, this.getDistanceFromCenterForValue(this._endValue), i, this._pointLabels.length), r.closePath(), (r.fillStyle = e), r.fill(), r.restore();
                        }
                    }
                    drawGrid() {
                        var t,
                            e,
                            i,
                            r = this.ctx,
                            s = this.options,
                            a = s.angleLines,
                            n = s.grid,
                            o = s.border,
                            l = this._pointLabels.length;
                        if (
                            (s.pointLabels.display &&
                                (function (t, e) {
                                    for (var i = t.ctx, r = t.options.pointLabels, s = e - 1; s >= 0; s--) {
                                        var a = t._pointLabelItems[s];
                                        if (a.visible) {
                                            var n = r.setContext(t.getPointLabelContext(s));
                                            Rn(i, n, a);
                                            var o = Oe(n.font),
                                                l = a.x,
                                                h = a.y,
                                                c = a.textAlign;
                                            Te(i, t._pointLabels[s], l, h + o.lineHeight / 2, o, { color: n.color, textAlign: c, textBaseline: "middle" });
                                        }
                                    }
                                })(this, l),
                            n.display &&
                                this.ticks.forEach((t, i) => {
                                    if (0 !== i) {
                                        e = this.getDistanceFromCenterForValue(t.value);
                                        var r = this.getContext(i),
                                            s = n.setContext(r),
                                            a = o.setContext(r);
                                        !(function (t, e, i, r, s) {
                                            var a = t.ctx,
                                                n = e.circular,
                                                o = e.color,
                                                l = e.lineWidth;
                                            (!n && !r) ||
                                                !o ||
                                                !l ||
                                                i < 0 ||
                                                (a.save(), (a.strokeStyle = o), (a.lineWidth = l), a.setLineDash(s.dash), (a.lineDashOffset = s.dashOffset), a.beginPath(), On(t, i, n, r), a.closePath(), a.stroke(), a.restore());
                                        })(this, s, e, l, a);
                                    }
                                }),
                            a.display)
                        ) {
                            for (r.save(), t = l - 1; t >= 0; t--) {
                                var h = a.setContext(this.getPointLabelContext(t)),
                                    c = h.color,
                                    d = h.lineWidth;
                                d &&
                                    c &&
                                    ((r.lineWidth = d),
                                    (r.strokeStyle = c),
                                    r.setLineDash(h.borderDash),
                                    (r.lineDashOffset = h.borderDashOffset),
                                    (e = this.getDistanceFromCenterForValue(s.ticks.reverse ? this.min : this.max)),
                                    (i = this.getPointPosition(t, e)),
                                    r.beginPath(),
                                    r.moveTo(this.xCenter, this.yCenter),
                                    r.lineTo(i.x, i.y),
                                    r.stroke());
                            }
                            r.restore();
                        }
                    }
                    drawBorder() {}
                    drawLabels() {
                        var t = this.ctx,
                            e = this.options,
                            i = e.ticks;
                        if (i.display) {
                            var r,
                                s,
                                a = this.getIndexAngle(0);
                            t.save(),
                                t.translate(this.xCenter, this.yCenter),
                                t.rotate(a),
                                (t.textAlign = "center"),
                                (t.textBaseline = "middle"),
                                this.ticks.forEach((a, n) => {
                                    if (0 !== n || e.reverse) {
                                        var o = i.setContext(this.getContext(n)),
                                            l = Oe(o.font);
                                        if (((r = this.getDistanceFromCenterForValue(this.ticks[n].value)), o.showLabelBackdrop)) {
                                            (t.font = l.string), (s = t.measureText(a.label).width), (t.fillStyle = o.backdropColor);
                                            var h = Re(o.backdropPadding);
                                            t.fillRect(-s / 2 - h.left, -r - l.size / 2 - h.top, s + h.width, l.size + h.height);
                                        }
                                        Te(t, a.label, 0, -r, l, { color: o.color, strokeColor: o.textStrokeColor, strokeWidth: o.textStrokeWidth });
                                    }
                                }),
                                t.restore();
                        }
                    }
                    drawTitle() {}
                }
                Ii(Fn, "id", "radialLinear"),
                    Ii(Fn, "defaults", {
                        display: !0,
                        animate: !0,
                        position: "chartArea",
                        angleLines: { display: !0, lineWidth: 1, borderDash: [], borderDashOffset: 0 },
                        grid: { circular: !1 },
                        startAngle: 0,
                        ticks: { showLabelBackdrop: !0, callback: ae.formatters.numeric },
                        pointLabels: { backdropColor: void 0, backdropPadding: 2, display: !0, font: { size: 10 }, callback: (t) => t, padding: 5, centerPointLabels: !1 },
                    }),
                    Ii(Fn, "defaultRoutes", { "angleLines.color": "borderColor", "pointLabels.color": "color", "ticks.color": "color" }),
                    Ii(Fn, "descriptors", { angleLines: { _fallback: "grid" } });
                var Bn = {
                        millisecond: { common: !0, size: 1, steps: 1e3 },
                        second: { common: !0, size: 1e3, steps: 60 },
                        minute: { common: !0, size: 6e4, steps: 60 },
                        hour: { common: !0, size: 36e5, steps: 24 },
                        day: { common: !0, size: 864e5, steps: 30 },
                        week: { common: !1, size: 6048e5, steps: 4 },
                        month: { common: !0, size: 2628e6, steps: 12 },
                        quarter: { common: !1, size: 7884e6, steps: 4 },
                        year: { common: !0, size: 3154e7 },
                    },
                    zn = Object.keys(Bn);
                function Nn(t, e) {
                    return t - e;
                }
                function Vn(t, e) {
                    if (j(e)) return null;
                    var i = t._adapter,
                        r = t._parseOpts,
                        s = r.parser,
                        a = r.round,
                        n = r.isoWeekday,
                        o = e;
                    return (
                        "function" == typeof s && (o = s(o)),
                        q(o) || (o = "string" == typeof s ? i.parse(o, s) : i.parse(o)),
                        null === o ? null : (a && (o = "week" !== a || (!Ct(n) && !0 !== n) ? i.startOf(o, a) : i.startOf(o, "isoWeek", n)), +o)
                    );
                }
                function Hn(t, e, i, r) {
                    for (var s = zn.length, a = zn.indexOf(t); a < s - 1; ++a) {
                        var n = Bn[zn[a]],
                            o = n.steps ? n.steps : Number.MAX_SAFE_INTEGER;
                        if (n.common && Math.ceil((i - e) / (o * n.size)) <= r) return zn[a];
                    }
                    return zn[s - 1];
                }
                function jn(t, e, i) {
                    if (i) {
                        if (i.length) {
                            var r = Ot(i, e),
                                s = r.lo,
                                a = r.hi;
                            t[i[s] >= e ? i[s] : i[a]] = !0;
                        }
                    } else t[e] = !0;
                }
                function Wn(t, e, i) {
                    var r,
                        s,
                        a = [],
                        n = {},
                        o = e.length;
                    for (r = 0; r < o; ++r) (n[(s = e[r])] = r), a.push({ value: s, major: !1 });
                    return 0 !== o && i
                        ? (function (t, e, i, r) {
                              var s,
                                  a,
                                  n = t._adapter,
                                  o = +n.startOf(e[0].value, r),
                                  l = e[e.length - 1].value;
                              for (s = o; s <= l; s = +n.add(s, 1, r)) (a = i[s]) >= 0 && (e[a].major = !0);
                              return e;
                          })(t, a, n, i)
                        : a;
                }
                class Gn extends ms {
                    constructor(t) {
                        super(t), (this._cache = { data: [], labels: [], all: [] }), (this._unit = "day"), (this._majorUnit = void 0), (this._offsets = {}), (this._normalized = !1), (this._parseOpts = void 0);
                    }
                    init(t, e = {}) {
                        var i = t.time || (t.time = {}),
                            r = (this._adapter = new wr(t.adapters.date));
                        r.init(e), it(i.displayFormats, r.formats()), (this._parseOpts = { parser: i.parser, round: i.round, isoWeekday: i.isoWeekday }), super.init(t), (this._normalized = e.normalized);
                    }
                    parse(t, e) {
                        return void 0 === t ? null : Vn(this, t);
                    }
                    beforeLayout() {
                        super.beforeLayout(), (this._cache = { data: [], labels: [], all: [] });
                    }
                    determineDataLimits() {
                        var t = this.options,
                            e = this._adapter,
                            i = t.time.unit || "day",
                            r = this.getUserBounds(),
                            s = r.min,
                            a = r.max,
                            n = r.minDefined,
                            o = r.maxDefined;
                        function l(t) {
                            n || isNaN(t.min) || (s = Math.min(s, t.min)), o || isNaN(t.max) || (a = Math.max(a, t.max));
                        }
                        (n && o) || (l(this._getLabelBounds()), ("ticks" === t.bounds && "labels" === t.ticks.source) || l(this.getMinMax(!1))),
                            (s = q(s) && !isNaN(s) ? s : +e.startOf(Date.now(), i)),
                            (a = q(a) && !isNaN(a) ? a : +e.endOf(Date.now(), i) + 1),
                            (this.min = Math.min(s, a - 1)),
                            (this.max = Math.max(s + 1, a));
                    }
                    _getLabelBounds() {
                        var t = this.getLabelTimestamps(),
                            e = Number.POSITIVE_INFINITY,
                            i = Number.NEGATIVE_INFINITY;
                        return t.length && ((e = t[0]), (i = t[t.length - 1])), { min: e, max: i };
                    }
                    buildTicks() {
                        var t = this.options,
                            e = t.time,
                            i = t.ticks,
                            r = "labels" === i.source ? this.getLabelTimestamps() : this._generate();
                        "ticks" === t.bounds && r.length && ((this.min = this._userMin || r[0]), (this.max = this._userMax || r[r.length - 1]));
                        var s = this.min,
                            a = (function (t, e, i) {
                                for (var r = 0, s = t.length; r < s && t[r] < e; ) r++;
                                for (; s > r && t[s - 1] > i; ) s--;
                                return r > 0 || s < t.length ? t.slice(r, s) : t;
                            })(r, s, this.max);
                        return (
                            (this._unit =
                                e.unit ||
                                (i.autoSkip
                                    ? Hn(e.minUnit, this.min, this.max, this._getLabelCapacity(s))
                                    : (function (t, e, i, r, s) {
                                          for (var a = zn.length - 1; a >= zn.indexOf(i); a--) {
                                              var n = zn[a];
                                              if (Bn[n].common && t._adapter.diff(s, r, n) >= e - 1) return n;
                                          }
                                          return zn[i ? zn.indexOf(i) : 0];
                                      })(this, a.length, e.minUnit, this.min, this.max))),
                            (this._majorUnit =
                                i.major.enabled && "year" !== this._unit
                                    ? (function (t) {
                                          for (var e = zn.indexOf(t) + 1, i = zn.length; e < i; ++e) if (Bn[zn[e]].common) return zn[e];
                                      })(this._unit)
                                    : void 0),
                            this.initOffsets(r),
                            t.reverse && a.reverse(),
                            Wn(this, a, this._majorUnit)
                        );
                    }
                    afterAutoSkip() {
                        this.options.offsetAfterAutoskip && this.initOffsets(this.ticks.map((t) => +t.value));
                    }
                    initOffsets(t = []) {
                        var e,
                            i,
                            r = 0,
                            s = 0;
                        this.options.offset &&
                            t.length &&
                            ((e = this.getDecimalForValue(t[0])),
                            (r = 1 === t.length ? 1 - e : (this.getDecimalForValue(t[1]) - e) / 2),
                            (i = this.getDecimalForValue(t[t.length - 1])),
                            (s = 1 === t.length ? i : (i - this.getDecimalForValue(t[t.length - 2])) / 2));
                        var a = t.length < 3 ? 0.5 : 0.25;
                        (r = It(r, 0, a)), (s = It(s, 0, a)), (this._offsets = { start: r, end: s, factor: 1 / (r + 1 + s) });
                    }
                    _generate() {
                        var t,
                            e,
                            i = this._adapter,
                            r = this.min,
                            s = this.max,
                            a = this.options,
                            n = a.time,
                            o = n.unit || Hn(n.minUnit, r, s, this._getLabelCapacity(r)),
                            l = U(a.ticks.stepSize, 1),
                            h = "week" === o && n.isoWeekday,
                            c = Ct(h) || !0 === h,
                            d = {},
                            u = r;
                        if ((c && (u = +i.startOf(u, "isoWeek", h)), (u = +i.startOf(u, c ? "day" : o)), i.diff(s, r, o) > 1e5 * l)) throw new Error(r + " and " + s + " are too far apart with stepSize of " + l + " " + o);
                        var p = "data" === a.ticks.source && this.getDataTimestamps();
                        for (t = u, e = 0; t < s; t = +i.add(t, l, o), e++) jn(d, t, p);
                        return (
                            (t !== s && "ticks" !== a.bounds && 1 !== e) || jn(d, t, p),
                            Object.keys(d)
                                .sort(Nn)
                                .map((t) => +t)
                        );
                    }
                    getLabelForValue(t) {
                        var e = this._adapter,
                            i = this.options.time;
                        return i.tooltipFormat ? e.format(t, i.tooltipFormat) : e.format(t, i.displayFormats.datetime);
                    }
                    format(t, e) {
                        var i = this.options.time.displayFormats,
                            r = this._unit,
                            s = e || i[r];
                        return this._adapter.format(t, s);
                    }
                    _tickFormatFunction(t, e, i, r) {
                        var s = this.options,
                            a = s.ticks.callback;
                        if (a) return X(a, [t, e, i], this);
                        var n = s.time.displayFormats,
                            o = this._unit,
                            l = this._majorUnit,
                            h = o && n[o],
                            c = l && n[l],
                            d = i[e],
                            u = l && c && d && d.major;
                        return this._adapter.format(t, r || (u ? c : h));
                    }
                    generateTickLabels(t) {
                        var e, i, r;
                        for (e = 0, i = t.length; e < i; ++e) (r = t[e]).label = this._tickFormatFunction(r.value, e, t);
                    }
                    getDecimalForValue(t) {
                        return null === t ? NaN : (t - this.min) / (this.max - this.min);
                    }
                    getPixelForValue(t) {
                        var e = this._offsets,
                            i = this.getDecimalForValue(t);
                        return this.getPixelForDecimal((e.start + i) * e.factor);
                    }
                    getValueForPixel(t) {
                        var e = this._offsets,
                            i = this.getDecimalForPixel(t) / e.factor - e.end;
                        return this.min + i * (this.max - this.min);
                    }
                    _getLabelSize(t) {
                        var e = this.options.ticks,
                            i = this.ctx.measureText(t).width,
                            r = Tt(this.isHorizontal() ? e.maxRotation : e.minRotation),
                            s = Math.cos(r),
                            a = Math.sin(r),
                            n = this._resolveTickFontOptions(0).size;
                        return { w: i * s + n * a, h: i * a + n * s };
                    }
                    _getLabelCapacity(t) {
                        var e = this.options.time,
                            i = e.displayFormats,
                            r = i[e.unit] || i.millisecond,
                            s = this._tickFormatFunction(t, 0, Wn(this, [t], this._majorUnit), r),
                            a = this._getLabelSize(s),
                            n = Math.floor(this.isHorizontal() ? this.width / a.w : this.height / a.h) - 1;
                        return n > 0 ? n : 1;
                    }
                    getDataTimestamps() {
                        var t,
                            e,
                            i = this._cache.data || [];
                        if (i.length) return i;
                        var r = this.getMatchingVisibleMetas();
                        if (this._normalized && r.length) return (this._cache.data = r[0].controller.getAllParsedValues(this));
                        for (t = 0, e = r.length; t < e; ++t) i = i.concat(r[t].controller.getAllParsedValues(this));
                        return (this._cache.data = this.normalize(i));
                    }
                    getLabelTimestamps() {
                        var t,
                            e,
                            i = this._cache.labels || [];
                        if (i.length) return i;
                        var r = this.getLabels();
                        for (t = 0, e = r.length; t < e; ++t) i.push(Vn(this, r[t]));
                        return (this._cache.labels = this._normalized ? i : this.normalize(i));
                    }
                    normalize(t) {
                        return Vt(t.sort(Nn));
                    }
                }
                function qn(t, e, i) {
                    var r,
                        s,
                        a,
                        n,
                        o = 0,
                        l = t.length - 1;
                    if (i) {
                        if (e >= t[o].pos && e <= t[l].pos) {
                            var h = Ft(t, "pos", e);
                            (o = h.lo), (l = h.hi);
                        }
                        var c = t[o];
                        (r = c.pos), (a = c.time);
                        var d = t[l];
                        (s = d.pos), (n = d.time);
                    } else {
                        if (e >= t[o].time && e <= t[l].time) {
                            var u = Ft(t, "time", e);
                            (o = u.lo), (l = u.hi);
                        }
                        var p = t[o];
                        (r = p.time), (a = p.pos);
                        var m = t[l];
                        (s = m.time), (n = m.pos);
                    }
                    var f = s - r;
                    return f ? a + ((n - a) * (e - r)) / f : a;
                }
                Ii(Gn, "id", "time"),
                    Ii(Gn, "defaults", {
                        bounds: "data",
                        adapters: {},
                        time: { parser: !1, unit: !1, round: !1, isoWeekday: !1, minUnit: "millisecond", displayFormats: {} },
                        ticks: { source: "auto", callback: !1, major: { enabled: !1 } },
                    });
                class $n extends Gn {
                    constructor(t) {
                        super(t), (this._table = []), (this._minPos = void 0), (this._tableRange = void 0);
                    }
                    initOffsets() {
                        var t = this._getTimestampsForTable(),
                            e = (this._table = this.buildLookupTable(t));
                        (this._minPos = qn(e, this.min)), (this._tableRange = qn(e, this.max) - this._minPos), super.initOffsets(t);
                    }
                    buildLookupTable(t) {
                        var e,
                            i,
                            r,
                            s,
                            a,
                            n = this.min,
                            o = this.max,
                            l = [],
                            h = [];
                        for (e = 0, i = t.length; e < i; ++e) (s = t[e]) >= n && s <= o && l.push(s);
                        if (l.length < 2)
                            return [
                                { time: n, pos: 0 },
                                { time: o, pos: 1 },
                            ];
                        for (e = 0, i = l.length; e < i; ++e) (a = l[e + 1]), (r = l[e - 1]), (s = l[e]), Math.round((a + r) / 2) !== s && h.push({ time: s, pos: e / (i - 1) });
                        return h;
                    }
                    _generate() {
                        var t = this.min,
                            e = this.max,
                            i = super.getDataTimestamps();
                        return (i.includes(t) && i.length) || i.splice(0, 0, t), (i.includes(e) && 1 !== i.length) || i.push(e), i.sort((t, e) => t - e);
                    }
                    _getTimestampsForTable() {
                        var t = this._cache.all || [];
                        if (t.length) return t;
                        var e = this.getDataTimestamps(),
                            i = this.getLabelTimestamps();
                        return (t = e.length && i.length ? this.normalize(e.concat(i)) : e.length ? e : i), (t = this._cache.all = t);
                    }
                    getDecimalForValue(t) {
                        return (qn(this._table, t) - this._minPos) / this._tableRange;
                    }
                    getValueForPixel(t) {
                        var e = this._offsets,
                            i = this.getDecimalForPixel(t) / e.factor - e.end;
                        return qn(this._table, i * this._tableRange + this._minPos, !0);
                    }
                }
                Ii($n, "id", "timeseries"), Ii($n, "defaults", Gn.defaults);
                var Un = [vr, ga, mn, Object.freeze({ __proto__: null, CategoryScale: vn, LinearScale: xn, LogarithmicScale: Mn, RadialLinearScale: Fn, TimeScale: Gn, TimeSeriesScale: $n })];
                qs.register(...Un);
                var Yn = (function () {
                        if ("undefined" != typeof window) {
                            if (window.devicePixelRatio) return window.devicePixelRatio;
                            var t = window.screen;
                            if (t) return (t.deviceXDPI || 1) / (t.logicalXDPI || 1);
                        }
                        return 1;
                    })(),
                    Xn = function (t) {
                        var e,
                            i = [];
                        for (t = [].concat(t); t.length; ) "string" == typeof (e = t.pop()) ? i.unshift.apply(i, e.split("\n")) : Array.isArray(e) ? t.push.apply(t, e) : j(t) || i.unshift("" + e);
                        return i;
                    },
                    Kn = function (t, e, i) {
                        var r,
                            s = [].concat(e),
                            a = s.length,
                            n = t.font,
                            o = 0;
                        for (t.font = i.string, r = 0; r < a; ++r) o = Math.max(t.measureText(s[r]).width, o);
                        return (t.font = n), { height: a * i.lineHeight, width: o };
                    },
                    Zn = function (t, e, i) {
                        return Math.max(t, Math.min(e, i));
                    },
                    Jn = function (t, e) {
                        var i,
                            r,
                            s,
                            a,
                            n = t.slice(),
                            o = [];
                        for (i = 0, s = e.length; i < s; ++i) (a = e[i]), -1 === (r = n.indexOf(a)) ? o.push([a, 1]) : n.splice(r, 1);
                        for (i = 0, s = n.length; i < s; ++i) o.push([n[i], -1]);
                        return o;
                    };
                function Qn(t, e) {
                    var i = e.x,
                        r = e.y;
                    if (null === i) return { x: 0, y: -1 };
                    if (null === r) return { x: 1, y: 0 };
                    var s = t.x - i,
                        a = t.y - r,
                        n = Math.sqrt(s * s + a * a);
                    return { x: n ? s / n : 0, y: n ? a / n : -1 };
                }
                var to = 0,
                    eo = 1,
                    io = 2,
                    ro = 4,
                    so = 8;
                function ao(t, e, i) {
                    var r = to;
                    return t < i.left ? (r |= eo) : t > i.right && (r |= io), e < i.top ? (r |= so) : e > i.bottom && (r |= ro), r;
                }
                function no(t, e) {
                    var i,
                        r,
                        s = e.anchor,
                        a = t;
                    return (
                        e.clamp &&
                            (a = (function (t, e) {
                                for (var i, r, s, a = t.x0, n = t.y0, o = t.x1, l = t.y1, h = ao(a, n, e), c = ao(o, l, e); h | c && !(h & c); )
                                    (i = h || c) & so
                                        ? ((r = a + ((o - a) * (e.top - n)) / (l - n)), (s = e.top))
                                        : i & ro
                                        ? ((r = a + ((o - a) * (e.bottom - n)) / (l - n)), (s = e.bottom))
                                        : i & io
                                        ? ((s = n + ((l - n) * (e.right - a)) / (o - a)), (r = e.right))
                                        : i & eo && ((s = n + ((l - n) * (e.left - a)) / (o - a)), (r = e.left)),
                                        i === h ? (h = ao((a = r), (n = s), e)) : (c = ao((o = r), (l = s), e));
                                return { x0: a, x1: o, y0: n, y1: l };
                            })(a, e.area)),
                        "start" === s ? ((i = a.x0), (r = a.y0)) : "end" === s ? ((i = a.x1), (r = a.y1)) : ((i = (a.x0 + a.x1) / 2), (r = (a.y0 + a.y1) / 2)),
                        (function (t, e, i, r, s) {
                            switch (s) {
                                case "center":
                                    i = r = 0;
                                    break;
                                case "bottom":
                                    (i = 0), (r = 1);
                                    break;
                                case "right":
                                    (i = 1), (r = 0);
                                    break;
                                case "left":
                                    (i = -1), (r = 0);
                                    break;
                                case "top":
                                    (i = 0), (r = -1);
                                    break;
                                case "start":
                                    (i = -i), (r = -r);
                                    break;
                                case "end":
                                    break;
                                default:
                                    (s *= Math.PI / 180), (i = Math.cos(s)), (r = Math.sin(s));
                            }
                            return { x: t, y: e, vx: i, vy: r };
                        })(i, r, t.vx, t.vy, e.align)
                    );
                }
                var oo = function (t, e) {
                        var i = (t.startAngle + t.endAngle) / 2,
                            r = Math.cos(i),
                            s = Math.sin(i),
                            a = t.innerRadius,
                            n = t.outerRadius;
                        return no({ x0: t.x + r * a, y0: t.y + s * a, x1: t.x + r * n, y1: t.y + s * n, vx: r, vy: s }, e);
                    },
                    lo = function (t, e) {
                        var i = Qn(t, e.origin),
                            r = i.x * t.options.radius,
                            s = i.y * t.options.radius;
                        return no({ x0: t.x - r, y0: t.y - s, x1: t.x + r, y1: t.y + s, vx: i.x, vy: i.y }, e);
                    },
                    ho = function (t, e) {
                        var i = Qn(t, e.origin),
                            r = t.x,
                            s = t.y,
                            a = 0,
                            n = 0;
                        return t.horizontal ? ((r = Math.min(t.x, t.base)), (a = Math.abs(t.base - t.x))) : ((s = Math.min(t.y, t.base)), (n = Math.abs(t.base - t.y))), no({ x0: r, y0: s + n, x1: r + a, y1: s, vx: i.x, vy: i.y }, e);
                    },
                    co = function (t, e) {
                        var i = Qn(t, e.origin);
                        return no({ x0: t.x, y0: t.y, x1: t.x + (t.width || 0), y1: t.y + (t.height || 0), vx: i.x, vy: i.y }, e);
                    },
                    uo = function (t) {
                        return Math.round(t * Yn) / Yn;
                    };
                function po(t, e) {
                    var i = e.chart.getDatasetMeta(e.datasetIndex).vScale;
                    if (!i) return null;
                    if (void 0 !== i.xCenter && void 0 !== i.yCenter) return { x: i.xCenter, y: i.yCenter };
                    var r = i.getBasePixel();
                    return t.horizontal ? { x: r, y: null } : { x: null, y: r };
                }
                function mo(t, e, i) {
                    var r = i.backgroundColor,
                        s = i.borderColor,
                        a = i.borderWidth;
                    (r || (s && a)) &&
                        (t.beginPath(),
                        (function (t, e, i, r, s, a) {
                            var n = Math.PI / 2;
                            if (a) {
                                var o = Math.min(a, s / 2, r / 2),
                                    l = e + o,
                                    h = i + o,
                                    c = e + r - o,
                                    d = i + s - o;
                                t.moveTo(e, h),
                                    l < c && h < d
                                        ? (t.arc(l, h, o, -Math.PI, -n), t.arc(c, h, o, -n, 0), t.arc(c, d, o, 0, n), t.arc(l, d, o, n, Math.PI))
                                        : l < c
                                        ? (t.moveTo(l, i), t.arc(c, h, o, -n, n), t.arc(l, h, o, n, Math.PI + n))
                                        : h < d
                                        ? (t.arc(l, h, o, -Math.PI, 0), t.arc(l, d, o, 0, Math.PI))
                                        : t.arc(l, h, o, -Math.PI, Math.PI),
                                    t.closePath(),
                                    t.moveTo(e, i);
                            } else t.rect(e, i, r, s);
                        })(t, uo(e.x) + a / 2, uo(e.y) + a / 2, uo(e.w) - a, uo(e.h) - a, i.borderRadius),
                        t.closePath(),
                        r && ((t.fillStyle = r), t.fill()),
                        s && a && ((t.strokeStyle = s), (t.lineWidth = a), (t.lineJoin = "miter"), t.stroke()));
                }
                function fo(t, e, i) {
                    var r = t.shadowBlur,
                        s = i.stroked,
                        a = uo(i.x),
                        n = uo(i.y),
                        o = uo(i.w);
                    s && t.strokeText(e, a, n, o), i.filled && (r && s && (t.shadowBlur = 0), t.fillText(e, a, n, o), r && s && (t.shadowBlur = r));
                }
                var go = function (t, e, i, r) {
                    var s = this;
                    (s._config = t), (s._index = r), (s._model = null), (s._rects = null), (s._ctx = e), (s._el = i);
                };
                et(go.prototype, {
                    _modelize: function (t, e, i, r) {
                        var s,
                            a = this,
                            n = a._index,
                            o = Oe(Fe([i.font, {}], r, n)),
                            l = Fe([i.color, de.color], r, n);
                        return {
                            align: Fe([i.align, "center"], r, n),
                            anchor: Fe([i.anchor, "center"], r, n),
                            area: r.chart.chartArea,
                            backgroundColor: Fe([i.backgroundColor, null], r, n),
                            borderColor: Fe([i.borderColor, null], r, n),
                            borderRadius: Fe([i.borderRadius, 0], r, n),
                            borderWidth: Fe([i.borderWidth, 0], r, n),
                            clamp: Fe([i.clamp, !1], r, n),
                            clip: Fe([i.clip, !1], r, n),
                            color: l,
                            display: t,
                            font: o,
                            lines: e,
                            offset: Fe([i.offset, 4], r, n),
                            opacity: Fe([i.opacity, 1], r, n),
                            origin: po(a._el, r),
                            padding: Re(Fe([i.padding, 4], r, n)),
                            positioner: ((s = a._el), s instanceof Zs ? oo : s instanceof la ? lo : s instanceof fa ? ho : co),
                            rotation: Fe([i.rotation, 0], r, n) * (Math.PI / 180),
                            size: Kn(a._ctx, e, o),
                            textAlign: Fe([i.textAlign, "start"], r, n),
                            textShadowBlur: Fe([i.textShadowBlur, 0], r, n),
                            textShadowColor: Fe([i.textShadowColor, l], r, n),
                            textStrokeColor: Fe([i.textStrokeColor, l], r, n),
                            textStrokeWidth: Fe([i.textStrokeWidth, 0], r, n),
                        };
                    },
                    update: function (t) {
                        var e,
                            i,
                            r,
                            s = this,
                            a = null,
                            n = null,
                            o = s._index,
                            l = s._config,
                            h = Fe([l.display, !0], t, o);
                        h &&
                            ((e = t.dataset.data[o]),
                            (r = j((i = U(X(l.formatter, [e, t]), e))) ? [] : Xn(i)).length &&
                                (n = (function (t) {
                                    var e = t.borderWidth || 0,
                                        i = t.padding,
                                        r = t.size.height,
                                        s = t.size.width,
                                        a = -s / 2,
                                        n = -r / 2;
                                    return { frame: { x: a - i.left - e, y: n - i.top - e, w: s + i.width + 2 * e, h: r + i.height + 2 * e }, text: { x: a, y: n, w: s, h: r } };
                                })((a = s._modelize(h, r, l, t))))),
                            (s._model = a),
                            (s._rects = n);
                    },
                    geometry: function () {
                        return this._rects ? this._rects.frame : {};
                    },
                    rotation: function () {
                        return this._model ? this._model.rotation : 0;
                    },
                    visible: function () {
                        return this._model && this._model.opacity;
                    },
                    model: function () {
                        return this._model;
                    },
                    draw: function (t, e) {
                        var i,
                            r = t.ctx,
                            s = this._model,
                            a = this._rects;
                        this.visible() &&
                            (r.save(),
                            s.clip && ((i = s.area), r.beginPath(), r.rect(i.left, i.top, i.right - i.left, i.bottom - i.top), r.clip()),
                            (r.globalAlpha = Zn(0, s.opacity, 1)),
                            r.translate(uo(e.x), uo(e.y)),
                            r.rotate(s.rotation),
                            mo(r, a.frame, s),
                            (function (t, e, i, r) {
                                var s,
                                    a = r.textAlign,
                                    n = r.color,
                                    o = !!n,
                                    l = r.font,
                                    h = e.length,
                                    c = r.textStrokeColor,
                                    d = r.textStrokeWidth,
                                    u = c && d;
                                if (h && (o || u))
                                    for (
                                        i = (function (t, e, i) {
                                            var r = i.lineHeight,
                                                s = t.w,
                                                a = t.x;
                                            return "center" === e ? (a += s / 2) : ("end" !== e && "right" !== e) || (a += s), { h: r, w: s, x: a, y: t.y + r / 2 };
                                        })(i, a, l),
                                            t.font = l.string,
                                            t.textAlign = a,
                                            t.textBaseline = "middle",
                                            t.shadowBlur = r.textShadowBlur,
                                            t.shadowColor = r.textShadowColor,
                                            o && (t.fillStyle = n),
                                            u && ((t.lineJoin = "round"), (t.lineWidth = d), (t.strokeStyle = c)),
                                            s = 0,
                                            h = e.length;
                                        s < h;
                                        ++s
                                    )
                                        fo(t, e[s], { stroked: u, filled: o, w: i.w, x: i.x, y: i.y + i.h * s });
                            })(r, s.lines, a.text, s),
                            r.restore());
                    },
                });
                var vo = Number.MIN_SAFE_INTEGER || -9007199254740991,
                    bo = Number.MAX_SAFE_INTEGER || 9007199254740991;
                function yo(t, e, i) {
                    var r = Math.cos(i),
                        s = Math.sin(i),
                        a = e.x,
                        n = e.y;
                    return { x: a + r * (t.x - a) - s * (t.y - n), y: n + s * (t.x - a) + r * (t.y - n) };
                }
                function wo(t, e) {
                    var i,
                        r,
                        s,
                        a,
                        n,
                        o = bo,
                        l = vo,
                        h = e.origin;
                    for (i = 0; i < t.length; ++i) (s = (r = t[i]).x - h.x), (a = r.y - h.y), (n = e.vx * s + e.vy * a), (o = Math.min(o, n)), (l = Math.max(l, n));
                    return { min: o, max: l };
                }
                function xo(t, e) {
                    var i = e.x - t.x,
                        r = e.y - t.y,
                        s = Math.sqrt(i * i + r * r);
                    return { vx: (e.x - t.x) / s, vy: (e.y - t.y) / s, origin: t, ln: s };
                }
                var Eo = function () {
                    (this._rotation = 0), (this._rect = { x: 0, y: 0, w: 0, h: 0 });
                };
                function Co(t, e, i) {
                    var r = e.positioner(t, e),
                        s = r.vx,
                        a = r.vy;
                    if (!s && !a) return { x: r.x, y: r.y };
                    var n = i.w,
                        o = i.h,
                        l = e.rotation,
                        h = Math.abs((n / 2) * Math.cos(l)) + Math.abs((o / 2) * Math.sin(l)),
                        c = Math.abs((n / 2) * Math.sin(l)) + Math.abs((o / 2) * Math.cos(l)),
                        d = 1 / Math.max(Math.abs(s), Math.abs(a));
                    return (h *= s * d), (c *= a * d), (h += e.offset * s), (c += e.offset * a), { x: r.x + h, y: r.y + c };
                }
                et(Eo.prototype, {
                    center: function () {
                        var t = this._rect;
                        return { x: t.x + t.w / 2, y: t.y + t.h / 2 };
                    },
                    update: function (t, e, i) {
                        (this._rotation = i), (this._rect = { x: e.x + t.x, y: e.y + t.y, w: e.w, h: e.h });
                    },
                    contains: function (t) {
                        var e = this,
                            i = e._rect;
                        return !((t = yo(t, e.center(), -e._rotation)).x < i.x - 1 || t.y < i.y - 1 || t.x > i.x + i.w + 2 || t.y > i.y + i.h + 2);
                    },
                    intersects: function (t) {
                        var e,
                            i,
                            r,
                            s = this._points(),
                            a = t._points(),
                            n = [xo(s[0], s[1]), xo(s[0], s[3])];
                        for (this._rotation !== t._rotation && n.push(xo(a[0], a[1]), xo(a[0], a[3])), e = 0; e < n.length; ++e) if (((i = wo(s, n[e])), (r = wo(a, n[e])), i.max < r.min || r.max < i.min)) return !1;
                        return !0;
                    },
                    _points: function () {
                        var t = this,
                            e = t._rect,
                            i = t._rotation,
                            r = t.center();
                        return [yo({ x: e.x, y: e.y }, r, i), yo({ x: e.x + e.w, y: e.y }, r, i), yo({ x: e.x + e.w, y: e.y + e.h }, r, i), yo({ x: e.x, y: e.y + e.h }, r, i)];
                    },
                });
                var So = {
                        prepare: function (t) {
                            var e,
                                i,
                                r,
                                s,
                                a,
                                n = [];
                            for (e = 0, r = t.length; e < r; ++e) for (i = 0, s = t[e].length; i < s; ++i) (a = t[e][i]), n.push(a), (a.$layout = { _box: new Eo(), _hidable: !1, _visible: !0, _set: e, _idx: a._index });
                            return (
                                n.sort(function (t, e) {
                                    var i = t.$layout,
                                        r = e.$layout;
                                    return i._idx === r._idx ? r._set - i._set : r._idx - i._idx;
                                }),
                                this.update(n),
                                n
                            );
                        },
                        update: function (t) {
                            var e,
                                i,
                                r,
                                s,
                                a,
                                n = !1;
                            for (e = 0, i = t.length; e < i; ++e) (s = (r = t[e]).model()), ((a = r.$layout)._hidable = s && "auto" === s.display), (a._visible = r.visible()), (n |= a._hidable);
                            n &&
                                (function (t) {
                                    var e, i, r, s, a, n, o;
                                    for (e = 0, i = t.length; e < i; ++e)
                                        (s = (r = t[e]).$layout)._visible && ((o = new Proxy(r._el, { get: (t, e) => t.getProps([e], !0)[e] })), (a = r.geometry()), (n = Co(o, r.model(), a)), s._box.update(n, a, r.rotation()));
                                    (function (t, e) {
                                        var i, r, s, a;
                                        for (i = t.length - 1; i >= 0; --i) for (s = t[i].$layout, r = i - 1; r >= 0 && s._visible; --r) (a = t[r].$layout)._visible && s._box.intersects(a._box) && e(s, a);
                                    })(t, function (t, e) {
                                        var i = t._hidable,
                                            r = e._hidable;
                                        (i && r) || r ? (e._visible = !1) : i && (t._visible = !1);
                                    });
                                })(t);
                        },
                        lookup: function (t, e) {
                            var i, r;
                            for (i = t.length - 1; i >= 0; --i) if ((r = t[i].$layout) && r._visible && r._box.contains(e)) return t[i];
                            return null;
                        },
                        draw: function (t, e) {
                            var i, r, s, a, n, o;
                            for (i = 0, r = e.length; i < r; ++i) (a = (s = e[i]).$layout)._visible && ((n = s.geometry()), (o = Co(s._el, s.model(), n)), a._box.update(o, n, s.rotation()), s.draw(t, o));
                        },
                    },
                    To = "$datalabels",
                    _o = "$default";
                function Mo(t, e, i, r) {
                    if (e) {
                        var s,
                            a = i.$context,
                            n = i.$groups;
                        e[n._set] && (s = e[n._set][n._key]) && !0 === X(s, [a, r]) && ((t[To]._dirty = !0), i.update(a));
                    }
                }
                function Po(t, e) {
                    var i,
                        r,
                        s = t[To],
                        a = s._listeners;
                    if (a.enter || a.leave) {
                        if ("mousemove" === e.type) r = So.lookup(s._labels, e);
                        else if ("mouseout" !== e.type) return;
                        (i = s._hovered),
                            (s._hovered = r),
                            (function (t, e, i, r, s) {
                                var a, n;
                                (i || r) && (i ? (r ? i !== r && (n = a = !0) : (n = !0)) : (a = !0), n && Mo(t, e.leave, i, s), a && Mo(t, e.enter, r, s));
                            })(t, a, i, r, e);
                    }
                }
                var ko = {
                    id: "datalabels",
                    defaults: {
                        align: "center",
                        anchor: "center",
                        backgroundColor: null,
                        borderColor: null,
                        borderRadius: 0,
                        borderWidth: 0,
                        clamp: !1,
                        clip: !1,
                        color: void 0,
                        display: !0,
                        font: { family: void 0, lineHeight: 1.2, size: void 0, style: void 0, weight: null },
                        formatter: function (t) {
                            if (j(t)) return null;
                            var e,
                                i,
                                r,
                                s = t;
                            if (G(t))
                                if (j(t.label))
                                    if (j(t.r)) for (s = "", r = 0, i = (e = Object.keys(t)).length; r < i; ++r) s += (0 !== r ? ", " : "") + e[r] + ": " + t[e[r]];
                                    else s = t.r;
                                else s = t.label;
                            return "" + s;
                        },
                        labels: void 0,
                        listeners: {},
                        offset: 4,
                        opacity: 1,
                        padding: { top: 4, right: 4, bottom: 4, left: 4 },
                        rotation: 0,
                        textAlign: "start",
                        textStrokeColor: void 0,
                        textStrokeWidth: 0,
                        textShadowBlur: 0,
                        textShadowColor: void 0,
                    },
                    beforeInit: function (t) {
                        t[To] = { _actives: [] };
                    },
                    beforeUpdate: function (t) {
                        var e = t[To];
                        (e._listened = !1), (e._listeners = {}), (e._datasets = []), (e._labels = []);
                    },
                    afterDatasetUpdate: function (t, e, i) {
                        var r,
                            s,
                            a,
                            n,
                            o,
                            l,
                            h,
                            c,
                            d = e.index,
                            u = t[To],
                            p = (u._datasets[d] = []),
                            m = t.isDatasetVisible(d),
                            f = t.data.datasets[d],
                            g = (function (t, e) {
                                var i,
                                    r,
                                    s,
                                    a = t.datalabels,
                                    n = [];
                                return !1 === a
                                    ? null
                                    : (!0 === a && (a = {}),
                                      (e = et({}, [e, a])),
                                      (r = e.labels || {}),
                                      (s = Object.keys(r)),
                                      delete e.labels,
                                      s.length
                                          ? s.forEach(function (t) {
                                                r[t] && n.push(et({}, [e, r[t], { _key: t }]));
                                            })
                                          : n.push(e),
                                      (i = n.reduce(function (t, e) {
                                          return (
                                              K(e.listeners || {}, function (i, r) {
                                                  (t[r] = t[r] || {}), (t[r][e._key || _o] = i);
                                              }),
                                              delete e.listeners,
                                              t
                                          );
                                      }, {})),
                                      { labels: n, listeners: i });
                            })(f, i),
                            v = e.meta.data || [],
                            b = t.ctx;
                        for (b.save(), r = 0, a = v.length; r < a; ++r)
                            if ((((h = v[r])[To] = []), m && h && t.getDataVisibility(r) && !h.skip))
                                for (s = 0, n = g.labels.length; s < n; ++s)
                                    (l = (o = g.labels[s])._key),
                                        ((c = new go(o, b, h, r)).$groups = { _set: d, _key: l || _o }),
                                        (c.$context = { active: !1, chart: t, dataIndex: r, dataset: f, datasetIndex: d }),
                                        c.update(c.$context),
                                        h[To].push(c),
                                        p.push(c);
                        b.restore(),
                            et(u._listeners, g.listeners, {
                                merger: function (t, i, r) {
                                    (i[t] = i[t] || {}), (i[t][e.index] = r[t]), (u._listened = !0);
                                },
                            });
                    },
                    afterUpdate: function (t) {
                        t[To]._labels = So.prepare(t[To]._datasets);
                    },
                    afterDatasetsDraw: function (t) {
                        So.draw(t, t[To]._labels);
                    },
                    beforeEvent: function (t, e) {
                        if (t[To]._listened) {
                            var i = e.event;
                            switch (i.type) {
                                case "mousemove":
                                case "mouseout":
                                    Po(t, i);
                                    break;
                                case "click":
                                    !(function (t, e) {
                                        var i = t[To],
                                            r = i._listeners.click,
                                            s = r && So.lookup(i._labels, e);
                                        s && Mo(t, r, s, e);
                                    })(t, i);
                            }
                        }
                    },
                    afterEvent: function (t) {
                        var e,
                            i,
                            r,
                            s,
                            a,
                            n,
                            o,
                            l = t[To],
                            h = l._actives,
                            c = (l._actives = t.getActiveElements()),
                            d = Jn(h, c);
                        for (e = 0, i = d.length; e < i; ++e) if ((a = d[e])[1]) for (r = 0, s = (o = a[0].element[To] || []).length; r < s; ++r) ((n = o[r]).$context.active = 1 === a[1]), n.update(n.$context);
                        (l._dirty || d.length) && (So.update(l._labels), t.render()), delete l._dirty;
                    },
                };
                class Ao {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new Ao(t);
                    }
                    constructor(t) {
                        var e = t.targetSelector,
                            i = t.itens,
                            r = t.type,
                            s = void 0 === r ? "donut" : r,
                            a = t.border,
                            n = void 0 === a || a,
                            o = t.totalValue,
                            l = void 0 === o ? "" : o,
                            h = t.percentage,
                            c = void 0 !== h && h,
                            d = t.legendType,
                            u = t.showLegendPercentage,
                            p = void 0 === u || u,
                            m = t.moneyInTooltip,
                            f = void 0 !== m && m;
                        (this.targetSelector = e),
                            (this.itens = i),
                            (this.type = "donut" === s ? "doughnut" : s),
                            (this.legendType = d),
                            (this.border = n),
                            (this.totalValue = l),
                            (this.percentage = c),
                            (this.showLegendPercentage = p),
                            (this.moneyInTooltip = f),
                            this.init(),
                            (this.selectedSliceIndex = null);
                    }
                    init() {
                        this.getTotalValueAndCalculateChart(), this.setupChart(this.itens), this.setupEventHandlers(), this.setupChartLegends();
                    }
                    chartConfig(t) {
                        var e = t.map((t) => this.getBackgroundColor(t.color)),
                            i = t.map((t) => this.getHoverColor(t.color)),
                            r = { labels: t.map((t) => t.valueLabel), datasets: [{ data: t.map((t) => t.value), borderWidth: this.border ? 1 : 0, backgroundColor: e, hoverBackgroundColor: i }] };
                        return {
                            type: this.type,
                            data: r,
                            options: {
                                responsive: !0,
                                cutout: 80,
                                maintainAspectRatio: !1,
                                layout: { padding: { left: 50, right: 50, top: 20, bottom: 20 } },
                                plugins: {
                                    legend: { display: !1 },
                                    tooltip: {
                                        enabled: !1,
                                        external: (t) => {
                                            var e = this.targetSelector.replace("#", "").replace(".", ""),
                                                i = document.querySelector(`.${e}-tooltip`);
                                            i || ((i = document.createElement("div")).classList.add("chartjs-tooltip", `${e}-tooltip`), document.body.appendChild(i));
                                            var r = t.tooltip;
                                            0 !== r.opacity ? (r.body && this.tooltipBodyMaker(r, i), this.tooltipPositioningMethod(t, i, r)) : (i.style.opacity = "0");
                                        },
                                    },
                                    datalabels: {
                                        color: "#000",
                                        font: { family: '"Bradesco", sans-serif', size: 14, weight: "600" },
                                        anchor: "end",
                                        align: "end",
                                        offset: 2,
                                        position: "outside",
                                        formatter: (t, e) => this.externalLegendMethod(e),
                                    },
                                },
                            },
                            plugins: [ko],
                        };
                    }
                    externalLegendMethod(t) {
                        var e = t.dataIndex,
                            i = this.itens[e].value,
                            r = this.getItensSum();
                        return this.getPercentageElement(i, r) + "%";
                    }
                    tooltipPositioningMethod(t, e, i) {
                        var r = t.chart.canvas.getBoundingClientRect();
                        e.classList.remove("above", "no-transform"),
                            (e.style.opacity = "1"),
                            (e.style.position = "absolute"),
                            (e.style.left = r.left + i.caretX + "px"),
                            (e.style.top = r.top + i.caretY + "px"),
                            (e.style.padding = i.padding + "px " + i.padding + "px"),
                            (e.style.pointerEvents = "none");
                    }
                    tooltipBodyMaker(t, e) {
                        var i = t.dataPoints[0].dataIndex,
                            r = this.getActualSelectedData(i),
                            s = r.valueLabel,
                            a = r.value;
                        this.moneyInTooltip && (a = a.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }));
                        var n = `\n                        <div class="container-tooltip">\n                            <div class="tooltip-structure">\n                                <div class="circle-container">\n                                    <div class="circle-element" style="background-color: ${this.getBackgroundColor(
                            r.color
                        )};"></div>\n                                </div>\n\n                                <div class="text-container">\n                                  <p>${s} ${a}</p>\n                                </div>\n                            </div>\n                         </div>\n                    `;
                        e.innerHTML = n;
                    }
                    setupChart(t) {
                        var e = this.chartConfig(t),
                            i = document.querySelector(this.targetSelector).querySelector("canvas");
                        this.chart = new qs(i, e);
                    }
                    getActualSelectedData(t) {
                        return this.itens[t];
                    }
                    setupEventHandlers() {
                        this.chart.config.options.onClick = (t, e) => {
                            if (e && e.length > 0) {
                                var i = e[0].index;
                                null === this.selectedSliceIndex ? this.updateSliceOpacity(i) : this.selectedSliceIndex === i ? this.resetAllSliceOpacity() : (this.resetAllSliceOpacity(), this.updateSliceOpacity(i));
                            }
                        };
                    }
                    updateSliceOpacity(t) {
                        var e = this.chart.data.datasets[0],
                            i = e.backgroundColor.map((e, i) => (i === t ? this.adjustOpacity(e, 1) : this.adjustOpacity(e, 0.5)));
                        (e.backgroundColor = i), this.chart.update(), (this.selectedSliceIndex = t);
                    }
                    resetAllSliceOpacity() {
                        var t = this.chart.data.datasets[0],
                            e = t.backgroundColor.map((t) => this.adjustOpacity(t, 1));
                        (t.backgroundColor = e), this.chart.update(), (this.selectedSliceIndex = null);
                    }
                    adjustOpacity(t, e) {
                        var i = t.lastIndexOf(",");
                        return t.substring(0, i) + "," + e.toFixed(2) + ")";
                    }
                    getItensSum() {
                        return Number(this.itens.reduce((t, e) => t + e.value, 0));
                    }
                    setupChartLegends() {
                        var t = document.querySelector(this.targetSelector),
                            e = document.createElement("div");
                        e.classList.add("legend"),
                            t.appendChild(e),
                            "horizontal-bottom" == this.legendType && (t.classList.add("bottom-legend"), e.classList.add("horizontal-legend")),
                            "vertical-bottom" == this.legendType && (t.classList.add("bottom-legend"), e.classList.add("vertical-legend")),
                            "legend-left" == this.legendType && t.classList.add("legend-left");
                        var i = document.querySelector(this.targetSelector).querySelector(".legend");
                        (this.totalSum = this.getItensSum()),
                            this.itens.forEach((t) => {
                                this.handleLegendInnerElement(t, i);
                            });
                    }
                    handleLegendInnerElement(t, e) {
                        var i = this.getPercentageElement(t.value, this.totalSum),
                            r = document.createElement("div");
                        r.classList.add("legend__item"), e.appendChild(r);
                        var s = document.createElement("div"),
                            a = document.createElement("span");
                        s.classList.add("dot-container"), a.classList.add("legend__dot"), (a.style.backgroundColor = this.getBackgroundColor(t.color)), s.appendChild(a), r.appendChild(s);
                        var n = document.createElement("div");
                        n.classList.add("legend__text"), r.appendChild(n);
                        var o = document.createElement("p"),
                            l = document.createElement("span");
                        if (
                            ((o.innerText = `${t.valueLabel}`),
                            o.classList.add("brad-font-paragraph-sm"),
                            this.showLegendPercentage && ((l.innerText = `${i}%`), l.classList.add("value-prefix", "brad-font-title-sm"), o.appendChild(l)),
                            t.supportingText)
                        ) {
                            var h = document.createElement("p");
                            h.classList.add("supporting-text", "brad-font-paragraph-sm"), (h.innerText = t.supportingText), r.classList.add("supporting-version"), n.appendChild(h);
                        }
                        n.appendChild(o);
                    }
                    getTotalValueAndCalculateChart() {
                        var t = this.itens.find((t) => t.disabled);
                        if (
                            ((this.itensSum = this.getItensSum()),
                            this.percentage && ((null != this.totalValue && null != this.totalValue && this.itensSumIsBiggerThenTotal() && "" != this.totalValue) || (this.totalValue = 100)),
                            this.totalValue && t && !this.itensSumIsBiggerThenTotal())
                        ) {
                            var e = this.totalValue - this.itensSum;
                            t.value = e;
                        }
                    }
                    getPercentageElement(t, e) {
                        var i = (t / e) * 100;
                        return Number.isInteger(i) ? i.toFixed(0) : i.toFixed(2);
                    }
                    itensSumIsBiggerThenTotal() {
                        return this.itensSum > this.totalValue;
                    }
                    getColorFromMap(t, e) {
                        return e[t] || t;
                    }
                    getBackgroundColor(t) {
                        return this.getColorFromMap(t, {
                            "brad-color-extended-blue": "rgba(59, 105, 255, 1)",
                            "brad-color-extended-purple": "rgba(115, 48, 139, 1)",
                            "brad-color-extended-green": "rgba(9, 171, 72, 1)",
                            "brad-color-extended-violet": "rgba(180, 26, 131, 1)",
                            "brad-color-extended-salmon": "rgba(243, 98, 121, 1)",
                            "brad-color-neutral-40": "rgba(109, 110, 113, 1)",
                            "brad-color-extended-red": "rgba(225, 23, 63, 1)",
                        });
                    }
                    getHoverColor(t) {
                        return this.getColorFromMap(t, {
                            "brad-color-extended-blue": "rgba(14, 36, 211, 1)",
                            "brad-color-extended-purple": "rgba(78, 33, 90, 1)",
                            "brad-color-extended-green": "rgba(5, 97, 41, 1)",
                            "brad-color-extended-violet": "rgba(141, 34, 108, 1)",
                            "brad-color-extended-salmon": "rgba(188, 46, 77, 1)",
                            "brad-color-neutral-40": "rgba(71, 72, 76, 1)",
                            "brad-color-extended-red": "rgba(176, 15, 47, 1)",
                        });
                    }
                }
                r.Z.add("BradChartsService", Ao);
            },
            8454: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(40603);
                r.Z.add("BradDragAndDropService", s.g);
            },
            40603: (t, e, i) => {
                "use strict";
                i.d(e, { g: () => h });
                var r = i(25375),
                    s = i(6314),
                    a = i(55988);
                function n(t, e) {
                    var i = ("undefined" != typeof Symbol && t[Symbol.iterator]) || t["@@iterator"];
                    if (!i) {
                        if (
                            Array.isArray(t) ||
                            (i = (function (t, e) {
                                if (!t) return;
                                if ("string" == typeof t) return o(t, e);
                                var i = Object.prototype.toString.call(t).slice(8, -1);
                                "Object" === i && t.constructor && (i = t.constructor.name);
                                if ("Map" === i || "Set" === i) return Array.from(t);
                                if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return o(t, e);
                            })(t)) ||
                            (e && t && "number" == typeof t.length)
                        ) {
                            i && (t = i);
                            var r = 0,
                                s = function () {};
                            return {
                                s,
                                n: function () {
                                    return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] };
                                },
                                e: function (t) {
                                    throw t;
                                },
                                f: s,
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a,
                        n = !0,
                        l = !1;
                    return {
                        s: function () {
                            i = i.call(t);
                        },
                        n: function () {
                            var t = i.next();
                            return (n = t.done), t;
                        },
                        e: function (t) {
                            (l = !0), (a = t);
                        },
                        f: function () {
                            try {
                                n || null == i.return || i.return();
                            } finally {
                                if (l) throw a;
                            }
                        },
                    };
                }
                function o(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var i = 0, r = new Array(e); i < e; i++) r[i] = t[i];
                    return r;
                }
                function l(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class h {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new h(t);
                    }
                    constructor(t) {
                        l(this, "classContainer", ".brad-drag-and-drop__container"),
                            l(this, "classSlot", ".brad-drag-and-drop__slot"),
                            l(this, "classContent", ".brad-drag-and-drop__content"),
                            l(this, "idDraganddrop", ""),
                            l(this, "mainElement", null),
                            l(this, "moving", !1),
                            l(this, "draggable", !1),
                            l(this, "currentContainer", void 0),
                            l(this, "elementsContainer", []),
                            l(this, "contentDragged", null),
                            l(this, "containers", []),
                            l(this, "coordinateDragging", { indexContainer: -1, index: -1 }),
                            l(this, "diffDragPosition", { x: 0, y: 0 }),
                            l(this, "dragging", !1),
                            l(this, "slotSelected", null),
                            l(this, "timeClick", 0),
                            l(this, "elementScroll", void 0),
                            l(this, "velScroll", 0),
                            l(this, "velScrollScale", 20),
                            l(this, "areaScrollScale", 0.1),
                            l(this, "stopRequest", !1),
                            l(this, "fpsControl", void 0),
                            l(this, "scrollStarted", !1),
                            l(this, "elementLimit", null),
                            l(this, "vvpLeft", 0),
                            l(this, "vvpTop", 0),
                            l(this, "iosUtils", null),
                            l(this, "callDrop", (t) => {
                                this.moveFromTo(t.coordDragging, t.coordSelected);
                            }),
                            l(this, "callClick", null),
                            l(this, "callTouchstart", (t) => {}),
                            l(this, "callTouchmove", (t) => {}),
                            l(this, "callTouchend", (t) => {});
                        try {
                            var e = t.targetSelector,
                                i = t.dropCallback,
                                n = t.clickCallback,
                                o = t.touchstartCallback,
                                h = t.touchmoveCallback,
                                c = t.touchendCallback,
                                d = document.querySelector(e);
                            if (!d) throw new a.s(a.A.ELEMENT_NOT_FOUND, `Component with (selector: ${e}) not found.`);
                            (this.idDraganddrop = e),
                                (this.mainElement = d),
                                this.setup(),
                                i && (this.callDrop = i),
                                n && (this.callClick = n),
                                o && (this.callTouchstart = o),
                                h && (this.callTouchmove = h),
                                c && (this.callTouchend = c),
                                (this.fpsControl = new r.G(48)),
                                (this.iosUtils = new s.h()),
                                (this.elementLimit = this.findNearestClass(this.mainElement, "brad-drag-and-drop-limit"));
                        } catch (t) {}
                    }
                    registerListerners(t) {
                        t.addEventListener("mousedown", this.startDrag.bind(this)), t.addEventListener("touchstart", this.startDrag.bind(this));
                    }
                    getCoordinateFromEvent(t) {
                        var e = { x: t.x, y: t.y };
                        return t.touches && ((e.x = t.touches[0].clientX), (e.y = t.touches[0].clientY)), e;
                    }
                    startDrag(t) {
                        var e;
                        (this.timeClick = new Date().getTime()),
                            (this.currentContainer = this.findParentContainer(t.currentTarget)),
                            t.touches && this.callTouchstart({ container: this.currentContainer }),
                            (this.draggable = this.verifyCurrentContainerIsDraggable());
                        try {
                            if (!(e = this.findParentSlot(t.currentTarget))) throw new a.s(a.A.ELEMENT_NOT_FOUND, "Slot not found with data atributte: data-index-drag.");
                            var i = this.findParentContainer(e);
                            (this.coordinateDragging.indexContainer = i.dataset.index),
                                (this.coordinateDragging.index = e.dataset.index),
                                (this.contentDragged = this.containers[this.coordinateDragging.indexContainer][this.coordinateDragging.index]);
                            var r = this.getCoordinateFromEvent(t);
                            this.setDiffDragPosition(this.contentDragged, r), this.followMouse(this.contentDragged, r);
                        } catch (t) {}
                        if (this.draggable) {
                            this.scrollStartLogic(), (this.timeClick = new Date().getTime()), this.removeSelected(), (this.slotSelected = this.findParentSlot(this.contentDragged)), this.slotSelected.classList.add("selected");
                            var s = this.contentDragged.getBoundingClientRect();
                            (this.contentDragged.style.width = s.width + "px"),
                                (this.contentDragged.style.height = s.height + "px"),
                                this.freezeSizeSlot(e),
                                this.contentDragged.classList.add("dragging"),
                                (this.elementLimit = this.findNearestClass(this.mainElement, "brad-drag-and-drop-limit")),
                                t.cancelable && t.preventDefault();
                        }
                    }
                    moveDrag(t) {
                        t.touches && this.callTouchmove(t), (this.draggable = this.verifyCurrentContainerIsDraggable());
                        var e = this.getCoordinateFromEvent(t);
                        if (this.coordinateDraggingIsSet() && this.draggable && this.canDrag(e)) {
                            t.preventDefault(), this.scrollMoveLogic(t), this.followMouse(this.contentDragged, e);
                            var i,
                                r = n(this.elementsContainer);
                            try {
                                for (r.s(); !(i = r.n()).done; ) {
                                    var s,
                                        a = n(i.value.querySelectorAll(this.classSlot));
                                    try {
                                        for (a.s(); !(s = a.n()).done; ) {
                                            var o = s.value;
                                            if (this.mouseCollisionDetection(e, o)) return void (this.slotSelected != o && (this.removeSelected(), (this.slotSelected = o), this.slotSelected.classList.add("selected")));
                                            this.removeSelected();
                                        }
                                    } catch (t) {
                                        a.e(t);
                                    } finally {
                                        a.f();
                                    }
                                }
                            } catch (t) {
                                r.e(t);
                            } finally {
                                r.f();
                            }
                        } else this.endDrag(t);
                    }
                    endDrag(t) {
                        t.touches && this.callTouchend({ container: this.currentContainer });
                        var e = new Date().getTime() - this.timeClick;
                        if ((this.scrollEndLogic(), this.coordinateDraggingIsSet())) {
                            if (this.slotSelected) {
                                var i = this.findCoordinate(this.slotSelected),
                                    r = this.coordinateDragging.indexContainer != i.indexContainer,
                                    s = this.coordinateDragging.index != i.index || r,
                                    a = [this.callClick, this.callDrop],
                                    n = Math.floor(e / 150);
                                (n > 1 || !this.callClick) && (n = 1), a[n]({ coordDragging: this.coordinateDragging, coordSelected: i, willChangeContainer: r, willChangePosition: s, target: t.target, result: this.getResult() });
                            }
                            this.draggable && (this.resetCoordinateDragging(), this.animate());
                        }
                    }
                    startMoveContent(t, e) {
                        var i = e.getBoundingClientRect();
                        t.classList.add("autoMove"),
                            (t.style.left = i.left + this.vvpLeft + "px"),
                            (t.style.top = i.top + this.vvpTop + "px"),
                            setTimeout(() => {
                                t.classList.remove("autoMove"),
                                    (t.style.width = null),
                                    (t.style.height = null),
                                    (t.parentNode.style.width = null),
                                    (t.parentNode.style.height = null),
                                    this.unfreezeSizeSlot(t.parentNode),
                                    t == this.contentDragged && this.resetDrag();
                            }, 450);
                    }
                    animate() {
                        var t = this;
                        this.vvpUpdate();
                        for (
                            var e = function () {
                                    for (
                                        var e = t.containers[i],
                                            r = t.elementsContainer[i].querySelectorAll(t.classSlot),
                                            s = function (i) {
                                                var s = e[i];
                                                if (s) {
                                                    var a = s.parentNode;
                                                    t.freezeSizeSlot(a);
                                                    var n = s.getBoundingClientRect();
                                                    (s.style.width = n.width + "px"),
                                                        (s.style.height = n.height + "px"),
                                                        (s.style.left = n.left + t.vvpLeft + "px"),
                                                        (s.style.top = n.top + t.vvpTop + "px"),
                                                        setTimeout(() => {
                                                            t.startMoveContent(s, r[i]);
                                                        }, 10);
                                                }
                                            },
                                            a = 0;
                                        a < e.length;
                                        a++
                                    )
                                        s(a);
                                },
                                i = 0;
                            i < this.containers.length;
                            i++
                        )
                            e();
                        setTimeout(() => {
                            this.refreshOriginalDomElementsDual();
                        }, 420);
                    }
                    resetDrag() {
                        this.mainElement.querySelectorAll(".dragging").forEach((t) => {
                            (t.style.width = null), (t.style.height = null), t.classList.remove("dragging");
                        });
                        var t = this.findParentSlot(this.contentDragged);
                        this.unfreezeSizeSlot(t), this.resetCoordinateDragging(), (this.contentDragged = null), this.removeSelected();
                    }
                    coordinateDraggingIsSet() {
                        return -1 != this.coordinateDragging.indexContainer && -1 != this.coordinateDragging.index;
                    }
                    resetCoordinateDragging() {
                        (this.coordinateDragging.indexContainer = -1), (this.coordinateDragging.index = -1);
                    }
                    freezeSizeSlot(t) {
                        var e = t.getBoundingClientRect();
                        (t.style.minWidth = e.width + "px"), (t.style.minHeight = e.height + "px"), (t.style.width = e.width + "px"), (t.style.height = e.height + "px");
                    }
                    unfreezeSizeSlot(t) {
                        (t.style.minWidth = null), (t.style.minHeight = null), (t.style.width = null), (t.style.height = null);
                    }
                    sortContainersNullLast() {
                        this.containers.forEach((t) => {
                            t.sort();
                        });
                    }
                    removeSelected() {
                        this.slotSelected && (this.slotSelected.classList.remove("selected"), (this.slotSelected = null));
                    }
                    setup() {
                        this.elementsContainer = this.mainElement.querySelectorAll(this.classContainer);
                        var t,
                            e = this.mainElement.querySelectorAll("[data-drag-event=true]"),
                            i = n(e);
                        try {
                            for (i.s(); !(t = i.n()).done; ) {
                                var r = t.value;
                                this.registerListerners(r);
                            }
                        } catch (t) {
                            i.e(t);
                        } finally {
                            i.f();
                        }
                        this.elementsContainer.forEach((t, i) => {
                            t.dataset.index = i;
                            var r = t.querySelectorAll(this.classSlot),
                                s = [];
                            r.forEach((t, i) => {
                                var r = t.querySelector(this.classContent);
                                this.copyBorderRadius(r), r && (0 == e.length ? this.registerListerners(r) : (r.style.cursor = "auto")), (t.dataset.index = i), s.push(r);
                            }),
                                this.containers.push(s);
                        }),
                            document.addEventListener("mousemove", this.moveDrag.bind(this), !1),
                            document.addEventListener("touchmove", this.moveDrag.bind(this), { passive: !1 }),
                            document.addEventListener("mouseup", this.endDrag.bind(this), !1),
                            document.addEventListener("touchend", this.endDrag.bind(this), !1);
                    }
                    copyBorderRadius(t) {
                        t && (t.style.borderRadius = getComputedStyle(t.firstElementChild).borderRadius);
                    }
                    moveFromTo(t, e) {
                        if (this.isFullArray(this.containers[e.indexContainer]) && t.indexContainer != e.indexContainer) this.swap(t, e);
                        else {
                            var i = this.arrayRemoveStack(this.containers[t.indexContainer], t.index);
                            this.arrayAddElement(this.containers[e.indexContainer], i, e.index),
                                t.indexContainer != e.indexContainer && (this.containers[t.indexContainer].push(null), this.arrayRemoveStack(this.containers[e.indexContainer], this.containers[e.indexContainer].length - 1));
                        }
                        this.sortContainersNullLast();
                    }
                    swap(t, e) {
                        var i = this.containers[t.indexContainer][t.index],
                            r = this.containers[e.indexContainer][e.index];
                        this.arrayRemoveElement(this.containers[t.indexContainer], t.index),
                            this.arrayRemoveElement(this.containers[e.indexContainer], e.index),
                            this.arrayOverwrite(this.containers[t.indexContainer], r, t.index),
                            this.arrayOverwrite(this.containers[e.indexContainer], i, e.index);
                    }
                    updateByIds(t) {
                        t.forEach((t, e) => {
                            t.forEach((t, i) => {
                                var r = null;
                                t && (r = this.mainElement.querySelector("#" + t)), (this.containers[e][i] = r);
                            });
                        });
                    }
                    arrayAddElement(t, e, i) {
                        var r = t[i] ? 0 : 1;
                        r && t.push(null), t.splice(i, r, e);
                    }
                    arrayRemoveStack(t, e) {
                        return t.splice(e, 1)[0];
                    }
                    arrayRemoveElement(t, e) {
                        t[e] = null;
                    }
                    arrayOverwrite(t, e, i) {
                        t[i] = e;
                    }
                    refreshOriginalDomElementsDual() {
                        for (var t = 0; t < this.elementsContainer.length; t++)
                            for (var e = this.elementsContainer[t].querySelectorAll(this.classSlot), i = 0; i < e.length; i++) this.containers[t][i] && e[i].appendChild(this.containers[t][i]);
                    }
                    isFullArray(t) {
                        for (var e = 0; e < t.length; e++) if (!t[e]) return !1;
                        return !0;
                    }
                    findCoordinate(t) {
                        var e = this.findParentSlot(t);
                        return t.dataset.index && (e = t), { indexContainer: this.findParentContainer(e).dataset.index, index: e.dataset.index };
                    }
                    setDiffDragPosition(t, e) {
                        var i = t.getBoundingClientRect();
                        (this.diffDragPosition.x = e.x - i.left), (this.diffDragPosition.y = e.y - i.top);
                    }
                    followMouse(t, e) {
                        this.vvpUpdate(), (t.style.left = e.x - this.diffDragPosition.x + this.vvpLeft + "px"), (t.style.top = e.y - this.diffDragPosition.y + this.vvpTop + "px");
                    }
                    mouseCollisionDetection(t, e) {
                        var i = e.getBoundingClientRect();
                        return this.mouseCollisionX(t, i) && this.mouseCollisionY(t, i);
                    }
                    mouseCollisionX(t, e) {
                        var i = e.left + e.width,
                            r = t.x - e.left,
                            s = i - t.x;
                        return r >= 0 && s >= 0;
                    }
                    mouseCollisionY(t, e) {
                        var i = e.top + e.height,
                            r = t.y - e.top,
                            s = i - t.y;
                        return r >= 0 && s >= 0;
                    }
                    findParent(t, e) {
                        return { container: this.findParentContainer.bind(this), slot: this.findParentSlot.bind(this), content: this.findParentContent.bind(this) }[t](e);
                    }
                    findParentSlot(t) {
                        return "BODY" != t.tagName && (t.parentNode.classList.contains("brad-drag-and-drop__slot") ? t.parentNode : this.findParentSlot(t.parentNode));
                    }
                    findParentContent(t) {
                        return "BODY" != t.tagName && (t.parentNode.classList.contains("brad-drag-and-drop__content") ? t.parentNode : this.findParentContent(t.parentNode));
                    }
                    findParentContainer(t) {
                        return "BODY" != t.tagName && (t.parentNode.classList.contains("brad-drag-and-drop__container") ? t.parentNode : this.findParentContainer(t.parentNode));
                    }
                    getResult() {
                        var t = [];
                        return (
                            this.containers.forEach((e, i) => {
                                t.push([]),
                                    e.forEach((e, r) => {
                                        var s = e ? e.id : null;
                                        t[i].push(s);
                                    });
                            }),
                            t
                        );
                    }
                    getFirstSlotEmptyIndex(t) {
                        for (var e = -1, i = 0; i < t.length; i++)
                            if (!t[i]) {
                                e = i;
                                break;
                            }
                        return e;
                    }
                    verifyCurrentContainerIsDraggable() {
                        return !!this.currentContainer && "false" != this.currentContainer.dataset.draggable;
                    }
                    markDrag() {
                        if (this.contentDragged) {
                            this.scrollStartLogic();
                            var t = this.contentDragged.getBoundingClientRect();
                            (this.contentDragged.style.width = t.width + "px"), (this.contentDragged.style.height = t.height + "px");
                            var e = this.findParentSlot(this.contentDragged);
                            this.freezeSizeSlot(e), this.contentDragged.classList.add("dragging");
                        }
                        this.removeSelected(), (this.slotSelected = this.findParentSlot(this.contentDragged)), this.slotSelected.classList.add("selected");
                    }
                    scrollStartLogic() {
                        (this.elementScroll = this.findNearestClass(this.mainElement, "brad-drag-and-drop-scroll")),
                            this.elementScroll && !this.scrollStarted && ((this.scrollStarted = !0), (this.stopRequest = !1), this.stopScroll(), window.requestAnimationFrame(this.loopScroll.bind(this)));
                    }
                    scrollMoveLogic(t) {
                        if (this.elementScroll) {
                            var e = this.getCoordinateFromEvent(t),
                                i = this.elementScroll.getBoundingClientRect(),
                                r = i.height,
                                s = i.top;
                            "HTML" === this.elementScroll.tagName && ((r = window.innerHeight), (s = 0));
                            var a = e.y - s;
                            (this.velScroll = 0),
                                a > r * (1 - this.areaScrollScale) && (this.velScroll = (this.velScrollScale * (a - r * (1 - this.areaScrollScale))) / (r - r * (1 - this.areaScrollScale))),
                                a < r * this.areaScrollScale && (this.velScroll = (-this.velScrollScale * (r * this.areaScrollScale - a)) / (r * this.areaScrollScale));
                        }
                    }
                    loopScroll() {
                        this.fpsControl.canExecute() && 0 != this.velScroll && this.elementScroll.scrollBy(0, this.velScroll), this.stopRequest || window.requestAnimationFrame(this.loopScroll.bind(this));
                    }
                    scrollEndLogic(t) {
                        this.elementScroll && ((this.scrollStarted = !1), (this.stopRequest = !0), (this.velScroll = 0), this.autoScroll());
                    }
                    stopScroll() {
                        this.elementScroll.classList.add("brad-drag-and-drop--scroll-freeze");
                    }
                    autoScroll() {
                        this.elementScroll.classList.remove("brad-drag-and-drop--scroll-freeze");
                    }
                    findNearestClass(t, e) {
                        return t.classList ? (t.classList.contains(e) ? t : this.findNearestClass(t.parentNode, e)) : null;
                    }
                    canDrag(t) {
                        if (this.elementLimit) {
                            var e = this.elementLimit.getBoundingClientRect();
                            if (t.x > e.left + e.width || t.x < e.left) return !1;
                            if (t.y > e.top + e.height || t.y < e.top) return !1;
                        }
                        return !0;
                    }
                    vvpUpdate() {
                        var t, e;
                        ((this.vvpLeft = 0), (this.vvpTop = 0), this.iosUtils.checkiOS()) &&
                            ((this.vvpLeft = (null === (t = window.visualViewport) || void 0 === t ? void 0 : t.offsetLeft) || 0), (this.vvpTop = (null === (e = window.visualViewport) || void 0 === e ? void 0 : e.offsetTop) || 0));
                    }
                }
            },
            77590: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(16444);
                r.Z.add("BradDropdownService", s.B);
            },
            16444: (t, e, i) => {
                "use strict";
                i.d(e, { B: () => a });
                var r = i(55988);
                function s(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class a {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new a(t);
                    }
                    constructor(t) {
                        s(this, "isShow", !1),
                            s(this, "eDropdown", void 0),
                            s(this, "eButton", void 0),
                            s(this, "eContent", void 0),
                            s(this, "show", () => {
                                this.eContent.classList.add("brad-dropdown__dropdown-content--show"), (this.isShow = !0), this.eContent.dispatchEvent(this.showEvent);
                            }),
                            s(this, "hide", () => {
                                this.eContent.dispatchEvent(this.hideEvent), this.eContent.classList.remove("brad-dropdown__dropdown-content--show"), (this.isShow = !1);
                            });
                        try {
                            var e = t.targetSelector,
                                i = t.enabledOutsideClick,
                                a = void 0 === i || i;
                            if (((this.eDropdown = document.querySelector(e)), (this.enabledOutsideClick = a), !1 === Boolean(this.eDropdown)))
                                throw new r.s(r.A.ELEMENT_NOT_FOUND, `Component with (selector: ${t.targetSelector}) not found.`);
                            (this.eButton = this.eDropdown.querySelector("[data-toggle='brad-dropdown']")),
                                this.eButton
                                    ? (this.eButton.addEventListener("click", this.toggle.bind(this)), (this.eContent = this.eButton.parentNode.querySelector(".brad-dropdown__dropdown-content")))
                                    : (this.eContent = this.eDropdown.querySelector(".brad-dropdown__dropdown-content")),
                                this.handleOutsideClickType(),
                                this.handleCustomEvents();
                        } catch (t) {}
                    }
                    handleCustomEvents() {
                        this.createHideEvent(), this.createShowEvent();
                    }
                    toggle() {
                        var t = !1 === this.isShow;
                        this.eButton && this.eButton.setAttribute("aria-expanded", t), this.isOpen() ? this.hide() : this.show();
                    }
                    isOpen() {
                        return this.isShow;
                    }
                    handleOutsideClickType() {
                        this.eButton ? this.handleOutsideClick(this.eDropdown) : this.handleOutsideClickWithNoButton(this.eDropdown);
                    }
                    handleOutsideClick(t) {
                        window.addEventListener("click", (e) => {
                            !1 === (this.eButton.contains(e.target) || t.contains(e.target)) && this.enabledOutsideClick && this.hide();
                        });
                    }
                    handleOutsideClickWithNoButton(t) {
                        window.addEventListener("click", (e) => {
                            var i = e.clientX,
                                r = e.clientY,
                                s = this.eContent.getBoundingClientRect(),
                                a = s.y,
                                n = s.x,
                                o = r > a && r < a + this.eContent.clientHeight && i > n && i < n + this.eContent.clientWidth;
                            !1 === t.contains(e.target) && !1 === this.eContent.contains(e.target) && !1 === o && this.enabledOutsideClick && this.eContent.classList.contains("brad-dropdown__dropdown-content--show") && this.hide();
                        });
                    }
                    createHideEvent() {
                        this.hideEvent = new Event("hide");
                    }
                    createShowEvent() {
                        this.showEvent = new Event("show");
                    }
                    getElementEvent() {
                        return this.eContent;
                    }
                }
            },
            56780: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(88399);
                r.Z.add("BradFilterService", s.t);
            },
            88399: (t, e, i) => {
                "use strict";
                i.d(e, { t: () => a });
                var r = i(35696);
                function s(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class a {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new a(t);
                    }
                    constructor(t) {
                        return s(this, "filterOpenClass", "brad-filter--selected"), (this.targetSelector = null == t ? void 0 : t.targetSelector), (this.eFilter = document.querySelector(this.targetSelector)), this;
                    }
                    select() {
                        return this.updateElementFilterBySelector(), this.eFilter.classList.add(this.filterOpenClass), this;
                    }
                    unselect() {
                        return this.updateElementFilterBySelector(), this.eFilter.classList.remove(this.filterOpenClass), this;
                    }
                    updateElementFilterBySelector() {
                        this.eFilter = this.targetSelector ? document.querySelector(this.targetSelector) : this.eFilter;
                    }
                    handleSingleFilter(t) {
                        return this.updateElementFilterBySelector(), this.select(), (this.eFilter.querySelector("label").innerText = t), this;
                    }
                    handleMultiFilter(t) {
                        return this.handleBadgeVisibility(t), this.chengeBadgeValue(t, "99"), this;
                    }
                    chengeBadgeValue(t, e) {
                        this.eFilter.querySelector(".brad-badge label").innerHTML = (0, r._)(t, e);
                    }
                    handleBadgeVisibility(t) {
                        0 === t
                            ? (this.unselect(), this.eFilter.querySelector("em").classList.remove("none"), this.eFilter.querySelector(".brad-badge").classList.add("none"))
                            : (this.select(), this.eFilter.querySelector("em").classList.add("none"), this.eFilter.querySelector(".brad-badge").classList.remove("none"));
                    }
                }
            },
            92780: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            76946: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854);
                class s {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new s(t);
                    }
                    constructor(t = { targetSelector: "" }) {
                        t.targetSelector;
                    }
                }
                r.Z.add("BradChipService", s);
            },
            76371: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854);
                function s() {
                    s = function () {
                        return e;
                    };
                    var t,
                        e = {},
                        i = Object.prototype,
                        r = i.hasOwnProperty,
                        a =
                            Object.defineProperty ||
                            function (t, e, i) {
                                t[e] = i.value;
                            },
                        n = "function" == typeof Symbol ? Symbol : {},
                        o = n.iterator || "@@iterator",
                        l = n.asyncIterator || "@@asyncIterator",
                        h = n.toStringTag || "@@toStringTag";
                    function c(t, e, i) {
                        return Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 }), t[e];
                    }
                    try {
                        c({}, "");
                    } catch (t) {
                        c = function (t, e, i) {
                            return (t[e] = i);
                        };
                    }
                    function d(t, e, i, r) {
                        var s = e && e.prototype instanceof b ? e : b,
                            n = Object.create(s.prototype),
                            o = new D(r || []);
                        return a(n, "_invoke", { value: M(t, i, o) }), n;
                    }
                    function u(t, e, i) {
                        try {
                            return { type: "normal", arg: t.call(e, i) };
                        } catch (t) {
                            return { type: "throw", arg: t };
                        }
                    }
                    e.wrap = d;
                    var p = "suspendedStart",
                        m = "suspendedYield",
                        f = "executing",
                        g = "completed",
                        v = {};
                    function b() {}
                    function y() {}
                    function w() {}
                    var x = {};
                    c(x, o, function () {
                        return this;
                    });
                    var E = Object.getPrototypeOf,
                        C = E && E(E(L([])));
                    C && C !== i && r.call(C, o) && (x = C);
                    var S = (w.prototype = b.prototype = Object.create(x));
                    function T(t) {
                        ["next", "throw", "return"].forEach(function (e) {
                            c(t, e, function (t) {
                                return this._invoke(e, t);
                            });
                        });
                    }
                    function _(t, e) {
                        function i(s, a, n, o) {
                            var l = u(t[s], t, a);
                            if ("throw" !== l.type) {
                                var h = l.arg,
                                    c = h.value;
                                return c && "object" == typeof c && r.call(c, "__await")
                                    ? e.resolve(c.__await).then(
                                          function (t) {
                                              i("next", t, n, o);
                                          },
                                          function (t) {
                                              i("throw", t, n, o);
                                          }
                                      )
                                    : e.resolve(c).then(
                                          function (t) {
                                              (h.value = t), n(h);
                                          },
                                          function (t) {
                                              return i("throw", t, n, o);
                                          }
                                      );
                            }
                            o(l.arg);
                        }
                        var s;
                        a(this, "_invoke", {
                            value: function (t, r) {
                                function a() {
                                    return new e(function (e, s) {
                                        i(t, r, e, s);
                                    });
                                }
                                return (s = s ? s.then(a, a) : a());
                            },
                        });
                    }
                    function M(e, i, r) {
                        var s = p;
                        return function (a, n) {
                            if (s === f) throw new Error("Generator is already running");
                            if (s === g) {
                                if ("throw" === a) throw n;
                                return { value: t, done: !0 };
                            }
                            for (r.method = a, r.arg = n; ; ) {
                                var o = r.delegate;
                                if (o) {
                                    var l = P(o, r);
                                    if (l) {
                                        if (l === v) continue;
                                        return l;
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if (s === p) throw ((s = g), r.arg);
                                    r.dispatchException(r.arg);
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                s = f;
                                var h = u(e, i, r);
                                if ("normal" === h.type) {
                                    if (((s = r.done ? g : m), h.arg === v)) continue;
                                    return { value: h.arg, done: r.done };
                                }
                                "throw" === h.type && ((s = g), (r.method = "throw"), (r.arg = h.arg));
                            }
                        };
                    }
                    function P(e, i) {
                        var r = i.method,
                            s = e.iterator[r];
                        if (s === t)
                            return (
                                (i.delegate = null),
                                ("throw" === r && e.iterator.return && ((i.method = "return"), (i.arg = t), P(e, i), "throw" === i.method)) ||
                                    ("return" !== r && ((i.method = "throw"), (i.arg = new TypeError("The iterator does not provide a '" + r + "' method")))),
                                v
                            );
                        var a = u(s, e.iterator, i.arg);
                        if ("throw" === a.type) return (i.method = "throw"), (i.arg = a.arg), (i.delegate = null), v;
                        var n = a.arg;
                        return n
                            ? n.done
                                ? ((i[e.resultName] = n.value), (i.next = e.nextLoc), "return" !== i.method && ((i.method = "next"), (i.arg = t)), (i.delegate = null), v)
                                : n
                            : ((i.method = "throw"), (i.arg = new TypeError("iterator result is not an object")), (i.delegate = null), v);
                    }
                    function k(t) {
                        var e = { tryLoc: t[0] };
                        1 in t && (e.catchLoc = t[1]), 2 in t && ((e.finallyLoc = t[2]), (e.afterLoc = t[3])), this.tryEntries.push(e);
                    }
                    function A(t) {
                        var e = t.completion || {};
                        (e.type = "normal"), delete e.arg, (t.completion = e);
                    }
                    function D(t) {
                        (this.tryEntries = [{ tryLoc: "root" }]), t.forEach(k, this), this.reset(!0);
                    }
                    function L(e) {
                        if (e || "" === e) {
                            var i = e[o];
                            if (i) return i.call(e);
                            if ("function" == typeof e.next) return e;
                            if (!isNaN(e.length)) {
                                var s = -1,
                                    a = function i() {
                                        for (; ++s < e.length; ) if (r.call(e, s)) return (i.value = e[s]), (i.done = !1), i;
                                        return (i.value = t), (i.done = !0), i;
                                    };
                                return (a.next = a);
                            }
                        }
                        throw new TypeError(typeof e + " is not iterable");
                    }
                    return (
                        (y.prototype = w),
                        a(S, "constructor", { value: w, configurable: !0 }),
                        a(w, "constructor", { value: y, configurable: !0 }),
                        (y.displayName = c(w, h, "GeneratorFunction")),
                        (e.isGeneratorFunction = function (t) {
                            var e = "function" == typeof t && t.constructor;
                            return !!e && (e === y || "GeneratorFunction" === (e.displayName || e.name));
                        }),
                        (e.mark = function (t) {
                            return Object.setPrototypeOf ? Object.setPrototypeOf(t, w) : ((t.__proto__ = w), c(t, h, "GeneratorFunction")), (t.prototype = Object.create(S)), t;
                        }),
                        (e.awrap = function (t) {
                            return { __await: t };
                        }),
                        T(_.prototype),
                        c(_.prototype, l, function () {
                            return this;
                        }),
                        (e.AsyncIterator = _),
                        (e.async = function (t, i, r, s, a) {
                            void 0 === a && (a = Promise);
                            var n = new _(d(t, i, r, s), a);
                            return e.isGeneratorFunction(i)
                                ? n
                                : n.next().then(function (t) {
                                      return t.done ? t.value : n.next();
                                  });
                        }),
                        T(S),
                        c(S, h, "Generator"),
                        c(S, o, function () {
                            return this;
                        }),
                        c(S, "toString", function () {
                            return "[object Generator]";
                        }),
                        (e.keys = function (t) {
                            var e = Object(t),
                                i = [];
                            for (var r in e) i.push(r);
                            return (
                                i.reverse(),
                                function t() {
                                    for (; i.length; ) {
                                        var r = i.pop();
                                        if (r in e) return (t.value = r), (t.done = !1), t;
                                    }
                                    return (t.done = !0), t;
                                }
                            );
                        }),
                        (e.values = L),
                        (D.prototype = {
                            constructor: D,
                            reset: function (e) {
                                if (((this.prev = 0), (this.next = 0), (this.sent = this._sent = t), (this.done = !1), (this.delegate = null), (this.method = "next"), (this.arg = t), this.tryEntries.forEach(A), !e))
                                    for (var i in this) "t" === i.charAt(0) && r.call(this, i) && !isNaN(+i.slice(1)) && (this[i] = t);
                            },
                            stop: function () {
                                this.done = !0;
                                var t = this.tryEntries[0].completion;
                                if ("throw" === t.type) throw t.arg;
                                return this.rval;
                            },
                            dispatchException: function (e) {
                                if (this.done) throw e;
                                var i = this;
                                function s(r, s) {
                                    return (o.type = "throw"), (o.arg = e), (i.next = r), s && ((i.method = "next"), (i.arg = t)), !!s;
                                }
                                for (var a = this.tryEntries.length - 1; a >= 0; --a) {
                                    var n = this.tryEntries[a],
                                        o = n.completion;
                                    if ("root" === n.tryLoc) return s("end");
                                    if (n.tryLoc <= this.prev) {
                                        var l = r.call(n, "catchLoc"),
                                            h = r.call(n, "finallyLoc");
                                        if (l && h) {
                                            if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                                            if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                                        } else if (l) {
                                            if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                                        } else {
                                            if (!h) throw new Error("try statement without catch or finally");
                                            if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                                        }
                                    }
                                }
                            },
                            abrupt: function (t, e) {
                                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                                    var s = this.tryEntries[i];
                                    if (s.tryLoc <= this.prev && r.call(s, "finallyLoc") && this.prev < s.finallyLoc) {
                                        var a = s;
                                        break;
                                    }
                                }
                                a && ("break" === t || "continue" === t) && a.tryLoc <= e && e <= a.finallyLoc && (a = null);
                                var n = a ? a.completion : {};
                                return (n.type = t), (n.arg = e), a ? ((this.method = "next"), (this.next = a.finallyLoc), v) : this.complete(n);
                            },
                            complete: function (t, e) {
                                if ("throw" === t.type) throw t.arg;
                                return (
                                    "break" === t.type || "continue" === t.type
                                        ? (this.next = t.arg)
                                        : "return" === t.type
                                        ? ((this.rval = this.arg = t.arg), (this.method = "return"), (this.next = "end"))
                                        : "normal" === t.type && e && (this.next = e),
                                    v
                                );
                            },
                            finish: function (t) {
                                for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                    var i = this.tryEntries[e];
                                    if (i.finallyLoc === t) return this.complete(i.completion, i.afterLoc), A(i), v;
                                }
                            },
                            catch: function (t) {
                                for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                    var i = this.tryEntries[e];
                                    if (i.tryLoc === t) {
                                        var r = i.completion;
                                        if ("throw" === r.type) {
                                            var s = r.arg;
                                            A(i);
                                        }
                                        return s;
                                    }
                                }
                                throw new Error("illegal catch attempt");
                            },
                            delegateYield: function (e, i, r) {
                                return (this.delegate = { iterator: L(e), resultName: i, nextLoc: r }), "next" === this.method && (this.arg = t), v;
                            },
                        }),
                        e
                    );
                }
                function a(t, e, i, r, s, a, n) {
                    try {
                        var o = t[a](n),
                            l = o.value;
                    } catch (t) {
                        return void i(t);
                    }
                    o.done ? e(l) : Promise.resolve(l).then(r, s);
                }
                function n(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class o {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new o(t);
                    }
                    constructor(t = { targetSelector: "" }) {
                        n(this, "textFieldCodeClass", "brad-text-field-code"),
                            n(this, "textFieldCodeContainerClass", `${this.textFieldCodeClass}-container`),
                            n(this, "textFieldCodeFilledClass", `${this.textFieldCodeContainerClass}--filled`),
                            n(this, "textFieldCodeFocusedClass", `${this.textFieldCodeContainerClass}--focused`),
                            n(this, "textFieldCodeDisabledClass", `${this.textFieldCodeContainerClass}--disabled`),
                            n(this, "textFieldCodeDisabledFilledClass", `${this.textFieldCodeContainerClass}--filled-disabled`),
                            n(this, "textFieldCodeInputSelector", `${this.textFieldCodeClass} > input`),
                            n(this, "selector", `.${this.textFieldCodeContainerClass}`);
                        var e = t.targetSelector;
                        (this.selector = e || this.selector),
                            (this.eCodesContainer = document.querySelectorAll(this.selector)),
                            (this.changeEvent = new Event("onChange")),
                            this.setStyleWhenFilledAndInitialNavigation(this.eCodesContainer),
                            this.containerListeners(this.eCodesContainer);
                    }
                    setStyleWhenFilledAndInitialNavigation(t) {
                        t.forEach((t) => {
                            var e = t.querySelectorAll(`.${this.textFieldCodeInputSelector}`);
                            e.forEach((i, r) => {
                                this.isFocusTheLastFieldNotEmpty(r, e, i) && (t.classList.add(this.textFieldCodeFilledClass), this.setInitialNavigationFocus(r, i, e));
                            });
                        });
                    }
                    containerListeners(t) {
                        t.forEach((t) => {
                            var e = t.querySelectorAll(`.${this.textFieldCodeInputSelector}`);
                            this.fieldListeners(e, t), this.handleWhenClickContainer(t, e);
                        });
                    }
                    fieldListeners(t, e) {
                        t.forEach((i, r) => {
                            i.setAttribute("data-textfield-code-sequence", r + 1), this.setInitialNavigationFocus(r, i, t, e), this.handleInputFocus(i, e), this.handleWhenTyping(i, e), this.handleWhenKeydownInsideInput(i, e);
                        });
                    }
                    handleInputFocus(t, e) {
                        (t.onfocus = () => {
                            e.classList.add(this.textFieldCodeFocusedClass);
                        }),
                            (t.onblur = () => {
                                e.classList.remove(this.textFieldCodeFocusedClass);
                                var i = t.nextElementSibling,
                                    r = t.previousElementSibling;
                                ((!1 === Boolean(t.value) && Boolean(r) && !0 === Boolean(r.value)) || (null === r && !1 === Boolean(t.value) && !1 === Boolean(i.value))) && (t.tabIndex = 0);
                            });
                    }
                    handleWhenTyping(t, e) {
                        t.oninput = (i) => {
                            var r = i.target.value;
                            this.notAllowMoreThanOneCharacter(r, t), this.handleNavigationFocusWhenInput(t, e), this.eCodesContainer[0].dispatchEvent(this.changeEvent);
                        };
                    }
                    notAllowMoreThanOneCharacter(t, e) {
                        t.length > 1 && (e.value = t.slice(0, 1));
                    }
                    handleNavigationFocusWhenInput(t, e) {
                        var i = t.nextElementSibling;
                        t.value &&
                            ((t.ariaHidden = !0),
                            (t.tabIndex = -2),
                            i ? ((i.ariaHidden = !1), (i.tabIndex = -1), i.focus(), e.classList.remove(this.textFieldCodeFilledClass)) : ((t.ariaHidden = !1), (t.tabIndex = 0), t.focus(), e.classList.add(this.textFieldCodeFilledClass)));
                    }
                    handleWhenKeydownInsideInput(t, e) {
                        t.onkeydown = (i) => {
                            var r = t.nextElementSibling,
                                s = t.previousElementSibling;
                            this.handleNavigationFocusWhenDelete(i, s, r, t, e);
                        };
                    }
                    handleNavigationFocusWhenDelete(t, e, i, r, s) {
                        ("Backspace" !== t.code && 8 !== t.keyCode) ||
                            (!0 === Boolean(e) && !0 === Boolean(i)
                                ? ((r.ariaHidden = !0), (r.tabIndex = -2), (e.value = ""), (e.ariaHidden = !1), (e.tabIndex = -1), e.focus())
                                : !1 === Boolean(i) &&
                                  (!1 === Boolean(r.value) && ((r.ariaHidden = !0), (r.tabIndex = -2), (e.value = ""), (e.ariaHidden = !1), (e.tabIndex = -1), e.focus()), s.classList.remove(this.textFieldCodeFilledClass)));
                    }
                    handleWhenClickContainer(t, e) {
                        var i = t.querySelector(`.${this.textFieldCodeClass}`);
                        (i.onclick = () => {
                            this.handleNavigationFocusWhenClickContainer(t, e);
                        }),
                            (i.onfocus = () => {
                                this.handleNavigationFocusWhenClickContainer(t, e);
                            });
                    }
                    handleNavigationFocusWhenClickContainer(t, e) {
                        t.classList.add(this.textFieldCodeFocusedClass);
                        var i = !1;
                        e.forEach((t) => {
                            if (this.isFirstElementFoundEmpty(t, i)) {
                                (t.tabIndex = -1), t.focus();
                                var e = t.value;
                                (t.value = ""), (t.value = e), (i = !0);
                            } else if (!1 === i) {
                                (t.tabIndex = -1), t.focus();
                                var r = t.value;
                                (t.value = ""), (t.value = r);
                            }
                        });
                    }
                    isFirstElementFoundEmpty(t, e) {
                        return !1 === Boolean(t.value) && !1 === e;
                    }
                    disable(t) {
                        var e = document.querySelector(t ? `#${t.replace("#", "")}` : this.selector);
                        if (e) {
                            e.classList.add(this.textFieldCodeDisabledClass);
                            var i = document.querySelector(`.${this.textFieldCodeClass}`);
                            (i.ariaDisabled = !0),
                                (i.tabIndex = 0),
                                e.querySelectorAll("input").forEach((t) => {
                                    (i.ariaHidden = !1), (t.disabled = !0), (t.ariaHidden = !0);
                                });
                        }
                    }
                    enable(t) {
                        var e = document.querySelector(t ? `#${t.replace("#", "")}` : this.selector);
                        if (e) {
                            e.classList.remove(this.textFieldCodeDisabledClass);
                            var i = document.querySelector(`.${this.textFieldCodeClass}`);
                            (i.ariaDisabled = !1), (i.tabIndex = -2);
                            var r = e.querySelectorAll("input");
                            r.forEach((t, i) => {
                                (t.disabled = !1), this.setInitialNavigationFocus(i, t, r, e);
                            });
                        }
                    }
                    setInitialNavigationFocus(t, e, i) {
                        this.setAriaLabelToEachField(e, t, i),
                            this.isNotFirstField(t)
                                ? ((e.ariaHidden = !0), (e.tabIndex = -2), this.isFocusTheLastFieldNotEmpty(t, i, e) && ((i[0].ariaHidden = !0), (i[0].tabIndex = -2), (e.ariaHidden = !1), (e.tabIndex = 0)))
                                : ((e.ariaHidden = !1), (e.tabIndex = 0));
                    }
                    setAriaLabelToEachField(t, e, i) {
                        !1 === Boolean(t.ariaLabel) && (t.ariaLabel = `Campo ${e + 1} de ${i.length}`);
                    }
                    isNotFirstField(t) {
                        return t > 0;
                    }
                    isFocusTheLastFieldNotEmpty(t, e, i) {
                        return t >= e.length - 1 && Boolean(i.value);
                    }
                    getValue(t) {
                        var e,
                            i = this;
                        return ((e = s().mark(function e() {
                            var r, a;
                            return s().wrap(function (e) {
                                for (;;)
                                    switch ((e.prev = e.next)) {
                                        case 0:
                                            if (!(r = document.querySelector(t ? `#${t.replace("#", "")}` : i.selector))) {
                                                e.next = 6;
                                                break;
                                            }
                                            return (a = r.querySelectorAll("input")), (e.next = 5), i.concatValues(a);
                                        case 5:
                                            return e.abrupt("return", e.sent);
                                        case 6:
                                        case "end":
                                            return e.stop();
                                    }
                            }, e);
                        })),
                        function () {
                            var t = this,
                                i = arguments;
                            return new Promise(function (r, s) {
                                var n = e.apply(t, i);
                                function o(t) {
                                    a(n, r, s, o, l, "next", t);
                                }
                                function l(t) {
                                    a(n, r, s, o, l, "throw", t);
                                }
                                o(void 0);
                            });
                        })();
                    }
                    concatValues(t) {
                        return new Promise((e) => {
                            var i = "";
                            t.forEach((r, s) => {
                                (i = i.concat(r.value)), s >= t.length - 1 && e(i);
                            });
                        });
                    }
                    isFieldFilled(t) {
                        var e = document.querySelector(t ? `#${t.replace("#", "")}` : this.selector);
                        if (e) {
                            var i = e.querySelectorAll("input");
                            return !!i[i.length - 1].value;
                        }
                    }
                }
                r.Z.add("BradTextFieldCodeService", o);
            },
            42293: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(10613);
                r.Z.add("BradTextFieldNumberService", s.D);
            },
            10613: (t, e, i) => {
                "use strict";
                i.d(e, { D: () => r });
                class r {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new r(t);
                    }
                    constructor(t = { targetSelector: "" }) {
                        var e = t.targetSelector;
                        (this.selector = e ? `${e} > input[type="number"]` : '.brad-text-field > input[type="number"]'), this.initListerners();
                    }
                    initListerners() {
                        this.toToggleInputNumberValue(), this.handleCustomEvents();
                    }
                    toToggleInputNumberValue() {
                        document.querySelectorAll(this.selector).forEach((t) => {
                            var e = t.parentElement,
                                i = e.querySelector("button.minus"),
                                r = e.querySelector("button.plus");
                            !1 === t.disabled &&
                                i &&
                                r &&
                                ((i.onclick = () => {
                                    e.dispatchEvent(this.stepDownClickEvent), t.stepDown();
                                }),
                                (r.onclick = () => {
                                    e.dispatchEvent(this.stepUpClickEvent), t.stepUp();
                                }));
                        });
                    }
                    getValue(t) {
                        return (this.selector = t ? `#${t} > input[type="number"]` : this.selector), document.querySelector(this.selector).value;
                    }
                    handleCustomEvents() {
                        this.createStepDownClickEvent(), this.createStepUpClickEvent();
                    }
                    createStepDownClickEvent() {
                        this.stepDownClickEvent = new Event("downClick");
                    }
                    createStepUpClickEvent() {
                        this.stepUpClickEvent = new Event("upClick");
                    }
                }
            },
            1762: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(10613);
                class a {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new a(t);
                    }
                    constructor(t) {
                        var e = t.targetSelector;
                        (this.targetSelector = e), this.init();
                    }
                    init() {
                        this.handleCustomFormChangesEvent(), this.setGlobalTextFieldVariables(), this.initTextFieldNumberInstance(), this.validationOfMethods(), this.initCustomEvents();
                    }
                    setGlobalTextFieldVariables() {
                        (this.eTextFieldQuantityContainer = document.querySelector(this.targetSelector)), (this.eTextFieldQuantityInput = this.eTextFieldQuantityContainer.querySelector("input"));
                    }
                    initTextFieldNumberInstance() {
                        this.textFieldNumberInstance = s.D.getInstance(this.targetSelector);
                    }
                    initCustomEvents() {
                        this.textFieldNumberInstance.createStepDownClickEvent(),
                            this.textFieldNumberInstance.createStepUpClickEvent(),
                            (this.eTextFieldQuantityInput.onchange = (t) => {
                                this.noValueReset(t);
                            }),
                            this.eTextFieldQuantityContainer.addEventListener("downClick", () => {
                                setTimeout(() => {
                                    this.getValue() <= this.eTextFieldQuantityInput.max && this.validationOfMethods();
                                }, 10);
                            }),
                            this.eTextFieldQuantityContainer.addEventListener("upClick", () => {
                                setTimeout(() => {
                                    this.validationOfMethods();
                                }, 10);
                            }),
                            this.eTextFieldQuantityInput.addEventListener("input", () => {
                                this.validationOfMethods();
                            }),
                            this.eTextFieldQuantityInput.addEventListener("blur", () => {
                                this.validationOfMethods();
                            });
                    }
                    noValueReset(t) {
                        if (!t.target.value) {
                            var e = Number(this.eTextFieldQuantityInput.min);
                            (e = "" == e ? NaN : e), (this.eTextFieldQuantityInput.value = isNaN(e) ? 0 : this.eTextFieldQuantityInput.min);
                        }
                        this.emitEventOnQuantityChanges();
                    }
                    validationOfMethods() {
                        this.removeInvalidValidationClasses(),
                            this.verifyIfValueEqualMax() && this.addDisableInRightButton(),
                            this.verifyIfValueEqualMin() && this.addDisableInLeftButton(),
                            this.verifyValueBiggerMax() && this.addDisableInRightButton(),
                            this.verifyValueLessMin() && this.addDisableInLeftButton(),
                            this.emitEventOnQuantityChanges();
                    }
                    handleCustomFormChangesEvent() {
                        this.createChangesEvent();
                    }
                    createChangesEvent() {
                        this.formValueChangesEvent = new Event("valueChanges");
                    }
                    emitEventOnQuantityChanges() {
                        this.eTextFieldQuantityContainer.dispatchEvent(this.formValueChangesEvent);
                    }
                    addDisableInRightButton() {
                        this.eTextFieldQuantityContainer.querySelector("button.right").classList.add("disabled");
                    }
                    addDisableInLeftButton() {
                        this.eTextFieldQuantityContainer.querySelector("button.left").classList.add("disabled");
                    }
                    removeInvalidValidationClasses() {
                        this.eTextFieldQuantityContainer.querySelector("button.right").classList.remove("disabled"), this.eTextFieldQuantityContainer.querySelector("button.left").classList.remove("disabled");
                    }
                    getValue() {
                        return Number(this.eTextFieldQuantityInput.value);
                    }
                    verifyValueBiggerMax() {
                        return this.getValue() > Number(this.eTextFieldQuantityInput.max);
                    }
                    verifyValueLessMin() {
                        if (this.getValue() >= 0) return this.getValue() < Number(this.eTextFieldQuantityInput.min);
                    }
                    verifyIfValueEqualMax() {
                        return this.getValue() === Number(this.eTextFieldQuantityInput.max);
                    }
                    verifyIfValueEqualMin() {
                        return this.getValue() === Number(this.eTextFieldQuantityInput.min);
                    }
                }
                r.Z.add("BradTextFieldQuantityService", a);
            },
            16240: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(78470);
                r.Z.add("BradTextFieldSearchService", s.C);
            },
            78470: (t, e, i) => {
                "use strict";
                i.d(e, { C: () => h });
                var r = i(16444),
                    s = i(59799),
                    a = i(24228);
                function n(t, e) {
                    return (
                        (function (t) {
                            if (Array.isArray(t)) return t;
                        })(t) ||
                        (function (t, e) {
                            var i = null == t ? null : ("undefined" != typeof Symbol && t[Symbol.iterator]) || t["@@iterator"];
                            if (null != i) {
                                var r,
                                    s,
                                    a,
                                    n,
                                    o = [],
                                    l = !0,
                                    h = !1;
                                try {
                                    if (((a = (i = i.call(t)).next), 0 === e)) {
                                        if (Object(i) !== i) return;
                                        l = !1;
                                    } else for (; !(l = (r = a.call(i)).done) && (o.push(r.value), o.length !== e); l = !0);
                                } catch (t) {
                                    (h = !0), (s = t);
                                } finally {
                                    try {
                                        if (!l && null != i.return && ((n = i.return()), Object(n) !== n)) return;
                                    } finally {
                                        if (h) throw s;
                                    }
                                }
                                return o;
                            }
                        })(t, e) ||
                        (function (t, e) {
                            if (!t) return;
                            if ("string" == typeof t) return o(t, e);
                            var i = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === i && t.constructor && (i = t.constructor.name);
                            if ("Map" === i || "Set" === i) return Array.from(t);
                            if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return o(t, e);
                        })(t, e) ||
                        (function () {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                        })()
                    );
                }
                function o(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var i = 0, r = new Array(e); i < e; i++) r[i] = t[i];
                    return r;
                }
                function l(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class h {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new h(t);
                    }
                    constructor(t) {
                        l(this, "currentArrowOption", -1),
                            (this.targetSelector = null == t ? void 0 : t.targetSelector),
                            (this.eTextFieldSearch = document.querySelector(this.targetSelector)),
                            this.eTextFieldSearch && (this.setAttributesByTextFieldSearch(this.eTextFieldSearch), this.initializeEventListeners());
                    }
                    setAttributesByTextFieldSearch(t) {
                        (this.deleteButton = t.querySelector(".delete")), (this.eInput = t.querySelector("input")), (this.options = t.querySelectorAll("[data-search-value]"));
                    }
                    initializeEventListeners() {
                        this.addInputEventOnInputTextSearch(),
                            this.addClickEventOnDeleteButton(),
                            this.addClickEventOnCancelButton(),
                            this.addClickEventOnOptionsSelect(),
                            this.addKeydownEventOnOptionsSelect(),
                            this.addInitEventOnDropdownSearch(),
                            this.addInitEventOnStaticSearch(),
                            this.addInitEventOnViewSearch(),
                            this.addInitEventOnGatilhoSearch();
                    }
                    addInputEventOnInputTextSearch() {
                        this.eInput.oninput = () => this.inputEventInputTextSearch();
                    }
                    inputEventInputTextSearch() {
                        this.handleFilter(), this.handleSearchType();
                    }
                    addClickEventOnDeleteButton() {
                        this.deleteButton.onclick = () => this.clickEventDeleteButton();
                    }
                    clickEventDeleteButton() {
                        return this.targetSelector && (this.eTextFieldSearch = document.querySelector(this.targetSelector)), (this.eInput.value = ""), this.eInput.focus(), this.handleSearchType(), this;
                    }
                    addClickEventOnCancelButton() {
                        this.eTextFieldSearch.querySelector(".cancel") && ((this.cancelButton = this.eTextFieldSearch.querySelector(".cancel")), (this.cancelButton.onclick = () => this.clickEventCancelButton()));
                    }
                    addFocusEventOnInputTextSearch(t) {
                        this.eInput.onfocus = () => this.focusEventInputTextSearch(t);
                    }
                    focusEventInputTextSearch(t) {
                        this.eInput.value.length > 0 && t();
                    }
                    clickEventCancelButton() {
                        var t = this.contentWithElevationClassName;
                        this.eTextFieldSearch.querySelector(".search-container").classList.remove(t), "gatilho" == this.getSearchType() ? this.hideSearchViewGatilho() : this.hideSearchViewContainer();
                    }
                    addClickEventOnInputSearch() {
                        this.eInput.onclick = () => this.clickEventInputSearch();
                    }
                    clickEventInputSearch() {
                        this.showSearchViewContainer();
                    }
                    addScrollEventOnWindow() {
                        window.onscroll = () => this.scrollEventWindow();
                    }
                    scrollEventWindow() {
                        this.boxShadowHandleSearchView();
                    }
                    addClickEventOnClickDataButtonTypeInputSearch() {
                        document.querySelector('[data-btn-type="text-field-search"]').onclick = () => this.clickEventDataButtonTypeInputSearch();
                    }
                    clickEventDataButtonTypeInputSearch() {
                        this.showSearchViewGatilho();
                    }
                    addKeydownEventOnInputSearchDropdown() {
                        (this.dropDown = this.eTextFieldSearch.querySelector(".brad-dropdown__dropdown-content")),
                            (this.eTextFieldSearch.onkeydown = (t) => {
                                this.keyDownEventInputSearch(t);
                            });
                    }
                    keyDownEventInputSearch(t) {
                        if ("Escape" === t.key) return this.hideDropdownSearch();
                        this.countDisplayNoneFilterReturn();
                    }
                    hasHeightDropdown(t) {
                        return t > 0;
                    }
                    addClickEventOnOptionsSelect() {
                        for (
                            var t = this,
                                e = function () {
                                    var e = t.options[i];
                                    e.onclick = (i) => t.clickEventOptionsSelect(e);
                                },
                                i = 0;
                            i < this.options.length;
                            i++
                        )
                            e();
                    }
                    clickEventOptionsSelect(t) {
                        this.handleSelectedOption(t);
                    }
                    addKeydownEventOnOptionsSelect() {
                        this.eInput.onkeydown = (t) => {
                            this.keydownEventOptionsSelect(t, this.options);
                        };
                    }
                    keydownEventOptionsSelect(t, e) {
                        "Enter" === t.key &&
                            e.forEach((t) => {
                                t.classList.contains("brad-list-item--focus") && this.handleSelectedOption(t);
                            });
                    }
                    addInitEventOnDropdownSearch() {
                        "dropdown" == this.getSearchType() && (this.initDropdown(), this.addFocusEventOnInputTextSearch(this.showDropdownSearch), this.addKeydownEventOnInputSearchDropdown());
                    }
                    addInitEventOnStaticSearch() {
                        "static" == this.getSearchType() && this.addFocusEventOnInputTextSearch(this.showStaticSearch);
                    }
                    addInitEventOnViewSearch() {
                        "search-view" == this.getSearchType() && (this.addClickEventOnInputSearch(), this.addScrollEventOnWindow());
                    }
                    addInitEventOnGatilhoSearch() {
                        "gatilho" == this.getSearchType() && (this.addClickEventOnClickDataButtonTypeInputSearch(), this.addScrollEventOnWindow());
                    }
                    initDropdown() {
                        var t = { targetSelector: `${this.targetSelector}`, enabledOutsideClick: !0 };
                        this.bradDropdownService = r.B.getInstance(t);
                        var e = document.querySelector(this.targetSelector).querySelector(".brad-dropdown__dropdown-content");
                        this.bradDropdownService.eContent = e;
                    }
                    navigateByArrows() {
                        this.bradDropdownService.getElementEvent().addEventListener("show", () => {
                            this.dropdownShow = !0;
                        }),
                            this.bradDropdownService.getElementEvent().addEventListener("hide", () => {
                                this.dropdownShow = !1;
                            }),
                            (this.eInput.onkeydown = (t) => {
                                this.countDisplayNoneFilterReturn();
                                var e = n(
                                    a.a
                                        .getInstance()
                                        .setEvent(t)
                                        .setIsListOpened(this.dropdownShow)
                                        .setCurrentArrowOption(this.currentArrowOption)
                                        .setListElements(this.flexFilteredItens)
                                        .setElementAboveToFocus(this.eInput)
                                        .setCallbackElementFocused((e) => {
                                            e && "Backspace" != t.key && (this.eInput.value = e.getAttribute("data-search-value")), e && ["Enter", "Tab"].includes(t.key) && (this.markSelectedOption(e), this.bradDropdownService.hide());
                                        })
                                        .navigateByArrows(),
                                    1
                                );
                                this.currentArrowOption = e[0];
                            });
                    }
                    boxShadowHandleSearchView() {
                        if (this.eTextFieldSearch.classList.contains("brad-text-field-search--view__show")) {
                            var t = Number(document.documentElement.scrollTop);
                            return (
                                (this.contentWithElevationClassName = "search-container__scrolled-shadow"),
                                (this.searchContainer = this.eTextFieldSearch.querySelector(".search-container")),
                                t > 0 ? this.searchContainer.classList.add(this.contentWithElevationClassName) : this.searchContainer.classList.remove(this.contentWithElevationClassName)
                            );
                        }
                    }
                    handleFilter() {
                        this.options.forEach((t) => {
                            var e = t.getAttribute("data-search-value"),
                                i = this.eInput.value;
                            s.t.byText(e, i, t);
                        });
                    }
                    handleSearchType() {
                        ({ static: () => this.handleStaticSearch(), dropdown: () => this.handleDropdownSearch(), unknown: () => this.handleSearchViewSearch() }[
                            ["static", "dropdown"].includes(this.getSearchType()) ? this.getSearchType() : "unknown"
                        ]());
                    }
                    handleStaticSearch() {
                        this.eInput.value ? this.showStaticSearch() : this.hideStaticSearch();
                    }
                    handleDropdownSearch() {
                        this.navigateByArrows(), this.eInput.value ? this.showDropdownSearch() : this.hideDropdownSearch();
                    }
                    handleSearchViewSearch() {
                        if (!this.eInput.value) return this.hideSearchViewOptions();
                        this.showSearchViewOptions(), this.eTextFieldSearch.classList.contains("brad-text-field-search--view__show") || this.showSearchViewContainer();
                    }
                    handleSelectedOption(t) {
                        this.markSelectedOption(t),
                            (this.eInput.value = t.getAttribute("data-search-value")),
                            {
                                static: () => this.hideStaticSearch(),
                                dropdown: () => this.hideDropdownSearch(),
                                "search-view": () => {
                                    this.eTextFieldSearch.querySelector(".search-container").classList.remove(this.contentWithElevationClassName), this.hideSearchViewContainer();
                                },
                                gatilho: () => {
                                    this.eTextFieldSearch.querySelector(".search-container").classList.remove(this.contentWithElevationClassName), this.hideSearchViewGatilho();
                                },
                            }[this.getSearchType()]();
                    }
                    resetSelectedOption() {
                        this.options.forEach((t) => {
                            t.removeAttribute("selected");
                        });
                    }
                    markSelectedOption(t) {
                        this.resetSelectedOption(), t.setAttribute("selected", !0);
                    }
                    countDisplayNoneFilterReturn() {
                        this.flexFilteredItens = s.t.getFilteredElements(this.options);
                    }
                    searchViewOptionsPaddingTop() {
                        var t = this.eTextFieldSearch.querySelector(".search-container").getBoundingClientRect().height,
                            e = Math.round(t);
                        this.eTextFieldSearch.querySelector(".search-view-options").style.paddingTop = e + 16 + "px";
                    }
                    getSearchType() {
                        var t = this.eTextFieldSearch.getAttribute("data-search");
                        return ["static", "dropdown", "search-view"].includes(t) ? t : "gatilho";
                    }
                    showStaticSearch() {
                        this && (this.countDisplayNoneFilterReturn(), this.eTextFieldSearch.querySelector(".static-search").classList.add("static-search--show"));
                    }
                    hideStaticSearch() {
                        this.eTextFieldSearch.querySelector(".static-search").classList.remove("static-search--show");
                    }
                    showDropdownSearch() {
                        this && this.bradDropdownService.show();
                    }
                    hideDropdownSearch() {
                        this.bradDropdownService.hide(), (this.currentArrowOption = -1);
                    }
                    showSearchViewContainer() {
                        this.eTextFieldSearch.classList.add("brad-text-field-search--view__show"), this.searchViewOptionsPaddingTop(), this.resetSelectedOption(), this.handleFilter();
                    }
                    hideSearchViewContainer() {
                        this.eTextFieldSearch.classList.remove("brad-text-field-search--view__show"), this.eTextFieldSearch.classList.add("no-content");
                    }
                    showSearchViewOptions() {
                        this.eTextFieldSearch.querySelector(".search-view-options").classList.remove("search-view-options__hide");
                    }
                    hideSearchViewOptions() {
                        this.eTextFieldSearch.querySelector(".search-view-options").classList.add("search-view-options__hide");
                    }
                    showSearchViewGatilho() {
                        this.eTextFieldSearch.classList.remove("brad-text-field-search--gatilho-off"), this.eTextFieldSearch.classList.add("brad-text-field-search--view__show"), this.searchViewOptionsPaddingTop();
                    }
                    hideSearchViewGatilho() {
                        this.hideSearchViewContainer(), this.eTextFieldSearch.classList.add("brad-text-field-search--gatilho-off");
                    }
                }
            },
            28493: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(32594);
                r.Z.add("BradTextFieldSelectService", s.o);
            },
            32594: (t, e, i) => {
                "use strict";
                i.d(e, { o: () => d });
                var r = i(59799),
                    s = i(24228),
                    a = i(16444),
                    n = i(19036),
                    o = i(36148);
                function l(t, e) {
                    return (
                        (function (t) {
                            if (Array.isArray(t)) return t;
                        })(t) ||
                        (function (t, e) {
                            var i = null == t ? null : ("undefined" != typeof Symbol && t[Symbol.iterator]) || t["@@iterator"];
                            if (null != i) {
                                var r,
                                    s,
                                    a,
                                    n,
                                    o = [],
                                    l = !0,
                                    h = !1;
                                try {
                                    if (((a = (i = i.call(t)).next), 0 === e)) {
                                        if (Object(i) !== i) return;
                                        l = !1;
                                    } else for (; !(l = (r = a.call(i)).done) && (o.push(r.value), o.length !== e); l = !0);
                                } catch (t) {
                                    (h = !0), (s = t);
                                } finally {
                                    try {
                                        if (!l && null != i.return && ((n = i.return()), Object(n) !== n)) return;
                                    } finally {
                                        if (h) throw s;
                                    }
                                }
                                return o;
                            }
                        })(t, e) ||
                        (function (t, e) {
                            if (!t) return;
                            if ("string" == typeof t) return h(t, e);
                            var i = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === i && t.constructor && (i = t.constructor.name);
                            if ("Map" === i || "Set" === i) return Array.from(t);
                            if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return h(t, e);
                        })(t, e) ||
                        (function () {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                        })()
                    );
                }
                function h(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var i = 0, r = new Array(e); i < e; i++) r[i] = t[i];
                    return r;
                }
                function c(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class d {
                    static getInstances(t) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new d(t);
                    }
                    constructor(t) {
                        c(this, "isConfirmed", !1),
                            c(this, "isSelecting", !1),
                            c(this, "selecteds", []),
                            c(this, "oldSelecteds", []),
                            c(this, "oldOptions", []),
                            c(this, "oldSelected", ""),
                            c(this, "isAllChanged", !1),
                            c(this, "isFirstSingle", !0),
                            c(this, "isFirstMultiple", !0),
                            c(this, "currentArrowOption", -1),
                            c(this, "isDropdownOpened", !1),
                            c(this, "isUpdated", !1),
                            c(this, "body", document.querySelector("body")),
                            c(this, "modalID", null);
                        var e = t.targetSelector,
                            i = t.type,
                            r = void 0 === i ? "single" : i,
                            a = t.optionsSelect,
                            n = void 0 === a ? [] : a,
                            l = t.title,
                            h = void 0 === l ? "" : l,
                            d = t.subtitle,
                            u = void 0 === d ? "" : d,
                            p = t.buttonPrimary,
                            m = void 0 === p ? { text: "Confirmar", disabledNonSelected: !1 } : p,
                            f = t.buttonSecondary,
                            g = void 0 === f ? { text: "" } : f,
                            v = t.dropdownMaxHeight,
                            b = void 0 === v ? "" : v,
                            y = t.isIndeterminateMode,
                            w = void 0 !== y && y;
                        (this.targetSelector = e),
                            (this.type = r),
                            (this.optionsSelect = n),
                            (this.title = h),
                            (this.subtitle = u),
                            (this.buttonPrimary = m),
                            (this.buttonSecondary = g),
                            (this.dropdownMaxHeight = b),
                            (this.listKeyboardMove = s.a.getInstance()),
                            (this.modalID = o.Z.uid()),
                            (this.isIndeterminateMode = w),
                            this.getElements(),
                            this.initializeComponent();
                    }
                    getElements() {
                        (this.eSelectContainer = document.querySelector(this.targetSelector)),
                            (this.eSelect = this.eSelectContainer.querySelector(".brad-text-field")),
                            (this.eInput = this.eSelect.querySelector("input")),
                            (this.eArrow = this.eSelect.querySelector(".arrow"));
                    }
                    initializeComponent() {
                        this.createElements(), this.startOptionsContainer(), this.handleFilter(), this.initListeners();
                    }
                    createElements() {
                        this.createEvents(), this.createModalHTML(), this.createOptionsSelect();
                    }
                    createEvents() {
                        (this.canceledEvent = new CustomEvent("canceled", { detail: { options: this.optionsSelect } })),
                            (this.confirmedEvent = new CustomEvent("confirmed", { detail: { options: this.optionsSelect } })),
                            (this.selectedEvent = new CustomEvent("selected", { detail: { options: this.optionsSelect } }));
                    }
                    createModalHTML() {
                        var t = document.createElement("div");
                        t.className = "brad-modal--dialog__top";
                        var e = document.createElement("div");
                        e.className = "brad-modal--dialog__header";
                        var i = document.createElement("h2");
                        (i.textContent = this.title), e.appendChild(i);
                        var r = document.createElement("div");
                        if (this.subtitle) {
                            (r.className = "brad-modal--dialog__paragraph"), r.appendChild(e);
                            var s = document.createElement("p");
                            (s.textContent = this.subtitle), r.appendChild(s);
                        }
                        var a = document.createElement("div");
                        a.className = "brad-modal--dialog__content";
                        var n = document.createElement("div");
                        (n.className = "brad-modal--dialog__footer brad-flex brad-flex-row brad-flex-justify-content-end brad-flex-align-items-center"),
                            t.appendChild(e),
                            t.appendChild(r),
                            this.createButtonSecondaryHTML(n),
                            this.createButtonPrimaryHTML(n),
                            (this.eModal = document.createElement("div")),
                            (this.eModal.id = this.modalID),
                            (this.eModal.className = "brad-modal brad-modal--dialog brad-modal--dialog--center brad-modal--dialog__sm"),
                            this.eModal.setAttribute("role", "dialog"),
                            this.eModal.setAttribute("aria-modal", "true"),
                            this.eModal.setAttribute("tabindex", "-1"),
                            this.title ? this.eModal.appendChild(t) : (a.style.marginTop = "0"),
                            this.eModal.appendChild(a),
                            this.eModal.appendChild(n),
                            this.body.append(this.eModal),
                            (this.eModal.outerHTML = this.eModal.outerHTML.replace("select-modal", "")),
                            (this.eModal = document.getElementById(this.modalID));
                    }
                    createButtonPrimaryHTML(t) {
                        this.eConfirmButton = this.createButtonHTML(t, this.buttonPrimary, "select-confirm");
                    }
                    createButtonSecondaryHTML(t) {
                        this.eCancelButton = this.createButtonHTML(t, this.buttonSecondary, "cancel-confirm");
                    }
                    createButtonHTML(t, e, i) {
                        if (e && e.text) {
                            var r = document.createElement("button"),
                                s = i.includes("select");
                            return r.classList.add("brad-btn", "brad-btn-" + (s ? "primary" : "text"), "brad-btn--auto", "brad-m-sm-l"), r.setAttribute("type", "button"), r.setAttribute(i, !0), (r.textContent = e.text), t.appendChild(r), r;
                        }
                    }
                    createOptionsSelect() {
                        var t = this.getOptionsContainer();
                        !1 === Boolean(t) ? (this.createOptionsContent(), this.appendOptionsContent()) : (this.eOptionsContent = t),
                            this.optionsSelect.forEach((t, e) => {
                                var i = e >= this.optionsSelect.length - 1;
                                this.createOptionElement(t, e, i), e >= this.optionsSelect.length - 1 && (this.handleSelectValue(), "multi" === this.type && this.createDropdowFooterHTML());
                            });
                    }
                    getOptionsContainer() {
                        return this.getContainer().querySelector(".brad-text-field-select__options");
                    }
                    getContainer() {
                        return this.eSelectContainer.querySelector(".brad-text-field-select__options") ? this.eSelectContainer : this.eModal;
                    }
                    createOptionsContent() {
                        (this.eOptionsContent = document.createElement("div")),
                            (this.eOptionsContent.className = "brad-text-field-select__options"),
                            this.setDropdownMaxHeight(this.dropdownMaxHeight),
                            this.isDesktop()
                                ? this.appendOptionsContentToSelectContainer()
                                : ((this.eModalContent = this.eModal.querySelector(".brad-modal--dialog__content")), this.eModalContent.appendChild(this.eOptionsContent), (this.eOptionsContent.style.display = "block"));
                    }
                    appendOptionsContentToSelectContainer() {
                        this.eSelectContainer.appendChild(this.eOptionsContent);
                    }
                    appendOptionsContent() {
                        this.eOptionsContent = this.getOptionsContainer();
                    }
                    createOptionElement(t, e, i) {
                        var r = this.createElementSelector(t, e);
                        if ((this.setCommonAttributes(r, t, i), this.setSelectedAttribute(r, t), 0 === e && r.setAttribute("brad-main-select", ""), "single" === this.type))
                            if (this.isDesktop()) this.setElementInnerHTML(r, t.text);
                            else {
                                var s = this.createRadioHTML(t);
                                this.setElementInnerHTML(r, s), this.addRadioElementClasses(r);
                            }
                        else {
                            var a = this.createCheckboxHTML(t);
                            this.setElementInnerHTML(r, a), this.addCheckboxElementClasses(r);
                        }
                        this.appendElement(r), this.replaceOuterHTML(r, t.value), (this.optionsSelect[e].element = this.eOptionsContent.querySelector(`[data-value='${t.value}']`));
                    }
                    createElementSelector(t, e) {
                        var i = "single" === this.type && this.isDesktop() ? document.createElement("div") : document.createElement("label");
                        return (i.ariaLabel = `${t.text} ${e + 1} de ${this.optionsSelect.length}`), (i.role = "single" === this.type ? "radio" : "checkbox"), i;
                    }
                    setCommonAttributes(t, e, i) {
                        (t.className = "brad-list-item brad-font-title-md brad-p-md-x brad-p-lg-y" + (this.isDesktop() || i ? "" : " brad-list-item--line-bottom")), t.setAttribute("data-option", !0), t.setAttribute("data-value", e.value);
                    }
                    setSelectedAttribute(t, e) {
                        e.selected && t.setAttribute("selected", !0);
                    }
                    setElementInnerHTML(t, e) {
                        t.innerHTML = e;
                    }
                    createRadioHTML(t) {
                        return `\n      <input id="${`checkbox-${o.Z.getMaxRandom(1e3)}`}" type="radio" name="${this.targetSelector.replace("#", "")}" ${
                            t.selected ? "checked" : ""
                        } aria-hidden="true">\n      <span class="checkmark"></span>\n      <div class="brad-flex brad-flex-align-items-center" aria-hidden="true">${this.setIcon(t.icon)}${t.text}</div>\n    `;
                    }
                    setIcon(t) {
                        return t ? `<em class="i ${t} brad-m-xs-r" aria-hidden="true"></em> ` : "";
                    }
                    addRadioElementClasses(t) {
                        t.classList.add("brad-radio", "brad-flex-row-reverse", "brad-flex-align-items-center", "brad-flex-justify-content-between");
                    }
                    createCheckboxHTML(t) {
                        return `\n      <input id="${`checkbox-${o.Z.getMaxRandom(1e3)}`}" type="checkbox" name="${this.targetSelector.replace("#", "")}" ${
                            t.selected ? "checked" : ""
                        } aria-hidden="true">\n      <span class="checkmark" aria-hidden="true"></span>\n      <div class="brad-flex brad-flex-align-items-center" aria-hidden="true">${this.setIcon(t.icon)}${t.text}</div>\n    `;
                    }
                    addCheckboxElementClasses(t) {
                        t.classList.add("brad-checkbox", "brad-flex-row-reverse", "brad-flex-align-items-center", "brad-flex-justify-content-between");
                    }
                    appendElement(t) {
                        this.eOptionsContent.appendChild(t);
                    }
                    replaceOuterHTML(t, e) {
                        t.outerHTML = t.outerHTML.replace("options", `div data-option data-value="${e}`);
                    }
                    createDropdowFooterHTML() {
                        if (this.isDesktop()) {
                            var t = document.createElement("div");
                            t.classList.add("brad-dropdown__footer", "brad-flex", "brad-flex-justify-content-end", "brad-border-thick-t", "brad-border-color-neutral-10", "brad-p-xl");
                            var e = document.createElement("button");
                            e.classList.add("brad-btn", "brad-btn-primary", "brad-btn--auto"),
                                e.setAttribute("select-confirm", !0),
                                e.setAttribute("type", "button"),
                                (e.textContent = this.buttonPrimary.text),
                                t.appendChild(e),
                                (this.eConfirmButton = e),
                                this.eOptionsContent.appendChild(t);
                        }
                    }
                    startOptionsContainer() {
                        this.isDesktop() ? this.startDropdownContainer() : this.startModalContainer();
                    }
                    startDropdownContainer() {
                        this.setupDropdownService(), this.setupDropdownSelectClick(), this.setupDropdownArrowClick(), this.setupDropdownShow(), this.setupDropdwonConfirmButtonClick(), this.setupDropdownHide();
                    }
                    setupDropdownService() {
                        (this.eConfirmButton = this.eOptionsContent.querySelector("[select-confirm]")),
                            this.eSelectContainer.classList.add("brad-dropdown", "brad-dropdown--down-center"),
                            this.eOptionsContent.classList.add("brad-dropdown__dropdown-content"),
                            (this.bradDropdownService = a.B.getInstance({ targetSelector: this.targetSelector, enabledOutsideClick: !0 }));
                    }
                    setupDropdownSelectClick() {
                        this.isUpdated ||
                            this.eSelect.addEventListener("click", (t) => {
                                t.stopPropagation(), !1 === Boolean(this.isSelecting) && !1 === Boolean(this.eInput.disabled) && this.bradDropdownService.show();
                            });
                    }
                    setupDropdownArrowClick() {
                        this.isUpdated ||
                            this.eArrow.addEventListener("click", (t) => {
                                t.stopPropagation(), !1 === Boolean(this.eInput.disabled) && this.bradDropdownService.toggle();
                            });
                    }
                    setupDropdownShow() {
                        this.bradDropdownService.getElementEvent().addEventListener(
                            "show",
                            () => {
                                this.handleDropdownShow(), (this.isDropdownOpened = !0);
                            },
                            !1
                        );
                    }
                    handleDropdownShow() {
                        this.eArrow.classList.add("arrow--opened"), (this.isSelecting = !0), (this.isFirstMultiple = !0), (this.isConfirmed = !1), this.disableButtonPrimary();
                    }
                    setupDropdwonConfirmButtonClick() {
                        this.eConfirmButton &&
                            this.eConfirmButton.addEventListener("click", () => {
                                this.setupDropdownConfirmButtonClick();
                            });
                    }
                    setupDropdownConfirmButtonClick() {
                        (this.isConfirmed = !0), this.bradDropdownService.hide(), this.dispatchConfirmEvent();
                    }
                    setupDropdownHide() {
                        this.bradDropdownService.getElementEvent().addEventListener(
                            "hide",
                            () => {
                                this.handleDropdownHide(), this.eInput.blur();
                            },
                            !1
                        );
                    }
                    handleDropdownHide() {
                        this.eArrow.classList.remove("arrow--opened"), (this.isSelecting = !1), (this.isDropdownOpened = !1), (this.currentArrowOption = -1), this.resetFilterWhenOptionsNotFound();
                        var t = !1 === Boolean(this.isConfirmed) && !1 === Boolean(this.isFirstMultiple);
                        this.isConfirmed || this.dispatchCancelEvent(),
                            t &&
                                (this.eOptionsContent.querySelectorAll("[data-option]").forEach((t) => {
                                    this.handleNotConfirm(t);
                                }),
                                (this.selecteds = this.oldSelecteds.map((t) => t)),
                                this.setSelectedText(this.selecteds)),
                            (this.isFirstMultiple = !0);
                    }
                    resetFilterWhenOptionsNotFound() {
                        Boolean(this.eInput.value) && r.t.getFilteredElements(this.eOptionsContent.querySelectorAll("[data-option]")).length <= 0 && ((this.eInput.value = ""), this.resetFilter());
                    }
                    startModalContainer() {
                        this.setupModalService(), this.setupModalSelectClick(), this.setupModalOpen(), this.setupModalClose();
                    }
                    setupModalService() {
                        this.bradModalService = n.W.getInstance({ targetSelector: `#${this.modalID}` });
                    }
                    setupModalSelectClick() {
                        this.eSelect.addEventListener("click", (t) => {
                            t.stopPropagation(), this.eInput.disabled || this.handleModalSelectClick();
                        });
                    }
                    handleModalSelectClick() {
                        (this.oldSelected = this.eInput.value), (this.isFirstSingle = !0), (this.isConfirmed = !1), this.bradModalService.open();
                    }
                    setupModalOpen() {
                        this.bradModalService.getElementEvent().addEventListener("open", () => {
                            this.handleModalOpen(), this.eModal.focus();
                        });
                    }
                    handleModalOpen() {
                        (this.eConfirmButton = this.getContainer().querySelector("[select-confirm]")),
                            (this.eCancelButton = this.getContainer().querySelector("[cancel-confirm]")),
                            this.disableButtonPrimary(),
                            (this.eConfirmButton.onclick = () => {
                                this.setupModalConfirmButtonClick();
                            }),
                            this.eCancelButton &&
                                (this.eCancelButton.onclick = () => {
                                    this.bradModalService.close(), this.dispatchCancelEvent();
                                });
                    }
                    setupModalConfirmButtonClick() {
                        (this.isConfirmed = !0), this.dispatchConfirmEvent(), this.isDesktop() || this.bradModalService.close();
                    }
                    setupModalClose() {
                        this.bradModalService.getElementEvent().addEventListener("close", () => {
                            this.handleModalClose(), this.focusSelect();
                        });
                    }
                    handleModalClose() {
                        this.isConfirmed || this.dispatchCancelEvent(),
                            this.isConfirmed || "single" !== this.type
                                ? "multi" === this.type &&
                                  ((this.isSelecting = !1),
                                  this.isConfirmed || this.isFirstMultiple || (this.eOptions.forEach((t) => this.handleNotConfirm(t)), (this.selecteds = [...this.oldSelecteds]), this.setSelectedText(this.selecteds)))
                                : ((this.eInput.value = this.oldSelected),
                                  this.getOptionByText(this.oldSelected) && (this.oldSelected = this.getOptionByText(this.oldSelected).value),
                                  (this.selected = this.oldSelected),
                                  this.eOptions.forEach((t) => this.handleNotConfirm(t))),
                            (this.isFirstMultiple = !0);
                    }
                    handleNotConfirm(t) {
                        var e = t.getAttribute("data-value"),
                            i = t.querySelector("input");
                        this.oldSelecteds.includes(e) || (this.oldSelected && this.oldSelected.includes(e)) ? this.addSelectedValue(t, e, i) : this.removeSelectedValue(t, e, i), this.updateIndeterminateInput(t);
                    }
                    updateIndeterminateInput(t) {
                        var e = this.optionsSelect[0].element.querySelector("input");
                        if (this.isIndeterminateMode && t.hasAttribute("brad-main-select")) {
                            var i = this.oldSelecteds.length,
                                r = this.optionsSelect.length - 1;
                            e.indeterminate = i > 0 && i < r;
                        }
                    }
                    handleSelectValue() {
                        (this.eOptions = this.eOptionsContent.querySelectorAll("[data-option]")),
                            this.eOptions.forEach((t) => {
                                (t.onclick = (e) => {
                                    (e.target.classList.contains("brad-list-item") || e.target.classList.contains("checkmark")) && (e.preventDefault(), e.stopPropagation()), this.handleSelectValueByEvent(t, e);
                                }),
                                    this.setDefaultValue(t);
                            });
                    }
                    handleSelectValueByEvent(t, e) {
                        "single" === this.type ? this.handleSelectSingle(t) : (this.eInput.setAttribute("readonly", !0), this.handleSelectMulti(t)), this.disableButtonPrimary();
                    }
                    disableButtonPrimary() {
                        var t = this.getSelected().find((t) => !0 === t.selected);
                        this.eConfirmButton && this.buttonPrimary.disabledNonSelected && (this.eConfirmButton.disabled = !t);
                    }
                    handleSelectSingle(t) {
                        this.updateInputValue(t), this.resetSelect(), this.selectOption(t), this.resetFilter(), this.isDesktop() && ((this.isConfirmed = !0), this.bradDropdownService.hide(), this.dispatchConfirmEvent());
                    }
                    updateInputValue(t) {
                        var e = this.getOptionByDataValue(t.getAttribute("data-value"));
                        this.eInput.value = e.text;
                    }
                    getOptionByDataValue(t) {
                        return this.optionsSelect.find((e) => e.value == t);
                    }
                    getOptionByText(t) {
                        return this.optionsSelect.find((e) => e.text === t);
                    }
                    selectOption(t) {
                        var e = t.getAttribute("data-value"),
                            i = t.querySelector("input");
                        this.addSelectedValue(t, e, i);
                    }
                    handleSelectMulti(t) {
                        var e = t.getAttribute("data-value");
                        this.initializeMultipleSelection(), e && (this.isSelectedValue(e) && t.hasAttribute("selected") ? this.handleDeselectIfSelected(t, e) : this.handleSelectIfNotSelected(t, e), this.setSelectedText(this.selecteds));
                    }
                    handleSelectIfNotSelected(t, e) {
                        this.isIndeterminateMode && t.hasAttribute("brad-main-select")
                            ? this.handleIndeterminateModeSelect(t)
                            : (this.addSelectedValue(t, e, t.querySelector("input")), this.isIndeterminateMode && this.handleIndeterminateModeAfterSelection());
                    }
                    handleDeselectIfSelected(t, e) {
                        this.isIndeterminateMode && t.hasAttribute("brad-main-select")
                            ? this.handleIndeterminateModeDeselect()
                            : (this.removeSelectedValue(t, e, t.querySelector("input")), this.isIndeterminateMode && this.handleIndeterminateModeAfterDeselection());
                    }
                    handleIndeterminateModeSelect(t) {
                        this.addAllSelectedValue(), (this.optionsSelect[0].element.querySelector("input").indeterminate = !1);
                    }
                    handleIndeterminateModeAfterSelection() {
                        var t = this.optionsSelect[0].element.querySelector("input");
                        this.selecteds.length < this.optionsSelect.length - 1
                            ? (t.indeterminate = !0)
                            : ((t.indeterminate = !1), this.addSelectedValue(this.optionsSelect[0].element, this.optionsSelect[0].value, this.optionsSelect[0].element.querySelector("input")));
                    }
                    handleIndeterminateModeDeselect() {
                        this.removeAllSelectedValue();
                    }
                    handleIndeterminateModeAfterDeselection() {
                        var t = this.optionsSelect[0].element.querySelector("input");
                        0 === this.selecteds.length ? (t.indeterminate = !1) : ((t.indeterminate = !0), this.removeSelectedValue(this.optionsSelect[0].element, this.optionsSelect[0].value, t));
                    }
                    initializeMultipleSelection() {
                        this.isFirstMultiple && ((this.oldSelecteds = [...this.selecteds]), (this.isFirstMultiple = !1), (this.isConfirmed = !1));
                    }
                    isSelectedValue(t) {
                        return this.selecteds.includes(t);
                    }
                    addSelectedValue(t, e, i) {
                        this.toggleSelectedValue(t, e, i, !0);
                    }
                    removeSelectedValue(t, e, i) {
                        this.toggleSelectedValue(t, e, i, !1);
                    }
                    toggleSelectedValue(t, e, i, r) {
                        if ("single" === this.type) this.selected = r ? t.getAttribute("data-value") : "";
                        else {
                            var s = this.selecteds.indexOf(e);
                            r ? -1 === s && this.selecteds.push(e) : -1 !== s && this.selecteds.splice(s, 1);
                        }
                        r ? (t.setAttribute("selected", !0), t.setAttribute("aria-checked", !0)) : (t.removeAttribute("selected"), t.removeAttribute("aria-checked"));
                        var a = this.optionsSelect.map((t) => t.value).indexOf(e);
                        this.optionsSelect[a] && (this.optionsSelect[a].selected = r), i && ((i.checked = r), (i.ariaChecked = r)), !1 === this.isAllChanged && this.dispatchChangeEvent(t);
                    }
                    setSelectedText(t) {
                        (this.eInput.value = this.isIndeterminateMode && !0 === this.optionsSelect[0].selected ? t.length - 1 + " selecionado(s)" : `${t.length} selecionado(s)`),
                            t.length <= 0 ? ((this.eInput.value = ""), this.eInput.removeAttribute("readonly")) : 1 === t.length && (this.eInput.value = this.getOptionByDataValue(t[0]).text);
                    }
                    setDefaultValue(t) {
                        var e = t.getAttribute("data-value"),
                            i = t.querySelector("input");
                        this.setSingleDefaultValue(t, e, i), this.setMultiDefaultValue(t, e, i);
                    }
                    setSingleDefaultValue(t, e, i) {
                        "single" === this.type && t.hasAttribute("selected") && ((this.eInput.value = e), (this.oldSelected = this.eInput.value), this.updateInputValue(t), i && (i.checked = !0));
                    }
                    setMultiDefaultValue(t, e, i) {
                        "multi" === this.type && t.hasAttribute("selected") && (this.addSelectedValue(t, e, i), this.setSelectedText(this.selecteds));
                    }
                    handleFilter() {
                        this.eInput.addEventListener("input", () => {
                            this.eOptions.forEach((t) => {
                                var e = t.getAttribute("data-value"),
                                    i = this.eInput.value;
                                r.t.byText(e, i, t);
                            });
                        });
                    }
                    initListeners() {
                        this.handleInputTyped(), this.navigateByArrows();
                    }
                    navigateByArrows() {
                        this.eInput.onkeydown = (t) => {
                            var e = r.t.getFilteredElements(this.eOptionsContent.querySelectorAll("[data-option]")),
                                i = l(
                                    this.listKeyboardMove
                                        .setEvent(t)
                                        .setIsListOpened(this.isDropdownOpened)
                                        .setCurrentArrowOption(this.currentArrowOption)
                                        .setListElements(e)
                                        .setElementAboveToFocus(this.eInput)
                                        .setCallbackElementFocused((i) => {
                                            this.callbackElementFocused(i, t, e);
                                        })
                                        .navigateByArrows(),
                                    1
                                );
                            this.currentArrowOption = i[0];
                        };
                    }
                    callbackElementFocused(t, e, i) {
                        t &&
                            "Enter" == e.key &&
                            ((this.eInput.value = t.getAttribute("data-value")),
                            i.forEach((i) => {
                                i == t && this.handleSelectValueByEvent(i, e);
                            }),
                            i.forEach((t) => {
                                t.removeAttribute("selected");
                            }),
                            t.setAttribute("selected", !0));
                    }
                    handleInputTyped() {
                        this.eInput.addEventListener("input", () => {
                            this.eInput.value.length <= 0 && this.resetSelect(), (this.currentArrowOption = -1);
                        });
                    }
                    focusSelect() {
                        (this.eInput.tabIndex = -1), this.eInput.focus();
                    }
                    resetSelect() {
                        this.eOptions.forEach((t) => t.removeAttribute("selected")), this.optionsSelect.forEach((t) => (t.selected = !1)), this.eInput.removeAttribute("readonly"), this.eInput.removeAttribute("aria-checked");
                    }
                    resetFilter() {
                        this.eOptionsContent.querySelectorAll("[data-option]").forEach((t) => {
                            r.t.resetFilter(t);
                        });
                    }
                    getSelected() {
                        return "single" === this.type ? this.optionsSelect : this.optionsSelect.map((t) => ({ value: t.value, selected: t.selected }));
                    }
                    isDesktop() {
                        return window.innerWidth >= 768;
                    }
                    setSelectValueMethod(t) {
                        if ((this.removeAllSelectedValue(), "string" != typeof t))
                            t.forEach((t) => {
                                var e = document.querySelector(`[data-value='${t}']`);
                                this.handleSelectValueByEvent(e);
                            }),
                                this.setupModalConfirmButtonClick();
                        else {
                            var e = document.querySelector(`[data-value='${t}']`);
                            this.handleSelectValueByEvent(e);
                        }
                    }
                    addAllSelectedValue() {
                        this.processSelectedValues("add");
                    }
                    removeAllSelectedValue() {
                        this.processSelectedValues("remove");
                    }
                    processSelectedValues(t) {
                        this.eOptions.forEach((e, i) => {
                            var r = e.getAttribute("data-value"),
                                s = e.querySelector("input");
                            (this.isAllChanged = !0),
                                "add" === t ? this.addSelectedValue(e, r, s) : "remove" === t && this.removeSelectedValue(e, r, s),
                                i >= this.eOptions.length - 1 && (this.dispatchChangeEvent(), (this.isAllChanged = !1));
                        });
                    }
                    dispatchChangeEvent(t) {
                        (this.changedEvent = new CustomEvent("changed", { detail: { elementChanged: t || this.eOptions, options: this.optionsSelect } })), this.eInput.dispatchEvent(this.changedEvent);
                    }
                    dispatchCancelEvent() {
                        this.eInput.dispatchEvent(this.canceledEvent);
                    }
                    dispatchConfirmEvent() {
                        this.dispatchSelectedEvent(), this.eInput.dispatchEvent(this.confirmedEvent);
                    }
                    dispatchSelectedEvent() {
                        this.eInput.dispatchEvent(this.selectedEvent);
                    }
                    setDropdownMaxHeight(t) {
                        this.eOptionsContent && (this.eOptionsContent.style.maxHeight = t);
                    }
                    updateOptionsSelect(t) {
                        var e, i, r;
                        (this.selecteds = []),
                            (this.selected = null),
                            (this.isUpdated = !0),
                            (this.optionsSelect = t),
                            null === (e = document.querySelector(this.targetSelector).querySelector(".brad-text-field-select__options")) || void 0 === e || e.remove(),
                            (this.eInput.value = ""),
                            null === (i = document.getElementById(this.modalID)) || void 0 === i || i.remove(),
                            null === (r = document.querySelector('[data-overlay="#' + this.modalID + '"]')) || void 0 === r || r.remove(),
                            this.initializeComponent();
                    }
                    cleanInput() {
                        (this.eInput.value = ""),
                            (this.selecteds = []),
                            (this.selected = null),
                            this.eOptions.forEach((t) => {
                                var e = t.querySelector("input");
                                t.removeAttribute("selected"), t.removeAttribute("aria-checked"), e.setAttribute("aria-checked", !1), (e.checked = !1), e.indeterminate && (e.indeterminate = !1);
                            }),
                            this.optionsSelect.forEach((t) => (t.selected = !1));
                    }
                }
            },
            96770: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854);
                class s {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new s(t);
                    }
                    constructor(t = { targetSelector: ".brad-text-field > [data-textarea-expander]" }) {
                        var e = t.targetSelector;
                        (this.targetSelector = e && e.includes(".brad-text-field > [data-textarea-expander]") ? e : `${e} > [data-textarea-expander]`), this.initListerners();
                    }
                    initListerners() {
                        this.toExpandTextAreas();
                    }
                    toExpandTextAreas() {
                        document.querySelectorAll(`${this.targetSelector}`).forEach((t) => {
                            t.oninput = () => this.autoResize(t);
                        });
                    }
                    autoResize(t) {
                        var e = getComputedStyle(t).minHeight.replace("px", ""),
                            i = 3 * e;
                        if (((t.style.maxHeight = `${i}px`), parseInt(t.scrollHeight) >= i)) t.style.height = "auto";
                        else {
                            var r = t.getAttribute("rows");
                            t.style.height = e * Number(r) + "px";
                        }
                        t.style.height = t.scrollHeight + "px";
                    }
                }
                r.Z.add("BradTextFieldService", s);
            },
            66935: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            2765: (t, e, i) => {
                "use strict";
                function r(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                i.r(e);
                class s {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new s(t);
                    }
                    constructor(t) {
                        if (
                            (r(this, "sliderContainer", null),
                            r(this, "slidersElement", null),
                            r(this, "popoverContainerElement", null),
                            r(this, "popoverBallonElement", null),
                            r(this, "popoverTextElement", null),
                            r(this, "popoverIndicatorElement", null),
                            r(this, "minimumTextElement", null),
                            r(this, "maximumTextElement", null),
                            r(this, "monetaryFormat", null),
                            r(this, "px", null),
                            r(this, "isDisabled", !1),
                            r(this, "state", "default"),
                            r(this, "stateColors", {}),
                            r(this, "stateColorsOptions", {
                                default: {
                                    default: { primary: "rgb(var(--brad-color-cta))", secondary: "rgb(var(--brad-color-neutral-20))" },
                                    disabled: { primary: "rgb(var(--brad-color-neutral-30))", secondary: "rgb(var(--brad-color-neutral-10))" },
                                    pressed: { primary: "rgb(var(--brad-color-cta-dark))", secondary: "rgb(var(--brad-color-neutral-20))" },
                                    hovered: { primary: "rgb(var(--brad-color-cta-light))", secondary: "rgb(var(--brad-color-neutral-20))" },
                                },
                                onColor: {
                                    default: { primary: "rgb(var(--brad-color-neutral-0))", secondary: "rgba(var(--brad-color-neutral-0), var(--brad-opacity-40))" },
                                    disabled: { primary: "rgb(var(--brad-color-neutral-30))", secondary: "rgb(var(--brad-color-neutral-10), var(--brad-opacity-10))" },
                                    pressed: { primary: "rgb(var(--brad-color-neutral-20))", secondary: "rgba(var(--brad-color-neutral-0), var(--brad-opacity-40))" },
                                    hovered: { primary: "rgb(var(--brad-color-neutral-10))", secondary: "rgba(var(--brad-color-neutral-0), var(--brad-opacity-40))" },
                                },
                            }),
                            r(this, "getFormatedValue", function (t) {
                                return this.monetaryFormat ? this.monetaryFormat.format(t) : t;
                            }),
                            !t || "string" != typeof t.targetSelector)
                        )
                            return !1;
                        (this.sliderContainer = document.querySelector(t.targetSelector)), this.onInit();
                    }
                    onInit() {
                        this.setTargets(),
                            (this.isDisabled = this.sliderContainer.classList.contains("disabled")),
                            (this.slidersElement = this.sliderContainer.querySelectorAll(".brad-slider-container__input-range")),
                            (this.isOnColor = this.sliderContainer.classList.contains("brad-slider-container--on-color")),
                            this.setColors();
                        for (var t = 0; t < this.slidersElement.length; t++) {
                            var e = this.slidersElement[t];
                            (e.index = t),
                                this.checkDisabledState(e),
                                this.setEventListeners(e),
                                this.applyMinimumAndMaximumTextOnElements(e),
                                this.applyLinearGradientOnBackgroundInputRange(e),
                                this.applyValueDefaultOnPopoverText(e),
                                this.calculatePositionPopover(e);
                        }
                    }
                    setColors() {
                        this.isOnColor ? (this.stateColors = this.stateColorsOptions.onColor) : (this.stateColors = this.stateColorsOptions.default);
                    }
                    setTargets() {
                        (this.popoverContainerElement = this.sliderContainer.querySelector(".brad-slider-container__popover__container")),
                            (this.popoverTextElement = this.sliderContainer.querySelector(".brad-slider-container__popover__texto")),
                            (this.popoverBallonElement = this.sliderContainer.querySelector(".brad-slider-container__popover__ballon")),
                            (this.popoverIndicatorElement = this.sliderContainer.querySelector(".brad-slider-container__popover__indicator")),
                            (this.minimumTextElement = this.sliderContainer.querySelector(".brad-slider-container-information__text-mininum")),
                            (this.maximumTextElement = this.sliderContainer.querySelector(".brad-slider-container-information__text-maximum"));
                    }
                    setEventListeners(t) {
                        (t.oninput = (e) => this.onInput(e, t)),
                            (t.onmousedown = (e) => this.onPressedStart(e, t)),
                            (t.ontouchstart = (e) => this.onPressedStart(e, t)),
                            (t.onmouseup = (e) => this.onPressedEnd(e, t)),
                            (t.ontouchend = (e) => this.onPressedEnd(e, t)),
                            (t.onmouseover = (e) => this.onMouserOver(e, t)),
                            (t.onmouseout = (e) => this.onMouserOut(e, t));
                    }
                    onInput(t, e) {
                        this.commonListeners(e), this.slidersElement.length > 1 && this.applyWallBetweenSliders(t, this.slidersElement);
                    }
                    onPressedStart(t, e) {
                        if (this.isDisabled) return !1;
                        this.commonListeners(e), this.sliderContainer.classList.remove("hover"), this.sliderContainer.classList.add("pressed"), e.classList.add("pressed"), this.popoverContainerElement.classList.add("enabled");
                    }
                    onPressedEnd(t, e) {
                        if (this.isDisabled) return !1;
                        this.setState("hovered"), this.applyLinearGradientOnBackgroundInputRange(e), this.sliderContainer.classList.remove("pressed"), e.classList.remove("pressed"), this.popoverContainerElement.classList.remove("enabled");
                    }
                    onMouserOver(t, e) {
                        if ((this.setState("hovered"), this.isDisabled)) return !1;
                        this.applyLinearGradientOnBackgroundInputRange(e), e.classList.add("hover"), e.parentElement.classList.add("hover");
                    }
                    onMouserOut(t, e) {
                        if ((this.setState("default"), this.isDisabled)) return !1;
                        this.applyLinearGradientOnBackgroundInputRange(e), e.classList.remove("hover"), e.parentElement.classList.remove("hover");
                    }
                    commonListeners(t) {
                        this.setState("pressed"), this.applyLinearGradientOnBackgroundInputRange(t), this.applyValueDefaultOnPopoverText(t), this.calculatePositionPopover(t);
                    }
                    applyLinearGradientOnBackgroundInputRange(t) {
                        var e = this.getColorsState(this.getState(), "primary"),
                            i = this.getColorsState(this.getState(), "secondary");
                        if (this.slidersElement.length > 1) {
                            var r = this.slidersElement[0];
                            return this.applyLinearGradientTwoSlidersBackgroundInputRange(r, e, i);
                        }
                        return this.applyLinearGradientToRightOnBackgroundInputRange(t, e, i);
                    }
                    applyValueDefaultOnPopoverText(t) {
                        this.popoverTextElement.innerHTML = this.getFormatedValue(t.valueAsNumber);
                    }
                    applyMinimumAndMaximumTextOnElements(t) {
                        (this.minimumTextElement.innerHTML = this.getFormatedValue(t.min)), (this.maximumTextElement.innerHTML = this.getFormatedValue(t.max));
                    }
                    applyLinearGradientToRightOnBackgroundInputRange(t, e, i) {
                        var r = `linear-gradient(to right,\n                                            ${e} 0%, ${e} ${this.getPercentSliders()[0]}%,\n                                            ${i} 0%, ${i} 100%)`;
                        t.style.setProperty("background", r);
                    }
                    applyLinearGradientTwoSlidersBackgroundInputRange(t, e, i) {
                        var r = this.getPercentSliders(),
                            s = `linear-gradient(to right,\n                                            ${i} 0, ${i} ${r[0]}%,\n                                            ${e} ${r[0]}%, ${e} ${r[1]}%,\n                                            ${i} ${r[1]}%, ${i} 100%)`;
                        t.style.setProperty("background", s);
                    }
                    getWidthRange(t) {
                        return t.clientWidth - 24;
                    }
                    getPxThroughValueAndSliderElement(t, e) {
                        return ((t - e.min) * this.getWidthRange(e)) / parseFloat(e.max - e.min);
                    }
                    calculatePositionPopover(t) {
                        (this.px = this.getPxThroughValueAndSliderElement(t.valueAsNumber, t)),
                            (this.popoverIndicatorElement.style.left = this.adjustOverFlowPopoverIndicator(t) + "px"),
                            (this.popoverBallonElement.style.left = this.adjustOverFlowPopoverBallon(t) + "px");
                    }
                    adjustOverFlowPopoverIndicator(t) {
                        return this.px < 0 ? this.getPxThroughValueAndSliderElement(t.valueAsNumber, t) : this.px + this.calculateAThirdOfTheIndicator();
                    }
                    calculateAThirdOfTheIndicator() {
                        var t = getComputedStyle(this.popoverIndicatorElement).width;
                        return (t = parseFloat(t.replace("px", ""))) / 3;
                    }
                    adjustOverFlowPopoverBallon(t) {
                        var e = this.popoverBallonElement.clientWidth,
                            i = this.popoverContainerElement.clientWidth;
                        return (this.px -= e / 3), e <= 70 && (this.px = this.px + 4), this.px + i > t.clientWidth && (this.px = t.clientWidth - i), this.px <= 0 ? 0 : this.px;
                    }
                    applyWallBetweenSliders(t, e) {
                        if (0 == t.target.index && parseFloat(t.target.value) > parseFloat(e[1].value)) {
                            t.target.value = e[1].value - 1;
                            var i = t.target;
                            this.commonListeners(i);
                        }
                        if (1 == t.target.index && parseFloat(t.target.value) < parseFloat(e[0].value)) {
                            t.target.value = e[0].value;
                            var r = t.target;
                            this.commonListeners(r);
                        }
                    }
                    checkDisabledState(t) {
                        return this.isDisabled && (this.setState("disabled"), (t.disabled = !0)), this.isDisabled;
                    }
                    getPercentSliders() {
                        for (var t = {}, e = 0; e < this.slidersElement.length; e++) {
                            var i = this.slidersElement[e].valueAsNumber,
                                r = this.slidersElement.length - 1,
                                s = this.slidersElement[r].max,
                                a = this.slidersElement[r].min;
                            t[e] = parseFloat((100 * (i - a)) / (s - a));
                        }
                        return t;
                    }
                    getColorsState(t, e) {
                        return void 0 !== this.stateColors[t] && void 0 !== this.stateColors[t][e] && this.stateColors[t][e];
                    }
                    setState(t) {
                        this.state = t;
                    }
                    getState() {
                        return this.state;
                    }
                    setValue(t) {
                        (this.slidersElement[0].value = t), this.commonListeners(this.slidersElement[0]), this.checkDisabledState(this.slidersElement[0]), this.applyLinearGradientOnBackgroundInputRange(this.slidersElement[0]);
                    }
                    setValues(t, e) {
                        (this.slidersElement[0].value = t),
                            (this.slidersElement[1].value = e),
                            this.commonListeners(this.slidersElement[0]),
                            this.checkDisabledState(this.slidersElement[0]),
                            this.applyLinearGradientOnBackgroundInputRange(this.slidersElement[0]);
                    }
                    getValue() {
                        return this.slidersElement[0].value;
                    }
                    getValues() {
                        var t = {};
                        return (t[0] = this.slidersElement[0].value), (t[1] = this.slidersElement[1].value), t;
                    }
                    getMinimumValue() {
                        return this.slidersElement[0].min;
                    }
                    getMaximumValue() {
                        return this.slidersElement.length > 1 ? this.slidersElement[1].max : this.slidersElement[0].max;
                    }
                    setSuportTextMinumum(t) {
                        this.minimumTextElement.innerText = t;
                    }
                    getSuportTextMinumum() {
                        return this.minimumTextElement.innerText;
                    }
                    setSuportTextMaximum(t) {
                        this.maximumTextElement.innerText = t;
                    }
                    getSuportTextMaximum() {
                        return this.maximumTextElement.innerText;
                    }
                    setMonetaryFormat(t) {
                        this.monetaryFormat = t;
                    }
                }
                i(28854).Z.add("BradSliderService", s);
            },
            96973: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            29786: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(96179);
                r.Z.add("BradHideTextService", s.k);
            },
            96179: (t, e, i) => {
                "use strict";
                i.d(e, { k: () => a });
                var r = i(55988);
                function s(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class a {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new a(t);
                    }
                    constructor(t) {
                        return s(this, "targetSelector", ".brad-hide-text"), this.init(t);
                    }
                    init(t) {
                        try {
                            var e = t.targetSelector;
                            if (((this.targetSelector = e || this.targetSelector), (this.eTarget = document.querySelector(this.targetSelector)), !1 === Boolean(this.eTarget)))
                                throw new r.s(r.A.ELEMENT_NOT_FOUND, `Element with (selector: ${this.target}) not found.`);
                        } catch (t) {}
                        return this;
                    }
                    toggle() {
                        if (this.eTarget.classList.contains("brad-hide-text--hide")) return this.eTarget.classList.remove("brad-hide-text--hide"), void (this.eTarget.ariaHidden = !1);
                        this.eTarget.classList.add("brad-hide-text--hide"), (this.eTarget.ariaHidden = !0);
                    }
                }
            },
            72427: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854);
                class s {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new s(t);
                    }
                    constructor(t) {
                        var e = t.targetSelector;
                        this.targetSelector = e;
                    }
                }
                r.Z.add("BradInfobarService", s);
            },
            589: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(23575);
                r.Z.add("BradInputUploaderService", s.r);
            },
            23575: (t, e, i) => {
                "use strict";
                i.d(e, { r: () => h });
                var r = i(55988),
                    s = i(36148),
                    a = i(4359);
                function n(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class o {
                    constructor(t) {
                        n(this, "id", null), n(this, "bradInputUploader", null), n(this, "progressBarLine", null), n(this, "progressBarLineService", null);
                        var e = t.id,
                            i = t.bradInputUploader;
                        this.setId(e), this.setBradInputUploader(i);
                    }
                    setId(t) {
                        return (this.id = t), this;
                    }
                    getId() {
                        return this.id;
                    }
                    setBradInputUploader(t) {
                        return (this.bradInputUploader = t), this;
                    }
                    getBradInputUploader() {
                        return this.bradInputUploader;
                    }
                    setProgressBarLine(t) {
                        return (this.progressBarLine = t), this;
                    }
                    getProgressBarLine() {
                        return this.progressBarLine;
                    }
                    setProgressBarLineService(t) {
                        return (this.progressBarLineService = t), this;
                    }
                    getProgressBarLineService() {
                        return this.progressBarLineService;
                    }
                    getUploaderProgress() {
                        return this.getBradInputUploader().querySelector("#" + this.getId());
                    }
                    setPercentProgressBarLine(t) {
                        this.setProgressBarLine(this.getUploaderProgress().querySelector(".brad-input-uploader__content-uploader-progress-information-line .brad-progress-bar__growth"));
                        var e = this.getProgressBarLine();
                        if (e) {
                            e.parentElement.setAttribute("aria-label", "Arquivo: " + e.dataset.fileName + " " + t + " porcento.");
                            var i = this.getUploaderProgress().dataset.status;
                            return (
                                this.clearClassStatusProgressLineBar(),
                                this.addClassStatusProgressLineBar(i),
                                this.setProgressBarLineService(a.H.getInstance({ targetSelector: "#" + this.getId() + "-line" })),
                                this.getProgressBarLineService().setCurrentProgress(t.toString().replace(/[^\d]/g, "")),
                                this
                            );
                        }
                        return !1;
                    }
                    setHelpTextDescription(t) {
                        var e = this.getUploaderProgress().querySelector(".brad-input-uploader__content-uploader-progress-information-help-text-description");
                        return !!e && ((e.innerHTML = t), this);
                    }
                    setHelpTextProgressStatus(t) {
                        var e = this.getUploaderProgress().querySelector(".brad-input-uploader__content-uploader-progress-information-help-text-progress-status");
                        return !!e && ((e.innerHTML = t), this);
                    }
                    setStatus(t) {
                        return (
                            !(!this.getUploaderProgress() || !["info", "success", "error"].includes(t)) &&
                            (this.getUploaderProgress().classList.remove(
                                "brad-input-uploader__content-uploader-progress--info",
                                "brad-input-uploader__content-uploader-progress--success",
                                "brad-input-uploader__content-uploader-progress--error"
                            ),
                            this.getUploaderProgress().classList.add(`brad-input-uploader__content-uploader-progress--${t}`),
                            (this.getUploaderProgress().dataset.status = t),
                            this)
                        );
                    }
                    addClickEventOnActionButton(t) {
                        return (this.getUploaderProgress().querySelector(".brad-input-uploader__content-uploader-progress-action-icon-i").onclick = (e) => t(e)), this;
                    }
                    addClickEventOnReplaceFileButton(t) {
                        return (this.getUploaderProgress().querySelector(".brad-input-uploader__content-uploader-progress-replace-file-button button").onclick = (e) => t(e)), this;
                    }
                    addClassStatusProgressLineBar(t) {
                        return this.getProgressBarLine().classList.add(`brad-bg-color-alert-${t}`), !0;
                    }
                    clearClassStatusProgressLineBar() {
                        return this.getProgressBarLine().classList.remove("brad-bg-color-alert-info", "brad-bg-color-alert-success", "brad-bg-color-alert-error"), !0;
                    }
                    createHtmlUploaderProgress(t) {
                        return `<div id="${t.idUploaderProgress}" class="brad-input-uploader__content-uploader-progress">\n              <div class="brad-input-uploader__content-uploader-progress-information">\n                <div class="brad-input-uploader__content-uploader-progress-information-title-file brad-font-subtitle-sm">\n                  <p>${t.name}</p>\n                </div>\n                <div id="${t.idUploaderProgress}-line" class="brad-input-uploader__content-uploader-progress-information-line brad-progress-bar brad-progress-bar--xl" aria-label="0%" aria-live="polite">\n                  <em class="brad-progress-bar__growth brad-bg-color-alert-info" data-file-name="${t.name}"></em>\n                </div>\n                <div class="brad-input-uploader__content-uploader-progress-information-help-text">\n                  <div class="brad-input-uploader__content-uploader-progress-information-help-text-description brad-font-subtitle-sm">\n                    <p></p>\n                  </div>\n                  <div class="brad-input-uploader__content-uploader-progress-information-help-text-progress-status brad-font-subtitle-sm">\n                    <p>Carregando: 0%</p>\n                  </div>\n                </div>\n              </div>\n              <div class="brad-input-uploader__content-uploader-progress-replace-file-button">\n                <button tabindex="1" class="brad-btn brad-btn-secondary">Substituir arquivo</button>\n              </div>\n              <div class="brad-input-uploader__content-uploader-progress-action-icon">\n                <span role="button" tabindex="1" class="brad-input-uploader__content-uploader-progress-action-icon-i brad-icon-size-sm">\n                </span>\n              </div>\n            </div>`;
                    }
                }
                function l(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class h {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new h(t);
                    }
                    constructor(t) {
                        l(this, "allowedExtensions", []),
                            l(this, "bradInputUploader", null),
                            l(this, "files", []),
                            l(this, "isMultipleFiles", !1),
                            l(this, "maximumSize", !1),
                            l(this, "labelBradInputUploader", null),
                            l(this, "callbackAfterAddFile", null),
                            l(this, "bradUploaderProgressService", null);
                        try {
                            var e = t.targetSelector,
                                i = t.disabled,
                                r = t.allowedExtensions,
                                s = t.isMultipleFiles,
                                a = t.maximumSize,
                                n = t.callbackAfterAddFile;
                            if (
                                (this.setAllowedExtensions(r),
                                this.setBradInputUploader(document.querySelector(e)),
                                this.setLabelBradInputLoader(this.getBradInputUploader().querySelector(".brad-input-uploader__content-label,.brad-input-uploader__content-label--disabled")),
                                this.setIsMultipleFiles(s),
                                this.setMaximumSize(a),
                                this.setCallbackAfterAddFile(n),
                                i)
                            )
                                return !1;
                            this.addDragOverEventOnLabelInputUploader(), this.addDragLeaveEventOnLabelInputUploader(), this.addDropEventOnInputUploader(), this.addChangeEventOnInputUploader();
                        } catch (t) {}
                    }
                    setAllowedExtensions(t) {
                        return Array.isArray(t)
                            ? (t.forEach((e, i) => {
                                  t[i] = e.toLocaleLowerCase().trim();
                              }),
                              (this.allowedExtensions = t),
                              this)
                            : ((this.allowedExtensions = "*"), this);
                    }
                    getAllowedExtensions() {
                        return this.allowedExtensions;
                    }
                    setBradInputUploader(t) {
                        if (!t) throw new r.s(r.A.ELEMENT_NOT_FOUND, `Component with (selector: ${targetSelector}) not found.`);
                        return (this.bradInputUploader = t), this;
                    }
                    getBradInputUploader() {
                        return this.bradInputUploader;
                    }
                    setLabelBradInputLoader(t) {
                        if (!t) throw new r.s(r.A.ELEMENT_NOT_FOUND, "Component with (selector: .brad-input-uploader__content-label) not found.");
                        return (this.labelBradInputUploader = t), this;
                    }
                    getLabelBradInputUploader() {
                        return this.labelBradInputUploader;
                    }
                    setIsMultipleFiles(t) {
                        return (this.isMultipleFiles = t), this;
                    }
                    getIsMultipleFiles() {
                        return this.isMultipleFiles;
                    }
                    setMaximumSize(t) {
                        return (this.maximumSize = t), this;
                    }
                    getMaximumSize() {
                        return this.maximumSize;
                    }
                    setCallbackAfterAddFile(t) {
                        return (this.callbackAfterAddFile = t), this;
                    }
                    getCallbackAfterAddFile() {
                        return this.callbackAfterAddFile;
                    }
                    addDragOverEventOnLabelInputUploader() {
                        this.getLabelBradInputUploader().ondragover = (t) => {
                            this.dragOverEventLabellInputUploader(t);
                        };
                    }
                    dragOverEventLabellInputUploader(t) {
                        t.preventDefault(), this.getLabelBradInputUploader().classList.add("brad-input-uploader__content-label--dragover");
                    }
                    addDragLeaveEventOnLabelInputUploader() {
                        this.getLabelBradInputUploader().ondragleave = (t) => {
                            this.dragLeaveEventLabellInputUploader(t);
                        };
                    }
                    dragLeaveEventLabellInputUploader(t) {
                        t.preventDefault(), this.getLabelBradInputUploader().classList.remove("brad-input-uploader__content-label--dragover");
                    }
                    addDropEventOnInputUploader() {
                        this.getLabelBradInputUploader().ondrop = (t) => {
                            this.dropEventInputUploader(t);
                        };
                    }
                    dropEventInputUploader(t) {
                        t.preventDefault(), this.getLabelBradInputUploader().classList.remove("brad-input-uploader__content-label--dragover");
                        for (var e = 0; e < t.dataTransfer.items.length; e++) {
                            var i = t.dataTransfer.items[e].getAsFile();
                            this.addFile(i);
                        }
                    }
                    addChangeEventOnInputUploader() {
                        this.getLabelBradInputUploader().querySelector(".brad-input-uploader__content-label-input").onchange = (t) => {
                            this.changeEventInputUploader(t);
                        };
                    }
                    changeEventInputUploader(t) {
                        var e = t.target.files;
                        t.dataTransfer && (e = t.dataTransfer.files);
                        for (var i = 0; i < e.length; i++) {
                            var r = e[i];
                            this.addFile(r);
                        }
                        return this.afterChangeEventInputUploader(t);
                    }
                    afterChangeEventInputUploader(t) {
                        return (t.target.value = ""), t.value;
                    }
                    checkIfIsAllowedExtension(t) {
                        if ("*" == this.getAllowedExtensions()) return !0;
                        var e = t.name.toLocaleLowerCase().split(".").pop();
                        return this.getAllowedExtensions().includes(e);
                    }
                    checkMaximumSize(t) {
                        return !this.getMaximumSize() || t.size <= this.getMaximumSize();
                    }
                    addFile(t) {
                        return (
                            !!t &&
                            ((t.id = s.Z.getMaxRandom(1e7)),
                            (t.idUploaderProgress = `brad-input-uploader__content-uploader-progress-${t.id}`),
                            (t.BradUploaderProgressService = new o({ id: t.idUploaderProgress, bradInputUploader: this.getBradInputUploader() })),
                            this.files.push(t),
                            this.addUploaderProgress(t),
                            this.afterAddUploaderProgress(t),
                            !0)
                        );
                    }
                    getFiles() {
                        return this.files;
                    }
                    addUploaderProgress(t) {
                        var e = document.createElement("div");
                        return (
                            e.classList.add("brad-input-uploader__content"),
                            (e.innerHTML = t.BradUploaderProgressService.createHtmlUploaderProgress(t)),
                            this.getIsMultipleFiles()
                                ? this.getBradInputUploader().appendChild(e)
                                : (this.getBradInputUploader().appendChild(e), (this.getBradInputUploader().querySelector(".brad-input-uploader__content").style.display = "none"), !0)
                        );
                    }
                    afterAddUploaderProgress(t) {
                        this.getCallbackAfterAddFile()(t.BradUploaderProgressService);
                    }
                }
            },
            10799: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            57694: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(59519);
                r.Z.add("BradLoadMoreService", s.K);
            },
            59519: (t, e, i) => {
                "use strict";
                i.d(e, { K: () => n });
                var r = i(55988),
                    s = i(9328),
                    a = ["left", "right"];
                class n {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new n(t);
                    }
                    constructor(t) {
                        try {
                            this.initializeOptions(t), this.getElements();
                        } catch (t) {}
                    }
                    initializeOptions(t) {
                        var e = t.targetSelector,
                            i = t.showText,
                            r = void 0 === i ? "Show" : i,
                            s = t.hideText,
                            a = void 0 === s ? "Hide" : s,
                            n = t.icon,
                            o = t.isShowText,
                            l = void 0 === o || o;
                        (this.targetSelector = e), (this.showText = r), (this.hideText = a), (this.icon = n), (this.isShowText = l), this.validate();
                    }
                    validate() {
                        var t = [
                            { conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: r.A.SELECTOR_NOT_SPECIFIED, messageError: "Selector is required." },
                            { conditional: () => this.icon && !1 === Boolean(a.includes(this.icon.toLowerCase())), exceptionCode: r.A.SELECTOR_NOT_SPECIFIED, messageError: "Icon must be left or right." },
                        ];
                        s.a.validate(t);
                    }
                    getElements() {
                        if (((this.eBradLoadMore = document.querySelector(this.targetSelector)), !this.eBradLoadMore)) throw new r.s(r.A.ELEMENT_NOT_FOUND, `Component with (selector: ${this.targetSelector}) not found.`);
                        this.createLoadMoreHTML();
                    }
                    createLoadMoreHTML() {
                        (this.eButton = document.createElement("button")),
                            this.eButton.classList.add("brad-btn", "brad-btn-text", "brad-btn-text--no-bg", "" + ("left" === this.icon ? "brad-flex-row-reverse" : "brad-flex-row")),
                            (this.eText = document.createElement("span")),
                            this.setTextContent(),
                            this.eButton.appendChild(this.eText),
                            this.applyOnColorToButton(),
                            this.showMode(this.isShowText),
                            this.createIcon(),
                            this.eBradLoadMore.appendChild(this.eButton);
                    }
                    applyOnColorToButton() {
                        this.hasOnColorClass() && this.eButton.classList.add("brad-btn-text--on-color", "brad-loader--on-color");
                    }
                    createIcon() {
                        var t = Boolean(this.eButton.querySelector("em"));
                        !this.icon ||
                            ("left" !== this.icon.toLowerCase() && "right" !== this.icon.toLowerCase()) ||
                            !1 !== t ||
                            ((this.eIcon = document.createElement("em")),
                            this.eIcon.classList.add(
                                "i",
                                "icon-ui-chevron-down",
                                "brad-btn--icons",
                                "brad-icon-size-xxs",
                                "brad-m-xs-l",
                                "brad-m-xs-r",
                                this.isShowText ? "brad-load-more__show--js" : "brad-load-more__hide--js",
                                "brad-btn--icons--p-none"
                            ),
                            this.eButton.appendChild(this.eIcon)),
                            this.rotateIcon();
                    }
                    rotateIcon() {
                        this.icon && (this.eIcon.classList.remove("brad-load-more__show--js", "brad-load-more__hide--js"), this.eIcon.classList.add(this.isShowText ? "brad-load-more__show--js" : "brad-load-more__hide--js"));
                    }
                    showMode() {
                        this.setTextContent(), this.createIcon();
                    }
                    setTextContent() {
                        this.eText && (this.eText.textContent = this.getTextContent());
                    }
                    getTextContent() {
                        return this.isShowText ? this.showText : this.hideText;
                    }
                    toggle() {
                        (this.isShowText = !this.isShowText), this.showMode(this.isShowText), this.createIcon();
                    }
                    hasOnColorClass() {
                        return this.eBradLoadMore.classList.contains("brad-load-more--on-color");
                    }
                }
            },
            9668: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(19036);
                r.Z.add("BradModalService", s.W);
            },
            19036: (t, e, i) => {
                "use strict";
                i.d(e, { W: () => o });
                var r = i(55988),
                    s = i(9328),
                    a = i(16656);
                function n(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class o {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new o(t);
                    }
                    constructor(t) {
                        return n(this, "modalClass", "brad-modal"), n(this, "modalOpenClass", `${this.modalClass}--open`), n(this, "modalClossingClass", `${this.modalClass}--closing`), n(this, "hideModalTimeout", null), this.init(t);
                    }
                    init(t) {
                        try {
                            var e = t.targetSelector,
                                i = t.overlayOpacityClass,
                                s = void 0 === i ? "brad-bg-overlay-60" : i,
                                a = t.clickOutsideClose,
                                n = void 0 === a || a,
                                o = t.removeBodyScroll,
                                l = void 0 === o || o;
                            if (
                                ((this.targetSelector = e),
                                (this.overlayOpacityClass = s),
                                (this.clickOutsideClose = n),
                                (this.removeBodyScroll = l),
                                this.validate(),
                                (this.eModal = document.querySelector(this.targetSelector)),
                                !this.eModal)
                            )
                                throw new r.s(r.A.ELEMENT_NOT_FOUND, `Component with (selector: ${this.targetSelector}) not found.`);
                            this.createOverlay(), this.initListeners(), this.handleCustomEvents(), this.addShadowToScroll();
                        } catch (t) {}
                        return this;
                    }
                    validate() {
                        var t = [{ conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: r.A.SELECTOR_NOT_SPECIFIED, messageError: "Selector is required." }];
                        s.a.validate(t);
                    }
                    createOverlay() {
                        var t = { overlayOpacityClass: this.overlayOpacityClass, clickOutsideClose: this.clickOutsideClose, targetSelector: this.targetSelector, removeBodyScroll: this.removeBodyScroll };
                        (this.bradOverlayService = a.FX.getInstance(t)), this.bradOverlayService.createOverlay();
                    }
                    initListeners() {
                        (this.eOverlay = this.bradOverlayService.getElementEvent()),
                            this.eOverlay.addEventListener("close", () => {
                                this.modalRemove();
                            }),
                            (this.eOverlay.style.zIndex = 1070);
                    }
                    handleCustomEvents() {
                        this.createCloseEvent(), this.createOpenEvent(), this.closeModalWithEscButton();
                    }
                    closeModalWithEscButton(t) {
                        document.onkeydown = (t) => {
                            ("Escape" !== t.key && 27 !== t.keyCode) || (this.isOpen() && this.close());
                        };
                    }
                    setAcessibilityOnOpen() {
                        (this.previouslyFocusedElement = document.activeElement), (this.eModal.tabIndex = 0), this.eModal.focus();
                    }
                    setAcessibilityOnClose() {
                        this.eModal.tabIndex = -1;
                    }
                    addShadowToScroll() {
                        var t = document.querySelector(".brad-modal--dialog__paragraph"),
                            e = document.querySelector(".brad-modal--dialog__header");
                        t.addEventListener("scroll", () => {
                            var i = "brad-modal--dialog__header--scroll";
                            Number(t.scrollTop) > 0 ? e.classList.add(i) : e.classList.remove(i);
                        });
                    }
                    toggle() {
                        return this.isOpen() ? this.close() : this.open();
                    }
                    modalRemove() {
                        return (
                            this.eModal.classList.remove(this.modalOpenClass),
                            this.eModal.dispatchEvent(this.closeEvent),
                            (this.hideModalTimeout = setTimeout(() => {
                                (this.eModal.style.display = "none"), (this.hideModalTimeout = null);
                            }, 350)),
                            !0
                        );
                    }
                    close() {
                        return this.modalRemove(), this.bradOverlayService.close(), this.setAcessibilityOnClose(), !0;
                    }
                    open() {
                        (this.eModal.style.display = "block"),
                            this.setAcessibilityOnOpen(),
                            setTimeout(
                                () => (
                                    this.eModal.classList.add(this.modalOpenClass),
                                    this.bradOverlayService.open(),
                                    this.eModal.dispatchEvent(this.openEvent),
                                    this.hideModalTimeout && (clearTimeout(this.hideModalTimeout), (this.hideModalTimeout = null)),
                                    this.eModal.classList.contains(this.modalOpenClass) && this.bradOverlayService.isOpen()
                                ),
                                50
                            );
                    }
                    isOpen() {
                        return this.eModal.classList.contains(this.modalOpenClass);
                    }
                    destroy() {
                        this.bradOverlayService.destroy();
                    }
                    createCloseEvent() {
                        this.closeEvent = new Event("close");
                    }
                    createOpenEvent() {
                        this.openEvent = new Event("open");
                    }
                    getElementEvent() {
                        return this.eModal;
                    }
                }
            },
            18375: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(55988);
                function a(t, e) {
                    var i = ("undefined" != typeof Symbol && t[Symbol.iterator]) || t["@@iterator"];
                    if (!i) {
                        if (
                            Array.isArray(t) ||
                            (i = (function (t, e) {
                                if (!t) return;
                                if ("string" == typeof t) return n(t, e);
                                var i = Object.prototype.toString.call(t).slice(8, -1);
                                "Object" === i && t.constructor && (i = t.constructor.name);
                                if ("Map" === i || "Set" === i) return Array.from(t);
                                if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return n(t, e);
                            })(t)) ||
                            (e && t && "number" == typeof t.length)
                        ) {
                            i && (t = i);
                            var r = 0,
                                s = function () {};
                            return {
                                s,
                                n: function () {
                                    return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] };
                                },
                                e: function (t) {
                                    throw t;
                                },
                                f: s,
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a,
                        o = !0,
                        l = !1;
                    return {
                        s: function () {
                            i = i.call(t);
                        },
                        n: function () {
                            var t = i.next();
                            return (o = t.done), t;
                        },
                        e: function (t) {
                            (l = !0), (a = t);
                        },
                        f: function () {
                            try {
                                o || null == i.return || i.return();
                            } finally {
                                if (l) throw a;
                            }
                        },
                    };
                }
                function n(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var i = 0, r = new Array(e); i < e; i++) r[i] = t[i];
                    return r;
                }
                function o(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class l {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new l(t);
                    }
                    constructor(t) {
                        o(this, "navbarContainer", null), o(this, "indicator", null), o(this, "itens", []), o(this, "firstItem", null), o(this, "lastItem", null), o(this, "activeItem", null);
                        try {
                            if (((this.navbarContainer = document.querySelector(t.targetSelector)), !this.navbarContainer)) throw new s.s(s.A.ELEMENT_NOT_FOUND, `Component with (selector: ${t.targetSelector}) not found.`);
                            (this.itens = Array.from(this.navbarContainer.querySelectorAll("[role=tab]"))),
                                (this.indicator = this.navbarContainer.querySelector(".brad-navbar__indicator")),
                                this.setEventsOnItens(),
                                this.setFirstItem(),
                                this.setLastItem(),
                                this.setSelectedItem(this.firstItem),
                                this.onWindowResize();
                        } catch (t) {}
                    }
                    setFirstItem() {
                        this.firstItem = this.itens[0];
                    }
                    setLastItem() {
                        this.lastItem = this.itens[this.itens.length - 1];
                    }
                    setEventsOnItens() {
                        var t,
                            e = a(this.itens);
                        try {
                            for (e.s(); !(t = e.n()).done; ) {
                                var i = t.value;
                                i.setAttribute("aria-selected", "false"), (i.onclick = (t) => this.onClick(t));
                            }
                        } catch (t) {
                            e.e(t);
                        } finally {
                            e.f();
                        }
                    }
                    setSelectedItem(t) {
                        this.activeItem = t;
                        for (var e = 0; e < this.itens.length; e += 1) {
                            var i = this.itens[e];
                            this.activeItem === i ? i.setAttribute("aria-selected", "true") : i.setAttribute("aria-selected", "false");
                        }
                        this.indicatorFollowNavbar();
                    }
                    onClick(t) {
                        this.setSelectedItem(t.currentTarget);
                    }
                    indicatorFollowNavbar() {
                        this.indicator.style.display = "block";
                        var t = this.indicator.getBoundingClientRect().width,
                            e = this.activeItem.getBoundingClientRect();
                        this.navbarContainer.classList.contains("brad-navbar--bubble") || (t = e.width), (this.indicator.style.width = t + "px");
                        var i = t - e.width;
                        (this.indicator.style.left = e.left - i / 2 - this.navbarContainer.getBoundingClientRect().left + "px"), this.activeItem.disabled && (this.indicator.style.display = "none");
                    }
                    onWindowResize() {
                        window.addEventListener("resize", this.resizeHandler.bind(this));
                    }
                    resizeHandler() {
                        this.indicatorFollowNavbar();
                    }
                }
                r.Z.add("BradNavbarService", l);
            },
            16656: (t, e, i) => {
                "use strict";
                i.d(e, { FX: () => l });
                var r = i(55988),
                    s = i(9328);
                function a(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                var n = ["brad-bg-overlay-40", "brad-bg-overlay-60", "brad-bg-overlay-80"],
                    o = [!0, !1];
                class l {
                    static getInstance(t) {
                        return new l(t);
                    }
                    constructor(t) {
                        a(this, "overlayAttr", "data-overlay"), a(this, "overlayClass", "brad-overlay"), a(this, "overlayHidden", "hidden"), this.init(t);
                    }
                    init(t) {
                        try {
                            var e = t.overlayOpacityClass,
                                i = void 0 === e ? "brad-bg-overlay-80" : e,
                                r = t.clickOutsideClose,
                                s = void 0 === r || r,
                                a = t.targetSelector,
                                n = t.removeBodyScroll,
                                o = void 0 === n || n;
                            (this.overlayOpacityClass = i),
                                (this.clickOutsideClose = s),
                                (this.targetSelector = a),
                                (this.removeBodyScroll = o),
                                this.validate(),
                                this.handleCustomEvents(),
                                this.createOverlay(),
                                this.handleCloseOnClickOverlay();
                        } catch (t) {}
                        return this;
                    }
                    validate() {
                        var t = [
                            { conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: r.A.SELECTOR_NOT_SPECIFIED, messageError: "Selector is required." },
                            { conditional: () => !1 === n.includes(this.overlayOpacityClass), exceptionCode: r.A.VALUE_NOT_ALLOWED, messageError: "Overlay opacity must be brad-bg-overlay-40, brad-bg-overlay-60 or brad-bg-overlay-80." },
                            { conditional: () => !1 === o.includes(this.clickOutsideClose), exceptionCode: r.A.VALUE_NOT_ALLOWED, messageError: "Click outside must be true or false" },
                        ];
                        s.a.validate(t);
                    }
                    handleCustomEvents() {
                        this.createCloseEvent(), this.createOpenEvent();
                    }
                    createOverlay() {
                        var t = document.querySelector(`[${this.overlayAttr}='${this.targetSelector}']`);
                        if (!1 === Boolean(t)) {
                            var e = document.createElement("div");
                            e.classList.add(this.overlayClass),
                                e.classList.add(this.overlayOpacityClass),
                                e.classList.add(this.overlayHidden),
                                e.setAttribute(this.overlayAttr, this.targetSelector),
                                document.querySelector("html").append(e),
                                (this.eOverlay = e);
                        } else this.eOverlay = t;
                    }
                    open() {
                        this.handleBodyScroll("hidden"), this.eOverlay.classList.remove(this.overlayHidden), this.eOverlay.dispatchEvent(this.openEvent);
                    }
                    isOpen() {
                        return !this.eOverlay.classList.contains("hidden");
                    }
                    close() {
                        this.handleBodyScroll("auto"), this.eOverlay.classList.add(this.overlayHidden), this.eOverlay.dispatchEvent(this.closeEvent);
                    }
                    destroy() {
                        this.handleBodyScroll("auto"), this.eOverlay.remove();
                    }
                    createCloseEvent() {
                        this.closeEvent = new Event("close");
                    }
                    createOpenEvent() {
                        this.openEvent = new Event("open");
                    }
                    getElementEvent() {
                        return this.eOverlay;
                    }
                    handleCloseOnClickOverlay() {
                        this.clickOutsideClose && this.eOverlay.addEventListener("click", () => this.close());
                    }
                    handleBodyScroll(t) {
                        this.removeBodyScroll && (document.body.style.overflow = "hidden" === t ? "hidden" : "auto");
                    }
                }
            },
            13886: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(99227),
                    a = i(16656);
                r.Z.add("BradOverlayService", s.B), r.Z.add("BradOverlayServiceDefault", a.FX);
            },
            99227: (t, e, i) => {
                "use strict";
                i.d(e, { B: () => o });
                var r = i(25375),
                    s = i(6314),
                    a = i(55988);
                function n(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class o {
                    static getInstances(t = []) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new o(t);
                    }
                    constructor(t) {
                        n(this, "selector", "myCanvas"),
                            n(this, "canvasRef", null),
                            n(this, "target", null),
                            n(this, "padding", [0, 0, 0, 0]),
                            n(this, "hidden", !1),
                            n(this, "targetElement", null),
                            n(this, "rectTargetOld", { width: 0, height: 0, left: 0, top: 0 }),
                            n(this, "stopFrame", !1),
                            n(this, "canvasContext", void 0),
                            n(this, "startTime", void 0),
                            n(this, "currentTime", void 0),
                            n(this, "rectHighlight", { left: 0, top: 0, width: 0, height: 0 }),
                            n(this, "rectDestino", { left: 0, top: 0, width: 0, height: 0 }),
                            n(this, "rectStart", { left: 0, top: 0, width: 0, height: 0 }),
                            n(this, "isTargetChanged", !1),
                            n(this, "fpsControl", null),
                            n(this, "iosControl", null),
                            n(this, "colors", { "brad-bg-overlay-40": "rgba(0, 0, 0, 0.4)", "brad-bg-overlay-60": "rgba(0, 0, 0, 0.6)", "brad-bg-overlay-80": "rgba(0, 0, 0, 0.8)" });
                        try {
                            var e = t.id,
                                i = t.color,
                                r = void 0 === i ? Object.values(this.colors)[0] : i;
                            if (((this.selector = e || this.selector), (this.canvasRef = document.getElementById(this.selector)), (this.color = this.colors[r]), !this.canvasRef))
                                throw new a.s(a.A.ELEMENT_NOT_FOUND, "Component with (canvas not found).");
                        } catch (t) {}
                    }
                    open(t) {
                        (this.hidden = !1),
                            (this.target = t),
                            this.canvasRef.classList.remove("hidden"),
                            (this.fpsControl = new r.G(48)),
                            (this.iosControl = new s.h()),
                            requestAnimationFrame(this.loop.bind(this)),
                            this.lockTarget(),
                            this.setupCanvas(),
                            this.drawCanvas();
                    }
                    setupCanvas() {
                        this.updateCanvasSize(), (this.canvasContext = this.canvasRef.getContext("2d"));
                    }
                    updateCanvasSize() {
                        var t = this.canvasRef.getBoundingClientRect();
                        (this.canvasRef.width = t.width), (this.canvasRef.height = t.height);
                    }
                    updateTarget(t) {
                        null != this.target && ((this.target = t), this.lockTarget());
                    }
                    loop() {
                        this.hidden || requestAnimationFrame(this.loop.bind(this)), this.fpsControl.canExecute() && (this.updateCanvasSize(), this.drawCanvas());
                    }
                    drawCanvas() {
                        if (
                            this.canvasContext &&
                            (this.canvasContext.clearRect(0, 0, this.canvasRef.width, this.canvasRef.height),
                            (this.canvasContext.fillStyle = this.color),
                            this.canvasContext.fillRect(0, 0, this.canvasRef.width, this.canvasRef.height),
                            (this.canvasContext.globalCompositeOperation = "destination-out"),
                            this.targetElement)
                        ) {
                            var t = this.targetElement.getBoundingClientRect(),
                                e = this.viewportCalc(),
                                i = e.vpTop,
                                r = e.vpLeft,
                                s = { left: t.left + r - this.padding[3], top: t.top + i - this.padding[0], width: t.width + this.padding[1] + this.padding[3], height: t.height + this.padding[0] + this.padding[2] },
                                a = this.transformTo(s, 400);
                            (this.rectHighlight = a), this.drawRoundedRect(this.rectHighlight.left, this.rectHighlight.top, this.rectHighlight.width, this.rectHighlight.height, 8);
                        }
                    }
                    viewportCalc() {
                        var t = 0,
                            e = 0;
                        return this.iosControl.checkiOS() && window.visualViewport && ((t = window.visualViewport.offsetTop), (e = window.visualViewport.offsetLeft)), { vpTop: t, vpLeft: e };
                    }
                    transformTo(t, e) {
                        this.isTargetTransformed(t) &&
                            ((this.rectDestino.left = t.left),
                            (this.rectDestino.top = t.top),
                            (this.rectDestino.width = t.width),
                            (this.rectDestino.height = t.height),
                            (this.rectStart.left = this.rectHighlight.left),
                            (this.rectStart.top = this.rectHighlight.top),
                            (this.rectStart.width = this.rectHighlight.width),
                            (this.rectStart.height = this.rectHighlight.height),
                            this.isTargetChanged && ((this.isTargetChanged = !1), this.resetTime()));
                        var i = this.getElapsedTime();
                        i >= e && (i = e);
                        var r = this.rectDestino.left - this.rectStart.left,
                            s = this.rectDestino.top - this.rectStart.top,
                            a = this.rectDestino.width - this.rectStart.width,
                            n = this.rectDestino.height - this.rectStart.height;
                        return {
                            left: this.easeOutQuad(i, this.rectStart.left, r, e),
                            top: this.easeOutQuad(i, this.rectStart.top, s, e),
                            width: this.easeOutQuad(i, this.rectStart.width, a, e),
                            height: this.easeOutQuad(i, this.rectStart.height, n, e),
                        };
                    }
                    drawRoundedRect(t, e, i, r, s) {
                        i < 2 * s && (s = i / 2),
                            r < 2 * s && (s = r / 2),
                            this.canvasContext.beginPath(),
                            this.canvasContext.moveTo(t + s, e),
                            this.canvasContext.arcTo(t + i, e, t + i, e + r, s),
                            this.canvasContext.arcTo(t + i, e + r, t, e + r, s),
                            this.canvasContext.arcTo(t, e + r, t, e, s),
                            this.canvasContext.arcTo(t, e, t + i, e, s),
                            this.canvasContext.closePath(),
                            (this.canvasContext.fillStyle = "rgba(0, 0, 0, 1)"),
                            this.canvasContext.fill();
                    }
                    lockTarget() {
                        try {
                            if (((this.targetElement = document.getElementById(this.target)), !this.targetElement)) throw new a.s(a.A.ELEMENT_NOT_FOUND, "Component with (target not found.)");
                            this.isTargetChanged = !0;
                        } catch (t) {}
                    }
                    isTargetTransformed(t) {
                        return t.width != this.rectDestino.width || t.height != this.rectDestino.height || t.left != this.rectDestino.left || t.top != this.rectDestino.top;
                    }
                    resetTime() {
                        this.startTime = Date.now();
                    }
                    getElapsedTime() {
                        return (this.currentTime = Date.now()), this.currentTime - this.startTime;
                    }
                    easeOutQuad(t, e, i, r) {
                        return -i * (t /= r) * (t - 2) + e;
                    }
                    close() {
                        this.canvasRef.classList.add("hidden"), (this.targetElement = null), (this.hidden = !0), (this.target = null);
                    }
                }
            },
            961: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            44045: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854);
                class s {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new s(t);
                    }
                    constructor(t) {
                        var e = t.targetSelector,
                            i = t.currentPage,
                            r = t.totalPages,
                            s = t.countNumbersStart,
                            a = t.isIndeterminate,
                            n = void 0 !== a && a;
                        (this.targetSelector = e),
                            (this.currentPage = i),
                            (this.totalPages = r),
                            (this.countNumbersStart = s),
                            (this.isIndeterminate = n),
                            (this.ePaginationContainer = document.querySelector(this.targetSelector)),
                            (this.ePages = this.ePaginationContainer.querySelector(".brad-pagination__pages")),
                            this.createEventPageChanges(),
                            (this.previousAccessedPage = this.currentPage),
                            this.update(i);
                    }
                    createEventPageChanges() {
                        (this.eventPageChanges = new CustomEvent("pageChanges", { detail: { previousAccessedPage: this.previousAccessedPage, currentPage: this.currentPage, elementClicked: this.clickedBtn } })),
                            this.ePaginationContainer.dispatchEvent(this.eventPageChanges);
                    }
                    update(t, e) {
                        var i = document.querySelector(".brad-pagination--compact"),
                            r = window.matchMedia("(max-width: 992px)").matches;
                        if ((r && (this.countNumbersStart = 7 == this.countNumbersStart ? this.countNumbersStart : 7), i)) {
                            this.ePages.querySelectorAll("*").length > 0 && this.ePages.querySelectorAll("*").forEach((t) => t.remove()), this.createFirstArrow(), this.createPrevArrow();
                            this.paginateCompact(t, e);
                            this.createNextArrow(), this.createLastArrow();
                        } else {
                            this.ePages.querySelectorAll("*").length > 0 && this.ePages.querySelectorAll("*").forEach((t) => t.remove()), r || this.createPrevArrow();
                            var s = this.paginate(t, this.totalPages ? this.totalPages : e);
                            s.items.forEach((t, e) => {
                                if (Number(t)) return this.createPageButton(t, s.current === t), void (e >= s.items.length - 1 && (r || this.createNextArrow()));
                                this.createEllipsis(), this.isIndeterminate && e >= s.items.length - 1 && (r || this.createNextArrow());
                            });
                        }
                        this.createEventPageChanges();
                    }
                    createFirstArrow() {
                        var t = document.createElement("li");
                        this.ePages.appendChild(t);
                        var e = document.createElement("a");
                        e.classList.add("brad-pagination__page", "brad-pagination__page--arrow-first"),
                            e.setAttribute("aria-label", "Ir para a primeira pÃ¡gina"),
                            e.setAttribute("data-page", "first-page"),
                            1 == this.currentPage && e.classList.add("disabled"),
                            (e.onclick = () => {
                                (this.previousAccessedPage = this.currentPage), (this.currentPage = 1), (this.clickedBtn = e), this.update(this.currentPage);
                            }),
                            t.appendChild(e);
                    }
                    createPrevArrow() {
                        var t = document.createElement("li");
                        this.ePages.appendChild(t);
                        var e = document.createElement("a");
                        e.classList.add("brad-pagination__page", "brad-pagination__page--arrow-prev"),
                            e.setAttribute("aria-label", "Ir para a pÃ¡gina anterior"),
                            e.setAttribute("data-page", "previous-page"),
                            1 == this.currentPage && e.classList.add("disabled"),
                            (e.onclick = () => {
                                (this.previousAccessedPage = this.currentPage), 1 !== this.currentPage && ((this.currentPage = this.currentPage - 1), (this.clickedBtn = e), this.update(this.currentPage));
                            }),
                            t.appendChild(e);
                    }
                    createNextArrow() {
                        var t = document.createElement("li");
                        this.ePages.appendChild(t);
                        var e = document.createElement("a");
                        e.classList.add("brad-pagination__page", "brad-pagination__page--arrow-next"),
                            e.setAttribute("aria-label", "Ir para a prÃ³xima pÃ¡gina"),
                            e.setAttribute("data-page", "next-page"),
                            this.currentPage == this.totalPages && e.classList.add("disabled"),
                            (e.onclick = () => {
                                (this.previousAccessedPage = this.currentPage), this.currentPage !== this.totalPages && ((this.currentPage = this.currentPage + 1), (this.clickedBtn = e), this.update(this.currentPage));
                            }),
                            t.appendChild(e);
                    }
                    createLastArrow() {
                        var t = document.createElement("li");
                        this.ePages.appendChild(t);
                        var e = document.createElement("a");
                        e.classList.add("brad-pagination__page", "brad-pagination__page--arrow-last"),
                            e.setAttribute("aria-label", "Ir para a Ãºltima pÃ¡gina"),
                            e.setAttribute("data-page", "last-page"),
                            this.currentPage == this.totalPages && e.classList.add("disabled"),
                            (e.onclick = () => {
                                (this.previousAccessedPage = this.currentPage), (this.currentPage = this.totalPages), (this.clickedBtn = e), this.update(this.currentPage);
                            }),
                            t.appendChild(e);
                    }
                    paginateCompact(t, e) {
                        var i = 1 === t ? null : t - 1,
                            r = t === e ? null : t + 1,
                            s = [];
                        return s.push(t), { current: t, prev: i, next: r, items: s };
                    }
                    paginate(t, e) {
                        if (!1 === Boolean(t)) return null;
                        var i = 1 === t ? null : t - 1,
                            r = t === e ? null : t + 1,
                            s = [1];
                        if (1 === t && 1 === e) return { current: t, prev: i, next: r, items: s };
                        var a = this.countNumbersStart - 3,
                            n = a > 4 ? 2 : 1,
                            o = t - n,
                            l = t + n,
                            h = this.totalPages;
                        ((t > a - n && !1 === this.isIndeterminate) || (this.isIndeterminate && t > a && 4 == a) || (this.isIndeterminate && t > a - 1 && 6 == a)) && s.push("â€¦"),
                            !1 === this.isIndeterminate
                                ? (t >= h - 4 && 2 === n && l++, t >= h - 3 && 2 === n && (o--, l++), t >= h - 2 && o--, t >= h - 1 && o--, t > h - 1 && o--)
                                : (o--, 5 == t && 2 == n && l++, t >= h - 2 && 2 == n && o--, t >= h - 1 && o--, t > h - 1 && o--),
                            !0 === this.isIndeterminate && t <= 4 && a++,
                            this.countNumbersStart === h && a++;
                        for (var c = o > 2 ? o : 2; c <= Math.max(a + 1, l) && c < h; c++) s.push(c);
                        return (
                            l + n < e && !1 === this.isIndeterminate && e > this.countNumbersStart && s.push("â€¦"),
                            this.isIndeterminate && e >= this.countNumbersStart && e != this.countNumbersStart && t < e - 2 && s.push("â€¦"),
                            (!1 === this.isIndeterminate || t >= e - 2 || e === this.countNumbersStart) && s.push(h),
                            { current: t, prev: i, next: r, items: s }
                        );
                    }
                    createPageButton(t, e) {
                        var i = document.createElement("li");
                        this.ePages.appendChild(i);
                        var r = document.createElement("a"),
                            s = document.createTextNode(t);
                        r.classList.add("brad-pagination__page", "brad-font-button"),
                            r.setAttribute("data-page", t),
                            e
                                ? (r.classList.add("brad-pagination__page--active", !0), r.setAttribute("aria-label", `PÃ¡gina atual, ${t} de ${this.totalPages}`))
                                : r.setAttribute("aria-label", `Ir para a pÃ¡gina ${t} de ${this.totalPages}`),
                            r.appendChild(s),
                            i.appendChild(r),
                            this.createButtonEvent(r);
                    }
                    createButtonEvent(t) {
                        t.onclick = () => {
                            this.previousAccessedPage = this.currentPage;
                            var e = Number(t.getAttribute("data-page"));
                            (this.currentPage = e), (this.clickedBtn = t), this.update(e);
                        };
                    }
                    createEllipsis() {
                        var t = document.createElement("li");
                        t.classList.add("brad-pagination__page", "brad-pagination__page--ellipsis"), this.ePages.appendChild(t);
                    }
                }
                r.Z.add("BradPaginationService", s);
            },
            9634: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(97219);
                r.Z.add("BradPopoverService", s._);
            },
            97219: (t, e, i) => {
                "use strict";
                i.d(e, { _: () => h });
                var r = i(55988),
                    s = i(9328),
                    a = i(99227),
                    n = i(68817),
                    o = i(6314);
                function l(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class h {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new h(t);
                    }
                    constructor(t) {
                        return l(this, "show", !1), l(this, "stepper", void 0), l(this, "idOverlay", "myCanvas"), l(this, "iosUtils", null), l(this, "vvpOffsetLeft", 0), l(this, "vvpOffsetTop", 0), this.init(t);
                    }
                    init(t) {
                        try {
                            this.throwExceptionWhenOptionsNull(t);
                            var e = t.id,
                                i = t.idTarget,
                                s = t.direction,
                                a = void 0 === s ? "bottom" : s,
                                n = t.idOverlay,
                                l = void 0 === n ? "myCanvas" : n,
                                h = t.selector;
                            if (
                                ((this.id = e),
                                (this.idTarget = i),
                                (this.direction = a),
                                (this.idOverlay = l),
                                (this.selector = h),
                                this.validate(),
                                (this.ePopover = h ? document.querySelector(h) : this.getElementById(e)),
                                (this.eTarget = this.getElementById(i)),
                                this.configureList(t),
                                (this.iosUtils = new o.h()),
                                !this.ePopover || !this.eTarget)
                            )
                                throw new r.s(r.A.ELEMENT_NOT_FOUND, `Component or target with (id: ${this.id}, idTarget: ${this.idTarget}) not found.`);
                            this.initListeners();
                        } catch (t) {}
                    }
                    throwExceptionWhenOptionsNull(t) {
                        if (!0 !== Boolean(t)) throw new r.s(r.A.VALUE_IS_REQUIRED, "Options is required and must have at least property id.");
                    }
                    getElementById(t) {
                        return document.getElementById(t);
                    }
                    validate() {
                        var t = [
                            { conditional: () => !0 !== Boolean(this.id) && !0 !== Boolean(this.selector), exceptionCode: r.A.ID_NOT_SPECIFIED, messageError: "Popover ID or selector is required." },
                            { conditional: () => !0 !== Boolean(this.idTarget), exceptionCode: r.A.ID_NOT_SPECIFIED, messageError: "Target ID is required." },
                            { conditional: () => "bottom" !== this.direction && "top" !== this.direction, exceptionCode: r.A.VALUE_NOT_ALLOWED, messageError: "Direction must be bottom or top." },
                        ];
                        s.a.validate(t);
                    }
                    initListeners() {
                        window.addEventListener("scroll", this.handleListener(), !0), window.addEventListener("resize", this.handleListener(), !0), window.addEventListener("click", this.clickOutside(), !0);
                    }
                    handleListener() {
                        return () => {
                            this.show && this.handlePositions();
                        };
                    }
                    clickOutside() {
                        return (t) => {
                            this.show && this.isClickedOutside(t) && this.close();
                        };
                    }
                    isClickedOutside(t) {
                        return !1 === Boolean(this.ePopover.contains(t.target)) && !1 === Boolean(this.eTarget.contains(t.target));
                    }
                    toggle() {
                        if (!1 !== Boolean(this.show) && !1 !== Boolean(this.ePopover.classList.contains("brad-popover--open"))) return this.close(), this;
                        this.open();
                    }
                    open() {
                        return (
                            (this.show = !0),
                            (this.eTriangle = document.querySelector(`${this.selector ? this.selector : `#${this.id}`} .brad-popover__triangle`)),
                            this.handlePositions(),
                            this.ePopover.classList.add("brad-popover--open"),
                            this.ePopover.setAttribute("aria-hidden", !1),
                            this.stepper ? this.dispatchNextStepEvent(this.stepper) : this.dispatchOpenEvent(),
                            this
                        );
                    }
                    dispatchOpenEvent() {
                        (this.openEvent = new CustomEvent("open", { detail: this.ePopover })), this.ePopover.dispatchEvent(this.openEvent);
                    }
                    close() {
                        return (this.show = !1), this.ePopover.classList.remove("brad-popover--open"), this.ePopover.setAttribute("aria-hidden", !0), this.finishStepper(), this.stepper || this.dispatchCloseEvent(), this;
                    }
                    dispatchCloseEvent() {
                        (this.closeEvent = new CustomEvent("close", { detail: this.ePopover })), this.ePopover.dispatchEvent(this.closeEvent);
                    }
                    initTooltip() {
                        var t = document.getElementById(this.idTarget);
                        return (
                            t.addEventListener("mouseover", this.open.bind(this)),
                            t.addEventListener("mouseout", this.close.bind(this)),
                            t.addEventListener("focus", this.open.bind(this)),
                            t.addEventListener("blur", this.close.bind(this)),
                            this
                        );
                    }
                    initPopover() {
                        return (
                            document.getElementById(this.idTarget).addEventListener("click", this.open.bind(this)),
                            document.body.addEventListener("click", (t) => {
                                t.target.className.includes("brad-popover") || this.close.bind(this);
                            }),
                            this
                        );
                    }
                    handlePositions() {
                        this.visualViewPortUpdate(), this.handleLeftPosition(), this.handleRightPosition(), this.handleTriangleLeft(), this.handleTriangleTop();
                    }
                    visualViewPortUpdate() {
                        var t, e;
                        ((this.vvpOffsetLeft = 0), (this.vvpOffsetTop = 0), this.iosUtils.checkiOS()) &&
                            ((this.vvpOffsetLeft = (null === (t = window.visualViewport) || void 0 === t ? void 0 : t.offsetLeft) || 0),
                            (this.vvpOffsetTop = (null === (e = window.visualViewport) || void 0 === e ? void 0 : e.offsetTop) || 0));
                    }
                    handleLeftPosition() {
                        var t = document.body.offsetWidth / window.innerWidth,
                            e = this.eTarget.getBoundingClientRect(),
                            i = this.ePopover.getBoundingClientRect(),
                            r = e.left + e.width / 2 - i.width / 2 + this.vvpOffsetLeft;
                        return r + i.width > window.innerWidth * t
                            ? ((this.ePopover.style.left = ""), void (this.ePopover.style.right = "24px"))
                            : r < 0
                            ? ((this.ePopover.style.right = ""), void (this.ePopover.style.left = "0px"))
                            : ((this.ePopover.style.right = ""), void (this.ePopover.style.left = r + "px"));
                    }
                    handleRightPosition() {
                        var t,
                            e,
                            i,
                            r,
                            s,
                            a,
                            n,
                            o,
                            l,
                            h,
                            c,
                            d,
                            u,
                            p,
                            m =
                                ((null === (t = this.eTarget) || void 0 === t || null === (e = t.getBoundingClientRect()) || void 0 === e ? void 0 : e.y) || 0) +
                                8 +
                                ((null === (i = this.eTarget) || void 0 === i || null === (r = i.getBoundingClientRect()) || void 0 === r ? void 0 : r.height) || 0) +
                                (null === (s = this.eTriangle) || void 0 === s || null === (a = s.getBoundingClientRect()) || void 0 === a ? void 0 : a.height) +
                                this.vvpOffsetTop;
                        (null === (n = this.eTriangle) || void 0 === n || n.classList.remove("triangle-top"), "top" == this.direction) &&
                            ((m =
                                ((null === (o = this.eTarget) || void 0 === o || null === (l = o.getBoundingClientRect()) || void 0 === l ? void 0 : l.top) || 0) -
                                8 -
                                ((null === (h = this.ePopover) || void 0 === h || null === (c = h.getBoundingClientRect()) || void 0 === c ? void 0 : c.height) || 0) -
                                (null === (d = this.eTriangle) || void 0 === d || null === (u = d.getBoundingClientRect()) || void 0 === u ? void 0 : u.height) +
                                this.vvpOffsetTop),
                            null === (p = this.eTriangle) || void 0 === p || p.classList.add("triangle-top"));
                        this.ePopover.style.top = m + "px";
                    }
                    handleTriangleLeft() {
                        var t, e, i, r, s, a, n, o, l, h, c, d, u, p, m, f, g, v;
                        (null === (t = this.eTarget) || void 0 === t || null === (e = t.getBoundingClientRect()) || void 0 === e ? void 0 : e.width) <
                            (null === (i = this.eTriangle) || void 0 === i || null === (r = i.getBoundingClientRect()) || void 0 === r ? void 0 : r.width) &&
                            ((this.eTriangle.style.width = (null === (c = this.eTarget) || void 0 === c || null === (d = c.getBoundingClientRect()) || void 0 === d ? void 0 : d.width) + "px"),
                            (this.eTriangle.style.height = (null === (u = this.eTarget) || void 0 === u || null === (p = u.getBoundingClientRect()) || void 0 === p ? void 0 : p.width) / 2 + "px"),
                            (this.eTriangle.style.borderLeft = (null === (m = this.eTarget) || void 0 === m || null === (f = m.getBoundingClientRect()) || void 0 === f ? void 0 : f.width) / 2 + "px solid rgba(255,255,255,0)"),
                            (this.eTriangle.style.borderRight = (null === (g = this.eTarget) || void 0 === g || null === (v = g.getBoundingClientRect()) || void 0 === v ? void 0 : v.width) / 2 + "px solid rgba(255,255,255,0)"));
                        var b =
                            (null === (s = this.eTarget) || void 0 === s || null === (a = s.getBoundingClientRect()) || void 0 === a ? void 0 : a.width) / 2 -
                            (null === (n = this.eTriangle) || void 0 === n || null === (o = n.getBoundingClientRect()) || void 0 === o ? void 0 : o.width) / 2 +
                            (null === (l = this.eTarget) || void 0 === l || null === (h = l.getBoundingClientRect()) || void 0 === h ? void 0 : h.left);
                        this.eTriangle.style.left = b + this.vvpOffsetLeft + "px";
                    }
                    handleTriangleTop() {
                        var t,
                            e,
                            i,
                            r,
                            s,
                            a,
                            n =
                                ((null === (t = this.eTarget) || void 0 === t || null === (e = t.getBoundingClientRect()) || void 0 === e ? void 0 : e.y) || 0) +
                                ((null === (i = this.eTarget) || void 0 === i || null === (r = i.getBoundingClientRect()) || void 0 === r ? void 0 : r.height) || 0) +
                                8;
                        "top" == this.direction && (n = ((null === (s = this.eTarget) || void 0 === s || null === (a = s.getBoundingClientRect()) || void 0 === a ? void 0 : a.top) || 0) - 16),
                            (this.eTriangle.style.top = n + this.vvpOffsetTop + "px");
                    }
                    configureList(t) {
                        t.list && (this.stepper = n.h.getInstance({ id: t.id, idTarget: t.idTarget, list: t.list, currentItem: t.list[0], direction: t.direction }));
                    }
                    nextStepper() {
                        if (this.stepper.currentItem == this.stepper.list[this.stepper.list.length - 1]) return this.stepper.finishPopoverStepperSection(), this.close(), void this.dispatchFinishStepEvent(this.stepper);
                        this.stepper.next(), this.dispatchNextStepEvent(this.stepper);
                    }
                    dispatchNextStepEvent(t) {
                        (this.nextStepEvent = new CustomEvent("nextStep", { detail: t })), this.ePopover.dispatchEvent(this.nextStepEvent);
                    }
                    prevStepper() {
                        this.stepper.prev(), this.dispatchPrevStepEvent(this.stepper);
                    }
                    dispatchPrevStepEvent(t) {
                        (this.prevStepEvent = new CustomEvent("prevStep", { detail: t })), this.ePopover.dispatchEvent(this.prevStepEvent);
                    }
                    finishStepper() {
                        this.stepper && (this.stepper.finishPopoverStepperSection(), document.querySelector("#" + this.idOverlay) && (a.B.getInstance({ id: this.idOverlay }).close(), this.dispatchFinishStepEvent(this.stepper)));
                    }
                    dispatchFinishStepEvent(t) {
                        (this.finishStepEvent = new CustomEvent("finishStep", { detail: t })), this.ePopover.dispatchEvent(this.finishStepEvent);
                    }
                    resetStepper(t) {
                        this.stepper.resetTarget(t);
                    }
                    destroy() {
                        (this.show = !1),
                            (this.direction = "bottom"),
                            window.removeEventListener("scroll", this.handleListener(), !0),
                            window.removeEventListener("resize", this.handleListener(), !0),
                            window.addEventListener("click", this.clickOutside(), !0);
                    }
                }
            },
            63039: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(74554);
                r.Z.add("BradPopoverDefaultService", s.p);
            },
            74554: (t, e, i) => {
                "use strict";
                i.d(e, { p: () => n });
                var r = i(55988),
                    s = i(9328);
                function a(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class n {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new n(t);
                    }
                    constructor(t) {
                        return a(this, "show", !1), a(this, "triangle", null), a(this, "popoverSection", null), this.init(t);
                    }
                    init(t) {
                        try {
                            s.a.throwExceptionWhenOptionsNull(t);
                            var e = t.id,
                                i = t.idTarget,
                                a = t.selector;
                            if (
                                ((this.id = e),
                                (this.idTarget = i),
                                (this.selector = a),
                                (this.ePopoverDefault = a ? document.querySelector(a) : this.getElementById(e)),
                                (this.eTarget = this.getElementById(i)),
                                (this.triangle = this.ePopoverDefault.querySelector(".brad-popover-default__triangle")),
                                (this.popoverSection = this.ePopoverDefault.parentNode),
                                this.initListeners(),
                                this.positioningBox(),
                                this.positioningTriangle(),
                                !this.ePopoverDefault || !this.eTarget)
                            )
                                throw new r.s(r.A.ELEMENT_NOT_FOUND, `Component or target with (id: ${this.id}, idTarget: ${this.idTarget}) not found.`);
                            this.initListeners();
                        } catch (t) {}
                    }
                    getElementById(t) {
                        return document.getElementById(t);
                    }
                    initListeners() {
                        window.addEventListener("click", this.clickOutside(), !0), window.addEventListener("resize", this.handleListener.bind(this));
                    }
                    handleListener() {
                        this.positioningBox(), this.positioningTriangle();
                    }
                    positioningTriangle() {
                        var t = this.eTarget.getBoundingClientRect(),
                            e = this.ePopoverDefault.getBoundingClientRect(),
                            i = this.triangle.getBoundingClientRect();
                        this.triangle.style.left = t.left + t.width / 2 - e.left - i.width / 2 + "px";
                    }
                    positioningBox() {
                        var t = document.body.offsetWidth / window.innerWidth,
                            e = this.eTarget.getBoundingClientRect(),
                            i = this.ePopoverDefault.getBoundingClientRect(),
                            r = this.popoverSection.getBoundingClientRect();
                        if (
                            (this.ePopoverDefault.classList.contains("brad-popover-default--open__top") || (this.ePopoverDefault.style.top = e.top + e.height - r.top + 10 + "px"),
                            (this.ePopoverDefault.style.left = e.left + e.width / 2 - i.width / 2 - r.left + "px"),
                            (i = this.ePopoverDefault.getBoundingClientRect()).left + i.width > window.innerWidth * t)
                        )
                            return (this.ePopoverDefault.style.right = "0px"), void (this.ePopoverDefault.style.left = "");
                        i.left < 0 && (this.ePopoverDefault.style.left = "0px");
                    }
                    clickOutside() {
                        return (t) => {
                            this.show && this.isClickedOutside(t) && this.close();
                        };
                    }
                    isClickedOutside(t) {
                        return !1 === Boolean(this.ePopoverDefault.contains(t.target)) && !1 === Boolean(this.eTarget.contains(t.target));
                    }
                    toggle() {
                        if (!1 !== Boolean(this.show) && !1 !== Boolean(this.ePopoverDefault.classList.contains("brad-popover-default--open"))) return this.close(), this;
                        this.open();
                    }
                    open() {
                        return (this.show = !0), this.ePopoverDefault.classList.add("brad-popover-default--open"), this.ePopoverDefault.setAttribute("aria-hidden", !1), this.dispatchOpenEvent(), this;
                    }
                    dispatchOpenEvent() {
                        (this.openEvent = new CustomEvent("open", { detail: this.ePopoverDefault })), this.ePopoverDefault.dispatchEvent(this.openEvent);
                    }
                    close() {
                        return (this.show = !1), this.ePopoverDefault.classList.remove("brad-popover-default--open"), this.ePopoverDefault.setAttribute("aria-hidden", !0), this.dispatchCloseEvent(), this;
                    }
                    dispatchCloseEvent() {
                        (this.closeEvent = new CustomEvent("close", { detail: this.ePopoverDefault })), this.ePopoverDefault.dispatchEvent(this.closeEvent);
                    }
                    initPopoverDefault() {
                        return (
                            document.getElementById(this.idTarget).addEventListener("click", this.open.bind(this)),
                            document.body.addEventListener("click", (t) => {
                                t.target.className.includes("brad-popover-default") || this.close.bind(this);
                            }),
                            this
                        );
                    }
                    destroy() {
                        (this.show = !1), window.addEventListener("click", this.clickOutside(), !0), window.addEventListener("resize", this.handleListener(), !0);
                    }
                }
            },
            64745: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(68817);
                r.Z.add("BradPopoverStepperService", s.h);
            },
            68817: (t, e, i) => {
                "use strict";
                i.d(e, { h: () => n });
                var r = i(97219),
                    s = i(55988);
                function a(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class n {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new n(t);
                    }
                    constructor(t) {
                        return (
                            a(this, "popover", null),
                            a(this, "target", null),
                            a(this, "list", []),
                            a(this, "currentItem", null),
                            a(this, "direction", "bottom"),
                            a(this, "status", ""),
                            a(this, "currentIndex", 0),
                            a(this, "handlers", []),
                            a(this, "toFinish", !1),
                            a(this, "nextStepText", null),
                            this.init(t)
                        );
                    }
                    init(t) {
                        try {
                            if (
                                ((this.popover = document.getElementById(t.id)),
                                (this.target = document.getElementById(t.idTarget)),
                                (this.list = t.list),
                                (this.currentItem = t.currentItem || this.list[0]),
                                (this.direction = t.direction),
                                (this.currentIndex = this.list.indexOf(this.currentItem)),
                                this.popover.setAttribute("aria-hidden", "true"),
                                (this.nextStepText = this.popover.querySelector(".bps-next a").innerHTML),
                                !this.popover || !this.target)
                            )
                                throw new s.s(s.A.ELEMENT_NOT_FOUND, "Component with (id not found.)");
                        } catch (t) {}
                    }
                    resetTarget(t) {
                        this.target.setAttribute("tabindex", "1"),
                            this.target.blur(),
                            this.popover.setAttribute("aria-hidden", "false"),
                            (this.target = document.getElementById(t)),
                            (this.currentItem = this.list[0]),
                            (this.currentIndex = 0),
                            this.setStatus(),
                            this.navLogic(),
                            this.focusCloseAcessibility();
                    }
                    next() {
                        this.blurCloseAccessibility(), (this.currentIndex = this.currentIndex + 1), this.setStatus(), this.navLogic(), this.popover.querySelector(".brad-popover__content").setAttribute("aria-live", "polite");
                    }
                    prev() {
                        this.blurCloseAccessibility(), (this.currentIndex = this.currentIndex - 1), this.setStatus(), this.navLogic(), (this.popover.querySelector(".bps-next a").innerHTML = this.nextStepText);
                    }
                    controlContentText() {
                        this.popover.querySelector(".brad-popover__content p").innerHTML = this.currentItem.text;
                    }
                    controlPopoverPosition() {
                        r._.getInstance({ id: this.popover.id, idTarget: this.target.id, direction: this.currentItem.direction ? this.currentItem.direction : this.direction }).toggle(), this.focusCloseAcessibility();
                    }
                    focusCloseAcessibility() {
                        setTimeout(() => {
                            this.popover.querySelector(".brad-popover__content").setAttribute("tabindex", "-1"),
                                this.popover.querySelector(".bps-next").setAttribute("tabindex", "0"),
                                this.popover.querySelector(".bps-close").setAttribute("tabindex", "0"),
                                this.popover.querySelector(".brad-popover__content").focus();
                        }, 500);
                    }
                    blurCloseAccessibility() {
                        this.popover.querySelector(".brad-popover__content").setAttribute("tabindex", "1"), this.popover.querySelector(".brad-popover__content").blur();
                    }
                    finishPopoverStepperSection() {
                        this.popover.querySelector(".bps-next").classList.remove("bps-none"),
                            this.popover.querySelector(".bps-prev").classList.remove("bps-hidden"),
                            this.popover.querySelector(".bps-next").classList.remove("bps-hidden"),
                            (this.popover.querySelector(".bps-next .bps-icon").style.display = "block"),
                            (this.currentItem = this.list[0]),
                            (this.currentIndex = 0),
                            this.controlContentText(),
                            this.blurCloseAccessibility(),
                            this.popover.setAttribute("aria-hidden", "true"),
                            this.target.setAttribute("tabindex", "-1"),
                            this.target.focus(),
                            (this.popover.querySelector(".bps-next a").innerHTML = this.nextStepText);
                    }
                    setStatus() {
                        return (
                            (this.status = "between"),
                            1 === this.list.length
                                ? ((this.currentIndex = 0), (this.status = "one"), !0)
                                : this.currentIndex >= this.list.length - 1
                                ? ((this.currentIndex = this.list.length - 1), (this.status = "last"), !0)
                                : this.currentIndex <= 0
                                ? ((this.currentIndex = 0), (this.status = "first"), !0)
                                : void 0
                        );
                    }
                    navLogic() {
                        this.currentItem = this.list[this.currentIndex];
                        var t = {
                            between: () => {
                                this.handlerBetween();
                            },
                            first: () => {
                                this.handlerFirst();
                            },
                            last: () => {
                                this.handlerLast();
                            },
                            one: () => {
                                this.handlerOne();
                            },
                        };
                        setTimeout(() => {
                            t[this.status]();
                        }, 100);
                    }
                    handlerBetween() {
                        (this.toFinish = !1),
                            this.popover.querySelector(".bps-prev").classList.remove("bps-hidden"),
                            this.popover.querySelector(".bps-prev").setAttribute("tabindex", 0),
                            this.popover.querySelector(".bps-prev").setAttribute("aria-hidden", "false"),
                            this.popover.querySelector(".bps-next").classList.remove("bps-hidden"),
                            (this.popover.querySelector(".bps-next .bps-icon").style.display = "block"),
                            (this.target = document.getElementById(this.currentItem.target)),
                            this.controlContentText(),
                            this.controlPopoverPosition();
                    }
                    handlerFirst() {
                        (this.toFinish = !1),
                            this.popover.querySelector(".bps-prev").classList.add("bps-hidden"),
                            this.popover.querySelector(".bps-prev").setAttribute("tabindex", -1),
                            this.popover.querySelector(".bps-prev").setAttribute("aria-hidden", "true"),
                            this.popover.querySelector(".bps-next").classList.remove("bps-hidden"),
                            (this.popover.querySelector(".bps-next .bps-icon").style.display = "block"),
                            (this.target = document.getElementById(this.currentItem.target)),
                            this.controlContentText(),
                            this.controlPopoverPosition();
                    }
                    handlerLast() {
                        (this.toFinish = !1),
                            this.popover.querySelector(".bps-prev").classList.remove("bps-hidden"),
                            this.popover.querySelector(".bps-prev").setAttribute("tabindex", 0),
                            this.popover.querySelector(".bps-prev").setAttribute("aria-hidden", "false"),
                            this.popover.querySelector(".bps-next").classList.remove("bps-hidden"),
                            (this.popover.querySelector(".bps-next .bps-icon").style.display = "none"),
                            (this.popover.querySelector(".bps-next a").innerHTML = "Concluir"),
                            (this.target = document.getElementById(this.currentItem.target)),
                            this.controlContentText(),
                            this.controlPopoverPosition();
                    }
                    handlerOne() {
                        (this.toFinish = !0),
                            this.popover.querySelector(".bps-prev").classList.add("bps-hidden"),
                            this.popover.querySelector(".bps-prev").setAttribute("aria-hidden", "true"),
                            this.popover.querySelector(".bps-prev").setAttribute("tabindex", -1),
                            this.popover.querySelector(".bps-next").classList.remove("bps-hidden"),
                            (this.popover.querySelector(".bps-next .bps-icon").style.display = "none"),
                            (this.popover.querySelector(".bps-next a").innerHTML = "Concluir"),
                            (this.target = document.getElementById(this.currentItem.target)),
                            this.controlContentText(),
                            this.controlPopoverPosition();
                    }
                }
            },
            34531: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(4359);
                r.Z.add("BradProgressBarService", s.H);
            },
            4359: (t, e, i) => {
                "use strict";
                i.d(e, { H: () => n });
                var r = i(55988),
                    s = i(9328);
                function a(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class n {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new n(t);
                    }
                    constructor(t) {
                        return a(this, "targetSelector", ""), a(this, "eProgressBar", ""), a(this, "eProgressBarGrowth", ""), a(this, "currentProgress", 0), a(this, "withTransition", !0), a(this, "eTextPercentage", ""), this.init(t);
                    }
                    init(t) {
                        try {
                            var e = t.targetSelector,
                                i = t.currentProgress,
                                s = void 0 === i ? 0 : i,
                                a = t.withTransition,
                                n = void 0 === a || a;
                            if (((this.targetSelector = e), (this.withTransition = n), this.validate(), this.setElements(), this.hasElements())) return this.applyTransition(), this.setCurrentProgress(s), this;
                            throw new r.s(r.A.ELEMENT_NOT_FOUND, `Component with (selector: ${this.targetSelector}) not found.`);
                        } catch (t) {}
                        return this;
                    }
                    validate() {
                        var t = [{ conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: r.A.SELECTOR_NOT_SPECIFIED, messageError: "Selector is required." }];
                        s.a.validate(t);
                    }
                    setElements() {
                        var t, e, i, r;
                        ((this.eProgressBar = document.querySelector(this.targetSelector)), null !== (t = this.eProgressBar) && void 0 !== t && t.classList.contains("brad-progress-bar"))
                            ? (this.eProgressBarGrowth = null === (r = this.eProgressBar) || void 0 === r ? void 0 : r.querySelector(".brad-progress-bar__growth"))
                            : ((this.eProgressBarGrowth = null === (e = this.eProgressBar) || void 0 === e ? void 0 : e.querySelector("circle")),
                              (this.eTextPercentage = null === (i = this.eProgressBar) || void 0 === i ? void 0 : i.querySelector(".brad-progress-circle__percentage--js")),
                              this.setTextPercentage());
                    }
                    setTextPercentage() {
                        this.eTextPercentage && (this.eTextPercentage.innerHTML = `${this.getCurrentProgress()}%`);
                    }
                    hasElements() {
                        return this.eProgressBar && this.eProgressBarGrowth;
                    }
                    applyTransition() {
                        if (this.withTransition) {
                            var t;
                            if (null !== (t = this.eProgressBar) && void 0 !== t && t.classList.contains("brad-progress-bar")) return void this.eProgressBarGrowth.classList.add("brad-progress-bar__growth--with-transition");
                            this.eProgressBarGrowth.classList.add("brad-progress-circle__growth--with-transtion");
                        }
                    }
                    setCurrentProgress(t) {
                        var e;
                        (this.currentProgress = t),
                            null !== (e = this.eProgressBar) && void 0 !== e && e.classList.contains("brad-progress-bar")
                                ? (this.eProgressBarGrowth.style.width = `${t}%`)
                                : ((this.eProgressBarGrowth.style.strokeDasharray = `${t} 100`), this.setTextPercentage());
                    }
                    getCurrentProgress() {
                        return this.currentProgress;
                    }
                }
            },
            40273: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(16836);
                r.Z.add("BradProgressStepperService", s.L);
            },
            16836: (t, e, i) => {
                "use strict";
                i.d(e, { L: () => n });
                var r = i(55988),
                    s = i(9328);
                function a(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class n {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new n(t);
                    }
                    constructor(t) {
                        return a(this, "targetSelector", ""), a(this, "currentStep", 0), a(this, "amountOfSteps", 0), this.init(t);
                    }
                    init(t) {
                        try {
                            var e = t.targetSelector,
                                i = t.currentStep,
                                s = void 0 === i ? 0 : i,
                                a = t.amountOfSteps,
                                n = void 0 === a ? 1 : a;
                            if (((this.targetSelector = e), (this.currentStep = s), (this.amountOfSteps = n), this.validate(), this.setElements(), this.hasElements())) return void this.handleProgress();
                            throw new r.s(r.A.ELEMENT_NOT_FOUND, `Component with (selector: ${this.targetSelector}) not found.`);
                        } catch (t) {}
                        return this;
                    }
                    validate() {
                        var t = [
                            { conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: r.A.SELECTOR_NOT_SPECIFIED, messageError: "Selector is required." },
                            { conditional: () => isNaN(this.currentStep) || this.currentStep < 0, exceptionCode: r.A.VALUE_NOT_ALLOWED, messageError: "CurrenteStep must be a number and more than -1." },
                            { conditional: () => isNaN(this.amountOfSteps) || this.amountOfSteps <= 0, exceptionCode: r.A.VALUE_NOT_ALLOWED, messageError: "AmountOfSteps must be a number and more than 0." },
                            { conditional: () => this.currentStep > this.amountOfSteps, exceptionCode: r.A.VALUE_NOT_ALLOWED, messageError: "CurrentStep must be less than AmountOfSteps." },
                        ];
                        s.a.validate(t);
                    }
                    setElements() {
                        var t;
                        (this.eProgressStepper = document.querySelector(this.targetSelector)), (this.eProgressStepperBar = null === (t = this.eProgressStepper) || void 0 === t ? void 0 : t.querySelector(".brad-progress-stepper__bar"));
                    }
                    hasElements() {
                        return this.eProgressStepper && this.eProgressStepperBar;
                    }
                    handleProgress() {
                        var t = (100 / this.amountOfSteps) * this.currentStep;
                        (this.eProgressStepperBar.style.width = t + "%"), this.handleCircleSteps(), this.updateActivatedCircleSteps();
                    }
                    handleCircleSteps() {
                        Array.from(Array(this.amountOfSteps).keys()).forEach(() => {
                            this.eProgressStepperSteps = this.eProgressStepper.querySelector(".brad-progress-stepper__steps");
                            var t = this.eProgressStepperSteps.querySelectorAll(".brad-progress-stepper__bar__circle").length;
                            this.isCircleStepsCreatedLessSteps(t) && this.createCricleStep();
                        });
                    }
                    isCircleStepsCreatedLessSteps(t) {
                        return t <= this.amountOfSteps;
                    }
                    createCricleStep() {
                        var t = document.createElement("em");
                        t.classList.add("brad-progress-stepper__bar__circle"), this.eProgressStepperSteps.appendChild(t);
                    }
                    updateActivatedCircleSteps() {
                        var t = this.eProgressStepperSteps.querySelectorAll(".brad-progress-stepper__bar__circle");
                        Array.from(t).forEach((t, e) => {
                            e <= this.currentStep && !1 === Boolean(t.classList.contains("brad-progress-stepper__bar__circle--js"))
                                ? t.classList.add("brad-progress-stepper__bar__circle--active")
                                : t.classList.remove("brad-progress-stepper__bar__circle--active");
                        });
                    }
                    goToStep(t = 0) {
                        try {
                            if (t >= 0 && t <= this.amountOfSteps) return (this.currentStep = t), void this.handleProgress();
                            throw new r.s(r.A.VALUE_NOT_ALLOWED, `Step must be between 0 and ${this.amountOfSteps}`);
                        } catch (t) {}
                    }
                    getCurrentStep() {
                        return this.currentStep;
                    }
                    getAmountOfSteps() {
                        return this.amountOfSteps;
                    }
                }
            },
            88950: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(92781);
                r.Z.add("BradQuickbuttonService", s.x);
            },
            92781: (t, e, i) => {
                "use strict";
                i.d(e, { x: () => n });
                var r = i(55988),
                    s = i(9328);
                function a(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class n {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new n(t);
                    }
                    constructor(t = { targetSelector: "" }) {
                        a(this, "bindSetupBottomIos", null), a(this, "isQuickbuttonMode", !1), a(this, "eQuickbutton", null), a(this, "quickbuttonPositionY", 0);
                        var e = t.targetSelector;
                        return this.init(e || ".brad-quickbutton");
                    }
                    init(t) {
                        try {
                            (this.eQuickbutton = document.querySelector(t)), this.startSetup(), this.validate(this.eQuickbutton);
                        } catch (t) {}
                    }
                    startSetup() {
                        this.listeners();
                    }
                    listeners() {
                        try {
                            window.visualViewport &&
                                ((this.setToBottom = this.viewportEventHandler.bind(this)), window.visualViewport.addEventListener("scroll", this.setToBottom), window.visualViewport.addEventListener("resize", this.setToBottom));
                        } catch (t) {
                            (this.isQuickbuttonMode = !1), this.eQuickbutton.classList.remove("brad-quickbutton--active");
                        }
                    }
                    viewportEventHandler() {
                        this.quickbuttonPositionY = window.visualViewport.height + window.visualViewport.offsetTop;
                        var t = (window.visualViewport.height / window.innerHeight) * 100;
                        this.activeQuickbuttonLogic(t);
                    }
                    activeQuickbuttonLogic(t) {
                        t < 70 && !1 === Boolean(this.isQuickbuttonMode)
                            ? ((this.isQuickbuttonMode = !0), this.eQuickbutton.classList.add("brad-quickbutton--active"))
                            : t >= 70 && this.isQuickbuttonMode && ((this.isQuickbuttonMode = !1), this.eQuickbutton.classList.remove("brad-quickbutton--active")),
                            this.positioningQuickbutton();
                    }
                    positioningQuickbutton() {
                        this.eQuickbutton.style.top = this.quickbuttonPositionY - 48 + "px";
                    }
                    destroy() {
                        (this.isQuickbuttonMode = !1), window.visualViewport.removeEventListener("resize", this.bindSetupBottomIos), window.visualViewport.removeEventListener("scroll", this.bindSetupBottomIos);
                    }
                    validate(t) {
                        var e = [{ conditional: () => !0 !== Boolean(t), exceptionCode: r.A.ELEMENT_NOT_FOUND, messageError: "Element not FOUND." }];
                        s.a.validate(e);
                    }
                }
            },
            65725: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(26961);
                r.Z.add("BradRatingService", s.w);
            },
            26961: (t, e, i) => {
                "use strict";
                i.d(e, { w: () => n });
                var r = i(55988),
                    s = i(9328);
                function a(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class n {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new n(t);
                    }
                    constructor(t) {
                        a(this, "currentRating", 0), a(this, "lastRating", this.currentRating);
                        try {
                            this.initializeOptions(t), this.createComponentElements(), this.addEventListeners();
                        } catch (t) {}
                    }
                    initializeOptions(t) {
                        var e = t.targetSelector,
                            i = t.ratings,
                            r = void 0 === i ? ["Muito Insatisfeito", "Insatisfeito", "Neutro", "Satisfeito", "Muito Satisfeito"] : i,
                            s = t.showTextRating,
                            a = void 0 === s || s;
                        (this.targetSelector = e), (this.ratings = r), (this.numButtons = this.ratings.length), (this.showTextRating = a), this.validate();
                    }
                    validate() {
                        var t = [{ conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: r.A.SELECTOR_NOT_SPECIFIED, messageError: "Selector is required." }];
                        s.a.validate(t);
                    }
                    createComponentElements() {
                        (this.eRating = document.querySelector(this.targetSelector)), this.createRatingButtons(), this.createRatingText(), (this.eButtons = this.eButtonsContainer.querySelectorAll("[rating]"));
                    }
                    createRatingButtons() {
                        (this.eButtonsContainer = this.createButtonsContainer()),
                            Array.from({ length: this.numButtons }, (t, e) => e + 1).forEach((t) => {
                                var e = this.createRatingButton(t);
                                this.eButtonsContainer.appendChild(e);
                            }),
                            this.eRating.appendChild(this.eButtonsContainer);
                    }
                    createButtonsContainer() {
                        var t = document.createElement("div");
                        return (t.className = "brad-rating__buttons"), t;
                    }
                    createRatingButton(t) {
                        var e = document.createElement("button");
                        return (e.className = "brad-rating__icon icons-component i icon-component-star"), e.setAttribute("rating", t.toString()), this.setAriaLabel(e, t), e;
                    }
                    createRatingText() {
                        this.showTextRating && ((this.eRatingText = document.createElement("p")), (this.eRatingText.className = "brad-rating__text"), this.updateRatingText(), this.eRating.appendChild(this.eRatingText));
                    }
                    updateRatingText() {
                        this.showTextRating && (this.eRatingText.textContent = this.getCurrentRatingText());
                    }
                    addEventListeners() {
                        this.eButtons.forEach((t) => {
                            t.addEventListener("mouseover", () => this.handleMouseOver(t)), t.addEventListener("mouseout", () => this.handleMouseOut()), t.addEventListener("click", () => this.handleClick(t));
                        });
                    }
                    handleMouseOver(t) {
                        var e = Number(t.getAttribute("rating"));
                        this.clearHoverButtons(), this.highlightButtons(e, "brad-rating__icon--hover"), this.highlightAllButtonsAfterLastHovered(e);
                    }
                    handleMouseOut() {
                        this.clearHoverButtons();
                    }
                    handleClick(t) {
                        var e = Number(t.getAttribute("rating"));
                        (this.eCurrentButtonClicked = t),
                            (this.hasCurrentButtonClickedActivedClass = this.eCurrentButtonClicked.className.includes("active")),
                            (this.lastRating = this.currentRating),
                            (this.currentRating = e),
                            this.clearAll(),
                            this.highlightButtons(e, "brad-rating__icon--active"),
                            this.dispatchEventRated();
                    }
                    clearAll() {
                        this.clearAriaLabel(), this.clearActiveButtons(), this.clearHoverButtons();
                    }
                    clearAriaLabel() {
                        this.eButtons.forEach((t, e) => this.setAriaLabel(t, e + 1));
                    }
                    clearHoverButtons() {
                        this.eButtons.forEach((t) => {
                            t.classList.remove("brad-rating__icon--hover"), t.classList.remove("brad-rating__icon--hover-active");
                        });
                    }
                    clearActiveButtons() {
                        this.eButtons.forEach((t) => t.classList.remove("brad-rating__icon--active"));
                    }
                    dispatchEventRated() {
                        var t = new CustomEvent("rated", { bubbles: !0, detail: this.getCurrentRating() });
                        this.eRating.dispatchEvent(t);
                    }
                    highlightButtons(t, e) {
                        Array.from(this.eButtons)
                            .slice(0, t)
                            .forEach((t, i) => {
                                this.addHighlightClass(t, e), this.shouldUpdateAriaLabel(e) && this.setAriaLabel(t, i + 1, !0), this.handleCurrentButton(t, e, i);
                            }),
                            this.updateRatingText();
                    }
                    addHighlightClass(t, e) {
                        t.classList.add(e);
                    }
                    shouldUpdateAriaLabel(t) {
                        return t.includes("active");
                    }
                    handleCurrentButton(t, e, i) {
                        this.shouldHandleCurrentButton(t, e) && this.hasCurrentButtonClickedActivedClass && (this.removeHighlightClass(t, e), this.decrementCurrentRating(), this.clearCurrentButton(), this.setAriaLabel(t, i + 1));
                    }
                    removeHighlightClass(t, e) {
                        t.classList.remove(e);
                    }
                    shouldHandleCurrentButton(t, e) {
                        return t === this.eCurrentButtonClicked && e.includes("active");
                    }
                    decrementCurrentRating() {
                        this.currentRating = this.currentRating - 1;
                    }
                    clearCurrentButton() {
                        this.eCurrentButtonClicked = void 0;
                    }
                    highlightAllButtonsAfterLastHovered(t) {
                        Array.from(this.eButtons)
                            .slice(t, this.eButtons.length)
                            .forEach((t) => {
                                t.className.includes("active") && t.classList.add("brad-rating__icon--hover-active");
                            });
                    }
                    getCurrentRatingText() {
                        var t = this.showTextRating,
                            e = this.currentRating >= 1 && this.currentRating <= this.ratings.length;
                        return t && e ? this.ratings[this.currentRating - 1] : "";
                    }
                    getCurrentRating() {
                        return { currentRating: this.currentRating, currentRatingText: this.getCurrentRatingText() };
                    }
                    setAriaLabel(t, e, i = !1) {
                        t.setAttribute("aria-label", `BotÃ£o ${e} de ${this.numButtons} ${this.ratings[e - 1]}, ${i ? "selecionado" : "nÃ£o selecionado"}, avaliaÃ§Ã£o atual ${this.currentRating}`);
                    }
                    setRating(t) {
                        if (t >= 0 && t <= this.numButtons) return this.eButtons[t - 1].click();
                        throw new r.s(r.A.VALUE_NOT_ALLOWED, `The rating value must be greater than 0 and less than ${this.numButtons}`);
                    }
                    disabled() {
                        this.setDisabled();
                    }
                    enabled() {
                        this.setDisabled(!1);
                    }
                    setDisabled(t = !0) {
                        this.eButtons.forEach((e) => {
                            e.setAttribute("disabled", t), e.setAttribute("aria-disabled", t);
                        });
                    }
                }
            },
            5603: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(55988),
                    a = i(9328),
                    n = i(16656);
                function o(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class l {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new l(t);
                    }
                    constructor(t) {
                        o(this, "currentX", 0), o(this, "prefixClass", "brad-side-sheet"), o(this, "openAttr", "data-ss-open"), o(this, "closeAttr", "data-ss-close"), o(this, "show", !1);
                        try {
                            a.a.throwExceptionWhenOptionsNull(t);
                            var e = t.targetSelector,
                                i = t.hasCloseWithGesture,
                                r = void 0 === i || i,
                                n = t.overlayOpacityClass,
                                l = void 0 === n ? "brad-bg-overlay-40" : n,
                                h = t.clickOutsideClose,
                                c = void 0 === h || h,
                                d = t.removeBodyScroll,
                                u = void 0 === d || d;
                            if (
                                ((this.targetSelector = e),
                                (this.hasCloseWithGesture = r),
                                (this.overlayOpacityClass = l),
                                (this.clickOutsideClose = c),
                                (this.removeBodyScroll = u),
                                this.validate(),
                                (this.eSideSheet = document.querySelector(this.targetSelector)),
                                !this.eSideSheet)
                            )
                                throw new s.s(s.A.ELEMENT_NOT_FOUND, `Component SideSheet with (selector: ${this.targetSelector}) not found.`);
                            (this.eClose = this.eSideSheet.querySelector(".brad-side-sheet__close")), this.createOverlay(), this.initListeners();
                        } catch (t) {}
                    }
                    validate() {
                        var t = [
                            { conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: s.A.SELECTOR_NOT_SPECIFIED, messageError: "TargetSelector is required." },
                            { conditional: () => "boolean" != typeof this.hasCloseWithGesture, exceptionCode: s.A.SELECTOR_NOT_SPECIFIED, messageError: "hasCloseWithGesture needs to be of type boolean." },
                        ];
                        a.a.validate(t);
                    }
                    createOverlay() {
                        var t = { overlayOpacityClass: this.overlayOpacityClass, clickOutsideClose: this.clickOutsideClose, targetSelector: this.targetSelector, removeBodyScroll: this.removeBodyScroll };
                        (this.bradOverlayService = n.FX.getInstance(t)), this.bradOverlayService.createOverlay();
                    }
                    initListeners() {
                        (this.eOverlay = this.bradOverlayService.getElementEvent()),
                            this.eOverlay.addEventListener("close", () => {
                                this.sidesheetClose();
                            }),
                            this.initAllDataAttr(),
                            this.handleGesture();
                    }
                    initAllDataAttr() {
                        this.initAllDataOpen(), this.initAllDataClose();
                    }
                    initAllDataOpen() {
                        document.querySelectorAll(`[${this.openAttr}='${this.targetSelector.replace("#", "")}']`).forEach(
                            (t) =>
                                (t.onclick = (t) => {
                                    t.stopPropagation(), this.open();
                                })
                        );
                    }
                    initAllDataClose() {
                        document.querySelectorAll(`[${this.closeAttr}='${this.targetSelector.replace("#", "")}']`).forEach(
                            (t) =>
                                (t.onclick = (t) => {
                                    t.stopPropagation(), this.close();
                                })
                        );
                    }
                    handleGesture() {
                        this.hasCloseWithGesture &&
                            (this.eSideSheet.addEventListener("touchstart", this.handleTouchStart.bind(this)),
                            this.eSideSheet.addEventListener("touchmove", this.handleTouchMove.bind(this)),
                            this.eSideSheet.addEventListener("touchend", this.handleTouchEnd.bind(this)));
                    }
                    handleTouchStart(t) {
                        (this.touchStartX = t.changedTouches[0].clientX - this.eSideSheet.offsetWidth), (this.eSideSheet.style.transition = "none");
                    }
                    handleTouchMove(t) {
                        (this.touchCurrentX = t.changedTouches[0].clientX - this.eSideSheet.offsetWidth), this.updateCurrentX(), this.updateLastDirection(), this.updateSideSheetPosition();
                    }
                    updateCurrentX() {
                        this.touchCurrentX < this.touchStartX ? (this.currentX = this.currentX - 1) : (this.currentX = this.currentX + 1);
                    }
                    updateLastDirection() {
                        this.touchCurrentX < this.touchStartX ? (this.lastDirection = 0) : (this.lastDirection = 1);
                    }
                    updateSideSheetPosition() {
                        this.touchCurrentX !== this.touchStartX && this.currentX >= -360 && this.currentX <= 0 && ((this.touchStartX = this.touchCurrentX), (this.eSideSheet.style.left = 1.4 * this.currentX + "px"));
                    }
                    handleTouchEnd(t) {
                        (this.touchEndX = t.changedTouches[0].clientX - this.eSideSheet.offsetWidth),
                            0 != this.currentX &&
                                ((this.eSideSheet.style.transition = "all 0.1s ease-in-out"),
                                setTimeout(() => {
                                    (this.currentX = 0), this.lastDirection ? this.open() : this.close();
                                }, 20));
                    }
                    toggle() {
                        return this.isOpen() ? this.open() : this.close(), this;
                    }
                    isOpen() {
                        return !1 === Boolean(this.eSideSheet.classList.contains("brad-side-sheet--opened"));
                    }
                    open() {
                        return (
                            (this.show = !0),
                            (this.eSideSheet.style.display = "block"),
                            setTimeout(() => {
                                this.autoFocus(), this.showOverlay(), (this.eSideSheet.style.left = "-0px"), this.eSideSheet.classList.add("brad-side-sheet--opened"), (document.querySelector("body").style.overflow = "hidden");
                            }, 100),
                            this
                        );
                    }
                    autoFocus() {
                        setTimeout(() => {
                            this.eClose.focus();
                        }, 200);
                    }
                    sidesheetClose() {
                        (this.show = !1),
                            (this.eSideSheet.style.left = "-360px"),
                            this.eSideSheet.classList.remove("brad-side-sheet--opened"),
                            (document.querySelector("body").style.overflow = "auto"),
                            setTimeout(() => {
                                this.eSideSheet.style.display = "none";
                            }, 100);
                    }
                    close() {
                        return this.sidesheetClose(), this.hiddenOverlay(), this;
                    }
                    showOverlay() {
                        this.bradOverlayService.open();
                    }
                    hiddenOverlay() {
                        this.bradOverlayService.close();
                    }
                    destroy() {
                        this.bradOverlayService.destroy();
                    }
                }
                r.Z.add("BradSideSheetService", l);
            },
            81315: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(55988),
                    a = i(9328);
                function n(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class o {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new o(t);
                    }
                    constructor(t) {
                        n(this, "show", !1),
                            n(this, "snackbarClass", "brad-snackbar"),
                            n(this, "snackbarClassOpening", "brad-snackbar--opening"),
                            n(this, "snackbarClassClosing", "brad-snackbar--closing"),
                            n(this, "snackbarClassOpened", "brad-snackbar--opened"),
                            n(this, "snackbarGrabbingClass", `${this.snackbarClass}--grabbing`),
                            n(this, "opacity", 1),
                            n(this, "moving", 0),
                            n(this, "openAttr", "data-sb-open"),
                            n(this, "closeAttr", "data-sb-close"),
                            this.init(t);
                    }
                    init(t) {
                        try {
                            this.throwExceptionWhenOptionsNull(t);
                            var e = t.targetSelector,
                                i = t.ttl,
                                r = void 0 === i ? 0 : i;
                            if (((this.targetSelector = e), (this.ttl = r), this.validate(), (this.eSnackbar = document.querySelector(this.targetSelector)), !this.eSnackbar))
                                throw new s.s(s.A.ELEMENT_NOT_FOUND, `Component with (selector: ${this.targetSelector}) not found.`);
                            this.getShowByHTMLWhenCreateNewInstanceWithSameID(), this.initListeners();
                        } catch (t) {}
                        return this;
                    }
                    throwExceptionWhenOptionsNull(t) {
                        if (!0 !== Boolean(t)) throw new s.s(s.A.VALUE_IS_REQUIRED, "Options is required and must have at least property targetSelector.");
                    }
                    validate() {
                        var t = [
                            { conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: s.A.ID_NOT_SPECIFIED, messageError: "TargetSelector is required." },
                            { conditional: () => isNaN(this.ttl), exceptionCode: s.A.VALUE_NOT_ALLOWED, messageError: "TTL must be a number." },
                        ];
                        a.a.validate(t);
                    }
                    getShowByHTMLWhenCreateNewInstanceWithSameID() {
                        this.show = !(!this.eSnackbar || !this.eSnackbar.classList.contains(this.snackbarClassOpened));
                    }
                    initListeners() {
                        this.all(), this.mobile(), this.desktop();
                    }
                    all() {
                        this.initAllDataAttr();
                    }
                    initAllDataAttr() {
                        this.initAllDataOpen(), this.initAllDataClose();
                    }
                    initAllDataOpen() {
                        document.querySelectorAll(`[${this.openAttr}='${this.targetSelector.replace("#", "")}']`).forEach(
                            (t) =>
                                (t.onclick = (t) => {
                                    t.stopPropagation(), this.open();
                                })
                        );
                    }
                    initAllDataClose() {
                        document.querySelectorAll(`[${this.closeAttr}='${this.targetSelector.replace("#", "")}']`).forEach(
                            (t) =>
                                (t.onclick = (t) => {
                                    t.stopPropagation(), this.close();
                                })
                        );
                    }
                    mobile() {
                        this.getListenerByDeviceEvents("mousedown", "touchmove", "touchend");
                    }
                    desktop() {
                        this.getListenerByDeviceEvents("touchstart", "mousemove", "mouseup");
                    }
                    getListenerByDeviceEvents(t, e, i) {
                        this.eSnackbar.addEventListener(t, (t) => {
                            null === t.target.getAttribute(this.openAttr) && null === t.target.getAttribute(this.closeAttr) && this.startDragOnTouch(t);
                        }),
                            this.eSnackbar.addEventListener(e, (t) => this.moveBottomSheetOnDragMoveY(t)),
                            this.eSnackbar.addEventListener(i, () => this.completeToggleOnDrop());
                    }
                    startDragOnTouch(t) {
                        (this.isGrabbing = !0),
                            (this.opacity = 1),
                            this.eSnackbar.classList.add(this.snackbarGrabbingClass),
                            (this.startDragHeight = this.getHeightByResolution(t)),
                            (this.eSnackbar.style.transition = "bottom 0s ease-in-out, opacity 0s ease-in-out"),
                            (document.querySelector("body").style.overflow = "hidden");
                    }
                    moveBottomSheetOnDragMoveY(t) {
                        if (!0 === this.isGrabbing) {
                            this.isDragged = !0;
                            var e = this.getHeightByResolution(t);
                            if (((this.currentDragHeight = e), this.startDragHeight !== e)) {
                                if (((this.direction = this.startDragHeight - e), (this.startDragHeight = e), this.controlMovingWhenMove(), this.controlOpacityWhenMove(), null !== this.closeWhenDragToMaxBottom(t))) return;
                                (this.eSnackbar.style.bottom = `${this.moving}px`), (this.eSnackbar.style.opacity = this.opacity);
                            }
                        }
                    }
                    closeWhenDragToMaxBottom(t) {
                        return this.getClientY(t) >= window.innerHeight - 4 ? this.close() : null;
                    }
                    getHeightByResolution(t) {
                        return window.innerHeight - this.getClientY(t) - this.eSnackbar.offsetHeight;
                    }
                    getClientY(t) {
                        return t.changedTouches ? t.changedTouches[0].clientY : t.clientY;
                    }
                    controlMovingWhenMove() {
                        this.moving < 1 ? (this.isDraggedToBottom() ? (this.moving = this.moving - 1.2) : (this.moving = this.moving + 1.2)) : this.resetValues();
                    }
                    controlOpacityWhenMove() {
                        this.isDraggedToBottom() ? (this.opacity = this.opacity - 0.005) : (this.opacity = this.opacity + 0.005);
                    }
                    completeToggleOnDrop() {
                        !0 === this.isGrabbing &&
                            ((this.isGrabbing = !1),
                            this.eSnackbar.classList.remove(this.snackbarGrabbingClass),
                            this.isDragged && (this.isDraggedToBottom() ? this.close() : this.open(), this.resetValues()),
                            (document.querySelector("body").style.overflow = "auto"));
                    }
                    resetValues() {
                        (this.moving = 0), (this.isDragged = !1), (this.isGrabbing = !1), this.eSnackbar.classList.remove(this.snackbarGrabbingClass), (document.querySelector("body").style.overflow = "auto");
                    }
                    isDraggedToBottom() {
                        return this.direction > 0;
                    }
                    toggle() {
                        return this.show ? this.close() : this.open(), this;
                    }
                    open() {
                        return this.eSnackbar && ((this.show = !0), this.putStyleToOpening(), this.putStyleToOpen(), this.dispatchOpenEvent(this.eSnackbar)), this;
                    }
                    dispatchOpenEvent(t) {
                        (this.openedEvent = new CustomEvent("opened", { detail: { elementChanged: t } })), this.eSnackbar.dispatchEvent(this.openedEvent);
                    }
                    putStyleToOpen() {
                        setTimeout(() => {
                            (this.eSnackbar.style.bottom = "0px"),
                                (this.eSnackbar.style.opacity = "1"),
                                this.eSnackbar.classList.add(this.snackbarClassOpened),
                                this.eSnackbar.classList.remove(this.snackbarClassOpening),
                                this.initTimeToLive();
                        }, 50);
                    }
                    putStyleToOpening() {
                        this.eSnackbar.classList.add(this.snackbarClassOpening), (this.eSnackbar.style.transition = "bottom 0.5s ease-in-out, opacity 1s ease-in-out");
                    }
                    initTimeToLive() {
                        this.ttl > 0 && setTimeout(() => this.close(), 1e3 * this.ttl);
                    }
                    close() {
                        return this.eSnackbar && ((this.show = !1), this.putStyleToClosing(), this.putStyleToClose(), this.resetValues(), this.dispatchCloseEvent(this.eSnackbar)), this;
                    }
                    dispatchCloseEvent(t) {
                        (this.closedEvent = new CustomEvent("closed", { detail: { elementChanged: t } })), this.eSnackbar.dispatchEvent(this.closedEvent);
                    }
                    putStyleToClosing() {
                        this.eSnackbar.classList.add(this.snackbarClassClosing), (this.eSnackbar.style = "-100vh"), (this.eSnackbar.style.opacity = "1"), (this.eSnackbar.style.transition = "bottom 0.5s ease-in-out, opacity 1s ease-in-out");
                    }
                    putStyleToClose() {
                        setTimeout(() => {
                            this.eSnackbar.classList.remove(this.snackbarClassOpened),
                                setTimeout(() => {
                                    this.eSnackbar.classList.remove(this.snackbarClassClosing);
                                }, 2e3);
                        }, 50);
                    }
                    destroy() {
                        this.destroyByElement(this.eSnackbar);
                    }
                    destroyByElement(t) {
                        var e = t.cloneNode(!0);
                        t.parentNode.replaceChild(e, t);
                    }
                }
                r.Z.add("BradSnackbarService", o);
            },
            14333: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854);
                function s(t, e) {
                    var i = ("undefined" != typeof Symbol && t[Symbol.iterator]) || t["@@iterator"];
                    if (!i) {
                        if (
                            Array.isArray(t) ||
                            (i = (function (t, e) {
                                if (!t) return;
                                if ("string" == typeof t) return a(t, e);
                                var i = Object.prototype.toString.call(t).slice(8, -1);
                                "Object" === i && t.constructor && (i = t.constructor.name);
                                if ("Map" === i || "Set" === i) return Array.from(t);
                                if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return a(t, e);
                            })(t)) ||
                            (e && t && "number" == typeof t.length)
                        ) {
                            i && (t = i);
                            var r = 0,
                                s = function () {};
                            return {
                                s,
                                n: function () {
                                    return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] };
                                },
                                e: function (t) {
                                    throw t;
                                },
                                f: s,
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var n,
                        o = !0,
                        l = !1;
                    return {
                        s: function () {
                            i = i.call(t);
                        },
                        n: function () {
                            var t = i.next();
                            return (o = t.done), t;
                        },
                        e: function (t) {
                            (l = !0), (n = t);
                        },
                        f: function () {
                            try {
                                o || null == i.return || i.return();
                            } finally {
                                if (l) throw n;
                            }
                        },
                    };
                }
                function a(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var i = 0, r = new Array(e); i < e; i++) r[i] = t[i];
                    return r;
                }
                class n {
                    constructor(t) {
                        this.table = t;
                    }
                    reloadData(t, e, i) {
                        return this.table.dataLoader.load(t, void 0, void 0, void 0, e, i);
                    }
                    langText() {
                        return this.table.modules.localize.getText(...arguments);
                    }
                    langBind() {
                        return this.table.modules.localize.bind(...arguments);
                    }
                    langLocale() {
                        return this.table.modules.localize.getLocale(...arguments);
                    }
                    commsConnections() {
                        return this.table.modules.comms.getConnections(...arguments);
                    }
                    commsSend() {
                        return this.table.modules.comms.send(...arguments);
                    }
                    layoutMode() {
                        return this.table.modules.layout.getMode();
                    }
                    layoutRefresh(t) {
                        return this.table.modules.layout.layout(t);
                    }
                    subscribe() {
                        return this.table.eventBus.subscribe(...arguments);
                    }
                    unsubscribe() {
                        return this.table.eventBus.unsubscribe(...arguments);
                    }
                    subscribed(t) {
                        return this.table.eventBus.subscribed(t);
                    }
                    subscriptionChange() {
                        return this.table.eventBus.subscriptionChange(...arguments);
                    }
                    dispatch() {
                        return this.table.eventBus.dispatch(...arguments);
                    }
                    chain() {
                        return this.table.eventBus.chain(...arguments);
                    }
                    confirm() {
                        return this.table.eventBus.confirm(...arguments);
                    }
                    dispatchExternal() {
                        return this.table.externalEvents.dispatch(...arguments);
                    }
                    subscribedExternal(t) {
                        return this.table.externalEvents.subscribed(t);
                    }
                    subscriptionChangeExternal() {
                        return this.table.externalEvents.subscriptionChange(...arguments);
                    }
                    options(t) {
                        return this.table.options[t];
                    }
                    setOption(t, e) {
                        return void 0 !== e && (this.table.options[t] = e), this.table.options[t];
                    }
                    deprecationCheck(t, e) {
                        return this.table.deprecationAdvisor.check(t, e);
                    }
                    deprecationCheckMsg(t, e) {
                        return this.table.deprecationAdvisor.checkMsg(t, e);
                    }
                    deprecationMsg(t) {
                        return this.table.deprecationAdvisor.msg(t);
                    }
                    module(t) {
                        return this.table.module(t);
                    }
                }
                class o {
                    static elVisible(t) {
                        return !(t.offsetWidth <= 0 && t.offsetHeight <= 0);
                    }
                    static elOffset(t) {
                        var e = t.getBoundingClientRect();
                        return { top: e.top + window.pageYOffset - document.documentElement.clientTop, left: e.left + window.pageXOffset - document.documentElement.clientLeft };
                    }
                    static deepClone(t, e, i = []) {
                        var r = this,
                            s = {}.__proto__,
                            a = [].__proto__;
                        e || (e = Object.assign(Array.isArray(t) ? [] : {}, t));
                        var n = function () {
                            var n,
                                l,
                                h = t[o];
                            null == h ||
                                "object" != typeof h ||
                                (h.__proto__ !== s && h.__proto__ !== a) ||
                                ((n = i.findIndex((t) => t.subject === h)) > -1 ? (e[o] = i[n].copy) : ((l = Object.assign(Array.isArray(h) ? [] : {}, h)), i.unshift({ subject: h, copy: l }), (e[o] = r.deepClone(h, l, i))));
                        };
                        for (var o in t) n();
                        return e;
                    }
                }
                class l extends n {
                    constructor(t, e, i) {
                        super(t),
                            (this.element = e),
                            (this.container = this._lookupContainer()),
                            (this.parent = i),
                            (this.reversedX = !1),
                            (this.childPopup = null),
                            (this.blurable = !1),
                            (this.blurCallback = null),
                            (this.blurEventsBound = !1),
                            (this.renderedCallback = null),
                            (this.visible = !1),
                            (this.hideable = !0),
                            this.element.classList.add("tabulator-popup-container"),
                            (this.blurEvent = this.hide.bind(this, !1)),
                            (this.escEvent = this._escapeCheck.bind(this)),
                            (this.destroyBinding = this.tableDestroyed.bind(this)),
                            (this.destroyed = !1);
                    }
                    tableDestroyed() {
                        (this.destroyed = !0), this.hide(!0);
                    }
                    _lookupContainer() {
                        var t = this.table.options.popupContainer;
                        return (
                            "string" == typeof t
                                ? (t = document.querySelector(t)) || console.warn("Menu Error - no container element found matching selector:", this.table.options.popupContainer, "(defaulting to document body)")
                                : !0 === t && (t = this.table.element),
                            t && !this._checkContainerIsParent(t) && ((t = !1), console.warn("Menu Error - container element does not contain this table:", this.table.options.popupContainer, "(defaulting to document body)")),
                            t || (t = document.body),
                            t
                        );
                    }
                    _checkContainerIsParent(t, e = this.table.element) {
                        return t === e || (!!e.parentNode && this._checkContainerIsParent(t, e.parentNode));
                    }
                    renderCallback(t) {
                        this.renderedCallback = t;
                    }
                    containerEventCoords(t) {
                        var e = !(t instanceof MouseEvent),
                            i = e ? t.touches[0].pageX : t.pageX,
                            r = e ? t.touches[0].pageY : t.pageY;
                        if (this.container !== document.body) {
                            var s = o.elOffset(this.container);
                            (i -= s.left), (r -= s.top);
                        }
                        return { x: i, y: r };
                    }
                    elementPositionCoords(t, e = "right") {
                        var i,
                            r,
                            s,
                            a = o.elOffset(t);
                        switch ((this.container !== document.body && ((i = o.elOffset(this.container)), (a.left -= i.left), (a.top -= i.top)), e)) {
                            case "right":
                                (r = a.left + t.offsetWidth), (s = a.top - 1);
                                break;
                            case "bottom":
                                (r = a.left), (s = a.top + t.offsetHeight);
                                break;
                            case "left":
                                (r = a.left), (s = a.top - 1);
                                break;
                            case "top":
                                (r = a.left), (s = a.top);
                                break;
                            case "center":
                                (r = a.left + t.offsetWidth / 2), (s = a.top + t.offsetHeight / 2);
                        }
                        return { x: r, y: s, offset: a };
                    }
                    show(t, e) {
                        var i, r, s, a, n;
                        return (
                            this.destroyed ||
                                this.table.destroyed ||
                                (t instanceof HTMLElement
                                    ? ((s = t), (a = (n = this.elementPositionCoords(t, e)).offset), (i = n.x), (r = n.y))
                                    : "number" == typeof t
                                    ? ((a = { top: 0, left: 0 }), (i = t), (r = e))
                                    : ((i = (n = this.containerEventCoords(t)).x), (r = n.y), (this.reversedX = !1)),
                                (this.element.style.top = r + "px"),
                                (this.element.style.left = i + "px"),
                                this.container.appendChild(this.element),
                                "function" == typeof this.renderedCallback && this.renderedCallback(),
                                this._fitToScreen(i, r, s, a, e),
                                (this.visible = !0),
                                this.subscribe("table-destroy", this.destroyBinding),
                                this.element.addEventListener("mousedown", (t) => {
                                    t.stopPropagation();
                                })),
                            this
                        );
                    }
                    _fitToScreen(t, e, i, r, s) {
                        var a = this.container === document.body ? document.documentElement.scrollTop : this.container.scrollTop;
                        if (
                            ((t + this.element.offsetWidth >= this.container.offsetWidth || this.reversedX) &&
                                ((this.element.style.left = ""), (this.element.style.right = i ? this.container.offsetWidth - r.left + "px" : this.container.offsetWidth - t + "px"), (this.reversedX = !0)),
                            e + this.element.offsetHeight > Math.max(this.container.offsetHeight, a ? this.container.scrollHeight : 0))
                        )
                            if (i)
                                if ("bottom" === s) this.element.style.top = parseInt(this.element.style.top) - this.element.offsetHeight - i.offsetHeight - 1 + "px";
                                else this.element.style.top = parseInt(this.element.style.top) - this.element.offsetHeight + i.offsetHeight + 1 + "px";
                            else this.element.style.top = parseInt(this.element.style.top) - this.element.offsetHeight + "px";
                    }
                    isVisible() {
                        return this.visible;
                    }
                    hideOnBlur(t) {
                        return (
                            (this.blurable = !0),
                            this.visible &&
                                (setTimeout(() => {
                                    this.visible &&
                                        (this.table.rowManager.element.addEventListener("scroll", this.blurEvent),
                                        this.subscribe("cell-editing", this.blurEvent),
                                        document.body.addEventListener("click", this.blurEvent),
                                        document.body.addEventListener("contextmenu", this.blurEvent),
                                        document.body.addEventListener("mousedown", this.blurEvent),
                                        window.addEventListener("resize", this.blurEvent),
                                        document.body.addEventListener("keydown", this.escEvent),
                                        (this.blurEventsBound = !0));
                                }, 100),
                                (this.blurCallback = t)),
                            this
                        );
                    }
                    _escapeCheck(t) {
                        27 == t.keyCode && this.hide();
                    }
                    blockHide() {
                        this.hideable = !1;
                    }
                    restoreHide() {
                        this.hideable = !0;
                    }
                    hide(t = !1) {
                        return (
                            this.visible &&
                                this.hideable &&
                                (this.blurable &&
                                    this.blurEventsBound &&
                                    (document.body.removeEventListener("keydown", this.escEvent),
                                    document.body.removeEventListener("click", this.blurEvent),
                                    document.body.removeEventListener("contextmenu", this.blurEvent),
                                    document.body.removeEventListener("mousedown", this.blurEvent),
                                    window.removeEventListener("resize", this.blurEvent),
                                    this.table.rowManager.element.removeEventListener("scroll", this.blurEvent),
                                    this.unsubscribe("cell-editing", this.blurEvent),
                                    (this.blurEventsBound = !1)),
                                this.childPopup && this.childPopup.hide(),
                                this.parent && (this.parent.childPopup = null),
                                this.element.parentNode && this.element.parentNode.removeChild(this.element),
                                (this.visible = !1),
                                this.blurCallback && !t && this.blurCallback(),
                                this.unsubscribe("table-destroy", this.destroyBinding)),
                            this
                        );
                    }
                    child(t) {
                        return this.childPopup && this.childPopup.hide(), (this.childPopup = new l(this.table, t, this)), this.childPopup;
                    }
                }
                class h extends n {
                    constructor(t, e) {
                        super(t), (this._handler = null);
                    }
                    initialize() {}
                    registerTableOption(t, e) {
                        this.table.optionsList.register(t, e);
                    }
                    registerColumnOption(t, e) {
                        this.table.columnManager.optionsList.register(t, e);
                    }
                    registerTableFunction(t, e) {
                        void 0 === this.table[t] ? (this.table[t] = (...i) => (this.table.initGuard(t), e(...i))) : console.warn("Unable to bind table function, name already in use", t);
                    }
                    registerComponentFunction(t, e, i) {
                        return this.table.componentFunctionBinder.bind(t, e, i);
                    }
                    registerDataHandler(t, e) {
                        this.table.rowManager.registerDataPipelineHandler(t, e), (this._handler = t);
                    }
                    registerDisplayHandler(t, e) {
                        this.table.rowManager.registerDisplayPipelineHandler(t, e), (this._handler = t);
                    }
                    displayRows(t) {
                        var e,
                            i = this.table.rowManager.displayRows.length - 1;
                        if ((this._handler && (e = this.table.rowManager.displayPipeline.findIndex((t) => t.handler === this._handler)) > -1 && (i = e), t && (i += t), this._handler))
                            return i > -1 ? this.table.rowManager.getDisplayRows(i) : this.activeRows();
                    }
                    activeRows() {
                        return this.table.rowManager.activeRows;
                    }
                    refreshData(t, e) {
                        e || (e = this._handler), e && this.table.rowManager.refreshActiveData(e, !1, t);
                    }
                    footerAppend(t) {
                        return this.table.footerManager.append(t);
                    }
                    footerPrepend(t) {
                        return this.table.footerManager.prepend(t);
                    }
                    footerRemove(t) {
                        return this.table.footerManager.remove(t);
                    }
                    popup(t, e) {
                        return new l(this.table, t, e);
                    }
                    alert(t, e) {
                        return this.table.alertManager.alert(t, e);
                    }
                    clearAlert() {
                        return this.table.alertManager.clear();
                    }
                }
                class c extends h {
                    constructor(t) {
                        super(t),
                            (this.allowedTypes = ["", "data", "download", "clipboard", "print", "htmlOutput"]),
                            this.registerColumnOption("accessor"),
                            this.registerColumnOption("accessorParams"),
                            this.registerColumnOption("accessorData"),
                            this.registerColumnOption("accessorDataParams"),
                            this.registerColumnOption("accessorDownload"),
                            this.registerColumnOption("accessorDownloadParams"),
                            this.registerColumnOption("accessorClipboard"),
                            this.registerColumnOption("accessorClipboardParams"),
                            this.registerColumnOption("accessorPrint"),
                            this.registerColumnOption("accessorPrintParams"),
                            this.registerColumnOption("accessorHtmlOutput"),
                            this.registerColumnOption("accessorHtmlOutputParams");
                    }
                    initialize() {
                        this.subscribe("column-layout", this.initializeColumn.bind(this)), this.subscribe("row-data-retrieve", this.transformRow.bind(this));
                    }
                    initializeColumn(t) {
                        var e = !1,
                            i = {};
                        this.allowedTypes.forEach((r) => {
                            var s,
                                a = "accessor" + (r.charAt(0).toUpperCase() + r.slice(1));
                            t.definition[a] && (s = this.lookupAccessor(t.definition[a])) && ((e = !0), (i[a] = { accessor: s, params: t.definition[a + "Params"] || {} }));
                        }),
                            e && (t.modules.accessor = i);
                    }
                    lookupAccessor(t) {
                        var e = !1;
                        switch (typeof t) {
                            case "string":
                                c.accessors[t] ? (e = c.accessors[t]) : console.warn("Accessor Error - No such accessor found, ignoring: ", t);
                                break;
                            case "function":
                                e = t;
                        }
                        return e;
                    }
                    transformRow(t, e) {
                        var i = "accessor" + (e.charAt(0).toUpperCase() + e.slice(1)),
                            r = t.getComponent(),
                            s = o.deepClone(t.data || {});
                        return (
                            this.table.columnManager.traverse(function (t) {
                                var a, n, o, l;
                                t.modules.accessor &&
                                    (n = t.modules.accessor[i] || t.modules.accessor.accessor || !1) &&
                                    "undefined" != (a = t.getFieldValue(s)) &&
                                    ((l = t.getComponent()), (o = "function" == typeof n.params ? n.params(a, s, e, l, r) : n.params), t.setFieldValue(s, n.accessor(a, s, e, o, l, r)));
                            }),
                            s
                        );
                    }
                }
                (c.moduleName = "accessor"), (c.accessors = {});
                function d(t, e) {
                    var i = [];
                    if (((e = e || ""), Array.isArray(t)))
                        t.forEach((t, r) => {
                            i = i.concat(d(t, e ? e + "[" + r + "]" : r));
                        });
                    else if ("object" == typeof t) for (var r in t) i = i.concat(d(t[r], e ? e + "[" + r + "]" : r));
                    else i.push({ key: e, value: t });
                    return i;
                }
                function u(t) {
                    var e = d(t),
                        i = [];
                    return (
                        e.forEach(function (t) {
                            i.push(encodeURIComponent(t.key) + "=" + encodeURIComponent(t.value));
                        }),
                        i.join("&")
                    );
                }
                function p(t, e, i) {
                    return t && i && Object.keys(i).length && ((e.method && "get" != e.method.toLowerCase()) || ((e.method = "get"), (t += (t.includes("?") ? "&" : "?") + u(i)))), t;
                }
                function m(t, e) {
                    var i = [];
                    if (((e = e || ""), Array.isArray(t)))
                        t.forEach((t, r) => {
                            i = i.concat(m(t, e ? e + "[" + r + "]" : r));
                        });
                    else if ("object" == typeof t) for (var r in t) i = i.concat(m(t[r], e ? e + "[" + r + "]" : r));
                    else i.push({ key: e, value: t });
                    return i;
                }
                var f = {
                    json: {
                        headers: { "Content-Type": "application/json" },
                        body: function (t, e, i) {
                            return JSON.stringify(i);
                        },
                    },
                    form: {
                        headers: {},
                        body: function (t, e, i) {
                            var r = m(i),
                                s = new FormData();
                            return (
                                r.forEach(function (t) {
                                    s.append(t.key, t.value);
                                }),
                                s
                            );
                        },
                    },
                };
                class g extends h {
                    constructor(t) {
                        super(t),
                            (this.config = {}),
                            (this.url = ""),
                            (this.urlGenerator = !1),
                            (this.params = !1),
                            (this.loaderPromise = !1),
                            this.registerTableOption("ajaxURL", !1),
                            this.registerTableOption("ajaxURLGenerator", !1),
                            this.registerTableOption("ajaxParams", {}),
                            this.registerTableOption("ajaxConfig", "get"),
                            this.registerTableOption("ajaxContentType", "form"),
                            this.registerTableOption("ajaxRequestFunc", !1),
                            this.registerTableOption("ajaxRequesting", function () {}),
                            this.registerTableOption("ajaxResponse", !1),
                            (this.contentTypeFormatters = g.contentTypeFormatters);
                    }
                    initialize() {
                        (this.loaderPromise = this.table.options.ajaxRequestFunc || g.defaultLoaderPromise),
                            (this.urlGenerator = this.table.options.ajaxURLGenerator || g.defaultURLGenerator),
                            this.table.options.ajaxURL && this.setUrl(this.table.options.ajaxURL),
                            this.setDefaultConfig(this.table.options.ajaxConfig),
                            this.registerTableFunction("getAjaxUrl", this.getUrl.bind(this)),
                            this.subscribe("data-loading", this.requestDataCheck.bind(this)),
                            this.subscribe("data-params", this.requestParams.bind(this)),
                            this.subscribe("data-load", this.requestData.bind(this));
                    }
                    requestParams(t, e, i, r) {
                        var s = this.table.options.ajaxParams;
                        return s && ("function" == typeof s && (s = s.call(this.table)), (r = Object.assign(r, s))), r;
                    }
                    requestDataCheck(t, e, i, r) {
                        return !((t || !this.url) && "string" != typeof t);
                    }
                    requestData(t, e, i, r, s) {
                        var a;
                        return !s && this.requestDataCheck(t) ? (t && this.setUrl(t), (a = this.generateConfig(i)), this.sendRequest(this.url, e, a)) : s;
                    }
                    setDefaultConfig(t = {}) {
                        (this.config = Object.assign({}, g.defaultConfig)), "string" == typeof t ? (this.config.method = t) : Object.assign(this.config, t);
                    }
                    generateConfig(t = {}) {
                        var e = Object.assign({}, this.config);
                        return "string" == typeof t ? (e.method = t) : Object.assign(e, t), e;
                    }
                    setUrl(t) {
                        this.url = t;
                    }
                    getUrl() {
                        return this.url;
                    }
                    sendRequest(t, e, i) {
                        return !1 !== this.table.options.ajaxRequesting.call(this.table, t, e)
                            ? this.loaderPromise(t, i, e).then((i) => (this.table.options.ajaxResponse && (i = this.table.options.ajaxResponse.call(this.table, t, e, i)), i))
                            : Promise.reject();
                    }
                }
                (g.moduleName = "ajax"),
                    (g.defaultConfig = { method: "GET" }),
                    (g.defaultURLGenerator = p),
                    (g.defaultLoaderPromise = function (t, e, i) {
                        var r;
                        return new Promise((s, a) => {
                            if (((t = this.urlGenerator.call(this.table, t, e, i)), "GET" != e.method.toUpperCase()))
                                if ((r = "object" == typeof this.table.options.ajaxContentType ? this.table.options.ajaxContentType : this.contentTypeFormatters[this.table.options.ajaxContentType])) {
                                    for (var n in r.headers) e.headers || (e.headers = {}), void 0 === e.headers[n] && (e.headers[n] = r.headers[n]);
                                    e.body = r.body.call(this, t, e, i);
                                } else console.warn("Ajax Error - Invalid ajaxContentType value:", this.table.options.ajaxContentType);
                            t
                                ? (void 0 === e.headers && (e.headers = {}),
                                  void 0 === e.headers.Accept && (e.headers.Accept = "application/json"),
                                  void 0 === e.headers["X-Requested-With"] && (e.headers["X-Requested-With"] = "XMLHttpRequest"),
                                  void 0 === e.mode && (e.mode = "cors"),
                                  "cors" == e.mode
                                      ? (void 0 === e.headers.Origin && (e.headers.Origin = window.location.origin), void 0 === e.credentials && (e.credentials = "same-origin"))
                                      : void 0 === e.credentials && (e.credentials = "include"),
                                  fetch(t, e)
                                      .then((t) => {
                                          t.ok
                                              ? t
                                                    .json()
                                                    .then((t) => {
                                                        s(t);
                                                    })
                                                    .catch((t) => {
                                                        a(t), console.warn("Ajax Load Error - Invalid JSON returned", t);
                                                    })
                                              : (console.error("Ajax Load Error - Connection Error: " + t.status, t.statusText), a(t));
                                      })
                                      .catch((t) => {
                                          console.error("Ajax Load Error - Connection Error: ", t), a(t);
                                      }))
                                : (console.warn("Ajax Load Error - No URL Set"), s([]));
                        });
                    }),
                    (g.contentTypeFormatters = f);
                class v extends h {
                    constructor(t) {
                        super(t),
                            (this.mode = !0),
                            (this.pasteParser = function () {}),
                            (this.pasteAction = function () {}),
                            (this.customSelection = !1),
                            (this.rowRange = !1),
                            (this.blocked = !0),
                            this.registerTableOption("clipboard", !1),
                            this.registerTableOption("clipboardCopyStyled", !0),
                            this.registerTableOption("clipboardCopyConfig", !1),
                            this.registerTableOption("clipboardCopyFormatter", !1),
                            this.registerTableOption("clipboardCopyRowRange", "active"),
                            this.registerTableOption("clipboardPasteParser", "table"),
                            this.registerTableOption("clipboardPasteAction", "insert"),
                            this.registerColumnOption("clipboard"),
                            this.registerColumnOption("titleClipboard");
                    }
                    initialize() {
                        (this.mode = this.table.options.clipboard),
                            (this.rowRange = this.table.options.clipboardCopyRowRange),
                            (!0 !== this.mode && "copy" !== this.mode) ||
                                this.table.element.addEventListener("copy", (t) => {
                                    var e, i, r;
                                    this.blocked ||
                                        (t.preventDefault(),
                                        this.customSelection
                                            ? ((e = this.customSelection), this.table.options.clipboardCopyFormatter && (e = this.table.options.clipboardCopyFormatter("plain", e)))
                                            : ((r = this.table.modules.export.generateExportList(this.table.options.clipboardCopyConfig, this.table.options.clipboardCopyStyled, this.rowRange, "clipboard")),
                                              (e = (i = this.table.modules.export.generateHTMLTable(r)) ? this.generatePlainContent(r) : ""),
                                              this.table.options.clipboardCopyFormatter && ((e = this.table.options.clipboardCopyFormatter("plain", e)), (i = this.table.options.clipboardCopyFormatter("html", i)))),
                                        window.clipboardData && window.clipboardData.setData
                                            ? window.clipboardData.setData("Text", e)
                                            : t.clipboardData && t.clipboardData.setData
                                            ? (t.clipboardData.setData("text/plain", e), i && t.clipboardData.setData("text/html", i))
                                            : t.originalEvent && t.originalEvent.clipboardData.setData && (t.originalEvent.clipboardData.setData("text/plain", e), i && t.originalEvent.clipboardData.setData("text/html", i)),
                                        this.dispatchExternal("clipboardCopied", e, i),
                                        this.reset());
                                }),
                            (!0 !== this.mode && "paste" !== this.mode) ||
                                this.table.element.addEventListener("paste", (t) => {
                                    this.paste(t);
                                }),
                            this.setPasteParser(this.table.options.clipboardPasteParser),
                            this.setPasteAction(this.table.options.clipboardPasteAction),
                            this.registerTableFunction("copyToClipboard", this.copy.bind(this));
                    }
                    reset() {
                        (this.blocked = !0), (this.customSelection = !1);
                    }
                    generatePlainContent(t) {
                        var e = [];
                        return (
                            t.forEach((t) => {
                                var i = [];
                                t.columns.forEach((e) => {
                                    var r = "";
                                    if (e)
                                        if (("group" === t.type && (e.value = e.component.getKey()), null === e.value)) r = "";
                                        else
                                            switch (typeof e.value) {
                                                case "object":
                                                    r = JSON.stringify(e.value);
                                                    break;
                                                case "undefined":
                                                    r = "";
                                                    break;
                                                default:
                                                    r = e.value;
                                            }
                                    i.push(r);
                                }),
                                    e.push(i.join("\t"));
                            }),
                            e.join("\n")
                        );
                    }
                    copy(t, e) {
                        var i, r;
                        (this.blocked = !1),
                            (this.customSelection = !1),
                            (!0 !== this.mode && "copy" !== this.mode) ||
                                ((this.rowRange = t || this.table.options.clipboardCopyRowRange),
                                void 0 !== window.getSelection && void 0 !== document.createRange
                                    ? ((t = document.createRange()).selectNodeContents(this.table.element), (i = window.getSelection()).toString() && e && (this.customSelection = i.toString()), i.removeAllRanges(), i.addRange(t))
                                    : void 0 !== document.selection && void 0 !== document.body.createTextRange && ((r = document.body.createTextRange()).moveToElementText(this.table.element), r.select()),
                                document.execCommand("copy"),
                                i && i.removeAllRanges());
                    }
                    setPasteAction(t) {
                        switch (typeof t) {
                            case "string":
                                (this.pasteAction = v.pasteActions[t]), this.pasteAction || console.warn("Clipboard Error - No such paste action found:", t);
                                break;
                            case "function":
                                this.pasteAction = t;
                        }
                    }
                    setPasteParser(t) {
                        switch (typeof t) {
                            case "string":
                                (this.pasteParser = v.pasteParsers[t]), this.pasteParser || console.warn("Clipboard Error - No such paste parser found:", t);
                                break;
                            case "function":
                                this.pasteParser = t;
                        }
                    }
                    paste(t) {
                        var e, i, r;
                        this.checkPaseOrigin(t) &&
                            ((e = this.getPasteData(t)),
                            (i = this.pasteParser.call(this, e))
                                ? (t.preventDefault(), this.table.modExists("mutator") && (i = this.mutateData(i)), (r = this.pasteAction.call(this, i)), this.dispatchExternal("clipboardPasted", e, i, r))
                                : this.dispatchExternal("clipboardPasteError", e));
                    }
                    mutateData(t) {
                        var e = [];
                        return (
                            Array.isArray(t)
                                ? t.forEach((t) => {
                                      e.push(this.table.modules.mutator.transformRow(t, "clipboard"));
                                  })
                                : (e = t),
                            e
                        );
                    }
                    checkPaseOrigin(t) {
                        var e = !0;
                        return ("DIV" != t.target.tagName || this.table.modules.edit.currentCell) && (e = !1), e;
                    }
                    getPasteData(t) {
                        var e;
                        return (
                            window.clipboardData && window.clipboardData.getData
                                ? (e = window.clipboardData.getData("Text"))
                                : t.clipboardData && t.clipboardData.getData
                                ? (e = t.clipboardData.getData("text/plain"))
                                : t.originalEvent && t.originalEvent.clipboardData.getData && (e = t.originalEvent.clipboardData.getData("text/plain")),
                            e
                        );
                    }
                }
                (v.moduleName = "clipboard"),
                    (v.pasteActions = {
                        replace: function (t) {
                            return this.table.setData(t);
                        },
                        update: function (t) {
                            return this.table.updateOrAddData(t);
                        },
                        insert: function (t) {
                            return this.table.addData(t);
                        },
                    }),
                    (v.pasteParsers = {
                        table: function (t) {
                            var e = [],
                                i = !0,
                                r = this.table.columnManager.columns,
                                s = [],
                                a = [];
                            return (
                                (t = t.split("\n")).forEach(function (t) {
                                    e.push(t.split("\t"));
                                }),
                                !(!e.length || (1 === e.length && e[0].length < 2)) &&
                                    (e[0].forEach(function (t) {
                                        var e = r.find(function (e) {
                                            return t && e.definition.title && t.trim() && e.definition.title.trim() === t.trim();
                                        });
                                        e ? s.push(e) : (i = !1);
                                    }),
                                    i ||
                                        ((i = !0),
                                        (s = []),
                                        e[0].forEach(function (t) {
                                            var e = r.find(function (e) {
                                                return t && e.field && t.trim() && e.field.trim() === t.trim();
                                            });
                                            e ? s.push(e) : (i = !1);
                                        }),
                                        i || (s = this.table.columnManager.columnsByIndex)),
                                    i && e.shift(),
                                    e.forEach(function (t) {
                                        var e = {};
                                        t.forEach(function (t, i) {
                                            s[i] && (e[s[i].field] = t);
                                        }),
                                            a.push(e);
                                    }),
                                    a)
                            );
                        },
                    });
                class b {
                    constructor(t) {
                        return (
                            (this._row = t),
                            new Proxy(this, {
                                get: function (t, e, i) {
                                    return void 0 !== t[e] ? t[e] : t._row.table.componentFunctionBinder.handle("row", t._row, e);
                                },
                            })
                        );
                    }
                    getData(t) {
                        return this._row.getData(t);
                    }
                    getElement() {
                        return this._row.getElement();
                    }
                    getTable() {
                        return this._row.table;
                    }
                    getCells() {
                        var t = [];
                        return (
                            this._row.getCells().forEach(function (e) {
                                t.push(e.getComponent());
                            }),
                            t
                        );
                    }
                    getCell(t) {
                        var e = this._row.getCell(t);
                        return !!e && e.getComponent();
                    }
                    _getSelf() {
                        return this._row;
                    }
                }
                class y {
                    constructor(t) {
                        return (
                            (this._cell = t),
                            new Proxy(this, {
                                get: function (t, e, i) {
                                    return void 0 !== t[e] ? t[e] : t._cell.table.componentFunctionBinder.handle("cell", t._cell, e);
                                },
                            })
                        );
                    }
                    getValue() {
                        return this._cell.getValue();
                    }
                    getOldValue() {
                        return this._cell.getOldValue();
                    }
                    getInitialValue() {
                        return this._cell.initialValue;
                    }
                    getElement() {
                        return this._cell.getElement();
                    }
                    getRow() {
                        return this._cell.row.getComponent();
                    }
                    getData(t) {
                        return this._cell.row.getData(t);
                    }
                    getType() {
                        return "cell";
                    }
                    getField() {
                        return this._cell.column.getField();
                    }
                    getColumn() {
                        return this._cell.column.getComponent();
                    }
                    setValue(t, e) {
                        void 0 === e && (e = !0), this._cell.setValue(t, e);
                    }
                    restoreOldValue() {
                        this._cell.setValueActual(this._cell.getOldValue());
                    }
                    restoreInitialValue() {
                        this._cell.setValueActual(this._cell.initialValue);
                    }
                    checkHeight() {
                        this._cell.checkHeight();
                    }
                    getTable() {
                        return this._cell.table;
                    }
                    _getSelf() {
                        return this._cell;
                    }
                }
                class w extends n {
                    constructor(t, e) {
                        super(t.table),
                            (this.table = t.table),
                            (this.column = t),
                            (this.row = e),
                            (this.element = null),
                            (this.value = null),
                            this.initialValue,
                            (this.oldValue = null),
                            (this.modules = {}),
                            (this.height = null),
                            (this.width = null),
                            (this.minWidth = null),
                            (this.component = null),
                            (this.loaded = !1),
                            this.build();
                    }
                    build() {
                        this.generateElement(), this.setWidth(), this._configureCell(), this.setValueActual(this.column.getFieldValue(this.row.data)), (this.initialValue = this.value);
                    }
                    generateElement() {
                        (this.element = document.createElement("div")), (this.element.className = "tabulator-cell"), this.element.setAttribute("role", "gridcell");
                    }
                    _configureCell() {
                        var t = this.element,
                            e = this.column.getField();
                        ((t.style.textAlign = this.column.hozAlign),
                        this.column.vertAlign &&
                            ((t.style.display = "inline-flex"),
                            (t.style.alignItems = { top: "flex-start", bottom: "flex-end", middle: "center" }[this.column.vertAlign] || ""),
                            this.column.hozAlign && (t.style.justifyContent = { left: "flex-start", right: "flex-end", center: "center" }[this.column.hozAlign] || "")),
                        e && t.setAttribute("tabulator-field", e),
                        this.column.definition.cssClass) &&
                            this.column.definition.cssClass.split(" ").forEach((e) => {
                                t.classList.add(e);
                            });
                        this.dispatch("cell-init", this), this.column.visible || this.hide();
                    }
                    _generateContents() {
                        var t;
                        switch (typeof (t = this.chain("cell-format", this, null, () => (this.element.innerHTML = this.value)))) {
                            case "object":
                                if (t instanceof Node) {
                                    for (; this.element.firstChild; ) this.element.removeChild(this.element.firstChild);
                                    this.element.appendChild(t);
                                } else
                                    (this.element.innerHTML = ""),
                                        null != t && console.warn("Format Error - Formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:", t);
                                break;
                            case "undefined":
                                this.element.innerHTML = "";
                                break;
                            default:
                                this.element.innerHTML = t;
                        }
                    }
                    cellRendered() {
                        this.dispatch("cell-rendered", this);
                    }
                    getElement(t) {
                        return this.loaded || ((this.loaded = !0), t || this.layoutElement()), this.element;
                    }
                    getValue() {
                        return this.value;
                    }
                    getOldValue() {
                        return this.oldValue;
                    }
                    setValue(t, e, i) {
                        this.setValueProcessData(t, e, i) &&
                            (this.dispatch("cell-value-updated", this),
                            this.cellRendered(),
                            this.column.definition.cellEdited && this.column.definition.cellEdited.call(this.table, this.getComponent()),
                            this.dispatchExternal("cellEdited", this.getComponent()),
                            this.subscribedExternal("dataChanged") && this.dispatchExternal("dataChanged", this.table.rowManager.getData()));
                    }
                    setValueProcessData(t, e, i) {
                        var r = !1;
                        return (this.value !== t || i) && ((r = !0), e && (t = this.chain("cell-value-changing", [this, t], null, t))), this.setValueActual(t), r && this.dispatch("cell-value-changed", this), r;
                    }
                    setValueActual(t) {
                        (this.oldValue = this.value),
                            (this.value = t),
                            this.dispatch("cell-value-save-before", this),
                            this.column.setFieldValue(this.row.data, t),
                            this.dispatch("cell-value-save-after", this),
                            this.loaded && this.layoutElement();
                    }
                    layoutElement() {
                        this._generateContents(), this.dispatch("cell-layout", this);
                    }
                    setWidth() {
                        (this.width = this.column.width), (this.element.style.width = this.column.widthStyled);
                    }
                    clearWidth() {
                        (this.width = ""), (this.element.style.width = "");
                    }
                    getWidth() {
                        return this.width || this.element.offsetWidth;
                    }
                    setMinWidth() {
                        (this.minWidth = this.column.minWidth), (this.element.style.minWidth = this.column.minWidthStyled);
                    }
                    setMaxWidth() {
                        (this.maxWidth = this.column.maxWidth), (this.element.style.maxWidth = this.column.maxWidthStyled);
                    }
                    checkHeight() {
                        this.row.reinitializeHeight();
                    }
                    clearHeight() {
                        (this.element.style.height = ""), (this.height = null), this.dispatch("cell-height", this, "");
                    }
                    setHeight() {
                        (this.height = this.row.height), (this.element.style.height = this.row.heightStyled), this.dispatch("cell-height", this, this.row.heightStyled);
                    }
                    getHeight() {
                        return this.height || this.element.offsetHeight;
                    }
                    show() {
                        this.element.style.display = this.column.vertAlign ? "inline-flex" : "";
                    }
                    hide() {
                        this.element.style.display = "none";
                    }
                    delete() {
                        this.dispatch("cell-delete", this),
                            !this.table.rowManager.redrawBlock && this.element.parentNode && this.element.parentNode.removeChild(this.element),
                            (this.element = !1),
                            this.column.deleteCell(this),
                            this.row.deleteCell(this),
                            (this.calcs = {});
                    }
                    getIndex() {
                        return this.row.getCellIndex(this);
                    }
                    getComponent() {
                        return this.component || (this.component = new y(this)), this.component;
                    }
                }
                class x {
                    constructor(t) {
                        return (
                            (this._column = t),
                            (this.type = "ColumnComponent"),
                            new Proxy(this, {
                                get: function (t, e, i) {
                                    return void 0 !== t[e] ? t[e] : t._column.table.componentFunctionBinder.handle("column", t._column, e);
                                },
                            })
                        );
                    }
                    getElement() {
                        return this._column.getElement();
                    }
                    getDefinition() {
                        return this._column.getDefinition();
                    }
                    getField() {
                        return this._column.getField();
                    }
                    getTitleDownload() {
                        return this._column.getTitleDownload();
                    }
                    getCells() {
                        var t = [];
                        return (
                            this._column.cells.forEach(function (e) {
                                t.push(e.getComponent());
                            }),
                            t
                        );
                    }
                    isVisible() {
                        return this._column.visible;
                    }
                    show() {
                        this._column.isGroup
                            ? this._column.columns.forEach(function (t) {
                                  t.show();
                              })
                            : this._column.show();
                    }
                    hide() {
                        this._column.isGroup
                            ? this._column.columns.forEach(function (t) {
                                  t.hide();
                              })
                            : this._column.hide();
                    }
                    toggle() {
                        this._column.visible ? this.hide() : this.show();
                    }
                    delete() {
                        return this._column.delete();
                    }
                    getSubColumns() {
                        var t = [];
                        return (
                            this._column.columns.length &&
                                this._column.columns.forEach(function (e) {
                                    t.push(e.getComponent());
                                }),
                            t
                        );
                    }
                    getParentColumn() {
                        return this._column.parent instanceof C && this._column.parent.getComponent();
                    }
                    _getSelf() {
                        return this._column;
                    }
                    scrollTo(t, e) {
                        return this._column.table.columnManager.scrollToColumn(this._column, t, e);
                    }
                    getTable() {
                        return this._column.table;
                    }
                    move(t, e) {
                        var i = this._column.table.columnManager.findColumn(t);
                        i ? this._column.table.columnManager.moveColumn(this._column, i, e) : console.warn("Move Error - No matching column found:", i);
                    }
                    getNextColumn() {
                        var t = this._column.nextColumn();
                        return !!t && t.getComponent();
                    }
                    getPrevColumn() {
                        var t = this._column.prevColumn();
                        return !!t && t.getComponent();
                    }
                    updateDefinition(t) {
                        return this._column.updateDefinition(t);
                    }
                    getWidth() {
                        return this._column.getWidth();
                    }
                    setWidth(t) {
                        var e;
                        return (e = !0 === t ? this._column.reinitializeWidth(!0) : this._column.setWidth(t)), this._column.table.columnManager.rerenderColumns(!0), e;
                    }
                }
                var E = {
                    title: void 0,
                    field: void 0,
                    columns: void 0,
                    visible: void 0,
                    hozAlign: void 0,
                    vertAlign: void 0,
                    width: void 0,
                    minWidth: 40,
                    maxWidth: void 0,
                    maxInitialWidth: void 0,
                    cssClass: void 0,
                    variableHeight: void 0,
                    headerVertical: void 0,
                    headerHozAlign: void 0,
                    headerWordWrap: !1,
                    editableTitle: void 0,
                };
                class C extends n {
                    constructor(t, e) {
                        super(e.table),
                            (this.definition = t),
                            (this.parent = e),
                            (this.type = "column"),
                            (this.columns = []),
                            (this.cells = []),
                            (this.element = this.createElement()),
                            (this.contentElement = !1),
                            (this.titleHolderElement = !1),
                            (this.titleElement = !1),
                            (this.groupElement = this.createGroupElement()),
                            (this.isGroup = !1),
                            (this.hozAlign = ""),
                            (this.vertAlign = ""),
                            (this.field = ""),
                            (this.fieldStructure = ""),
                            (this.getFieldValue = ""),
                            (this.setFieldValue = ""),
                            (this.titleDownload = null),
                            (this.titleFormatterRendered = !1),
                            this.mapDefinitions(),
                            this.setField(this.definition.field),
                            (this.modules = {}),
                            (this.width = null),
                            (this.widthStyled = ""),
                            (this.maxWidth = null),
                            (this.maxWidthStyled = ""),
                            (this.maxInitialWidth = null),
                            (this.minWidth = null),
                            (this.minWidthStyled = ""),
                            (this.widthFixed = !1),
                            (this.visible = !0),
                            (this.component = null),
                            this.definition.columns
                                ? ((this.isGroup = !0),
                                  this.definition.columns.forEach((t, e) => {
                                      var i = new C(t, this);
                                      this.attachColumn(i);
                                  }),
                                  this.checkColumnVisibility())
                                : e.registerColumnField(this),
                            this._initialize();
                    }
                    createElement() {
                        var t = document.createElement("div");
                        switch ((t.classList.add("tabulator-col"), t.setAttribute("role", "columnheader"), t.setAttribute("aria-sort", "none"), this.table.options.columnHeaderVertAlign)) {
                            case "middle":
                                t.style.justifyContent = "center";
                                break;
                            case "bottom":
                                t.style.justifyContent = "flex-end";
                        }
                        return t;
                    }
                    createGroupElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-col-group-cols"), t;
                    }
                    mapDefinitions() {
                        var t = this.table.options.columnDefaults;
                        if (t) for (var e in t) void 0 === this.definition[e] && (this.definition[e] = t[e]);
                        this.definition = this.table.columnManager.optionsList.generate(C.defaultOptionList, this.definition);
                    }
                    checkDefinition() {
                        Object.keys(this.definition).forEach((t) => {
                            -1 === C.defaultOptionList.indexOf(t) && console.warn("Invalid column definition option in '" + (this.field || this.definition.title) + "' column:", t);
                        });
                    }
                    setField(t) {
                        (this.field = t),
                            (this.fieldStructure = t ? (this.table.options.nestedFieldSeparator ? t.split(this.table.options.nestedFieldSeparator) : [t]) : []),
                            (this.getFieldValue = this.fieldStructure.length > 1 ? this._getNestedData : this._getFlatData),
                            (this.setFieldValue = this.fieldStructure.length > 1 ? this._setNestedData : this._setFlatData);
                    }
                    registerColumnPosition(t) {
                        this.parent.registerColumnPosition(t);
                    }
                    registerColumnField(t) {
                        this.parent.registerColumnField(t);
                    }
                    reRegisterPosition() {
                        this.isGroup
                            ? this.columns.forEach(function (t) {
                                  t.reRegisterPosition();
                              })
                            : this.registerColumnPosition(this);
                    }
                    _initialize() {
                        for (var t = this.definition; this.element.firstChild; ) this.element.removeChild(this.element.firstChild);
                        t.headerVertical && (this.element.classList.add("tabulator-col-vertical"), "flip" === t.headerVertical && this.element.classList.add("tabulator-col-vertical-flip")),
                            (this.contentElement = this._buildColumnHeaderContent()),
                            this.element.appendChild(this.contentElement),
                            this.isGroup ? this._buildGroupHeader() : this._buildColumnHeader(),
                            this.dispatch("column-init", this);
                    }
                    _buildColumnHeader() {
                        var t = this.definition;
                        (this.dispatch("column-layout", this), void 0 !== t.visible && (t.visible ? this.show(!0) : this.hide(!0)), t.cssClass) &&
                            t.cssClass.split(" ").forEach((t) => {
                                this.element.classList.add(t);
                            });
                        t.field && this.element.setAttribute("tabulator-field", t.field),
                            this.setMinWidth(parseInt(t.minWidth)),
                            t.maxInitialWidth && (this.maxInitialWidth = parseInt(t.maxInitialWidth)),
                            t.maxWidth && this.setMaxWidth(parseInt(t.maxWidth)),
                            this.reinitializeWidth(),
                            (this.hozAlign = this.definition.hozAlign),
                            (this.vertAlign = this.definition.vertAlign),
                            (this.titleElement.style.textAlign = this.definition.headerHozAlign);
                    }
                    _buildColumnHeaderContent() {
                        var t = document.createElement("div");
                        return (
                            t.classList.add("tabulator-col-content"),
                            (this.titleHolderElement = document.createElement("div")),
                            this.titleHolderElement.classList.add("tabulator-col-title-holder"),
                            t.appendChild(this.titleHolderElement),
                            (this.titleElement = this._buildColumnHeaderTitle()),
                            this.titleHolderElement.appendChild(this.titleElement),
                            t
                        );
                    }
                    _buildColumnHeaderTitle() {
                        var t = this.definition,
                            e = document.createElement("div");
                        if ((e.classList.add("tabulator-col-title"), t.headerWordWrap && e.classList.add("tabulator-col-title-wrap"), t.editableTitle)) {
                            var i = document.createElement("input");
                            i.classList.add("tabulator-title-editor"),
                                i.addEventListener("click", (t) => {
                                    t.stopPropagation(), i.focus();
                                }),
                                i.addEventListener("change", () => {
                                    (t.title = i.value), this.dispatchExternal("columnTitleChanged", this.getComponent());
                                }),
                                e.appendChild(i),
                                t.field
                                    ? this.langBind("columns|" + t.field, (e) => {
                                          i.value = e || t.title || "&nbsp;";
                                      })
                                    : (i.value = t.title || "&nbsp;");
                        } else
                            t.field
                                ? this.langBind("columns|" + t.field, (i) => {
                                      this._formatColumnHeaderTitle(e, i || t.title || "&nbsp;");
                                  })
                                : this._formatColumnHeaderTitle(e, t.title || "&nbsp;");
                        return e;
                    }
                    _formatColumnHeaderTitle(t, e) {
                        var i = this.chain("column-format", [this, e, t], null, () => e);
                        switch (typeof i) {
                            case "object":
                                i instanceof Node
                                    ? t.appendChild(i)
                                    : ((t.innerHTML = ""), console.warn("Format Error - Title formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:", i));
                                break;
                            case "undefined":
                                t.innerHTML = "";
                                break;
                            default:
                                t.innerHTML = i;
                        }
                    }
                    _buildGroupHeader() {
                        (this.element.classList.add("tabulator-col-group"), this.element.setAttribute("role", "columngroup"), this.element.setAttribute("aria-title", this.definition.title), this.definition.cssClass) &&
                            this.definition.cssClass.split(" ").forEach((t) => {
                                this.element.classList.add(t);
                            });
                        (this.titleElement.style.textAlign = this.definition.headerHozAlign), this.element.appendChild(this.groupElement);
                    }
                    _getFlatData(t) {
                        return t[this.field];
                    }
                    _getNestedData(t) {
                        for (var e, i = t, r = this.fieldStructure, s = r.length, a = 0; a < s && ((e = i = i[r[a]]), i); a++);
                        return e;
                    }
                    _setFlatData(t, e) {
                        this.field && (t[this.field] = e);
                    }
                    _setNestedData(t, e) {
                        for (var i = t, r = this.fieldStructure, s = r.length, a = 0; a < s; a++)
                            if (a == s - 1) i[r[a]] = e;
                            else {
                                if (!i[r[a]]) {
                                    if (void 0 === e) break;
                                    i[r[a]] = {};
                                }
                                i = i[r[a]];
                            }
                    }
                    attachColumn(t) {
                        this.groupElement ? (this.columns.push(t), this.groupElement.appendChild(t.getElement()), t.columnRendered()) : console.warn("Column Warning - Column being attached to another column instead of column group");
                    }
                    verticalAlign(t, e) {
                        var i = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : e || this.parent.getHeadersElement().clientHeight;
                        (this.element.style.height = i + "px"),
                            this.dispatch("column-height", this, this.element.style.height),
                            this.isGroup && (this.groupElement.style.minHeight = i - this.contentElement.offsetHeight + "px"),
                            this.columns.forEach(function (e) {
                                e.verticalAlign(t);
                            });
                    }
                    clearVerticalAlign() {
                        (this.element.style.paddingTop = ""),
                            (this.element.style.height = ""),
                            (this.element.style.minHeight = ""),
                            (this.groupElement.style.minHeight = ""),
                            this.columns.forEach(function (t) {
                                t.clearVerticalAlign();
                            }),
                            this.dispatch("column-height", this, "");
                    }
                    getElement() {
                        return this.element;
                    }
                    getGroupElement() {
                        return this.groupElement;
                    }
                    getField() {
                        return this.field;
                    }
                    getTitleDownload() {
                        return this.titleDownload;
                    }
                    getFirstColumn() {
                        return this.isGroup ? !!this.columns.length && this.columns[0].getFirstColumn() : this;
                    }
                    getLastColumn() {
                        return this.isGroup ? !!this.columns.length && this.columns[this.columns.length - 1].getLastColumn() : this;
                    }
                    getColumns(t) {
                        var e = [];
                        return (
                            t
                                ? this.columns.forEach((t) => {
                                      e.push(t), (e = e.concat(t.getColumns(!0)));
                                  })
                                : (e = this.columns),
                            e
                        );
                    }
                    getCells() {
                        return this.cells;
                    }
                    getTopColumn() {
                        return this.parent.isGroup ? this.parent.getTopColumn() : this;
                    }
                    getDefinition(t) {
                        var e = [];
                        return (
                            this.isGroup &&
                                t &&
                                (this.columns.forEach(function (t) {
                                    e.push(t.getDefinition(!0));
                                }),
                                (this.definition.columns = e)),
                            this.definition
                        );
                    }
                    checkColumnVisibility() {
                        var t = !1;
                        this.columns.forEach(function (e) {
                            e.visible && (t = !0);
                        }),
                            t ? (this.show(), this.dispatchExternal("columnVisibilityChanged", this.getComponent(), !1)) : this.hide();
                    }
                    show(t, e) {
                        this.visible ||
                            ((this.visible = !0),
                            (this.element.style.display = ""),
                            this.parent.isGroup && this.parent.checkColumnVisibility(),
                            this.cells.forEach(function (t) {
                                t.show();
                            }),
                            this.isGroup || null !== this.width || this.reinitializeWidth(),
                            this.table.columnManager.verticalAlignHeaders(),
                            this.dispatch("column-show", this, e),
                            t || this.dispatchExternal("columnVisibilityChanged", this.getComponent(), !0),
                            this.parent.isGroup && this.parent.matchChildWidths(),
                            this.silent || this.table.columnManager.rerenderColumns());
                    }
                    hide(t, e) {
                        this.visible &&
                            ((this.visible = !1),
                            (this.element.style.display = "none"),
                            this.table.columnManager.verticalAlignHeaders(),
                            this.parent.isGroup && this.parent.checkColumnVisibility(),
                            this.cells.forEach(function (t) {
                                t.hide();
                            }),
                            this.dispatch("column-hide", this, e),
                            t || this.dispatchExternal("columnVisibilityChanged", this.getComponent(), !1),
                            this.parent.isGroup && this.parent.matchChildWidths(),
                            this.silent || this.table.columnManager.rerenderColumns());
                    }
                    matchChildWidths() {
                        var t = 0;
                        this.contentElement &&
                            this.columns.length &&
                            (this.columns.forEach(function (e) {
                                e.visible && (t += e.getWidth());
                            }),
                            (this.contentElement.style.maxWidth = t - 1 + "px"),
                            this.parent.isGroup && this.parent.matchChildWidths());
                    }
                    removeChild(t) {
                        var e = this.columns.indexOf(t);
                        e > -1 && this.columns.splice(e, 1), this.columns.length || this.delete();
                    }
                    setWidth(t) {
                        (this.widthFixed = !0), this.setWidthActual(t);
                    }
                    setWidthActual(t) {
                        isNaN(t) && (t = Math.floor((this.table.element.clientWidth / 100) * parseInt(t))),
                            (t = Math.max(this.minWidth, t)),
                            this.maxWidth && (t = Math.min(this.maxWidth, t)),
                            (this.width = t),
                            (this.widthStyled = t ? t + "px" : ""),
                            (this.element.style.width = this.widthStyled),
                            this.isGroup ||
                                this.cells.forEach(function (t) {
                                    t.setWidth();
                                }),
                            this.parent.isGroup && this.parent.matchChildWidths(),
                            this.dispatch("column-width", this);
                    }
                    checkCellHeights() {
                        var t = [];
                        this.cells.forEach(function (e) {
                            e.row.heightInitialized && (null !== e.row.getElement().offsetParent ? (t.push(e.row), e.row.clearCellHeight()) : (e.row.heightInitialized = !1));
                        }),
                            t.forEach(function (t) {
                                t.calcHeight();
                            }),
                            t.forEach(function (t) {
                                t.setCellHeight();
                            });
                    }
                    getWidth() {
                        var t = 0;
                        return (
                            this.isGroup
                                ? this.columns.forEach(function (e) {
                                      e.visible && (t += e.getWidth());
                                  })
                                : (t = this.width),
                            t
                        );
                    }
                    getLeftOffset() {
                        var t = this.element.offsetLeft;
                        return this.parent.isGroup && (t += this.parent.getLeftOffset()), t;
                    }
                    getHeight() {
                        return Math.ceil(this.element.getBoundingClientRect().height);
                    }
                    setMinWidth(t) {
                        this.maxWidth && t > this.maxWidth && ((t = this.maxWidth), console.warn("the minWidth (" + t + "px) for column '" + this.field + "' cannot be bigger that its maxWidth (" + this.maxWidthStyled + ")")),
                            (this.minWidth = t),
                            (this.minWidthStyled = t ? t + "px" : ""),
                            (this.element.style.minWidth = this.minWidthStyled),
                            this.cells.forEach(function (t) {
                                t.setMinWidth();
                            });
                    }
                    setMaxWidth(t) {
                        this.minWidth && t < this.minWidth && ((t = this.minWidth), console.warn("the maxWidth (" + t + "px) for column '" + this.field + "' cannot be smaller that its minWidth (" + this.minWidthStyled + ")")),
                            (this.maxWidth = t),
                            (this.maxWidthStyled = t ? t + "px" : ""),
                            (this.element.style.maxWidth = this.maxWidthStyled),
                            this.cells.forEach(function (t) {
                                t.setMaxWidth();
                            });
                    }
                    delete() {
                        return new Promise((t, e) => {
                            this.isGroup &&
                                this.columns.forEach(function (t) {
                                    t.delete();
                                }),
                                this.dispatch("column-delete", this);
                            for (var i = this.cells.length, r = 0; r < i; r++) this.cells[0].delete();
                            this.element.parentNode && this.element.parentNode.removeChild(this.element),
                                (this.element = !1),
                                (this.contentElement = !1),
                                (this.titleElement = !1),
                                (this.groupElement = !1),
                                this.parent.isGroup && this.parent.removeChild(this),
                                this.table.columnManager.deregisterColumn(this),
                                this.table.columnManager.rerenderColumns(!0),
                                t();
                        });
                    }
                    columnRendered() {
                        this.titleFormatterRendered && this.titleFormatterRendered(), this.dispatch("column-rendered", this);
                    }
                    generateCell(t) {
                        var e = new w(this, t);
                        return this.cells.push(e), e;
                    }
                    nextColumn() {
                        var t = this.table.columnManager.findColumnIndex(this);
                        return t > -1 && this._nextVisibleColumn(t + 1);
                    }
                    _nextVisibleColumn(t) {
                        var e = this.table.columnManager.getColumnByIndex(t);
                        return !e || e.visible ? e : this._nextVisibleColumn(t + 1);
                    }
                    prevColumn() {
                        var t = this.table.columnManager.findColumnIndex(this);
                        return t > -1 && this._prevVisibleColumn(t - 1);
                    }
                    _prevVisibleColumn(t) {
                        var e = this.table.columnManager.getColumnByIndex(t);
                        return !e || e.visible ? e : this._prevVisibleColumn(t - 1);
                    }
                    reinitializeWidth(t) {
                        (this.widthFixed = !1), void 0 === this.definition.width || t || this.setWidth(this.definition.width), this.dispatch("column-width-fit-before", this), this.fitToData(t), this.dispatch("column-width-fit-after", this);
                    }
                    fitToData(t) {
                        if (!this.isGroup) {
                            this.widthFixed ||
                                ((this.element.style.width = ""),
                                this.cells.forEach((t) => {
                                    t.clearWidth();
                                }));
                            var e = this.element.offsetWidth;
                            if (
                                (!this.width || !this.widthFixed) &&
                                (this.cells.forEach((t) => {
                                    var i = t.getWidth();
                                    i > e && (e = i);
                                }),
                                e)
                            ) {
                                var i = e + 1;
                                this.maxInitialWidth && !t && (i = Math.min(i, this.maxInitialWidth)), this.setWidthActual(i);
                            }
                        }
                    }
                    updateDefinition(t) {
                        var e;
                        return this.isGroup || this.parent.isGroup
                            ? (console.error("Column Update Error - The updateDefinition function is only available on ungrouped columns"),
                              Promise.reject("Column Update Error - The updateDefinition function is only available on columns, not column groups"))
                            : ((e = Object.assign({}, this.getDefinition())),
                              (e = Object.assign(e, t)),
                              this.table.columnManager.addColumn(e, !1, this).then((t) => (e.field == this.field && (this.field = !1), this.delete().then(() => t.getComponent()))));
                    }
                    deleteCell(t) {
                        var e = this.cells.indexOf(t);
                        e > -1 && this.cells.splice(e, 1);
                    }
                    getComponent() {
                        return this.component || (this.component = new x(this)), this.component;
                    }
                }
                C.defaultOptionList = E;
                class S {
                    constructor(t) {
                        return (
                            (this._row = t),
                            new Proxy(this, {
                                get: function (t, e, i) {
                                    return void 0 !== t[e] ? t[e] : t._row.table.componentFunctionBinder.handle("row", t._row, e);
                                },
                            })
                        );
                    }
                    getData(t) {
                        return this._row.getData(t);
                    }
                    getElement() {
                        return this._row.getElement();
                    }
                    getCells() {
                        var t = [];
                        return (
                            this._row.getCells().forEach(function (e) {
                                t.push(e.getComponent());
                            }),
                            t
                        );
                    }
                    getCell(t) {
                        var e = this._row.getCell(t);
                        return !!e && e.getComponent();
                    }
                    getIndex() {
                        return this._row.getData("data")[this._row.table.options.index];
                    }
                    getPosition() {
                        return this._row.getPosition();
                    }
                    watchPosition(t) {
                        return this._row.watchPosition(t);
                    }
                    delete() {
                        return this._row.delete();
                    }
                    scrollTo(t, e) {
                        return this._row.table.rowManager.scrollToRow(this._row, t, e);
                    }
                    move(t, e) {
                        this._row.moveToRow(t, e);
                    }
                    update(t) {
                        return this._row.updateData(t);
                    }
                    normalizeHeight() {
                        this._row.normalizeHeight(!0);
                    }
                    _getSelf() {
                        return this._row;
                    }
                    reformat() {
                        return this._row.reinitialize();
                    }
                    getTable() {
                        return this._row.table;
                    }
                    getNextRow() {
                        var t = this._row.nextRow();
                        return t ? t.getComponent() : t;
                    }
                    getPrevRow() {
                        var t = this._row.prevRow();
                        return t ? t.getComponent() : t;
                    }
                }
                class T extends n {
                    constructor(t, e, i = "row") {
                        super(e.table),
                            (this.parent = e),
                            (this.data = {}),
                            (this.type = i),
                            (this.element = !1),
                            (this.modules = {}),
                            (this.cells = []),
                            (this.height = 0),
                            (this.heightStyled = ""),
                            (this.manualHeight = !1),
                            (this.outerHeight = 0),
                            (this.initialized = !1),
                            (this.heightInitialized = !1),
                            (this.position = 0),
                            (this.positionWatchers = []),
                            (this.component = null),
                            (this.created = !1),
                            this.setData(t);
                    }
                    create() {
                        this.created || ((this.created = !0), this.generateElement());
                    }
                    createElement() {
                        var t = document.createElement("div");
                        t.classList.add("tabulator-row"), t.setAttribute("role", "row"), (this.element = t);
                    }
                    getElement() {
                        return this.create(), this.element;
                    }
                    detachElement() {
                        this.element && this.element.parentNode && this.element.parentNode.removeChild(this.element);
                    }
                    generateElement() {
                        this.createElement(), this.dispatch("row-init", this);
                    }
                    generateCells() {
                        this.cells = this.table.columnManager.generateCells(this);
                    }
                    initialize(t) {
                        if ((this.create(), !this.initialized || t)) {
                            for (this.deleteCells(); this.element.firstChild; ) this.element.removeChild(this.element.firstChild);
                            this.dispatch("row-layout-before", this),
                                this.generateCells(),
                                (this.initialized = !0),
                                this.table.columnManager.renderer.renderRowCells(this),
                                t && this.normalizeHeight(),
                                this.dispatch("row-layout", this),
                                this.table.options.rowFormatter && this.table.options.rowFormatter(this.getComponent()),
                                this.dispatch("row-layout-after", this);
                        } else this.table.columnManager.renderer.rerenderRowCells(this);
                    }
                    reinitializeHeight() {
                        (this.heightInitialized = !1), this.element && null !== this.element.offsetParent && this.normalizeHeight(!0);
                    }
                    deinitialize() {
                        this.initialized = !1;
                    }
                    deinitializeHeight() {
                        this.heightInitialized = !1;
                    }
                    reinitialize(t) {
                        (this.initialized = !1),
                            (this.heightInitialized = !1),
                            this.manualHeight || ((this.height = 0), (this.heightStyled = "")),
                            this.element && null !== this.element.offsetParent && this.initialize(!0),
                            this.dispatch("row-relayout", this);
                    }
                    calcHeight(t) {
                        var e,
                            i = 0;
                        this.table.options.rowHeight
                            ? (this.height = this.table.options.rowHeight)
                            : ((e = this.table.options.resizableRows ? this.element.clientHeight : 0),
                              this.cells.forEach(function (t) {
                                  var e = t.getHeight();
                                  e > i && (i = e);
                              }),
                              (this.height = t ? Math.max(i, e) : this.manualHeight ? this.height : Math.max(i, e))),
                            (this.heightStyled = this.height ? this.height + "px" : ""),
                            (this.outerHeight = this.element.offsetHeight);
                    }
                    setCellHeight() {
                        this.cells.forEach(function (t) {
                            t.setHeight();
                        }),
                            (this.heightInitialized = !0);
                    }
                    clearCellHeight() {
                        this.cells.forEach(function (t) {
                            t.clearHeight();
                        });
                    }
                    normalizeHeight(t) {
                        t && !this.table.options.rowHeight && this.clearCellHeight(), this.calcHeight(t), this.setCellHeight();
                    }
                    setHeight(t, e) {
                        (this.height != t || e) && ((this.manualHeight = !0), (this.height = t), (this.heightStyled = t ? t + "px" : ""), this.setCellHeight(), (this.outerHeight = this.element.offsetHeight));
                    }
                    getHeight() {
                        return this.outerHeight;
                    }
                    getWidth() {
                        return this.element.offsetWidth;
                    }
                    deleteCell(t) {
                        var e = this.cells.indexOf(t);
                        e > -1 && this.cells.splice(e, 1);
                    }
                    setData(t) {
                        (this.data = this.chain("row-data-init-before", [this, t], void 0, t)), this.dispatch("row-data-init-after", this);
                    }
                    updateData(t) {
                        var e,
                            i = this.element && o.elVisible(this.element),
                            r = {};
                        return new Promise((s, a) => {
                            for (var n in ("string" == typeof t && (t = JSON.parse(t)),
                            this.dispatch("row-data-save-before", this),
                            this.subscribed("row-data-changing") && ((r = Object.assign(r, this.data)), (r = Object.assign(r, t))),
                            (e = this.chain("row-data-changing", [this, r, t], null, t))))
                                this.data[n] = e[n];
                            for (var o in (this.dispatch("row-data-save-after", this), t)) {
                                this.table.columnManager.getColumnsByFieldRoot(o).forEach((t) => {
                                    var r = this.getCell(t.getField());
                                    if (r) {
                                        var s = t.getFieldValue(e);
                                        r.getValue() !== s && (r.setValueProcessData(s), i && r.cellRendered());
                                    }
                                });
                            }
                            i ? (this.normalizeHeight(!0), this.table.options.rowFormatter && this.table.options.rowFormatter(this.getComponent())) : ((this.initialized = !1), (this.height = 0), (this.heightStyled = "")),
                                this.dispatch("row-data-changed", this, i, t),
                                this.dispatchExternal("rowUpdated", this.getComponent()),
                                this.subscribedExternal("dataChanged") && this.dispatchExternal("dataChanged", this.table.rowManager.getData()),
                                s();
                        });
                    }
                    getData(t) {
                        return t ? this.chain("row-data-retrieve", [this, t], null, this.data) : this.data;
                    }
                    getCell(t) {
                        return (
                            (t = this.table.columnManager.findColumn(t)),
                            this.initialized || 0 !== this.cells.length || this.generateCells(),
                            this.cells.find(function (e) {
                                return e.column === t;
                            })
                        );
                    }
                    getCellIndex(t) {
                        return this.cells.findIndex(function (e) {
                            return e === t;
                        });
                    }
                    findCell(t) {
                        return this.cells.find((e) => e.element === t);
                    }
                    getCells() {
                        return this.initialized || 0 !== this.cells.length || this.generateCells(), this.cells;
                    }
                    nextRow() {
                        return this.table.rowManager.nextDisplayRow(this, !0) || !1;
                    }
                    prevRow() {
                        return this.table.rowManager.prevDisplayRow(this, !0) || !1;
                    }
                    moveToRow(t, e) {
                        var i = this.table.rowManager.findRow(t);
                        i ? (this.table.rowManager.moveRowActual(this, i, !e), this.table.rowManager.refreshActiveData("display", !1, !0)) : console.warn("Move Error - No matching row found:", t);
                    }
                    delete() {
                        return this.dispatch("row-delete", this), this.deleteActual(), Promise.resolve();
                    }
                    deleteActual(t) {
                        this.detachModules(), this.table.rowManager.deleteRow(this, t), this.deleteCells(), (this.initialized = !1), (this.heightInitialized = !1), (this.element = !1), this.dispatch("row-deleted", this);
                    }
                    detachModules() {
                        this.dispatch("row-deleting", this);
                    }
                    deleteCells() {
                        for (var t = this.cells.length, e = 0; e < t; e++) this.cells[0].delete();
                    }
                    wipe() {
                        if ((this.detachModules(), this.deleteCells(), this.element)) {
                            for (; this.element.firstChild; ) this.element.removeChild(this.element.firstChild);
                            this.element.parentNode && this.element.parentNode.removeChild(this.element);
                        }
                        (this.element = !1), (this.modules = {});
                    }
                    isDisplayed() {
                        return this.table.rowManager.getDisplayRows().includes(this);
                    }
                    getPosition() {
                        return !!this.isDisplayed() && this.position;
                    }
                    setPosition(t) {
                        t != this.position &&
                            ((this.position = t),
                            this.positionWatchers.forEach((t) => {
                                t(this.position);
                            }));
                    }
                    watchPosition(t) {
                        this.positionWatchers.push(t), t(this.position);
                    }
                    getGroup() {
                        return this.modules.group || !1;
                    }
                    getComponent() {
                        return this.component || (this.component = new S(this)), this.component;
                    }
                }
                var _ = {
                    avg: function (t, e, i) {
                        var r = 0,
                            s = void 0 !== i.precision ? i.precision : 2;
                        return (
                            t.length &&
                                ((r = t.reduce(function (t, e) {
                                    return Number(t) + Number(e);
                                })),
                                (r /= t.length),
                                (r = !1 !== s ? r.toFixed(s) : r)),
                            parseFloat(r).toString()
                        );
                    },
                    max: function (t, e, i) {
                        var r = null,
                            s = void 0 !== i.precision && i.precision;
                        return (
                            t.forEach(function (t) {
                                ((t = Number(t)) > r || null === r) && (r = t);
                            }),
                            null !== r ? (!1 !== s ? r.toFixed(s) : r) : ""
                        );
                    },
                    min: function (t, e, i) {
                        var r = null,
                            s = void 0 !== i.precision && i.precision;
                        return (
                            t.forEach(function (t) {
                                ((t = Number(t)) < r || null === r) && (r = t);
                            }),
                            null !== r ? (!1 !== s ? r.toFixed(s) : r) : ""
                        );
                    },
                    sum: function (t, e, i) {
                        var r = 0,
                            s = void 0 !== i.precision && i.precision;
                        return (
                            t.length &&
                                t.forEach(function (t) {
                                    (t = Number(t)), (r += isNaN(t) ? 0 : Number(t));
                                }),
                            !1 !== s ? r.toFixed(s) : r
                        );
                    },
                    concat: function (t, e, i) {
                        var r = 0;
                        return (
                            t.length &&
                                (r = t.reduce(function (t, e) {
                                    return String(t) + String(e);
                                })),
                            r
                        );
                    },
                    count: function (t, e, i) {
                        var r = 0;
                        return (
                            t.length &&
                                t.forEach(function (t) {
                                    t && r++;
                                }),
                            r
                        );
                    },
                    unique: function (t, e, i) {
                        var r = t.filter((e, i) => (t || 0 === e) && t.indexOf(e) === i);
                        return r.length;
                    },
                };
                class M extends h {
                    constructor(t) {
                        super(t),
                            (this.topCalcs = []),
                            (this.botCalcs = []),
                            (this.genColumn = !1),
                            (this.topElement = this.createElement()),
                            (this.botElement = this.createElement()),
                            (this.topRow = !1),
                            (this.botRow = !1),
                            (this.topInitialized = !1),
                            (this.botInitialized = !1),
                            (this.blocked = !1),
                            (this.recalcAfterBlock = !1),
                            this.registerTableOption("columnCalcs", !0),
                            this.registerColumnOption("topCalc"),
                            this.registerColumnOption("topCalcParams"),
                            this.registerColumnOption("topCalcFormatter"),
                            this.registerColumnOption("topCalcFormatterParams"),
                            this.registerColumnOption("bottomCalc"),
                            this.registerColumnOption("bottomCalcParams"),
                            this.registerColumnOption("bottomCalcFormatter"),
                            this.registerColumnOption("bottomCalcFormatterParams");
                    }
                    createElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-calcs-holder"), t;
                    }
                    initialize() {
                        (this.genColumn = new C({ field: "value" }, this)),
                            this.subscribe("cell-value-changed", this.cellValueChanged.bind(this)),
                            this.subscribe("column-init", this.initializeColumnCheck.bind(this)),
                            this.subscribe("row-deleted", this.rowsUpdated.bind(this)),
                            this.subscribe("scroll-horizontal", this.scrollHorizontal.bind(this)),
                            this.subscribe("row-added", this.rowsUpdated.bind(this)),
                            this.subscribe("column-moved", this.recalcActiveRows.bind(this)),
                            this.subscribe("column-add", this.recalcActiveRows.bind(this)),
                            this.subscribe("data-refreshed", this.recalcActiveRowsRefresh.bind(this)),
                            this.subscribe("table-redraw", this.tableRedraw.bind(this)),
                            this.subscribe("rows-visible", this.visibleRows.bind(this)),
                            this.subscribe("scrollbar-vertical", this.adjustForScrollbar.bind(this)),
                            this.subscribe("redraw-blocked", this.blockRedraw.bind(this)),
                            this.subscribe("redraw-restored", this.restoreRedraw.bind(this)),
                            this.subscribe("table-redrawing", this.resizeHolderWidth.bind(this)),
                            this.subscribe("column-resized", this.resizeHolderWidth.bind(this)),
                            this.subscribe("column-show", this.resizeHolderWidth.bind(this)),
                            this.subscribe("column-hide", this.resizeHolderWidth.bind(this)),
                            this.registerTableFunction("getCalcResults", this.getResults.bind(this)),
                            this.registerTableFunction("recalc", this.userRecalc.bind(this)),
                            this.resizeHolderWidth();
                    }
                    resizeHolderWidth() {
                        this.topElement.style.minWidth = this.table.columnManager.headersElement.offsetWidth + "px";
                    }
                    tableRedraw(t) {
                        this.recalc(this.table.rowManager.activeRows), t && this.redraw();
                    }
                    blockRedraw() {
                        (this.blocked = !0), (this.recalcAfterBlock = !1);
                    }
                    restoreRedraw() {
                        (this.blocked = !1), this.recalcAfterBlock && ((this.recalcAfterBlock = !1), this.recalcActiveRowsRefresh());
                    }
                    userRecalc() {
                        this.recalc(this.table.rowManager.activeRows);
                    }
                    blockCheck() {
                        return this.blocked && (this.recalcAfterBlock = !0), this.blocked;
                    }
                    visibleRows(t, e) {
                        return this.topRow && e.unshift(this.topRow), this.botRow && e.push(this.botRow), e;
                    }
                    rowsUpdated(t) {
                        this.table.options.groupBy ? this.recalcRowGroup(t) : this.recalcActiveRows();
                    }
                    recalcActiveRowsRefresh() {
                        this.table.options.groupBy && this.table.options.dataTreeStartExpanded && this.table.options.dataTree ? this.recalcAll() : this.recalcActiveRows();
                    }
                    recalcActiveRows() {
                        this.recalc(this.table.rowManager.activeRows);
                    }
                    cellValueChanged(t) {
                        (t.column.definition.topCalc || t.column.definition.bottomCalc) &&
                            (this.table.options.groupBy
                                ? (("table" != this.table.options.columnCalcs && "both" != this.table.options.columnCalcs) || this.recalcActiveRows(), "table" != this.table.options.columnCalcs && this.recalcRowGroup(t.row))
                                : this.recalcActiveRows());
                    }
                    initializeColumnCheck(t) {
                        (t.definition.topCalc || t.definition.bottomCalc) && this.initializeColumn(t);
                    }
                    initializeColumn(t) {
                        var e = t.definition,
                            i = { topCalcParams: e.topCalcParams || {}, botCalcParams: e.bottomCalcParams || {} };
                        if (e.topCalc) {
                            switch (typeof e.topCalc) {
                                case "string":
                                    M.calculations[e.topCalc] ? (i.topCalc = M.calculations[e.topCalc]) : console.warn("Column Calc Error - No such calculation found, ignoring: ", e.topCalc);
                                    break;
                                case "function":
                                    i.topCalc = e.topCalc;
                            }
                            i.topCalc && ((t.modules.columnCalcs = i), this.topCalcs.push(t), "group" != this.table.options.columnCalcs && this.initializeTopRow());
                        }
                        if (e.bottomCalc) {
                            switch (typeof e.bottomCalc) {
                                case "string":
                                    M.calculations[e.bottomCalc] ? (i.botCalc = M.calculations[e.bottomCalc]) : console.warn("Column Calc Error - No such calculation found, ignoring: ", e.bottomCalc);
                                    break;
                                case "function":
                                    i.botCalc = e.bottomCalc;
                            }
                            i.botCalc && ((t.modules.columnCalcs = i), this.botCalcs.push(t), "group" != this.table.options.columnCalcs && this.initializeBottomRow());
                        }
                    }
                    registerColumnField() {}
                    removeCalcs() {
                        var t = !1;
                        this.topInitialized && ((this.topInitialized = !1), this.topElement.parentNode.removeChild(this.topElement), (t = !0)),
                            this.botInitialized && ((this.botInitialized = !1), this.footerRemove(this.botElement), (t = !0)),
                            t && this.table.rowManager.adjustTableSize();
                    }
                    reinitializeCalcs() {
                        this.topCalcs.length && this.initializeTopRow(), this.botCalcs.length && this.initializeBottomRow();
                    }
                    initializeTopRow() {
                        this.topInitialized || (this.table.columnManager.getContentsElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling), (this.topInitialized = !0));
                    }
                    initializeBottomRow() {
                        this.botInitialized || (this.footerPrepend(this.botElement), (this.botInitialized = !0));
                    }
                    scrollHorizontal(t) {
                        this.botInitialized && this.botRow && (this.botElement.scrollLeft = t);
                    }
                    recalc(t) {
                        var e, i;
                        if (!this.blockCheck() && (this.topInitialized || this.botInitialized)) {
                            if (((e = this.rowsToData(t)), this.topInitialized)) {
                                for (this.topRow && this.topRow.deleteCells(), i = this.generateRow("top", e), this.topRow = i; this.topElement.firstChild; ) this.topElement.removeChild(this.topElement.firstChild);
                                this.topElement.appendChild(i.getElement()), i.initialize(!0);
                            }
                            if (this.botInitialized) {
                                for (this.botRow && this.botRow.deleteCells(), i = this.generateRow("bottom", e), this.botRow = i; this.botElement.firstChild; ) this.botElement.removeChild(this.botElement.firstChild);
                                this.botElement.appendChild(i.getElement()), i.initialize(!0);
                            }
                            this.table.rowManager.adjustTableSize(), this.table.modExists("frozenColumns") && this.table.modules.frozenColumns.layout();
                        }
                    }
                    recalcRowGroup(t) {
                        this.recalcGroup(this.table.modules.groupRows.getRowGroup(t));
                    }
                    recalcAll() {
                        (this.topCalcs.length || this.botCalcs.length) &&
                            ("group" !== this.table.options.columnCalcs && this.recalcActiveRows(),
                            this.table.options.groupBy &&
                                "table" !== this.table.options.columnCalcs &&
                                this.table.modules.groupRows.getChildGroups().forEach((t) => {
                                    this.recalcGroup(t);
                                }));
                    }
                    recalcGroup(t) {
                        var e, i;
                        this.blockCheck() ||
                            (t &&
                                t.calcs &&
                                (t.calcs.bottom && ((e = this.rowsToData(t.rows)), (i = this.generateRowData("bottom", e)), t.calcs.bottom.updateData(i), t.calcs.bottom.reinitialize()),
                                t.calcs.top && ((e = this.rowsToData(t.rows)), (i = this.generateRowData("top", e)), t.calcs.top.updateData(i), t.calcs.top.reinitialize())));
                    }
                    generateTopRow(t) {
                        return this.generateRow("top", this.rowsToData(t));
                    }
                    generateBottomRow(t) {
                        return this.generateRow("bottom", this.rowsToData(t));
                    }
                    rowsToData(t) {
                        var e = [];
                        return (
                            t.forEach((t) => {
                                if ((e.push(t.getData()), this.table.options.dataTree && this.table.options.dataTreeChildColumnCalcs && t.modules.dataTree && t.modules.dataTree.open)) {
                                    var i = this.rowsToData(this.table.modules.dataTree.getFilteredTreeChildren(t));
                                    e = e.concat(i);
                                }
                            }),
                            e
                        );
                    }
                    generateRow(t, e) {
                        var i,
                            r = this.generateRowData(t, e);
                        return (
                            this.table.modExists("mutator") && this.table.modules.mutator.disable(),
                            (i = new T(r, this, "calc")),
                            this.table.modExists("mutator") && this.table.modules.mutator.enable(),
                            i.getElement().classList.add("tabulator-calcs", "tabulator-calcs-" + t),
                            (i.component = !1),
                            (i.getComponent = () => (i.component || (i.component = new b(i)), i.component)),
                            (i.generateCells = () => {
                                var e = [];
                                this.table.columnManager.columnsByIndex.forEach((r) => {
                                    this.genColumn.setField(r.getField()),
                                        (this.genColumn.hozAlign = r.hozAlign),
                                        r.definition[t + "CalcFormatter"] && this.table.modExists("format")
                                            ? (this.genColumn.modules.format = { formatter: this.table.modules.format.getFormatter(r.definition[t + "CalcFormatter"]), params: r.definition[t + "CalcFormatterParams"] || {} })
                                            : (this.genColumn.modules.format = { formatter: this.table.modules.format.getFormatter("plaintext"), params: {} }),
                                        (this.genColumn.definition.cssClass = r.definition.cssClass);
                                    var s = new w(this.genColumn, i);
                                    s.getElement(), (s.column = r), s.setWidth(), r.cells.push(s), e.push(s), r.visible || s.hide();
                                }),
                                    (i.cells = e);
                            }),
                            i
                        );
                    }
                    generateRowData(t, e) {
                        var i,
                            r,
                            s = {},
                            a = "top" == t ? this.topCalcs : this.botCalcs,
                            n = "top" == t ? "topCalc" : "botCalc";
                        return (
                            a.forEach(function (t) {
                                var a = [];
                                t.modules.columnCalcs &&
                                    t.modules.columnCalcs[n] &&
                                    (e.forEach(function (e) {
                                        a.push(t.getFieldValue(e));
                                    }),
                                    (r = n + "Params"),
                                    (i = "function" == typeof t.modules.columnCalcs[r] ? t.modules.columnCalcs[r](a, e) : t.modules.columnCalcs[r]),
                                    t.setFieldValue(s, t.modules.columnCalcs[n](a, e, i)));
                            }),
                            s
                        );
                    }
                    hasTopCalcs() {
                        return !!this.topCalcs.length;
                    }
                    hasBottomCalcs() {
                        return !!this.botCalcs.length;
                    }
                    redraw() {
                        this.topRow && this.topRow.normalizeHeight(!0), this.botRow && this.botRow.normalizeHeight(!0);
                    }
                    getResults() {
                        var t = {};
                        return (
                            this.table.options.groupBy && this.table.modExists("groupRows")
                                ? this.table.modules.groupRows.getGroups(!0).forEach((e) => {
                                      t[e.getKey()] = this.getGroupResults(e);
                                  })
                                : (t = { top: this.topRow ? this.topRow.getData() : {}, bottom: this.botRow ? this.botRow.getData() : {} }),
                            t
                        );
                    }
                    getGroupResults(t) {
                        var e = t._getSelf(),
                            i = t.getSubGroups(),
                            r = {};
                        return (
                            i.forEach((t) => {
                                r[t.getKey()] = this.getGroupResults(t);
                            }),
                            { top: e.calcs.top ? e.calcs.top.getData() : {}, bottom: e.calcs.bottom ? e.calcs.bottom.getData() : {}, groups: r }
                        );
                    }
                    adjustForScrollbar(t) {
                        this.botRow && (this.table.rtl ? (this.botElement.style.paddingLeft = t + "px") : (this.botElement.style.paddingRight = t + "px"));
                    }
                }
                (M.moduleName = "columnCalcs"), (M.calculations = _);
                class P extends h {
                    constructor(t) {
                        super(t),
                            (this.indent = 10),
                            (this.field = ""),
                            (this.collapseEl = null),
                            (this.expandEl = null),
                            (this.branchEl = null),
                            (this.elementField = !1),
                            (this.startOpen = function () {}),
                            this.registerTableOption("dataTree", !1),
                            this.registerTableOption("dataTreeFilter", !0),
                            this.registerTableOption("dataTreeSort", !0),
                            this.registerTableOption("dataTreeElementColumn", !1),
                            this.registerTableOption("dataTreeBranchElement", !0),
                            this.registerTableOption("dataTreeChildIndent", 9),
                            this.registerTableOption("dataTreeChildField", "_children"),
                            this.registerTableOption("dataTreeCollapseElement", !1),
                            this.registerTableOption("dataTreeExpandElement", !1),
                            this.registerTableOption("dataTreeStartExpanded", !1),
                            this.registerTableOption("dataTreeChildColumnCalcs", !1),
                            this.registerTableOption("dataTreeSelectPropagate", !1),
                            this.registerComponentFunction("row", "treeCollapse", this.collapseRow.bind(this)),
                            this.registerComponentFunction("row", "treeExpand", this.expandRow.bind(this)),
                            this.registerComponentFunction("row", "treeToggle", this.toggleRow.bind(this)),
                            this.registerComponentFunction("row", "getTreeParent", this.getTreeParent.bind(this)),
                            this.registerComponentFunction("row", "getTreeChildren", this.getRowChildren.bind(this)),
                            this.registerComponentFunction("row", "addTreeChild", this.addTreeChildRow.bind(this)),
                            this.registerComponentFunction("row", "isTreeExpanded", this.isRowExpanded.bind(this));
                    }
                    initialize() {
                        if (this.table.options.dataTree) {
                            var t = null,
                                e = this.table.options;
                            switch (
                                ((this.field = e.dataTreeChildField),
                                (this.indent = e.dataTreeChildIndent),
                                this.options("movableRows") && console.warn("The movableRows option is not available with dataTree enabled, moving of child rows could result in unpredictable behavior"),
                                e.dataTreeBranchElement &&
                                    (!0 === e.dataTreeBranchElement
                                        ? ((this.branchEl = document.createElement("div")), this.branchEl.classList.add("tabulator-data-tree-branch"))
                                        : "string" == typeof e.dataTreeBranchElement
                                        ? (((t = document.createElement("div")).innerHTML = e.dataTreeBranchElement), (this.branchEl = t.firstChild))
                                        : (this.branchEl = e.dataTreeBranchElement)),
                                e.dataTreeCollapseElement
                                    ? "string" == typeof e.dataTreeCollapseElement
                                        ? (((t = document.createElement("div")).innerHTML = e.dataTreeCollapseElement), (this.collapseEl = t.firstChild))
                                        : (this.collapseEl = e.dataTreeCollapseElement)
                                    : ((this.collapseEl = document.createElement("div")),
                                      this.collapseEl.classList.add("tabulator-data-tree-control"),
                                      (this.collapseEl.tabIndex = 0),
                                      (this.collapseEl.innerHTML = "<div class='tabulator-data-tree-control-collapse'></div>")),
                                e.dataTreeExpandElement
                                    ? "string" == typeof e.dataTreeExpandElement
                                        ? (((t = document.createElement("div")).innerHTML = e.dataTreeExpandElement), (this.expandEl = t.firstChild))
                                        : (this.expandEl = e.dataTreeExpandElement)
                                    : ((this.expandEl = document.createElement("div")),
                                      this.expandEl.classList.add("tabulator-data-tree-control"),
                                      (this.expandEl.tabIndex = 0),
                                      (this.expandEl.innerHTML = "<div class='tabulator-data-tree-control-expand'></div>")),
                                typeof e.dataTreeStartExpanded)
                            ) {
                                case "boolean":
                                    this.startOpen = function (t, i) {
                                        return e.dataTreeStartExpanded;
                                    };
                                    break;
                                case "function":
                                    this.startOpen = e.dataTreeStartExpanded;
                                    break;
                                default:
                                    this.startOpen = function (t, i) {
                                        return e.dataTreeStartExpanded[i];
                                    };
                            }
                            this.subscribe("row-init", this.initializeRow.bind(this)),
                                this.subscribe("row-layout-after", this.layoutRow.bind(this)),
                                this.subscribe("row-deleted", this.rowDelete.bind(this), 0),
                                this.subscribe("row-data-changed", this.rowDataChanged.bind(this), 10),
                                this.subscribe("cell-value-updated", this.cellValueChanged.bind(this)),
                                this.subscribe("edit-cancelled", this.cellValueChanged.bind(this)),
                                this.subscribe("column-moving-rows", this.columnMoving.bind(this)),
                                this.subscribe("table-built", this.initializeElementField.bind(this)),
                                this.subscribe("table-redrawing", this.tableRedrawing.bind(this)),
                                this.registerDisplayHandler(this.getRows.bind(this), 30);
                        }
                    }
                    tableRedrawing(t) {
                        t &&
                            this.table.rowManager.getRows().forEach((t) => {
                                this.reinitializeRowChildren(t);
                            });
                    }
                    initializeElementField() {
                        var t = this.table.columnManager.getFirstVisibleColumn();
                        this.elementField = this.table.options.dataTreeElementColumn || (!!t && t.field);
                    }
                    getRowChildren(t) {
                        return this.getTreeChildren(t, !0);
                    }
                    columnMoving() {
                        var t = [];
                        return (
                            this.table.rowManager.rows.forEach((e) => {
                                t = t.concat(this.getTreeChildren(e, !1, !0));
                            }),
                            t
                        );
                    }
                    rowDataChanged(t, e, i) {
                        this.redrawNeeded(i) && (this.initializeRow(t), e && (this.layoutRow(t), this.refreshData(!0)));
                    }
                    cellValueChanged(t) {
                        t.column.getField() === this.elementField && this.layoutRow(t.row);
                    }
                    initializeRow(t) {
                        var e = t.getData()[this.field],
                            i = Array.isArray(e),
                            r = i || (!i && "object" == typeof e && null !== e);
                        !r && t.modules.dataTree && t.modules.dataTree.branchEl && t.modules.dataTree.branchEl.parentNode.removeChild(t.modules.dataTree.branchEl),
                            !r && t.modules.dataTree && t.modules.dataTree.controlEl && t.modules.dataTree.controlEl.parentNode.removeChild(t.modules.dataTree.controlEl),
                            (t.modules.dataTree = {
                                index: t.modules.dataTree ? t.modules.dataTree.index : 0,
                                open: !!r && (t.modules.dataTree ? t.modules.dataTree.open : this.startOpen(t.getComponent(), 0)),
                                controlEl: !(!t.modules.dataTree || !r) && t.modules.dataTree.controlEl,
                                branchEl: !(!t.modules.dataTree || !r) && t.modules.dataTree.branchEl,
                                parent: !!t.modules.dataTree && t.modules.dataTree.parent,
                                children: r,
                            });
                    }
                    reinitializeRowChildren(t) {
                        this.getTreeChildren(t, !1, !0).forEach(function (t) {
                            t.reinitialize(!0);
                        });
                    }
                    layoutRow(t) {
                        var e = (this.elementField ? t.getCell(this.elementField) : t.getCells()[0]).getElement(),
                            i = t.modules.dataTree;
                        i.branchEl && (i.branchEl.parentNode && i.branchEl.parentNode.removeChild(i.branchEl), (i.branchEl = !1)),
                            i.controlEl && (i.controlEl.parentNode && i.controlEl.parentNode.removeChild(i.controlEl), (i.controlEl = !1)),
                            this.generateControlElement(t, e),
                            t.getElement().classList.add("tabulator-tree-level-" + i.index),
                            i.index &&
                                (this.branchEl
                                    ? ((i.branchEl = this.branchEl.cloneNode(!0)),
                                      e.insertBefore(i.branchEl, e.firstChild),
                                      this.table.rtl
                                          ? (i.branchEl.style.marginRight = (i.branchEl.offsetWidth + i.branchEl.style.marginLeft) * (i.index - 1) + i.index * this.indent + "px")
                                          : (i.branchEl.style.marginLeft = (i.branchEl.offsetWidth + i.branchEl.style.marginRight) * (i.index - 1) + i.index * this.indent + "px"))
                                    : this.table.rtl
                                    ? (e.style.paddingRight = parseInt(window.getComputedStyle(e, null).getPropertyValue("padding-right")) + i.index * this.indent + "px")
                                    : (e.style.paddingLeft = parseInt(window.getComputedStyle(e, null).getPropertyValue("padding-left")) + i.index * this.indent + "px"));
                    }
                    generateControlElement(t, e) {
                        var i = t.modules.dataTree,
                            r = i.controlEl;
                        (e = e || t.getCells()[0].getElement()),
                            !1 !== i.children &&
                                (i.open
                                    ? ((i.controlEl = this.collapseEl.cloneNode(!0)),
                                      i.controlEl.addEventListener("click", (e) => {
                                          e.stopPropagation(), this.collapseRow(t);
                                      }))
                                    : ((i.controlEl = this.expandEl.cloneNode(!0)),
                                      i.controlEl.addEventListener("click", (e) => {
                                          e.stopPropagation(), this.expandRow(t);
                                      })),
                                i.controlEl.addEventListener("mousedown", (t) => {
                                    t.stopPropagation();
                                }),
                                r && r.parentNode === e ? r.parentNode.replaceChild(i.controlEl, r) : e.insertBefore(i.controlEl, e.firstChild));
                    }
                    getRows(t) {
                        var e = [];
                        return (
                            t.forEach((t, i) => {
                                var r;
                                e.push(t),
                                    t instanceof T &&
                                        (t.create(),
                                        (r = t.modules.dataTree).index ||
                                            !1 === r.children ||
                                            this.getChildren(t).forEach((t) => {
                                                t.create(), e.push(t);
                                            }));
                            }),
                            e
                        );
                    }
                    getChildren(t, e) {
                        var i = t.modules.dataTree,
                            r = [],
                            s = [];
                        return (
                            !1 !== i.children &&
                                (i.open || e) &&
                                (Array.isArray(i.children) || (i.children = this.generateChildren(t)),
                                (r = this.table.modExists("filter") && this.table.options.dataTreeFilter ? this.table.modules.filter.filter(i.children) : i.children),
                                this.table.modExists("sort") && this.table.options.dataTreeSort && this.table.modules.sort.sort(r),
                                r.forEach((t) => {
                                    s.push(t),
                                        this.getChildren(t).forEach((t) => {
                                            s.push(t);
                                        });
                                })),
                            s
                        );
                    }
                    generateChildren(t) {
                        var e = [],
                            i = t.getData()[this.field];
                        return (
                            Array.isArray(i) || (i = [i]),
                            i.forEach((i) => {
                                var r = new T(i || {}, this.table.rowManager);
                                r.create(),
                                    (r.modules.dataTree.index = t.modules.dataTree.index + 1),
                                    (r.modules.dataTree.parent = t),
                                    r.modules.dataTree.children && (r.modules.dataTree.open = this.startOpen(r.getComponent(), r.modules.dataTree.index)),
                                    e.push(r);
                            }),
                            e
                        );
                    }
                    expandRow(t, e) {
                        var i = t.modules.dataTree;
                        !1 !== i.children && ((i.open = !0), t.reinitialize(), this.refreshData(!0), this.dispatchExternal("dataTreeRowExpanded", t.getComponent(), t.modules.dataTree.index));
                    }
                    collapseRow(t) {
                        var e = t.modules.dataTree;
                        !1 !== e.children && ((e.open = !1), t.reinitialize(), this.refreshData(!0), this.dispatchExternal("dataTreeRowCollapsed", t.getComponent(), t.modules.dataTree.index));
                    }
                    toggleRow(t) {
                        var e = t.modules.dataTree;
                        !1 !== e.children && (e.open ? this.collapseRow(t) : this.expandRow(t));
                    }
                    isRowExpanded(t) {
                        return t.modules.dataTree.open;
                    }
                    getTreeParent(t) {
                        return !!t.modules.dataTree.parent && t.modules.dataTree.parent.getComponent();
                    }
                    getTreeParentRoot(t) {
                        return t.modules.dataTree && t.modules.dataTree.parent ? this.getTreeParentRoot(t.modules.dataTree.parent) : t;
                    }
                    getFilteredTreeChildren(t) {
                        var e = t.modules.dataTree,
                            i = [];
                        return (
                            e.children &&
                                (Array.isArray(e.children) || (e.children = this.generateChildren(t)),
                                (this.table.modExists("filter") && this.table.options.dataTreeFilter ? this.table.modules.filter.filter(e.children) : e.children).forEach((t) => {
                                    t instanceof T && i.push(t);
                                })),
                            i
                        );
                    }
                    rowDelete(t) {
                        var e,
                            i = t.modules.dataTree.parent;
                        i && (!1 !== (e = this.findChildIndex(t, i)) && i.data[this.field].splice(e, 1), i.data[this.field].length || delete i.data[this.field], this.initializeRow(i), this.layoutRow(i)), this.refreshData(!0);
                    }
                    addTreeChildRow(t, e, i, r) {
                        var s = !1;
                        "string" == typeof e && (e = JSON.parse(e)),
                            Array.isArray(t.data[this.field]) || ((t.data[this.field] = []), (t.modules.dataTree.open = this.startOpen(t.getComponent(), t.modules.dataTree.index))),
                            void 0 !== r && !1 !== (s = this.findChildIndex(r, t)) && t.data[this.field].splice(i ? s : s + 1, 0, e),
                            !1 === s && (i ? t.data[this.field].unshift(e) : t.data[this.field].push(e)),
                            this.initializeRow(t),
                            this.layoutRow(t),
                            this.refreshData(!0);
                    }
                    findChildIndex(t, e) {
                        var i = !1;
                        return (
                            "object" == typeof t
                                ? t instanceof T
                                    ? (i = t.data)
                                    : t instanceof S
                                    ? (i = t._getSelf().data)
                                    : "undefined" != typeof HTMLElement && t instanceof HTMLElement
                                    ? e.modules.dataTree && (i = e.modules.dataTree.children.find((e) => e instanceof T && e.element === t)) && (i = i.data)
                                    : null === t && (i = !1)
                                : (i = void 0 !== t && e.data[this.field].find((e) => e.data[this.table.options.index] == t)),
                            i && (Array.isArray(e.data[this.field]) && (i = e.data[this.field].indexOf(i)), -1 == i && (i = !1)),
                            i
                        );
                    }
                    getTreeChildren(t, e, i) {
                        var r = t.modules.dataTree,
                            s = [];
                        return (
                            r.children &&
                                (Array.isArray(r.children) || (r.children = this.generateChildren(t)),
                                r.children.forEach((t) => {
                                    t instanceof T && (s.push(e ? t.getComponent() : t), i && (s = s.concat(this.getTreeChildren(t, e, i))));
                                })),
                            s
                        );
                    }
                    getChildField() {
                        return this.field;
                    }
                    redrawNeeded(t) {
                        return (!!this.field && void 0 !== t[this.field]) || (!!this.elementField && void 0 !== t[this.elementField]);
                    }
                }
                P.moduleName = "dataTree";
                var k = {
                    csv: function (t, e = {}, i) {
                        var r = e.delimiter ? e.delimiter : ",",
                            s = [],
                            a = [];
                        t.forEach((t) => {
                            var e = [];
                            switch (t.type) {
                                case "group":
                                    console.warn("Download Warning - CSV downloader cannot process row groups");
                                    break;
                                case "calc":
                                    console.warn("Download Warning - CSV downloader cannot process column calculations");
                                    break;
                                case "header":
                                    t.columns.forEach((t, e) => {
                                        t && 1 === t.depth && (a[e] = void 0 === t.value || null === t.value ? "" : '"' + String(t.value).split('"').join('""') + '"');
                                    });
                                    break;
                                case "row":
                                    t.columns.forEach((t) => {
                                        if (t) {
                                            switch (typeof t.value) {
                                                case "object":
                                                    t.value = null !== t.value ? JSON.stringify(t.value) : "";
                                                    break;
                                                case "undefined":
                                                    t.value = "";
                                            }
                                            e.push('"' + String(t.value).split('"').join('""') + '"');
                                        }
                                    }),
                                        s.push(e.join(r));
                            }
                        }),
                            a.length && s.unshift(a.join(r)),
                            (s = s.join("\n")),
                            e.bom && (s = "\ufeff" + s),
                            i(s, "text/csv");
                    },
                    json: function (t, e, i) {
                        var r = [];
                        t.forEach((t) => {
                            var e = {};
                            switch (t.type) {
                                case "header":
                                    break;
                                case "group":
                                    console.warn("Download Warning - JSON downloader cannot process row groups");
                                    break;
                                case "calc":
                                    console.warn("Download Warning - JSON downloader cannot process column calculations");
                                    break;
                                case "row":
                                    t.columns.forEach((t) => {
                                        t && (e[t.component.getTitleDownload() || t.component.getField()] = t.value);
                                    }),
                                        r.push(e);
                            }
                        }),
                            i((r = JSON.stringify(r, null, "\t")), "application/json");
                    },
                    jsonLines: function (t, e, i) {
                        var r = [];
                        t.forEach((t) => {
                            var e = {};
                            switch (t.type) {
                                case "header":
                                    break;
                                case "group":
                                    console.warn("Download Warning - JSON downloader cannot process row groups");
                                    break;
                                case "calc":
                                    console.warn("Download Warning - JSON downloader cannot process column calculations");
                                    break;
                                case "row":
                                    t.columns.forEach((t) => {
                                        t && (e[t.component.getTitleDownload() || t.component.getField()] = t.value);
                                    }),
                                        r.push(JSON.stringify(e));
                            }
                        }),
                            i(r.join("\n"), "application/x-ndjson");
                    },
                    pdf: function (t, e = {}, i) {
                        var r = [],
                            s = [],
                            a = {},
                            n = e.rowGroupStyles || { fontStyle: "bold", fontSize: 12, cellPadding: 6, fillColor: 220 },
                            o = e.rowCalcStyles || { fontStyle: "bold", fontSize: 10, cellPadding: 4, fillColor: 232 },
                            l = e.jsPDF || {},
                            h = e.title ? e.title : "";
                        function c(t, e) {
                            var i = [];
                            return (
                                t.columns.forEach((t) => {
                                    var r;
                                    if (t) {
                                        switch (typeof t.value) {
                                            case "object":
                                                t.value = null !== t.value ? JSON.stringify(t.value) : "";
                                                break;
                                            case "undefined":
                                                t.value = "";
                                        }
                                        (r = { content: t.value, colSpan: t.width, rowSpan: t.height }), e && (r.styles = e), i.push(r);
                                    }
                                }),
                                i
                            );
                        }
                        l.orientation || (l.orientation = e.orientation || "landscape"),
                            l.unit || (l.unit = "pt"),
                            t.forEach((t) => {
                                switch (t.type) {
                                    case "header":
                                        r.push(c(t));
                                        break;
                                    case "group":
                                        s.push(c(t, n));
                                        break;
                                    case "calc":
                                        s.push(c(t, o));
                                        break;
                                    case "row":
                                        s.push(c(t));
                                }
                            });
                        var d = new jspdf.jsPDF(l);
                        e.autoTable && (a = "function" == typeof e.autoTable ? e.autoTable(d) || {} : e.autoTable),
                            h &&
                                (a.didDrawPage = function (t) {
                                    d.text(h, 40, 30);
                                }),
                            (a.head = r),
                            (a.body = s),
                            d.autoTable(a),
                            e.documentProcessing && e.documentProcessing(d),
                            i(d.output("arraybuffer"), "application/pdf");
                    },
                    xlsx: function (t, e, i) {
                        var r = e.sheetName || "Sheet1",
                            s = XLSX.utils.book_new(),
                            a = new n(this),
                            o = !("compress" in e) || e.compress,
                            l = e.writeOptions || { bookType: "xlsx", bookSST: !0, compression: o };
                        function h() {
                            var e = [],
                                i = [],
                                r = {},
                                s = { s: { c: 0, r: 0 }, e: { c: t[0] ? t[0].columns.reduce((t, e) => t + (e && e.width ? e.width : 1), 0) : 0, r: t.length } };
                            return (
                                t.forEach((t, r) => {
                                    var s = [];
                                    t.columns.forEach(function (t, e) {
                                        t
                                            ? (s.push(t.value instanceof Date || "object" != typeof t.value ? t.value : JSON.stringify(t.value)),
                                              (t.width > 1 || t.height > -1) && (t.height > 1 || t.width > 1) && i.push({ s: { r, c: e }, e: { r: r + t.height - 1, c: e + t.width - 1 } }))
                                            : s.push("");
                                    }),
                                        e.push(s);
                                }),
                                XLSX.utils.sheet_add_aoa(r, e),
                                (r["!ref"] = XLSX.utils.encode_range(s)),
                                i.length && (r["!merges"] = i),
                                r
                            );
                        }
                        if (((l.type = "binary"), (s.SheetNames = []), (s.Sheets = {}), e.sheetOnly)) i(h());
                        else {
                            if (e.sheets)
                                for (var c in e.sheets)
                                    !0 === e.sheets[c]
                                        ? (s.SheetNames.push(c), (s.Sheets[c] = h()))
                                        : (s.SheetNames.push(c),
                                          a.commsSend(e.sheets[c], "download", "intercept", {
                                              type: "xlsx",
                                              options: { sheetOnly: !0 },
                                              active: this.active,
                                              intercept: function (t) {
                                                  s.Sheets[c] = t;
                                              },
                                          }));
                            else s.SheetNames.push(r), (s.Sheets[r] = h());
                            e.documentProcessing && (s = e.documentProcessing(s)),
                                i(
                                    (function (t) {
                                        for (var e = new ArrayBuffer(t.length), i = new Uint8Array(e), r = 0; r != t.length; ++r) i[r] = 255 & t.charCodeAt(r);
                                        return e;
                                    })(XLSX.write(s, l)),
                                    "application/octet-stream"
                                );
                        }
                    },
                    html: function (t, e, i) {
                        this.modExists("export", !0) && i(this.modules.export.generateHTMLTable(t), "text/html");
                    },
                };
                class A extends h {
                    constructor(t) {
                        super(t),
                            this.registerTableOption("downloadEncoder", function (t, e) {
                                return new Blob([t], { type: e });
                            }),
                            this.registerTableOption("downloadReady", void 0),
                            this.registerTableOption("downloadConfig", {}),
                            this.registerTableOption("downloadRowRange", "active"),
                            this.registerColumnOption("download"),
                            this.registerColumnOption("titleDownload");
                    }
                    initialize() {
                        this.deprecatedOptionsCheck(), this.registerTableFunction("download", this.download.bind(this)), this.registerTableFunction("downloadToTab", this.downloadToTab.bind(this));
                    }
                    deprecatedOptionsCheck() {
                        this.deprecationCheck("downloadReady", "downloadEncoder");
                    }
                    downloadToTab(t, e, i, r) {
                        this.download(t, e, i, r, !0);
                    }
                    download(t, e, i, r, s) {
                        var a = !1;
                        if (("function" == typeof t ? (a = t) : A.downloaders[t] ? (a = A.downloaders[t]) : console.warn("Download Error - No such download type found: ", t), a)) {
                            var n = this.generateExportList(r);
                            a.call(
                                this.table,
                                n,
                                i || {},
                                function (i, r) {
                                    s ? (!0 === s ? this.triggerDownload(i, r, t, e, !0) : s(i)) : this.triggerDownload(i, r, t, e);
                                }.bind(this)
                            );
                        }
                    }
                    generateExportList(t) {
                        var e = this.table.modules.export.generateExportList(this.table.options.downloadConfig, !1, t || this.table.options.downloadRowRange, "download"),
                            i = this.table.options.groupHeaderDownload;
                        return (
                            i && !Array.isArray(i) && (i = [i]),
                            e.forEach((t) => {
                                var e;
                                "group" === t.type && ((e = t.columns[0]), i && i[t.indent] && (e.value = i[t.indent](e.value, t.component._group.getRowCount(), t.component._group.getData(), t.component)));
                            }),
                            e
                        );
                    }
                    triggerDownload(t, e, i, r, s) {
                        var a = document.createElement("a"),
                            n = this.table.options.downloadEncoder(t, e);
                        n &&
                            (s
                                ? window.open(window.URL.createObjectURL(n))
                                : ((r = r || "Tabulator." + ("function" == typeof i ? "txt" : i)),
                                  navigator.msSaveOrOpenBlob
                                      ? navigator.msSaveOrOpenBlob(n, r)
                                      : (a.setAttribute("href", window.URL.createObjectURL(n)), a.setAttribute("download", r), (a.style.display = "none"), document.body.appendChild(a), a.click(), document.body.removeChild(a))),
                            this.dispatchExternal("downloadComplete"));
                    }
                    commsReceived(t, e, i) {
                        if ("intercept" === e) this.download(i.type, "", i.options, i.active, i.intercept);
                    }
                }
                function D(t, e) {
                    var i = e.mask,
                        r = void 0 !== e.maskLetterChar ? e.maskLetterChar : "A",
                        s = void 0 !== e.maskNumberChar ? e.maskNumberChar : "9",
                        a = void 0 !== e.maskWildcardChar ? e.maskWildcardChar : "*";
                    function n(e) {
                        var o = i[e];
                        void 0 !== o && o !== a && o !== r && o !== s && ((t.value = t.value + "" + o), n(e + 1));
                    }
                    t.addEventListener("keydown", (e) => {
                        var n = t.value.length,
                            o = e.key;
                        if (e.keyCode > 46 && !e.ctrlKey && !e.metaKey) {
                            if (n >= i.length) return e.preventDefault(), e.stopPropagation(), !1;
                            switch (i[n]) {
                                case r:
                                    if (o.toUpperCase() == o.toLowerCase()) return e.preventDefault(), e.stopPropagation(), !1;
                                    break;
                                case s:
                                    if (isNaN(o)) return e.preventDefault(), e.stopPropagation(), !1;
                                    break;
                                case a:
                                    break;
                                default:
                                    if (o !== i[n]) return e.preventDefault(), e.stopPropagation(), !1;
                            }
                        }
                    }),
                        t.addEventListener("keyup", (i) => {
                            i.keyCode > 46 && e.maskAutoFill && n(t.value.length);
                        }),
                        t.placeholder || (t.placeholder = i),
                        e.maskAutoFill && n(t.value.length);
                }
                (A.moduleName = "download"), (A.downloaders = k);
                class L {
                    constructor(t, e, i, r, s, a) {
                        (this.edit = t),
                            (this.table = t.table),
                            (this.cell = e),
                            (this.params = this._initializeParams(a)),
                            (this.data = []),
                            (this.displayItems = []),
                            (this.currentItems = []),
                            (this.focusedItem = null),
                            (this.input = this._createInputElement()),
                            (this.listEl = this._createListElement()),
                            (this.initialValues = null),
                            (this.isFilter = "header" === e.getType()),
                            (this.filterTimeout = null),
                            (this.filtered = !1),
                            (this.typing = !1),
                            (this.values = []),
                            (this.popup = null),
                            (this.listIteration = 0),
                            (this.lastAction = ""),
                            (this.filterTerm = ""),
                            (this.blurable = !0),
                            (this.actions = { success: r, cancel: s }),
                            this._deprecatedOptionsCheck(),
                            this._initializeValue(),
                            i(this._onRendered.bind(this));
                    }
                    _deprecatedOptionsCheck() {
                        this.params.listItemFormatter && this.cell.getTable().deprecationAdvisor.msg("The listItemFormatter editor param has been deprecated, please see the latest editor documentation for updated options"),
                            this.params.sortValuesList && this.cell.getTable().deprecationAdvisor.msg("The sortValuesList editor param has been deprecated, please see the latest editor documentation for updated options"),
                            this.params.searchFunc && this.cell.getTable().deprecationAdvisor.msg("The searchFunc editor param has been deprecated, please see the latest editor documentation for updated options"),
                            this.params.searchingPlaceholder && this.cell.getTable().deprecationAdvisor.msg("The searchingPlaceholder editor param has been deprecated, please see the latest editor documentation for updated options");
                    }
                    _initializeValue() {
                        var t = this.cell.getValue();
                        void 0 === t && void 0 !== this.params.defaultValue && (t = this.params.defaultValue),
                            (this.initialValues = this.params.multiselect ? t : [t]),
                            this.isFilter && ((this.input.value = this.initialValues ? this.initialValues.join(",") : ""), this.headerFilterInitialListGen());
                    }
                    _onRendered() {
                        var t = this.cell.getElement();
                        function e(t) {
                            t.stopPropagation();
                        }
                        this.isFilter || ((this.input.style.height = "100%"), this.input.focus({ preventScroll: !0 })),
                            t.addEventListener("click", e),
                            setTimeout(() => {
                                t.removeEventListener("click", e);
                            }, 1e3),
                            this.input.addEventListener("mousedown", this._preventPopupBlur.bind(this));
                    }
                    _createListElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-edit-list"), t.addEventListener("mousedown", this._preventBlur.bind(this)), t.addEventListener("keydown", this._inputKeyDown.bind(this)), t;
                    }
                    _setListWidth() {
                        var t = this.isFilter ? this.input : this.cell.getElement();
                        (this.listEl.style.minWidth = t.offsetWidth + "px"),
                            this.params.maxWidth &&
                                (!0 === this.params.maxWidth
                                    ? (this.listEl.style.maxWidth = t.offsetWidth + "px")
                                    : "number" == typeof this.params.maxWidth
                                    ? (this.listEl.style.maxWidth = this.params.maxWidth + "px")
                                    : (this.listEl.style.maxWidth = this.params.maxWidth));
                    }
                    _createInputElement() {
                        var t = this.params.elementAttributes,
                            e = document.createElement("input");
                        if (
                            (e.setAttribute("type", this.params.clearable ? "search" : "text"),
                            (e.style.padding = "4px"),
                            (e.style.width = "100%"),
                            (e.style.boxSizing = "border-box"),
                            this.params.autocomplete || ((e.style.cursor = "default"), (e.style.caretColor = "transparent")),
                            t && "object" == typeof t)
                        )
                            for (var i in t) "+" == i.charAt(0) ? ((i = i.slice(1)), e.setAttribute(i, e.getAttribute(i) + t["+" + i])) : e.setAttribute(i, t[i]);
                        return this.params.mask && D(e, this.params), this._bindInputEvents(e), e;
                    }
                    _initializeParams(t) {
                        var e,
                            i = ["values", "valuesURL", "valuesLookup"];
                        return (
                            ((t = Object.assign({}, t)).verticalNavigation = t.verticalNavigation || "editor"),
                            (t.placeholderLoading = void 0 === t.placeholderLoading ? "Searching ..." : t.placeholderLoading),
                            (t.placeholderEmpty = void 0 === t.placeholderEmpty ? "No Results Found" : t.placeholderEmpty),
                            (t.filterDelay = void 0 === t.filterDelay ? 300 : t.filterDelay),
                            (t.emptyValue = Object.keys(t).includes("emptyValue") ? t.emptyValue : ""),
                            (e = Object.keys(t).filter((t) => i.includes(t)).length)
                                ? e > 1 && console.warn("list editor config error - only one of the values, valuesURL, or valuesLookup options can be set on the same editor")
                                : console.warn("list editor config error - either the values, valuesURL, or valuesLookup option must be set"),
                            t.autocomplete
                                ? t.multiselect && ((t.multiselect = !1), console.warn("list editor config error - multiselect option is not available when autocomplete is enabled"))
                                : (t.freetext && ((t.freetext = !1), console.warn("list editor config error - freetext option is only available when autocomplete is enabled")),
                                  t.filterFunc && ((t.filterFunc = !1), console.warn("list editor config error - filterFunc option is only available when autocomplete is enabled")),
                                  t.filterRemote && ((t.filterRemote = !1), console.warn("list editor config error - filterRemote option is only available when autocomplete is enabled")),
                                  t.mask && ((t.mask = !1), console.warn("list editor config error - mask option is only available when autocomplete is enabled")),
                                  t.allowEmpty && ((t.allowEmpty = !1), console.warn("list editor config error - allowEmpty option is only available when autocomplete is enabled")),
                                  t.listOnEmpty && ((t.listOnEmpty = !1), console.warn("list editor config error - listOnEmpty option is only available when autocomplete is enabled"))),
                            t.filterRemote &&
                                "function" != typeof t.valuesLookup &&
                                !t.valuesURL &&
                                ((t.filterRemote = !1), console.warn("list editor config error - filterRemote option should only be used when values list is populated from a remote source")),
                            t
                        );
                    }
                    _bindInputEvents(t) {
                        t.addEventListener("focus", this._inputFocus.bind(this)),
                            t.addEventListener("click", this._inputClick.bind(this)),
                            t.addEventListener("blur", this._inputBlur.bind(this)),
                            t.addEventListener("keydown", this._inputKeyDown.bind(this)),
                            t.addEventListener("search", this._inputSearch.bind(this)),
                            this.params.autocomplete && t.addEventListener("keyup", this._inputKeyUp.bind(this));
                    }
                    _inputFocus(t) {
                        this.rebuildOptionsList();
                    }
                    _filter() {
                        this.params.filterRemote
                            ? (clearTimeout(this.filterTimeout),
                              (this.filterTimeout = setTimeout(() => {
                                  this.rebuildOptionsList();
                              }, this.params.filterDelay)))
                            : this._filterList();
                    }
                    _inputClick(t) {
                        t.stopPropagation();
                    }
                    _inputBlur(t) {
                        this.blurable && (this.popup ? this.popup.hide() : this._resolveValue(!0));
                    }
                    _inputSearch() {
                        this._clearChoices();
                    }
                    _inputKeyDown(t) {
                        switch (t.keyCode) {
                            case 38:
                                this._keyUp(t);
                                break;
                            case 40:
                                this._keyDown(t);
                                break;
                            case 37:
                            case 39:
                                this._keySide(t);
                                break;
                            case 13:
                                this._keyEnter();
                                break;
                            case 27:
                                this._keyEsc();
                                break;
                            case 36:
                            case 35:
                                this._keyHomeEnd(t);
                                break;
                            case 9:
                                this._keyTab(t);
                                break;
                            default:
                                this._keySelectLetter(t);
                        }
                    }
                    _inputKeyUp(t) {
                        switch (t.keyCode) {
                            case 38:
                            case 37:
                            case 39:
                            case 40:
                            case 13:
                            case 27:
                                break;
                            default:
                                this._keyAutoCompLetter(t);
                        }
                    }
                    _preventPopupBlur() {
                        this.popup && this.popup.blockHide(),
                            setTimeout(() => {
                                this.popup && this.popup.restoreHide();
                            }, 10);
                    }
                    _preventBlur() {
                        (this.blurable = !1),
                            setTimeout(() => {
                                this.blurable = !0;
                            }, 10);
                    }
                    _keyTab(t) {
                        this.params.autocomplete && "typing" === this.lastAction ? this._resolveValue(!0) : this.focusedItem && this._chooseItem(this.focusedItem, !0);
                    }
                    _keyUp(t) {
                        var e = this.displayItems.indexOf(this.focusedItem);
                        ("editor" == this.params.verticalNavigation || ("hybrid" == this.params.verticalNavigation && e)) &&
                            (t.stopImmediatePropagation(), t.stopPropagation(), t.preventDefault(), e > 0 && this._focusItem(this.displayItems[e - 1]));
                    }
                    _keyDown(t) {
                        var e = this.displayItems.indexOf(this.focusedItem);
                        ("editor" == this.params.verticalNavigation || ("hybrid" == this.params.verticalNavigation && e < this.displayItems.length - 1)) &&
                            (t.stopImmediatePropagation(), t.stopPropagation(), t.preventDefault(), e < this.displayItems.length - 1 && (-1 == e ? this._focusItem(this.displayItems[0]) : this._focusItem(this.displayItems[e + 1])));
                    }
                    _keySide(t) {
                        this.params.autocomplete || (t.stopImmediatePropagation(), t.stopPropagation(), t.preventDefault());
                    }
                    _keyEnter(t) {
                        this.params.autocomplete && "typing" === this.lastAction ? this._resolveValue(!0) : this.focusedItem && this._chooseItem(this.focusedItem);
                    }
                    _keyEsc(t) {
                        this._cancel();
                    }
                    _keyHomeEnd(t) {
                        this.params.autocomplete && t.stopImmediatePropagation();
                    }
                    _keySelectLetter(t) {
                        this.params.autocomplete || (t.preventDefault(), t.keyCode >= 38 && t.keyCode <= 90 && this._scrollToValue(t.keyCode));
                    }
                    _keyAutoCompLetter(t) {
                        this._filter(), (this.lastAction = "typing"), (this.typing = !0);
                    }
                    _scrollToValue(t) {
                        clearTimeout(this.filterTimeout);
                        var e = String.fromCharCode(t).toLowerCase();
                        this.filterTerm += e.toLowerCase();
                        var i = this.displayItems.find((t) => void 0 !== t.label && t.label.toLowerCase().startsWith(this.filterTerm));
                        i && this._focusItem(i),
                            (this.filterTimeout = setTimeout(() => {
                                this.filterTerm = "";
                            }, 800));
                    }
                    _focusItem(t) {
                        (this.lastAction = "focus"),
                            this.focusedItem && this.focusedItem.element && this.focusedItem.element.classList.remove("focused"),
                            (this.focusedItem = t),
                            t && t.element && (t.element.classList.add("focused"), t.element.scrollIntoView({ behavior: "smooth", block: "nearest", inline: "start" }));
                    }
                    headerFilterInitialListGen() {
                        this._generateOptions(!0);
                    }
                    rebuildOptionsList() {
                        this._generateOptions()
                            .then(this._sortOptions.bind(this))
                            .then(this._buildList.bind(this))
                            .then(this._showList.bind(this))
                            .catch((t) => {
                                Number.isInteger(t) || console.error("List generation error", t);
                            });
                    }
                    _filterList() {
                        this._buildList(this._filterOptions()), this._showList();
                    }
                    _generateOptions(t) {
                        var e = [],
                            i = ++this.listIteration;
                        return (
                            (this.filtered = !1),
                            this.params.values
                                ? (e = this.params.values)
                                : this.params.valuesURL
                                ? (e = this._ajaxRequest(this.params.valuesURL, this.input.value))
                                : "function" == typeof this.params.valuesLookup
                                ? (e = this.params.valuesLookup(this.cell, this.input.value))
                                : this.params.valuesLookup && (e = this._uniqueColumnValues(this.params.valuesLookupField)),
                            e instanceof Promise ? (t || this._addPlaceholder(this.params.placeholderLoading), e.then().then((t) => (this.listIteration === i ? this._parseList(t) : Promise.reject(i)))) : Promise.resolve(this._parseList(e))
                        );
                    }
                    _addPlaceholder(t) {
                        var e = document.createElement("div");
                        "function" == typeof t && (t = t(this.cell.getComponent(), this.listEl)),
                            t && (this._clearList(), t instanceof HTMLElement ? (e = t) : (e.classList.add("tabulator-edit-list-placeholder"), (e.innerHTML = t)), this.listEl.appendChild(e), this._showList());
                    }
                    _ajaxRequest(t, e) {
                        return (
                            (t = p(t, {}, this.params.filterRemote ? { term: e } : {})),
                            fetch(t)
                                .then((t) =>
                                    t.ok
                                        ? t.json().catch((t) => (console.warn("List Ajax Load Error - Invalid JSON returned", t), Promise.reject(t)))
                                        : (console.error("List Ajax Load Error - Connection Error: " + t.status, t.statusText), Promise.reject(t))
                                )
                                .catch((t) => (console.error("List Ajax Load Error - Connection Error: ", t), Promise.reject(t)))
                        );
                    }
                    _uniqueColumnValues(t) {
                        var e,
                            i = {},
                            r = this.table.getData(this.params.valuesLookup);
                        return (
                            (e = t ? this.table.columnManager.getColumnByField(t) : this.cell.getColumn()._getSelf())
                                ? r.forEach((t) => {
                                      var r = e.getFieldValue(t);
                                      null != r && "" !== r && (i[r] = !0);
                                  })
                                : (console.warn("unable to find matching column to create select lookup list:", t), (i = [])),
                            Object.keys(i)
                        );
                    }
                    _parseList(t) {
                        var e = [];
                        return (
                            Array.isArray(t) || (t = Object.entries(t).map(([t, e]) => ({ label: e, value: t }))),
                            t.forEach((t) => {
                                "object" != typeof t && (t = { label: t, value: t }), this._parseListItem(t, e, 0);
                            }),
                            !this.currentItems.length && this.params.freetext && ((this.input.value = this.initialValues), (this.typing = !0), (this.lastAction = "typing")),
                            (this.data = e),
                            e
                        );
                    }
                    _parseListItem(t, e, i) {
                        var r = {};
                        t.options
                            ? (r = this._parseListGroup(t, i + 1))
                            : ((r = { label: t.label, value: t.value, itemParams: t.itemParams, elementAttributes: t.elementAttributes, element: !1, selected: !1, visible: !0, level: i, original: t }),
                              this.initialValues && this.initialValues.indexOf(t.value) > -1 && this._chooseItem(r, !0)),
                            e.push(r);
                    }
                    _parseListGroup(t, e) {
                        var i = { label: t.label, group: !0, itemParams: t.itemParams, elementAttributes: t.elementAttributes, element: !1, visible: !0, level: e, options: [], original: t };
                        return (
                            t.options.forEach((t) => {
                                this._parseListItem(t, i.options, e);
                            }),
                            i
                        );
                    }
                    _sortOptions(t) {
                        var e;
                        return this.params.sort && ((e = "function" == typeof this.params.sort ? this.params.sort : this._defaultSortFunction.bind(this)), this._sortGroup(e, t)), t;
                    }
                    _sortGroup(t, e) {
                        e.sort((e, i) => t(e.label, i.label, e.value, i.value, e.original, i.original)),
                            e.forEach((e) => {
                                e.group && this._sortGroup(t, e.options);
                            });
                    }
                    _defaultSortFunction(t, e) {
                        var i,
                            r,
                            s,
                            a,
                            n,
                            o = 0,
                            l = /(\d+)|(\D+)/g,
                            h = /\d/,
                            c = 0;
                        if ("desc" === this.params.sort) {
                            var d = [e, t];
                            (t = d[0]), (e = d[1]);
                        }
                        if (t || 0 === t) {
                            if (e || 0 === e) {
                                if (isFinite(t) && isFinite(e)) return t - e;
                                if ((i = String(t).toLowerCase()) === (r = String(e).toLowerCase())) return 0;
                                if (!h.test(i) || !h.test(r)) return i > r ? 1 : -1;
                                for (i = i.match(l), r = r.match(l), n = i.length > r.length ? r.length : i.length; o < n; )
                                    if ((s = i[o]) !== (a = r[o++])) return isFinite(s) && isFinite(a) ? ("0" === s.charAt(0) && (s = "." + s), "0" === a.charAt(0) && (a = "." + a), s - a) : s > a ? 1 : -1;
                                return i.length > r.length;
                            }
                            c = 1;
                        } else c = e || 0 === e ? -1 : 0;
                        return c;
                    }
                    _filterOptions() {
                        var t = this.params.filterFunc || this._defaultFilterFunc,
                            e = this.input.value;
                        return (
                            e
                                ? ((this.filtered = !0),
                                  this.data.forEach((i) => {
                                      this._filterItem(t, e, i);
                                  }))
                                : (this.filtered = !1),
                            this.data
                        );
                    }
                    _filterItem(t, e, i) {
                        var r = !1;
                        return (
                            i.group
                                ? (i.options.forEach((i) => {
                                      this._filterItem(t, e, i) && (r = !0);
                                  }),
                                  (i.visible = r))
                                : (i.visible = t(e, i.label, i.value, i.original)),
                            i.visible
                        );
                    }
                    _defaultFilterFunc(t, e, i, r) {
                        return (t = String(t).toLowerCase()), null != e && (String(e).toLowerCase().indexOf(t) > -1 || String(i).toLowerCase().indexOf(t) > -1);
                    }
                    _clearList() {
                        for (; this.listEl.firstChild; ) this.listEl.removeChild(this.listEl.firstChild);
                        this.displayItems = [];
                    }
                    _buildList(t) {
                        this._clearList(),
                            t.forEach((t) => {
                                this._buildItem(t);
                            }),
                            this.displayItems.length || this._addPlaceholder(this.params.placeholderEmpty);
                    }
                    _buildItem(t) {
                        var e,
                            i = t.element;
                        if (!this.filtered || t.visible) {
                            if (!i) {
                                if (
                                    (((i = document.createElement("div")).tabIndex = 0),
                                    (e = this.params.itemFormatter ? this.params.itemFormatter(t.label, t.value, t.original, i) : t.label) instanceof HTMLElement ? i.appendChild(e) : (i.innerHTML = e),
                                    t.group ? i.classList.add("tabulator-edit-list-group") : i.classList.add("tabulator-edit-list-item"),
                                    i.classList.add("tabulator-edit-list-group-level-" + t.level),
                                    t.elementAttributes && "object" == typeof t.elementAttributes)
                                )
                                    for (var r in t.elementAttributes) "+" == r.charAt(0) ? ((r = r.slice(1)), i.setAttribute(r, this.input.getAttribute(r) + t.elementAttributes["+" + r])) : i.setAttribute(r, t.elementAttributes[r]);
                                t.group ? i.addEventListener("click", this._groupClick.bind(this, t)) : i.addEventListener("click", this._itemClick.bind(this, t)),
                                    i.addEventListener("mousedown", this._preventBlur.bind(this)),
                                    (t.element = i);
                            }
                            this._styleItem(t),
                                this.listEl.appendChild(i),
                                t.group
                                    ? t.options.forEach((t) => {
                                          this._buildItem(t);
                                      })
                                    : this.displayItems.push(t);
                        }
                    }
                    _showList() {
                        var t = this.popup && this.popup.isVisible();
                        if (this.input.parentNode) {
                            if (this.params.autocomplete && "" === this.input.value && !this.params.listOnEmpty) return void (this.popup && this.popup.hide(!0));
                            this._setListWidth(),
                                this.popup || (this.popup = this.edit.popup(this.listEl)),
                                this.popup.show(this.cell.getElement(), "bottom"),
                                t ||
                                    setTimeout(() => {
                                        this.popup.hideOnBlur(this._resolveValue.bind(this, !0));
                                    }, 10);
                        }
                    }
                    _styleItem(t) {
                        t && t.element && (t.selected ? t.element.classList.add("active") : t.element.classList.remove("active"));
                    }
                    _itemClick(t, e) {
                        e.stopPropagation(), this._chooseItem(t);
                    }
                    _groupClick(t, e) {
                        e.stopPropagation();
                    }
                    _cancel() {
                        this.popup.hide(!0), this.actions.cancel();
                    }
                    _clearChoices() {
                        (this.typing = !0),
                            this.currentItems.forEach((t) => {
                                (t.selected = !1), this._styleItem(t);
                            }),
                            (this.currentItems = []),
                            (this.focusedItem = null);
                    }
                    _chooseItem(t, e) {
                        var i;
                        (this.typing = !1),
                            this.params.multiselect
                                ? ((i = this.currentItems.indexOf(t)) > -1 ? (this.currentItems.splice(i, 1), (t.selected = !1)) : (this.currentItems.push(t), (t.selected = !0)),
                                  (this.input.value = this.currentItems.map((t) => t.label).join(",")),
                                  this._styleItem(t))
                                : ((this.currentItems = [t]), (t.selected = !0), (this.input.value = t.label), this._styleItem(t), e || this._resolveValue()),
                            this._focusItem(t);
                    }
                    _resolveValue(t) {
                        var e, i;
                        if ((this.popup && this.popup.hide(!0), this.params.multiselect)) e = this.currentItems.map((t) => t.value);
                        else if (t && this.params.autocomplete && this.typing) {
                            if (!(this.params.freetext || (this.params.allowEmpty && "" === this.input.value))) return void this.actions.cancel();
                            e = this.input.value;
                        } else e = this.currentItems[0] ? this.currentItems[0].value : null == (i = Array.isArray(this.initialValues) ? this.initialValues[0] : this.initialValues) || "" === i ? i : this.params.emptyValue;
                        "" === e && (e = this.params.emptyValue), this.actions.success(e), this.isFilter && ((this.initialValues = e && !Array.isArray(e) ? [e] : e), (this.currentItems = []));
                    }
                }
                var I = {
                    input: function (t, e, i, r, s) {
                        var a = t.getValue(),
                            n = document.createElement("input");
                        if ((n.setAttribute("type", s.search ? "search" : "text"), (n.style.padding = "4px"), (n.style.width = "100%"), (n.style.boxSizing = "border-box"), s.elementAttributes && "object" == typeof s.elementAttributes))
                            for (var o in s.elementAttributes) "+" == o.charAt(0) ? ((o = o.slice(1)), n.setAttribute(o, n.getAttribute(o) + s.elementAttributes["+" + o])) : n.setAttribute(o, s.elementAttributes[o]);
                        function l(t) {
                            (null == a && "" !== n.value) || n.value !== a ? i(n.value) && (a = n.value) : r();
                        }
                        return (
                            (n.value = void 0 !== a ? a : ""),
                            e(function () {
                                "cell" === t.getType() && (n.focus({ preventScroll: !0 }), (n.style.height = "100%"), s.selectContents && n.select());
                            }),
                            n.addEventListener("change", l),
                            n.addEventListener("blur", l),
                            n.addEventListener("keydown", function (t) {
                                switch (t.keyCode) {
                                    case 13:
                                        l();
                                        break;
                                    case 27:
                                        r();
                                        break;
                                    case 35:
                                    case 36:
                                        t.stopPropagation();
                                }
                            }),
                            s.mask && D(n, s),
                            n
                        );
                    },
                    textarea: function (t, e, i, r, s) {
                        var a = t.getValue(),
                            n = s.verticalNavigation || "hybrid",
                            o = String(null != a ? a : ""),
                            l = document.createElement("textarea"),
                            h = 0;
                        if (
                            ((l.style.display = "block"),
                            (l.style.padding = "2px"),
                            (l.style.height = "100%"),
                            (l.style.width = "100%"),
                            (l.style.boxSizing = "border-box"),
                            (l.style.whiteSpace = "pre-wrap"),
                            (l.style.resize = "none"),
                            s.elementAttributes && "object" == typeof s.elementAttributes)
                        )
                            for (var c in s.elementAttributes) "+" == c.charAt(0) ? ((c = c.slice(1)), l.setAttribute(c, l.getAttribute(c) + s.elementAttributes["+" + c])) : l.setAttribute(c, s.elementAttributes[c]);
                        function d(e) {
                            (null == a && "" !== l.value) || l.value !== a
                                ? (i(l.value) && (a = l.value),
                                  setTimeout(function () {
                                      t.getRow().normalizeHeight();
                                  }, 300))
                                : r();
                        }
                        return (
                            (l.value = o),
                            e(function () {
                                "cell" === t.getType() && (l.focus({ preventScroll: !0 }), (l.style.height = "100%"), l.scrollHeight, (l.style.height = l.scrollHeight + "px"), t.getRow().normalizeHeight(), s.selectContents && l.select());
                            }),
                            l.addEventListener("change", d),
                            l.addEventListener("blur", d),
                            l.addEventListener("keyup", function () {
                                l.style.height = "";
                                var e = l.scrollHeight;
                                (l.style.height = e + "px"), e != h && ((h = e), t.getRow().normalizeHeight());
                            }),
                            l.addEventListener("keydown", function (t) {
                                switch (t.keyCode) {
                                    case 13:
                                        t.shiftKey && s.shiftEnterSubmit && d();
                                        break;
                                    case 27:
                                        r();
                                        break;
                                    case 38:
                                        ("editor" == n || ("hybrid" == n && l.selectionStart)) && (t.stopImmediatePropagation(), t.stopPropagation());
                                        break;
                                    case 40:
                                        ("editor" == n || ("hybrid" == n && l.selectionStart !== l.value.length)) && (t.stopImmediatePropagation(), t.stopPropagation());
                                        break;
                                    case 35:
                                    case 36:
                                        t.stopPropagation();
                                }
                            }),
                            s.mask && D(l, s),
                            l
                        );
                    },
                    number: function (t, e, i, r, s) {
                        var a = t.getValue(),
                            n = s.verticalNavigation || "editor",
                            o = document.createElement("input");
                        if (
                            (o.setAttribute("type", "number"),
                            void 0 !== s.max && o.setAttribute("max", s.max),
                            void 0 !== s.min && o.setAttribute("min", s.min),
                            void 0 !== s.step && o.setAttribute("step", s.step),
                            (o.style.padding = "4px"),
                            (o.style.width = "100%"),
                            (o.style.boxSizing = "border-box"),
                            s.elementAttributes && "object" == typeof s.elementAttributes)
                        )
                            for (var l in s.elementAttributes) "+" == l.charAt(0) ? ((l = l.slice(1)), o.setAttribute(l, o.getAttribute(l) + s.elementAttributes["+" + l])) : o.setAttribute(l, s.elementAttributes[l]);
                        o.value = a;
                        var h = function (t) {
                            c();
                        };
                        function c() {
                            var t = o.value;
                            isNaN(t) || "" === t || (t = Number(t)), t !== a ? i(t) && (a = t) : r();
                        }
                        return (
                            e(function () {
                                "cell" === t.getType() && (o.removeEventListener("blur", h), o.focus({ preventScroll: !0 }), (o.style.height = "100%"), o.addEventListener("blur", h), s.selectContents && o.select());
                            }),
                            o.addEventListener("keydown", function (t) {
                                switch (t.keyCode) {
                                    case 13:
                                        c();
                                        break;
                                    case 27:
                                        r();
                                        break;
                                    case 38:
                                    case 40:
                                        "editor" == n && (t.stopImmediatePropagation(), t.stopPropagation());
                                        break;
                                    case 35:
                                    case 36:
                                        t.stopPropagation();
                                }
                            }),
                            s.mask && D(o, s),
                            o
                        );
                    },
                    range: function (t, e, i, r, s) {
                        var a = t.getValue(),
                            n = document.createElement("input");
                        if (
                            (n.setAttribute("type", "range"),
                            void 0 !== s.max && n.setAttribute("max", s.max),
                            void 0 !== s.min && n.setAttribute("min", s.min),
                            void 0 !== s.step && n.setAttribute("step", s.step),
                            (n.style.padding = "4px"),
                            (n.style.width = "100%"),
                            (n.style.boxSizing = "border-box"),
                            s.elementAttributes && "object" == typeof s.elementAttributes)
                        )
                            for (var o in s.elementAttributes) "+" == o.charAt(0) ? ((o = o.slice(1)), n.setAttribute(o, n.getAttribute(o) + s.elementAttributes["+" + o])) : n.setAttribute(o, s.elementAttributes[o]);
                        function l() {
                            var t = n.value;
                            isNaN(t) || "" === t || (t = Number(t)), t != a ? i(t) && (a = t) : r();
                        }
                        return (
                            (n.value = a),
                            e(function () {
                                "cell" === t.getType() && (n.focus({ preventScroll: !0 }), (n.style.height = "100%"));
                            }),
                            n.addEventListener("blur", function (t) {
                                l();
                            }),
                            n.addEventListener("keydown", function (t) {
                                switch (t.keyCode) {
                                    case 13:
                                        l();
                                        break;
                                    case 27:
                                        r();
                                }
                            }),
                            n
                        );
                    },
                    date: function (t, e, i, r, s) {
                        var a = s.format,
                            n = s.verticalNavigation || "editor",
                            o = a ? window.DateTime || luxon.DateTime : null,
                            l = t.getValue(),
                            h = document.createElement("input");
                        function c(t) {
                            return (o.isDateTime(t) ? t : "iso" === a ? o.fromISO(String(t)) : o.fromFormat(String(t), a)).toFormat("yyyy-MM-dd");
                        }
                        if (
                            ((h.type = "date"),
                            (h.style.padding = "4px"),
                            (h.style.width = "100%"),
                            (h.style.boxSizing = "border-box"),
                            s.max && h.setAttribute("max", a ? c(s.max) : s.max),
                            s.min && h.setAttribute("min", a ? c(s.min) : s.min),
                            s.elementAttributes && "object" == typeof s.elementAttributes)
                        )
                            for (var d in s.elementAttributes) "+" == d.charAt(0) ? ((d = d.slice(1)), h.setAttribute(d, h.getAttribute(d) + s.elementAttributes["+" + d])) : h.setAttribute(d, s.elementAttributes[d]);
                        function u() {
                            var t,
                                e = h.value;
                            if ((null == l && "" !== e) || e !== l) {
                                if (e && a)
                                    switch (((t = o.fromFormat(String(e), "yyyy-MM-dd")), a)) {
                                        case !0:
                                            e = t;
                                            break;
                                        case "iso":
                                            e = t.toISO();
                                            break;
                                        default:
                                            e = t.toFormat(a);
                                    }
                                i(e) && (l = h.value);
                            } else r();
                        }
                        return (
                            (l = void 0 !== l ? l : ""),
                            a && (o ? (l = c(l)) : console.error("Editor Error - 'date' editor 'format' param is dependant on luxon.js")),
                            (h.value = l),
                            e(function () {
                                "cell" === t.getType() && (h.focus({ preventScroll: !0 }), (h.style.height = "100%"), s.selectContents && h.select());
                            }),
                            h.addEventListener("blur", function (t) {
                                (t.relatedTarget || t.rangeParent || t.explicitOriginalTarget !== h) && u();
                            }),
                            h.addEventListener("keydown", function (t) {
                                switch (t.keyCode) {
                                    case 13:
                                        u();
                                        break;
                                    case 27:
                                        r();
                                        break;
                                    case 35:
                                    case 36:
                                        t.stopPropagation();
                                        break;
                                    case 38:
                                    case 40:
                                        "editor" == n && (t.stopImmediatePropagation(), t.stopPropagation());
                                }
                            }),
                            h
                        );
                    },
                    time: function (t, e, i, r, s) {
                        var a,
                            n = s.format,
                            o = s.verticalNavigation || "editor",
                            l = n ? window.DateTime || luxon.DateTime : null,
                            h = t.getValue(),
                            c = document.createElement("input");
                        if (((c.type = "time"), (c.style.padding = "4px"), (c.style.width = "100%"), (c.style.boxSizing = "border-box"), s.elementAttributes && "object" == typeof s.elementAttributes))
                            for (var d in s.elementAttributes) "+" == d.charAt(0) ? ((d = d.slice(1)), c.setAttribute(d, c.getAttribute(d) + s.elementAttributes["+" + d])) : c.setAttribute(d, s.elementAttributes[d]);
                        function u() {
                            var t,
                                e = c.value;
                            if ((null == h && "" !== e) || e !== h) {
                                if (e && n)
                                    switch (((t = l.fromFormat(String(e), "hh:mm")), n)) {
                                        case !0:
                                            e = t;
                                            break;
                                        case "iso":
                                            e = t.toISO();
                                            break;
                                        default:
                                            e = t.toFormat(n);
                                    }
                                i(e) && (h = c.value);
                            } else r();
                        }
                        return (
                            (h = void 0 !== h ? h : ""),
                            n &&
                                (l
                                    ? ((a = l.isDateTime(h) ? h : "iso" === n ? l.fromISO(String(h)) : l.fromFormat(String(h), n)), (h = a.toFormat("hh:mm")))
                                    : console.error("Editor Error - 'date' editor 'format' param is dependant on luxon.js")),
                            (c.value = h),
                            e(function () {
                                "cell" == t.getType() && (c.focus({ preventScroll: !0 }), (c.style.height = "100%"), s.selectContents && c.select());
                            }),
                            c.addEventListener("blur", function (t) {
                                (t.relatedTarget || t.rangeParent || t.explicitOriginalTarget !== c) && u();
                            }),
                            c.addEventListener("keydown", function (t) {
                                switch (t.keyCode) {
                                    case 13:
                                        u();
                                        break;
                                    case 27:
                                        r();
                                        break;
                                    case 35:
                                    case 36:
                                        t.stopPropagation();
                                        break;
                                    case 38:
                                    case 40:
                                        "editor" == o && (t.stopImmediatePropagation(), t.stopPropagation());
                                }
                            }),
                            c
                        );
                    },
                    datetime: function (t, e, i, r, s) {
                        var a,
                            n = s.format,
                            o = s.verticalNavigation || "editor",
                            l = n ? window.DateTime || luxon.DateTime : null,
                            h = t.getValue(),
                            c = document.createElement("input");
                        if (((c.type = "datetime-local"), (c.style.padding = "4px"), (c.style.width = "100%"), (c.style.boxSizing = "border-box"), s.elementAttributes && "object" == typeof s.elementAttributes))
                            for (var d in s.elementAttributes) "+" == d.charAt(0) ? ((d = d.slice(1)), c.setAttribute(d, c.getAttribute(d) + s.elementAttributes["+" + d])) : c.setAttribute(d, s.elementAttributes[d]);
                        function u() {
                            var t,
                                e = c.value;
                            if ((null == h && "" !== e) || e !== h) {
                                if (e && n)
                                    switch (((t = l.fromISO(String(e))), n)) {
                                        case !0:
                                            e = t;
                                            break;
                                        case "iso":
                                            e = t.toISO();
                                            break;
                                        default:
                                            e = t.toFormat(n);
                                    }
                                i(e) && (h = c.value);
                            } else r();
                        }
                        return (
                            (h = void 0 !== h ? h : ""),
                            n &&
                                (l
                                    ? ((a = l.isDateTime(h) ? h : "iso" === n ? l.fromISO(String(h)) : l.fromFormat(String(h), n)), (h = a.toFormat("yyyy-MM-dd") + "T" + a.toFormat("hh:mm")))
                                    : console.error("Editor Error - 'date' editor 'format' param is dependant on luxon.js")),
                            (c.value = h),
                            e(function () {
                                "cell" === t.getType() && (c.focus({ preventScroll: !0 }), (c.style.height = "100%"), s.selectContents && c.select());
                            }),
                            c.addEventListener("blur", function (t) {
                                (t.relatedTarget || t.rangeParent || t.explicitOriginalTarget !== c) && u();
                            }),
                            c.addEventListener("keydown", function (t) {
                                switch (t.keyCode) {
                                    case 13:
                                        u();
                                        break;
                                    case 27:
                                        r();
                                        break;
                                    case 35:
                                    case 36:
                                        t.stopPropagation();
                                        break;
                                    case 38:
                                    case 40:
                                        "editor" == o && (t.stopImmediatePropagation(), t.stopPropagation());
                                }
                            }),
                            c
                        );
                    },
                    select: function (t, e, i, r, s) {
                        return this.deprecationMsg("The select editor has been deprecated, please use the new list editor"), new L(this, t, e, i, r, s).input;
                    },
                    list: function (t, e, i, r, s) {
                        return new L(this, t, e, i, r, s).input;
                    },
                    autocomplete: function (t, e, i, r, s) {
                        return this.deprecationMsg("The autocomplete editor has been deprecated, please use the new list editor with the 'autocomplete' editorParam"), (s.autocomplete = !0), new L(this, t, e, i, r, s).input;
                    },
                    star: function (t, e, i, r, s) {
                        var a = this,
                            n = t.getElement(),
                            o = t.getValue(),
                            l = n.getElementsByTagName("svg").length || 5,
                            h = n.getElementsByTagName("svg")[0] ? n.getElementsByTagName("svg")[0].getAttribute("width") : 14,
                            c = [],
                            d = document.createElement("div"),
                            u = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                        function p(t) {
                            c.forEach(function (e, i) {
                                i < t
                                    ? ("ie" == a.table.browser ? e.setAttribute("class", "tabulator-star-active") : e.classList.replace("tabulator-star-inactive", "tabulator-star-active"),
                                      (e.innerHTML =
                                          '<polygon fill="#488CE9" stroke="#014AAE" stroke-width="37.6152" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 "/>'))
                                    : ("ie" == a.table.browser ? e.setAttribute("class", "tabulator-star-inactive") : e.classList.replace("tabulator-star-active", "tabulator-star-inactive"),
                                      (e.innerHTML =
                                          '<polygon fill="#010155" stroke="#686868" stroke-width="37.6152" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 "/>'));
                            });
                        }
                        function m(t) {
                            var e = document.createElement("span"),
                                r = u.cloneNode(!0);
                            c.push(r),
                                e.addEventListener("mouseenter", function (e) {
                                    e.stopPropagation(), e.stopImmediatePropagation(), p(t);
                                }),
                                e.addEventListener("mousemove", function (t) {
                                    t.stopPropagation(), t.stopImmediatePropagation();
                                }),
                                e.addEventListener("click", function (e) {
                                    e.stopPropagation(), e.stopImmediatePropagation(), i(t), n.blur();
                                }),
                                e.appendChild(r),
                                d.appendChild(e);
                        }
                        function f(t) {
                            (o = t), p(t);
                        }
                        if (
                            ((n.style.whiteSpace = "nowrap"),
                            (n.style.overflow = "hidden"),
                            (n.style.textOverflow = "ellipsis"),
                            (d.style.verticalAlign = "middle"),
                            (d.style.display = "inline-block"),
                            (d.style.padding = "4px"),
                            u.setAttribute("width", h),
                            u.setAttribute("height", h),
                            u.setAttribute("viewBox", "0 0 512 512"),
                            u.setAttribute("xml:space", "preserve"),
                            (u.style.padding = "0 1px"),
                            s.elementAttributes && "object" == typeof s.elementAttributes)
                        )
                            for (var g in s.elementAttributes) "+" == g.charAt(0) ? ((g = g.slice(1)), d.setAttribute(g, d.getAttribute(g) + s.elementAttributes["+" + g])) : d.setAttribute(g, s.elementAttributes[g]);
                        for (var v = 1; v <= l; v++) m(v);
                        return (
                            p((o = Math.min(parseInt(o), l))),
                            d.addEventListener("mousemove", function (t) {
                                p(0);
                            }),
                            d.addEventListener("click", function (t) {
                                i(0);
                            }),
                            n.addEventListener("blur", function (t) {
                                r();
                            }),
                            n.addEventListener("keydown", function (t) {
                                switch (t.keyCode) {
                                    case 39:
                                        f(o + 1);
                                        break;
                                    case 37:
                                        f(o - 1);
                                        break;
                                    case 13:
                                        i(o);
                                        break;
                                    case 27:
                                        r();
                                }
                            }),
                            d
                        );
                    },
                    progress: function (t, e, i, r, s) {
                        var a,
                            n,
                            o = t.getElement(),
                            l = void 0 === s.max ? (o.getElementsByTagName("div")[0] && o.getElementsByTagName("div")[0].getAttribute("max")) || 100 : s.max,
                            h = void 0 === s.min ? (o.getElementsByTagName("div")[0] && o.getElementsByTagName("div")[0].getAttribute("min")) || 0 : s.min,
                            c = (l - h) / 100,
                            d = t.getValue() || 0,
                            u = document.createElement("div"),
                            p = document.createElement("div");
                        function m() {
                            var t = window.getComputedStyle(o, null),
                                e = c * Math.round(p.offsetWidth / ((o.clientWidth - parseInt(t.getPropertyValue("padding-left")) - parseInt(t.getPropertyValue("padding-right"))) / 100)) + h;
                            i(e), o.setAttribute("aria-valuenow", e), o.setAttribute("aria-label", d);
                        }
                        if (
                            ((u.style.position = "absolute"),
                            (u.style.right = "0"),
                            (u.style.top = "0"),
                            (u.style.bottom = "0"),
                            (u.style.width = "5px"),
                            u.classList.add("tabulator-progress-handle"),
                            (p.style.display = "inline-block"),
                            (p.style.position = "relative"),
                            (p.style.height = "100%"),
                            (p.style.backgroundColor = "#488CE9"),
                            (p.style.maxWidth = "100%"),
                            (p.style.minWidth = "0%"),
                            s.elementAttributes && "object" == typeof s.elementAttributes)
                        )
                            for (var f in s.elementAttributes) "+" == f.charAt(0) ? ((f = f.slice(1)), p.setAttribute(f, p.getAttribute(f) + s.elementAttributes["+" + f])) : p.setAttribute(f, s.elementAttributes[f]);
                        return (
                            (o.style.padding = "4px 4px"),
                            (d = Math.min(parseFloat(d), l)),
                            (d = Math.max(parseFloat(d), h)),
                            (d = Math.round((d - h) / c)),
                            (p.style.width = d + "%"),
                            o.setAttribute("aria-valuemin", h),
                            o.setAttribute("aria-valuemax", l),
                            p.appendChild(u),
                            u.addEventListener("mousedown", function (t) {
                                (a = t.screenX), (n = p.offsetWidth);
                            }),
                            u.addEventListener("mouseover", function () {
                                u.style.cursor = "ew-resize";
                            }),
                            o.addEventListener("mousemove", function (t) {
                                a && (p.style.width = n + t.screenX - a + "px");
                            }),
                            o.addEventListener("mouseup", function (t) {
                                a && (t.stopPropagation(), t.stopImmediatePropagation(), (a = !1), (n = !1), m());
                            }),
                            o.addEventListener("keydown", function (t) {
                                switch (t.keyCode) {
                                    case 39:
                                        t.preventDefault(), (p.style.width = p.clientWidth + o.clientWidth / 100 + "px");
                                        break;
                                    case 37:
                                        t.preventDefault(), (p.style.width = p.clientWidth - o.clientWidth / 100 + "px");
                                        break;
                                    case 9:
                                    case 13:
                                        m();
                                        break;
                                    case 27:
                                        r();
                                }
                            }),
                            o.addEventListener("blur", function () {
                                r();
                            }),
                            p
                        );
                    },
                    tickCross: function (t, e, i, r, s) {
                        var a = t.getValue(),
                            n = document.createElement("input"),
                            o = s.tristate,
                            l = void 0 === s.indeterminateValue ? null : s.indeterminateValue,
                            h = !1,
                            c = Object.keys(s).includes("trueValue"),
                            d = Object.keys(s).includes("falseValue");
                        if ((n.setAttribute("type", "checkbox"), (n.style.marginTop = "5px"), (n.style.boxSizing = "border-box"), s.elementAttributes && "object" == typeof s.elementAttributes))
                            for (var u in s.elementAttributes) "+" == u.charAt(0) ? ((u = u.slice(1)), n.setAttribute(u, n.getAttribute(u) + s.elementAttributes["+" + u])) : n.setAttribute(u, s.elementAttributes[u]);
                        function p(t) {
                            var e = n.checked;
                            return c && e ? (e = s.trueValue) : d && !e && (e = s.falseValue), o ? (t ? (h ? l : e) : n.checked && !h ? ((n.checked = !1), (n.indeterminate = !0), (h = !0), l) : ((h = !1), e)) : e;
                        }
                        return (
                            (n.value = a),
                            !o || (void 0 !== a && a !== l && "" !== a) || ((h = !0), (n.indeterminate = !0)),
                            "firefox" != this.table.browser &&
                                "safari" != this.table.browser &&
                                e(function () {
                                    "cell" === t.getType() && n.focus({ preventScroll: !0 });
                                }),
                            (n.checked = c ? a === s.trueValue : !0 === a || "true" === a || "True" === a || 1 === a),
                            n.addEventListener("change", function (t) {
                                i(p());
                            }),
                            n.addEventListener("blur", function (t) {
                                i(p(!0));
                            }),
                            n.addEventListener("keydown", function (t) {
                                13 == t.keyCode && i(p()), 27 == t.keyCode && r();
                            }),
                            n
                        );
                    },
                };
                class R extends h {
                    constructor(t) {
                        super(t),
                            (this.currentCell = !1),
                            (this.mouseClick = !1),
                            (this.recursionBlock = !1),
                            (this.invalidEdit = !1),
                            (this.editedCells = []),
                            (this.editors = R.editors),
                            this.registerColumnOption("editable"),
                            this.registerColumnOption("editor"),
                            this.registerColumnOption("editorParams"),
                            this.registerColumnOption("cellEditing"),
                            this.registerColumnOption("cellEdited"),
                            this.registerColumnOption("cellEditCancelled"),
                            this.registerTableFunction("getEditedCells", this.getEditedCells.bind(this)),
                            this.registerTableFunction("clearCellEdited", this.clearCellEdited.bind(this)),
                            this.registerTableFunction("navigatePrev", this.navigatePrev.bind(this)),
                            this.registerTableFunction("navigateNext", this.navigateNext.bind(this)),
                            this.registerTableFunction("navigateLeft", this.navigateLeft.bind(this)),
                            this.registerTableFunction("navigateRight", this.navigateRight.bind(this)),
                            this.registerTableFunction("navigateUp", this.navigateUp.bind(this)),
                            this.registerTableFunction("navigateDown", this.navigateDown.bind(this)),
                            this.registerComponentFunction("cell", "isEdited", this.cellIsEdited.bind(this)),
                            this.registerComponentFunction("cell", "clearEdited", this.clearEdited.bind(this)),
                            this.registerComponentFunction("cell", "edit", this.editCell.bind(this)),
                            this.registerComponentFunction("cell", "cancelEdit", this.cellCancelEdit.bind(this)),
                            this.registerComponentFunction("cell", "navigatePrev", this.navigatePrev.bind(this)),
                            this.registerComponentFunction("cell", "navigateNext", this.navigateNext.bind(this)),
                            this.registerComponentFunction("cell", "navigateLeft", this.navigateLeft.bind(this)),
                            this.registerComponentFunction("cell", "navigateRight", this.navigateRight.bind(this)),
                            this.registerComponentFunction("cell", "navigateUp", this.navigateUp.bind(this)),
                            this.registerComponentFunction("cell", "navigateDown", this.navigateDown.bind(this));
                    }
                    initialize() {
                        this.subscribe("cell-init", this.bindEditor.bind(this)),
                            this.subscribe("cell-delete", this.clearEdited.bind(this)),
                            this.subscribe("cell-value-changed", this.updateCellClass.bind(this)),
                            this.subscribe("column-layout", this.initializeColumnCheck.bind(this)),
                            this.subscribe("column-delete", this.columnDeleteCheck.bind(this)),
                            this.subscribe("row-deleting", this.rowDeleteCheck.bind(this)),
                            this.subscribe("row-layout", this.rowEditableCheck.bind(this)),
                            this.subscribe("data-refreshing", this.cancelEdit.bind(this)),
                            this.subscribe("keybinding-nav-prev", this.navigatePrev.bind(this, void 0)),
                            this.subscribe("keybinding-nav-next", this.keybindingNavigateNext.bind(this)),
                            this.subscribe("keybinding-nav-left", this.navigateLeft.bind(this, void 0)),
                            this.subscribe("keybinding-nav-right", this.navigateRight.bind(this, void 0)),
                            this.subscribe("keybinding-nav-up", this.navigateUp.bind(this, void 0)),
                            this.subscribe("keybinding-nav-down", this.navigateDown.bind(this, void 0));
                    }
                    keybindingNavigateNext(t) {
                        var e = this.currentCell,
                            i = this.options("tabEndNewRow");
                        e &&
                            (this.navigateNext(e, t) ||
                                (i &&
                                    (e.getElement().firstChild.blur(),
                                    (i = !0 === i ? this.table.addRow({}) : "function" == typeof i ? this.table.addRow(i(e.row.getComponent())) : this.table.addRow(Object.assign({}, i))).then(() => {
                                        setTimeout(() => {
                                            e.getComponent().navigateNext();
                                        });
                                    }))));
                    }
                    cellIsEdited(t) {
                        return !!t.modules.edit && t.modules.edit.edited;
                    }
                    cellCancelEdit(t) {
                        t === this.currentCell ? this.table.modules.edit.cancelEdit() : console.warn("Cancel Editor Error - This cell is not currently being edited ");
                    }
                    updateCellClass(t) {
                        this.allowEdit(t) ? t.getElement().classList.add("tabulator-editable") : t.getElement().classList.remove("tabulator-editable");
                    }
                    clearCellEdited(t) {
                        t || (t = this.table.modules.edit.getEditedCells()),
                            Array.isArray(t) || (t = [t]),
                            t.forEach((t) => {
                                this.table.modules.edit.clearEdited(t._getSelf());
                            });
                    }
                    navigatePrev(t = this.currentCell, e) {
                        var i, r;
                        if (t) {
                            if ((e && e.preventDefault(), (i = this.navigateLeft()))) return !0;
                            if ((r = this.table.rowManager.prevDisplayRow(t.row, !0)) && (i = this.findPrevEditableCell(r, r.cells.length))) return i.getComponent().edit(), !0;
                        }
                        return !1;
                    }
                    navigateNext(t = this.currentCell, e) {
                        var i, r;
                        if (t) {
                            if ((e && e.preventDefault(), (i = this.navigateRight()))) return !0;
                            if ((r = this.table.rowManager.nextDisplayRow(t.row, !0)) && (i = this.findNextEditableCell(r, -1))) return i.getComponent().edit(), !0;
                        }
                        return !1;
                    }
                    navigateLeft(t = this.currentCell, e) {
                        var i, r;
                        return !!(t && (e && e.preventDefault(), (i = t.getIndex()), (r = this.findPrevEditableCell(t.row, i)))) && (r.getComponent().edit(), !0);
                    }
                    navigateRight(t = this.currentCell, e) {
                        var i, r;
                        return !!(t && (e && e.preventDefault(), (i = t.getIndex()), (r = this.findNextEditableCell(t.row, i)))) && (r.getComponent().edit(), !0);
                    }
                    navigateUp(t = this.currentCell, e) {
                        var i, r;
                        return !!(t && (e && e.preventDefault(), (i = t.getIndex()), (r = this.table.rowManager.prevDisplayRow(t.row, !0)))) && (r.cells[i].getComponent().edit(), !0);
                    }
                    navigateDown(t = this.currentCell, e) {
                        var i, r;
                        return !!(t && (e && e.preventDefault(), (i = t.getIndex()), (r = this.table.rowManager.nextDisplayRow(t.row, !0)))) && (r.cells[i].getComponent().edit(), !0);
                    }
                    findNextEditableCell(t, e) {
                        var i = !1;
                        if (e < t.cells.length - 1)
                            for (var r = e + 1; r < t.cells.length; r++) {
                                var s = t.cells[r];
                                if (s.column.modules.edit && o.elVisible(s.getElement()))
                                    if (this.allowEdit(s)) {
                                        i = s;
                                        break;
                                    }
                            }
                        return i;
                    }
                    findPrevEditableCell(t, e) {
                        var i = !1;
                        if (e > 0)
                            for (var r = e - 1; r >= 0; r--) {
                                var s = t.cells[r];
                                if (s.column.modules.edit && o.elVisible(s.getElement()))
                                    if (this.allowEdit(s)) {
                                        i = s;
                                        break;
                                    }
                            }
                        return i;
                    }
                    initializeColumnCheck(t) {
                        void 0 !== t.definition.editor && this.initializeColumn(t);
                    }
                    columnDeleteCheck(t) {
                        this.currentCell && this.currentCell.column === t && this.cancelEdit();
                    }
                    rowDeleteCheck(t) {
                        this.currentCell && this.currentCell.row === t && this.cancelEdit();
                    }
                    rowEditableCheck(t) {
                        t.getCells().forEach((t) => {
                            t.column.modules.edit && "function" == typeof t.column.modules.edit.check && this.updateCellClass(t);
                        });
                    }
                    initializeColumn(t) {
                        var e = { editor: !1, blocked: !1, check: t.definition.editable, params: t.definition.editorParams || {} };
                        switch (typeof t.definition.editor) {
                            case "string":
                                this.editors[t.definition.editor] ? (e.editor = this.editors[t.definition.editor]) : console.warn("Editor Error - No such editor found: ", t.definition.editor);
                                break;
                            case "function":
                                e.editor = t.definition.editor;
                                break;
                            case "boolean":
                                !0 === t.definition.editor &&
                                    ("function" != typeof t.definition.formatter
                                        ? this.editors[t.definition.formatter]
                                            ? (e.editor = this.editors[t.definition.formatter])
                                            : (e.editor = this.editors.input)
                                        : console.warn("Editor Error - Cannot auto lookup editor for a custom formatter: ", t.definition.formatter));
                        }
                        e.editor && (t.modules.edit = e);
                    }
                    getCurrentCell() {
                        return !!this.currentCell && this.currentCell.getComponent();
                    }
                    clearEditor(t) {
                        var e,
                            i = this.currentCell;
                        if (((this.invalidEdit = !1), i)) {
                            for (this.currentCell = !1, e = i.getElement(), this.dispatch("edit-editor-clear", i, t), e.classList.remove("tabulator-editing"); e.firstChild; ) e.removeChild(e.firstChild);
                            i.row.getElement().classList.remove("tabulator-editing"), i.table.element.classList.remove("tabulator-editing");
                        }
                    }
                    cancelEdit() {
                        if (this.currentCell) {
                            var t = this.currentCell,
                                e = this.currentCell.getComponent();
                            this.clearEditor(!0),
                                t.setValueActual(t.getValue()),
                                t.cellRendered(),
                                ("textarea" == t.column.definition.editor || t.column.definition.variableHeight) && t.row.normalizeHeight(!0),
                                t.column.definition.cellEditCancelled && t.column.definition.cellEditCancelled.call(this.table, e),
                                this.dispatch("edit-cancelled", t),
                                this.dispatchExternal("cellEditCancelled", e);
                        }
                    }
                    bindEditor(t) {
                        if (t.column.modules.edit) {
                            var e = this,
                                i = t.getElement(!0);
                            this.updateCellClass(t),
                                i.setAttribute("tabindex", 0),
                                i.addEventListener("click", function (t) {
                                    i.classList.contains("tabulator-editing") || i.focus({ preventScroll: !0 });
                                }),
                                i.addEventListener("mousedown", function (t) {
                                    2 === t.button ? t.preventDefault() : (e.mouseClick = !0);
                                }),
                                i.addEventListener("focus", function (i) {
                                    e.recursionBlock || e.edit(t, i, !1);
                                });
                        }
                    }
                    focusCellNoEvent(t, e) {
                        (this.recursionBlock = !0), (e && "ie" === this.table.browser) || t.getElement().focus({ preventScroll: !0 }), (this.recursionBlock = !1);
                    }
                    editCell(t, e) {
                        this.focusCellNoEvent(t), this.edit(t, !1, e);
                    }
                    focusScrollAdjust(t) {
                        if ("virtual" == this.table.rowManager.getRenderMode()) {
                            var e = this.table.rowManager.element.scrollTop,
                                i = this.table.rowManager.element.clientHeight + this.table.rowManager.element.scrollTop,
                                r = t.row.getElement();
                            r.offsetTop < e ? (this.table.rowManager.element.scrollTop -= e - r.offsetTop) : r.offsetTop + r.offsetHeight > i && (this.table.rowManager.element.scrollTop += r.offsetTop + r.offsetHeight - i);
                            var s = this.table.rowManager.element.scrollLeft,
                                a = this.table.rowManager.element.clientWidth + this.table.rowManager.element.scrollLeft,
                                n = t.getElement();
                            this.table.modExists("frozenColumns") && ((s += parseInt(this.table.modules.frozenColumns.leftMargin || 0)), (a -= parseInt(this.table.modules.frozenColumns.rightMargin || 0))),
                                "virtual" === this.table.options.renderHorizontal && ((s -= parseInt(this.table.columnManager.renderer.vDomPadLeft)), (a -= parseInt(this.table.columnManager.renderer.vDomPadLeft))),
                                n.offsetLeft < s ? (this.table.rowManager.element.scrollLeft -= s - n.offsetLeft) : n.offsetLeft + n.offsetWidth > a && (this.table.rowManager.element.scrollLeft += n.offsetLeft + n.offsetWidth - a);
                        }
                    }
                    allowEdit(t) {
                        var e = !!t.column.modules.edit;
                        if (t.column.modules.edit)
                            switch (typeof t.column.modules.edit.check) {
                                case "function":
                                    t.row.initialized && (e = t.column.modules.edit.check(t.getComponent()));
                                    break;
                                case "string":
                                    e = !!t.row.data[t.column.modules.edit.check];
                                    break;
                                case "boolean":
                                    e = t.column.modules.edit.check;
                            }
                        return e;
                    }
                    edit(t, e, i) {
                        var r,
                            s,
                            a,
                            n = this,
                            o = function () {},
                            l = t.getElement();
                        if (!this.currentCell) {
                            if (t.column.modules.edit.blocked) return (this.mouseClick = !1), l.blur(), !1;
                            if ((e && e.stopPropagation(), this.allowEdit(t) || i)) {
                                if (
                                    (n.cancelEdit(),
                                    (n.currentCell = t),
                                    this.focusScrollAdjust(t),
                                    (s = t.getComponent()),
                                    this.mouseClick && ((this.mouseClick = !1), t.column.definition.cellClick && t.column.definition.cellClick.call(this.table, e, s)),
                                    t.column.definition.cellEditing && t.column.definition.cellEditing.call(this.table, s),
                                    this.dispatch("cell-editing", t),
                                    this.dispatchExternal("cellEditing", s),
                                    (a = "function" == typeof t.column.modules.edit.params ? t.column.modules.edit.params(s) : t.column.modules.edit.params),
                                    (r = t.column.modules.edit.editor.call(
                                        n,
                                        s,
                                        function (t) {
                                            o = t;
                                        },
                                        function (e) {
                                            if (n.currentCell === t) {
                                                var i = n.chain("edit-success", [t, e], !0, !0);
                                                return !0 === i || "highlight" === n.table.options.validationMode
                                                    ? (n.clearEditor(), t.modules.edit || (t.modules.edit = {}), (t.modules.edit.edited = !0), -1 == n.editedCells.indexOf(t) && n.editedCells.push(t), t.setValue(e, !0), !0 === i)
                                                    : ((n.invalidEdit = !0), n.focusCellNoEvent(t, !0), o(), !1);
                                            }
                                        },
                                        function () {
                                            n.currentCell === t && n.cancelEdit();
                                        },
                                        a
                                    )),
                                    !this.currentCell || !1 === r)
                                )
                                    return l.blur(), !1;
                                if (!(r instanceof Node)) return console.warn("Edit Error - Editor should return an instance of Node, the editor returned:", r), l.blur(), !1;
                                for (l.classList.add("tabulator-editing"), t.row.getElement().classList.add("tabulator-editing"), t.table.element.classList.add("tabulator-editing"); l.firstChild; ) l.removeChild(l.firstChild);
                                l.appendChild(r), o();
                                for (var h = l.children, c = 0; c < h.length; c++)
                                    h[c].addEventListener("click", function (t) {
                                        t.stopPropagation();
                                    });
                                return !0;
                            }
                            return (this.mouseClick = !1), l.blur(), !1;
                        }
                        this.invalidEdit || this.currentCell === t || this.cancelEdit();
                    }
                    getEditedCells() {
                        var t = [];
                        return (
                            this.editedCells.forEach((e) => {
                                t.push(e.getComponent());
                            }),
                            t
                        );
                    }
                    clearEdited(t) {
                        var e;
                        t.modules.edit && t.modules.edit.edited && ((t.modules.edit.edited = !1), this.dispatch("edit-edited-clear", t)), (e = this.editedCells.indexOf(t)) > -1 && this.editedCells.splice(e, 1);
                    }
                }
                (R.moduleName = "edit"), (R.editors = I);
                class O {
                    constructor(t, e, i, r) {
                        (this.type = t), (this.columns = e), (this.component = i || !1), (this.indent = r || 0);
                    }
                }
                class F {
                    constructor(t, e, i, r, s) {
                        (this.value = t), (this.component = e || !1), (this.width = i), (this.height = r), (this.depth = s);
                    }
                }
                class B extends h {
                    constructor(t) {
                        super(t),
                            (this.config = {}),
                            (this.cloneTableStyle = !0),
                            (this.colVisProp = ""),
                            this.registerTableOption("htmlOutputConfig", !1),
                            this.registerColumnOption("htmlOutput"),
                            this.registerColumnOption("titleHtmlOutput");
                    }
                    initialize() {
                        this.registerTableFunction("getHtml", this.getHtml.bind(this));
                    }
                    generateExportList(t, e, i, r) {
                        (this.cloneTableStyle = e), (this.config = t || {}), (this.colVisProp = r);
                        var s = !1 !== this.config.columnHeaders ? this.headersToExportRows(this.generateColumnGroupHeaders()) : [],
                            a = this.bodyToExportRows(this.rowLookup(i));
                        return s.concat(a);
                    }
                    generateTable(t, e, i, r) {
                        var s = this.generateExportList(t, e, i, r);
                        return this.generateTableElement(s);
                    }
                    rowLookup(t) {
                        var e = [];
                        if ("function" == typeof t)
                            t.call(this.table).forEach((t) => {
                                (t = this.table.rowManager.findRow(t)) && e.push(t);
                            });
                        else
                            switch (t) {
                                case !0:
                                case "visible":
                                    e = this.table.rowManager.getVisibleRows(!1, !0);
                                    break;
                                case "all":
                                    e = this.table.rowManager.rows;
                                    break;
                                case "selected":
                                    e = this.table.modules.selectRow.selectedRows;
                                    break;
                                default:
                                    e = this.table.options.pagination ? this.table.rowManager.getDisplayRows(this.table.rowManager.displayRows.length - 2) : this.table.rowManager.getDisplayRows();
                            }
                        return Object.assign([], e);
                    }
                    generateColumnGroupHeaders() {
                        var t = [];
                        return (
                            (!1 !== this.config.columnGroups ? this.table.columnManager.columns : this.table.columnManager.columnsByIndex).forEach((e) => {
                                var i = this.processColumnGroup(e);
                                i && t.push(i);
                            }),
                            t
                        );
                    }
                    processColumnGroup(t) {
                        var e = t.columns,
                            i = 0,
                            r = { title: t.definition["title" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))] || t.definition.title, column: t, depth: 1 };
                        if (e.length) {
                            if (
                                ((r.subGroups = []),
                                (r.width = 0),
                                e.forEach((t) => {
                                    var e = this.processColumnGroup(t);
                                    e && ((r.width += e.width), r.subGroups.push(e), e.depth > i && (i = e.depth));
                                }),
                                (r.depth += i),
                                !r.width)
                            )
                                return !1;
                        } else {
                            if (!this.columnVisCheck(t)) return !1;
                            r.width = 1;
                        }
                        return r;
                    }
                    columnVisCheck(t) {
                        var e = t.definition[this.colVisProp];
                        return "function" == typeof e && (e = e.call(this.table, t.getComponent())), !1 !== e && (t.visible || (!t.visible && e));
                    }
                    headersToExportRows(t) {
                        var e = [],
                            i = 0,
                            r = [];
                        function s(t, r) {
                            var a = i - r;
                            if ((void 0 === e[r] && (e[r] = []), (t.height = t.subGroups ? 1 : a - t.depth + 1), e[r].push(t), t.height > 1)) for (var n = 1; n < t.height; n++) void 0 === e[r + n] && (e[r + n] = []), e[r + n].push(!1);
                            if (t.width > 1) for (var o = 1; o < t.width; o++) e[r].push(!1);
                            t.subGroups &&
                                t.subGroups.forEach(function (t) {
                                    s(t, r + 1);
                                });
                        }
                        return (
                            t.forEach(function (t) {
                                t.depth > i && (i = t.depth);
                            }),
                            t.forEach(function (t) {
                                s(t, 0);
                            }),
                            e.forEach((t) => {
                                var e = [];
                                t.forEach((t) => {
                                    if (t) {
                                        var i = void 0 === t.title ? "" : t.title;
                                        e.push(new F(i, t.column.getComponent(), t.width, t.height, t.depth));
                                    } else e.push(null);
                                }),
                                    r.push(new O("header", e));
                            }),
                            r
                        );
                    }
                    bodyToExportRows(t) {
                        var e = [],
                            i = [];
                        return (
                            this.table.columnManager.columnsByIndex.forEach((t) => {
                                this.columnVisCheck(t) && e.push(t.getComponent());
                            }),
                            !1 !== this.config.columnCalcs &&
                                this.table.modExists("columnCalcs") &&
                                (this.table.modules.columnCalcs.topInitialized && t.unshift(this.table.modules.columnCalcs.topRow), this.table.modules.columnCalcs.botInitialized && t.push(this.table.modules.columnCalcs.botRow)),
                            (t = t.filter((t) => {
                                switch (t.type) {
                                    case "group":
                                        return !1 !== this.config.rowGroups;
                                    case "calc":
                                        return !1 !== this.config.columnCalcs;
                                    case "row":
                                        return !(this.table.options.dataTree && !1 === this.config.dataTree && t.modules.dataTree.parent);
                                }
                                return !0;
                            })).forEach((t, r) => {
                                var s = t.getData(this.colVisProp),
                                    a = [],
                                    n = 0;
                                switch (t.type) {
                                    case "group":
                                        (n = t.level), a.push(new F(t.key, t.getComponent(), e.length, 1));
                                        break;
                                    case "calc":
                                    case "row":
                                        e.forEach((t) => {
                                            a.push(new F(t._column.getFieldValue(s), t, 1, 1));
                                        }),
                                            this.table.options.dataTree && !1 !== this.config.dataTree && (n = t.modules.dataTree.index);
                                }
                                i.push(new O(t.type, a, t.getComponent(), n));
                            }),
                            i
                        );
                    }
                    generateTableElement(t) {
                        var e = document.createElement("table"),
                            i = document.createElement("thead"),
                            r = document.createElement("tbody"),
                            s = this.lookupTableStyles(),
                            a = this.table.options["rowFormatter" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))],
                            n = {};
                        return (
                            (n.rowFormatter = null !== a ? a : this.table.options.rowFormatter),
                            this.table.options.dataTree && !1 !== this.config.dataTree && this.table.modExists("columnCalcs") && (n.treeElementField = this.table.modules.dataTree.elementField),
                            (n.groupHeader = this.table.options["groupHeader" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))]),
                            n.groupHeader && !Array.isArray(n.groupHeader) && (n.groupHeader = [n.groupHeader]),
                            e.classList.add("tabulator-print-table"),
                            this.mapElementStyles(this.table.columnManager.getHeadersElement(), i, ["border-top", "border-left", "border-right", "border-bottom", "background-color", "color", "font-weight", "font-family", "font-size"]),
                            t.length > 1e3 && console.warn("It may take a long time to render an HTML table with more than 1000 rows"),
                            t.forEach((t, e) => {
                                var a;
                                switch (t.type) {
                                    case "header":
                                        i.appendChild(this.generateHeaderElement(t, n, s));
                                        break;
                                    case "group":
                                        r.appendChild(this.generateGroupElement(t, n, s));
                                        break;
                                    case "calc":
                                        r.appendChild(this.generateCalcElement(t, n, s));
                                        break;
                                    case "row":
                                        (a = this.generateRowElement(t, n, s)),
                                            this.mapElementStyles(e % 2 && s.evenRow ? s.evenRow : s.oddRow, a, [
                                                "border-top",
                                                "border-left",
                                                "border-right",
                                                "border-bottom",
                                                "color",
                                                "font-weight",
                                                "font-family",
                                                "font-size",
                                                "background-color",
                                            ]),
                                            r.appendChild(a);
                                }
                            }),
                            i.innerHTML && e.appendChild(i),
                            e.appendChild(r),
                            this.mapElementStyles(this.table.element, e, ["border-top", "border-left", "border-right", "border-bottom"]),
                            e
                        );
                    }
                    lookupTableStyles() {
                        var t = {};
                        return (
                            this.cloneTableStyle &&
                                window.getComputedStyle &&
                                ((t.oddRow = this.table.element.querySelector(".tabulator-row-odd:not(.tabulator-group):not(.tabulator-calcs)")),
                                (t.evenRow = this.table.element.querySelector(".tabulator-row-even:not(.tabulator-group):not(.tabulator-calcs)")),
                                (t.calcRow = this.table.element.querySelector(".tabulator-row.tabulator-calcs")),
                                (t.firstRow = this.table.element.querySelector(".tabulator-row:not(.tabulator-group):not(.tabulator-calcs)")),
                                (t.firstGroup = this.table.element.getElementsByClassName("tabulator-group")[0]),
                                t.firstRow && ((t.styleCells = t.firstRow.getElementsByClassName("tabulator-cell")), (t.firstCell = t.styleCells[0]), (t.lastCell = t.styleCells[t.styleCells.length - 1]))),
                            t
                        );
                    }
                    generateHeaderElement(t, e, i) {
                        var r = document.createElement("tr");
                        return (
                            t.columns.forEach((t) => {
                                if (t) {
                                    var e = document.createElement("th"),
                                        i = t.component._column.definition.cssClass ? t.component._column.definition.cssClass.split(" ") : [];
                                    (e.colSpan = t.width),
                                        (e.rowSpan = t.height),
                                        (e.innerHTML = t.value),
                                        this.cloneTableStyle && (e.style.boxSizing = "border-box"),
                                        i.forEach(function (t) {
                                            e.classList.add(t);
                                        }),
                                        this.mapElementStyles(t.component.getElement(), e, [
                                            "text-align",
                                            "border-top",
                                            "border-left",
                                            "border-right",
                                            "border-bottom",
                                            "background-color",
                                            "color",
                                            "font-weight",
                                            "font-family",
                                            "font-size",
                                        ]),
                                        this.mapElementStyles(t.component._column.contentElement, e, ["padding-top", "padding-left", "padding-right", "padding-bottom"]),
                                        t.component._column.visible ? this.mapElementStyles(t.component.getElement(), e, ["width"]) : t.component._column.definition.width && (e.style.width = t.component._column.definition.width + "px"),
                                        t.component._column.parent && this.mapElementStyles(t.component._column.parent.groupElement, e, ["border-top"]),
                                        r.appendChild(e);
                                }
                            }),
                            r
                        );
                    }
                    generateGroupElement(t, e, i) {
                        var r = document.createElement("tr"),
                            s = document.createElement("td"),
                            a = t.columns[0];
                        return (
                            r.classList.add("tabulator-print-table-row"),
                            e.groupHeader && e.groupHeader[t.indent]
                                ? (a.value = e.groupHeader[t.indent](a.value, t.component._group.getRowCount(), t.component._group.getData(), t.component))
                                : !1 !== e.groupHeader && (a.value = t.component._group.generator(a.value, t.component._group.getRowCount(), t.component._group.getData(), t.component)),
                            (s.colSpan = a.width),
                            (s.innerHTML = a.value),
                            r.classList.add("tabulator-print-table-group"),
                            r.classList.add("tabulator-group-level-" + t.indent),
                            a.component.isVisible() && r.classList.add("tabulator-group-visible"),
                            this.mapElementStyles(i.firstGroup, r, ["border-top", "border-left", "border-right", "border-bottom", "color", "font-weight", "font-family", "font-size", "background-color"]),
                            this.mapElementStyles(i.firstGroup, s, ["padding-top", "padding-left", "padding-right", "padding-bottom"]),
                            r.appendChild(s),
                            r
                        );
                    }
                    generateCalcElement(t, e, i) {
                        var r = this.generateRowElement(t, e, i);
                        return (
                            r.classList.add("tabulator-print-table-calcs"),
                            this.mapElementStyles(i.calcRow, r, ["border-top", "border-left", "border-right", "border-bottom", "color", "font-weight", "font-family", "font-size", "background-color"]),
                            r
                        );
                    }
                    generateRowElement(t, e, i) {
                        var r = document.createElement("tr");
                        (r.classList.add("tabulator-print-table-row"),
                        t.columns.forEach((s, a) => {
                            if (s) {
                                var n,
                                    o = document.createElement("td"),
                                    l = s.component._column,
                                    h = this.table.columnManager.findColumnIndex(l),
                                    c = s.value,
                                    d = {
                                        modules: {},
                                        getValue: function () {
                                            return c;
                                        },
                                        getField: function () {
                                            return l.definition.field;
                                        },
                                        getElement: function () {
                                            return o;
                                        },
                                        getType: function () {
                                            return "cell";
                                        },
                                        getColumn: function () {
                                            return l.getComponent();
                                        },
                                        getData: function () {
                                            return t.component.getData();
                                        },
                                        getRow: function () {
                                            return t.component;
                                        },
                                        getComponent: function () {
                                            return d;
                                        },
                                        column: l,
                                    };
                                if (
                                    ((l.definition.cssClass ? l.definition.cssClass.split(" ") : []).forEach(function (t) {
                                        o.classList.add(t);
                                    }),
                                    this.table.modExists("format") && !1 !== this.config.formatCells)
                                )
                                    c = this.table.modules.format.formatExportValue(d, this.colVisProp);
                                else
                                    switch (typeof c) {
                                        case "object":
                                            c = null !== c ? JSON.stringify(c) : "";
                                            break;
                                        case "undefined":
                                            c = "";
                                    }
                                c instanceof Node ? o.appendChild(c) : (o.innerHTML = c),
                                    (n = i.styleCells && i.styleCells[h] ? i.styleCells[h] : i.firstCell) &&
                                        (this.mapElementStyles(n, o, [
                                            "padding-top",
                                            "padding-left",
                                            "padding-right",
                                            "padding-bottom",
                                            "border-top",
                                            "border-left",
                                            "border-right",
                                            "border-bottom",
                                            "color",
                                            "font-weight",
                                            "font-family",
                                            "font-size",
                                            "text-align",
                                        ]),
                                        l.definition.align && (o.style.textAlign = l.definition.align)),
                                    this.table.options.dataTree &&
                                        !1 !== this.config.dataTree &&
                                        ((e.treeElementField && e.treeElementField == l.field) || (!e.treeElementField && 0 == a)) &&
                                        (t.component._row.modules.dataTree.controlEl && o.insertBefore(t.component._row.modules.dataTree.controlEl.cloneNode(!0), o.firstChild),
                                        t.component._row.modules.dataTree.branchEl && o.insertBefore(t.component._row.modules.dataTree.branchEl.cloneNode(!0), o.firstChild)),
                                    r.appendChild(o),
                                    d.modules.format && d.modules.format.renderedCallback && d.modules.format.renderedCallback();
                            }
                        }),
                        e.rowFormatter && "row" === t.type && !1 !== this.config.formatCells) &&
                            ((Object.assign(t.component).getElement = function () {
                                return r;
                            }),
                            e.rowFormatter(t.component));
                        return r;
                    }
                    generateHTMLTable(t) {
                        var e = document.createElement("div");
                        return e.appendChild(this.generateTableElement(t)), e.innerHTML;
                    }
                    getHtml(t, e, i, r) {
                        var s = this.generateExportList(i || this.table.options.htmlOutputConfig, e, t, r || "htmlOutput");
                        return this.generateHTMLTable(s);
                    }
                    mapElementStyles(t, e, i) {
                        if (this.cloneTableStyle && t && e) {
                            var r = {
                                "background-color": "backgroundColor",
                                color: "fontColor",
                                width: "width",
                                "font-weight": "fontWeight",
                                "font-family": "fontFamily",
                                "font-size": "fontSize",
                                "text-align": "textAlign",
                                "border-top": "borderTop",
                                "border-left": "borderLeft",
                                "border-right": "borderRight",
                                "border-bottom": "borderBottom",
                                "padding-top": "paddingTop",
                                "padding-left": "paddingLeft",
                                "padding-right": "paddingRight",
                                "padding-bottom": "paddingBottom",
                            };
                            if (window.getComputedStyle) {
                                var s = window.getComputedStyle(t);
                                i.forEach(function (t) {
                                    e.style[r[t]] || (e.style[r[t]] = s.getPropertyValue(t));
                                });
                            }
                        }
                    }
                }
                B.moduleName = "export";
                var z = {
                    "=": function (t, e, i, r) {
                        return e == t;
                    },
                    "<": function (t, e, i, r) {
                        return e < t;
                    },
                    "<=": function (t, e, i, r) {
                        return e <= t;
                    },
                    ">": function (t, e, i, r) {
                        return e > t;
                    },
                    ">=": function (t, e, i, r) {
                        return e >= t;
                    },
                    "!=": function (t, e, i, r) {
                        return e != t;
                    },
                    regex: function (t, e, i, r) {
                        return "string" == typeof t && (t = new RegExp(t)), t.test(e);
                    },
                    like: function (t, e, i, r) {
                        return null == t ? e === t : null != e && String(e).toLowerCase().indexOf(t.toLowerCase()) > -1;
                    },
                    keywords: function (t, e, i, r) {
                        var s = t.toLowerCase().split(void 0 === r.separator ? " " : r.separator),
                            a = String(null == e ? "" : e).toLowerCase(),
                            n = [];
                        return (
                            s.forEach((t) => {
                                a.includes(t) && n.push(!0);
                            }),
                            r.matchAll ? n.length === s.length : !!n.length
                        );
                    },
                    starts: function (t, e, i, r) {
                        return null == t ? e === t : null != e && String(e).toLowerCase().startsWith(t.toLowerCase());
                    },
                    ends: function (t, e, i, r) {
                        return null == t ? e === t : null != e && String(e).toLowerCase().endsWith(t.toLowerCase());
                    },
                    in: function (t, e, i, r) {
                        return Array.isArray(t) ? !t.length || t.indexOf(e) > -1 : (console.warn("Filter Error - filter value is not an array:", t), !1);
                    },
                };
                class N extends h {
                    constructor(t) {
                        super(t),
                            (this.filterList = []),
                            (this.headerFilters = {}),
                            (this.headerFilterColumns = []),
                            (this.prevHeaderFilterChangeCheck = ""),
                            (this.prevHeaderFilterChangeCheck = "{}"),
                            (this.changed = !1),
                            (this.tableInitialized = !1),
                            this.registerTableOption("filterMode", "local"),
                            this.registerTableOption("initialFilter", !1),
                            this.registerTableOption("initialHeaderFilter", !1),
                            this.registerTableOption("headerFilterLiveFilterDelay", 300),
                            this.registerTableOption("placeholderHeaderFilter", !1),
                            this.registerColumnOption("headerFilter"),
                            this.registerColumnOption("headerFilterPlaceholder"),
                            this.registerColumnOption("headerFilterParams"),
                            this.registerColumnOption("headerFilterEmptyCheck"),
                            this.registerColumnOption("headerFilterFunc"),
                            this.registerColumnOption("headerFilterFuncParams"),
                            this.registerColumnOption("headerFilterLiveFilter"),
                            this.registerTableFunction("searchRows", this.searchRows.bind(this)),
                            this.registerTableFunction("searchData", this.searchData.bind(this)),
                            this.registerTableFunction("setFilter", this.userSetFilter.bind(this)),
                            this.registerTableFunction("refreshFilter", this.userRefreshFilter.bind(this)),
                            this.registerTableFunction("addFilter", this.userAddFilter.bind(this)),
                            this.registerTableFunction("getFilters", this.getFilters.bind(this)),
                            this.registerTableFunction("setHeaderFilterFocus", this.userSetHeaderFilterFocus.bind(this)),
                            this.registerTableFunction("getHeaderFilterValue", this.userGetHeaderFilterValue.bind(this)),
                            this.registerTableFunction("setHeaderFilterValue", this.userSetHeaderFilterValue.bind(this)),
                            this.registerTableFunction("getHeaderFilters", this.getHeaderFilters.bind(this)),
                            this.registerTableFunction("removeFilter", this.userRemoveFilter.bind(this)),
                            this.registerTableFunction("clearFilter", this.userClearFilter.bind(this)),
                            this.registerTableFunction("clearHeaderFilter", this.userClearHeaderFilter.bind(this)),
                            this.registerComponentFunction("column", "headerFilterFocus", this.setHeaderFilterFocus.bind(this)),
                            this.registerComponentFunction("column", "reloadHeaderFilter", this.reloadHeaderFilter.bind(this)),
                            this.registerComponentFunction("column", "getHeaderFilterValue", this.getHeaderFilterValue.bind(this)),
                            this.registerComponentFunction("column", "setHeaderFilterValue", this.setHeaderFilterValue.bind(this));
                    }
                    initialize() {
                        this.subscribe("column-init", this.initializeColumnHeaderFilter.bind(this)),
                            this.subscribe("column-width-fit-before", this.hideHeaderFilterElements.bind(this)),
                            this.subscribe("column-width-fit-after", this.showHeaderFilterElements.bind(this)),
                            this.subscribe("table-built", this.tableBuilt.bind(this)),
                            this.subscribe("placeholder", this.generatePlaceholder.bind(this)),
                            "remote" === this.table.options.filterMode && this.subscribe("data-params", this.remoteFilterParams.bind(this)),
                            this.registerDataHandler(this.filter.bind(this), 10);
                    }
                    tableBuilt() {
                        this.table.options.initialFilter && this.setFilter(this.table.options.initialFilter),
                            this.table.options.initialHeaderFilter &&
                                this.table.options.initialHeaderFilter.forEach((t) => {
                                    var e = this.table.columnManager.findColumn(t.field);
                                    if (!e) return console.warn("Column Filter Error - No matching column found:", t.field), !1;
                                    this.setHeaderFilterValue(e, t.value);
                                }),
                            (this.tableInitialized = !0);
                    }
                    remoteFilterParams(t, e, i, r) {
                        return (r.filter = this.getFilters(!0, !0)), r;
                    }
                    generatePlaceholder(t) {
                        if (this.table.options.placeholderHeaderFilter && Object.keys(this.headerFilters).length) return this.table.options.placeholderHeaderFilter;
                    }
                    userSetFilter(t, e, i, r) {
                        this.setFilter(t, e, i, r), this.refreshFilter();
                    }
                    userRefreshFilter() {
                        this.refreshFilter();
                    }
                    userAddFilter(t, e, i, r) {
                        this.addFilter(t, e, i, r), this.refreshFilter();
                    }
                    userSetHeaderFilterFocus(t) {
                        var e = this.table.columnManager.findColumn(t);
                        if (!e) return console.warn("Column Filter Focus Error - No matching column found:", t), !1;
                        this.setHeaderFilterFocus(e);
                    }
                    userGetHeaderFilterValue(t) {
                        var e = this.table.columnManager.findColumn(t);
                        if (e) return this.getHeaderFilterValue(e);
                        console.warn("Column Filter Error - No matching column found:", t);
                    }
                    userSetHeaderFilterValue(t, e) {
                        var i = this.table.columnManager.findColumn(t);
                        if (!i) return console.warn("Column Filter Error - No matching column found:", t), !1;
                        this.setHeaderFilterValue(i, e);
                    }
                    userRemoveFilter(t, e, i) {
                        this.removeFilter(t, e, i), this.refreshFilter();
                    }
                    userClearFilter(t) {
                        this.clearFilter(t), this.refreshFilter();
                    }
                    userClearHeaderFilter() {
                        this.clearHeaderFilter(), this.refreshFilter();
                    }
                    searchRows(t, e, i) {
                        return this.search("rows", t, e, i);
                    }
                    searchData(t, e, i) {
                        return this.search("data", t, e, i);
                    }
                    initializeColumnHeaderFilter(t) {
                        t.definition.headerFilter && this.initializeColumn(t);
                    }
                    initializeColumn(t, e) {
                        var i = this,
                            r = t.getField();
                        (t.modules.filter = {
                            success: function (e) {
                                var s,
                                    a = ("input" == t.modules.filter.tagType && "text" == t.modules.filter.attrType) || "textarea" == t.modules.filter.tagType ? "partial" : "match",
                                    n = "",
                                    o = "";
                                if (void 0 === t.modules.filter.prevSuccess || t.modules.filter.prevSuccess !== e) {
                                    if (((t.modules.filter.prevSuccess = e), t.modules.filter.emptyFunc(e))) delete i.headerFilters[r];
                                    else {
                                        switch (((t.modules.filter.value = e), typeof t.definition.headerFilterFunc)) {
                                            case "string":
                                                N.filters[t.definition.headerFilterFunc]
                                                    ? ((n = t.definition.headerFilterFunc),
                                                      (s = function (i) {
                                                          var r = t.definition.headerFilterFuncParams || {},
                                                              s = t.getFieldValue(i);
                                                          return (r = "function" == typeof r ? r(e, s, i) : r), N.filters[t.definition.headerFilterFunc](e, s, i, r);
                                                      }))
                                                    : console.warn("Header Filter Error - Matching filter function not found: ", t.definition.headerFilterFunc);
                                                break;
                                            case "function":
                                                n = s = function (i) {
                                                    var r = t.definition.headerFilterFuncParams || {},
                                                        s = t.getFieldValue(i);
                                                    return (r = "function" == typeof r ? r(e, s, i) : r), t.definition.headerFilterFunc(e, s, i, r);
                                                };
                                        }
                                        if (!s)
                                            if ("partial" === a)
                                                (s = function (i) {
                                                    var r = t.getFieldValue(i);
                                                    return null != r && String(r).toLowerCase().indexOf(String(e).toLowerCase()) > -1;
                                                }),
                                                    (n = "like");
                                            else
                                                (s = function (i) {
                                                    return t.getFieldValue(i) == e;
                                                }),
                                                    (n = "=");
                                        i.headerFilters[r] = { value: e, func: s, type: n };
                                    }
                                    (t.modules.filter.value = e), (o = JSON.stringify(i.headerFilters)), i.prevHeaderFilterChangeCheck !== o && ((i.prevHeaderFilterChangeCheck = o), i.trackChanges(), i.refreshFilter());
                                }
                                return !0;
                            },
                            attrType: !1,
                            tagType: !1,
                            emptyFunc: !1,
                        }),
                            this.generateHeaderFilterElement(t);
                    }
                    generateHeaderFilterElement(t, e, i) {
                        var r,
                            s,
                            a,
                            n,
                            o,
                            l,
                            h,
                            c,
                            d = this,
                            u = t.modules.filter.success,
                            p = t.getField();
                        if (((t.modules.filter.value = e), t.modules.filter.headerElement && t.modules.filter.headerElement.parentNode && t.contentElement.removeChild(t.modules.filter.headerElement.parentNode), p)) {
                            switch (
                                ((t.modules.filter.emptyFunc =
                                    t.definition.headerFilterEmptyCheck ||
                                    function (t) {
                                        return !t && 0 !== t;
                                    }),
                                (r = document.createElement("div")).classList.add("tabulator-header-filter"),
                                typeof t.definition.headerFilter)
                            ) {
                                case "string":
                                    d.table.modules.edit.editors[t.definition.headerFilter]
                                        ? ((s = d.table.modules.edit.editors[t.definition.headerFilter]),
                                          ("tick" !== t.definition.headerFilter && "tickCross" !== t.definition.headerFilter) ||
                                              t.definition.headerFilterEmptyCheck ||
                                              (t.modules.filter.emptyFunc = function (t) {
                                                  return !0 !== t && !1 !== t;
                                              }))
                                        : console.warn("Filter Error - Cannot build header filter, No such editor found: ", t.definition.editor);
                                    break;
                                case "function":
                                    s = t.definition.headerFilter;
                                    break;
                                case "boolean":
                                    t.modules.edit && t.modules.edit.editor
                                        ? (s = t.modules.edit.editor)
                                        : t.definition.formatter && d.table.modules.edit.editors[t.definition.formatter]
                                        ? ((s = d.table.modules.edit.editors[t.definition.formatter]),
                                          ("tick" !== t.definition.formatter && "tickCross" !== t.definition.formatter) ||
                                              t.definition.headerFilterEmptyCheck ||
                                              (t.modules.filter.emptyFunc = function (t) {
                                                  return !0 !== t && !1 !== t;
                                              }))
                                        : (s = d.table.modules.edit.editors.input);
                            }
                            if (s) {
                                if (
                                    ((n = {
                                        getValue: function () {
                                            return void 0 !== e ? e : "";
                                        },
                                        getField: function () {
                                            return t.definition.field;
                                        },
                                        getElement: function () {
                                            return r;
                                        },
                                        getColumn: function () {
                                            return t.getComponent();
                                        },
                                        getTable: () => this.table,
                                        getType: () => "header",
                                        getRow: function () {
                                            return { normalizeHeight: function () {} };
                                        },
                                    }),
                                    (h = "function" == typeof (h = t.definition.headerFilterParams || {}) ? h.call(d.table, n) : h),
                                    !(a = s.call(
                                        this.table.modules.edit,
                                        n,
                                        function (t) {
                                            c = t;
                                        },
                                        u,
                                        function () {},
                                        h
                                    )))
                                )
                                    return void console.warn("Filter Error - Cannot add filter to " + p + " column, editor returned a value of false");
                                if (!(a instanceof Node)) return void console.warn("Filter Error - Cannot add filter to " + p + " column, editor should return an instance of Node, the editor returned:", a);
                                d.langBind("headerFilters|columns|" + t.definition.field, function (e) {
                                    a.setAttribute("placeholder", void 0 !== e && e ? e : t.definition.headerFilterPlaceholder || d.langText("headerFilters|default"));
                                }),
                                    a.addEventListener("click", function (t) {
                                        t.stopPropagation(), a.focus();
                                    }),
                                    a.addEventListener("focus", (t) => {
                                        var e = this.table.columnManager.contentsElement.scrollLeft;
                                        e !== this.table.rowManager.element.scrollLeft && (this.table.rowManager.scrollHorizontal(e), this.table.columnManager.scrollHorizontal(e));
                                    }),
                                    (o = !1),
                                    (l = function (t) {
                                        o && clearTimeout(o),
                                            (o = setTimeout(function () {
                                                u(a.value);
                                            }, d.table.options.headerFilterLiveFilterDelay));
                                    }),
                                    (t.modules.filter.headerElement = a),
                                    (t.modules.filter.attrType = a.hasAttribute("type") ? a.getAttribute("type").toLowerCase() : ""),
                                    (t.modules.filter.tagType = a.tagName.toLowerCase()),
                                    !1 !== t.definition.headerFilterLiveFilter &&
                                        ("autocomplete" !== t.definition.headerFilter &&
                                            "tickCross" !== t.definition.headerFilter &&
                                            (("autocomplete" !== t.definition.editor && "tickCross" !== t.definition.editor) || !0 !== t.definition.headerFilter) &&
                                            (a.addEventListener("keyup", l),
                                            a.addEventListener("search", l),
                                            "number" == t.modules.filter.attrType &&
                                                a.addEventListener("change", function (t) {
                                                    u(a.value);
                                                }),
                                            "text" == t.modules.filter.attrType && "ie" !== this.table.browser && a.setAttribute("type", "search")),
                                        ("input" != t.modules.filter.tagType && "select" != t.modules.filter.tagType && "textarea" != t.modules.filter.tagType) ||
                                            a.addEventListener("mousedown", function (t) {
                                                t.stopPropagation();
                                            })),
                                    r.appendChild(a),
                                    t.contentElement.appendChild(r),
                                    i || d.headerFilterColumns.push(t),
                                    c && c();
                            }
                        } else console.warn("Filter Error - Cannot add header filter, column has no field set:", t.definition.title);
                    }
                    hideHeaderFilterElements() {
                        this.headerFilterColumns.forEach(function (t) {
                            t.modules.filter && t.modules.filter.headerElement && (t.modules.filter.headerElement.style.display = "none");
                        });
                    }
                    showHeaderFilterElements() {
                        this.headerFilterColumns.forEach(function (t) {
                            t.modules.filter && t.modules.filter.headerElement && (t.modules.filter.headerElement.style.display = "");
                        });
                    }
                    setHeaderFilterFocus(t) {
                        t.modules.filter && t.modules.filter.headerElement ? t.modules.filter.headerElement.focus() : console.warn("Column Filter Focus Error - No header filter set on column:", t.getField());
                    }
                    getHeaderFilterValue(t) {
                        if (t.modules.filter && t.modules.filter.headerElement) return t.modules.filter.value;
                        console.warn("Column Filter Error - No header filter set on column:", t.getField());
                    }
                    setHeaderFilterValue(t, e) {
                        t &&
                            (t.modules.filter && t.modules.filter.headerElement
                                ? (this.generateHeaderFilterElement(t, e, !0), t.modules.filter.success(e))
                                : console.warn("Column Filter Error - No header filter set on column:", t.getField()));
                    }
                    reloadHeaderFilter(t) {
                        t && (t.modules.filter && t.modules.filter.headerElement ? this.generateHeaderFilterElement(t, t.modules.filter.value, !0) : console.warn("Column Filter Error - No header filter set on column:", t.getField()));
                    }
                    refreshFilter() {
                        this.tableInitialized && ("remote" === this.table.options.filterMode ? this.reloadData(null, !1, !1) : this.refreshData(!0));
                    }
                    trackChanges() {
                        (this.changed = !0), this.dispatch("filter-changed");
                    }
                    hasChanged() {
                        var t = this.changed;
                        return (this.changed = !1), t;
                    }
                    setFilter(t, e, i, r) {
                        (this.filterList = []), Array.isArray(t) || (t = [{ field: t, type: e, value: i, params: r }]), this.addFilter(t);
                    }
                    addFilter(t, e, i, r) {
                        var s = !1;
                        Array.isArray(t) || (t = [{ field: t, type: e, value: i, params: r }]),
                            t.forEach((t) => {
                                (t = this.findFilter(t)) && (this.filterList.push(t), (s = !0));
                            }),
                            s && this.trackChanges();
                    }
                    findFilter(t) {
                        var e;
                        if (Array.isArray(t)) return this.findSubFilters(t);
                        var i = !1;
                        return (
                            "function" == typeof t.field
                                ? (i = function (e) {
                                      return t.field(e, t.type || {});
                                  })
                                : N.filters[t.type]
                                ? (i = (e = this.table.columnManager.getColumnByField(t.field))
                                      ? function (i) {
                                            return N.filters[t.type](t.value, e.getFieldValue(i), i, t.params || {});
                                        }
                                      : function (e) {
                                            return N.filters[t.type](t.value, e[t.field], e, t.params || {});
                                        })
                                : console.warn("Filter Error - No such filter type found, ignoring: ", t.type),
                            (t.func = i),
                            !!t.func && t
                        );
                    }
                    findSubFilters(t) {
                        var e = [];
                        return (
                            t.forEach((t) => {
                                (t = this.findFilter(t)) && e.push(t);
                            }),
                            !!e.length && e
                        );
                    }
                    getFilters(t, e) {
                        var i = [];
                        return (
                            t && (i = this.getHeaderFilters()),
                            e &&
                                i.forEach(function (t) {
                                    "function" == typeof t.type && (t.type = "function");
                                }),
                            (i = i.concat(this.filtersToArray(this.filterList, e)))
                        );
                    }
                    filtersToArray(t, e) {
                        var i = [];
                        return (
                            t.forEach((t) => {
                                var r;
                                Array.isArray(t) ? i.push(this.filtersToArray(t, e)) : ((r = { field: t.field, type: t.type, value: t.value }), e && "function" == typeof r.type && (r.type = "function"), i.push(r));
                            }),
                            i
                        );
                    }
                    getHeaderFilters() {
                        var t = [];
                        for (var e in this.headerFilters) t.push({ field: e, type: this.headerFilters[e].type, value: this.headerFilters[e].value });
                        return t;
                    }
                    removeFilter(t, e, i) {
                        Array.isArray(t) || (t = [{ field: t, type: e, value: i }]),
                            t.forEach((t) => {
                                var e = -1;
                                (e = "object" == typeof t.field ? this.filterList.findIndex((e) => t === e) : this.filterList.findIndex((e) => t.field === e.field && t.type === e.type && t.value === e.value)) > -1
                                    ? this.filterList.splice(e, 1)
                                    : console.warn("Filter Error - No matching filter type found, ignoring: ", t.type);
                            }),
                            this.trackChanges();
                    }
                    clearFilter(t) {
                        (this.filterList = []), t && this.clearHeaderFilter(), this.trackChanges();
                    }
                    clearHeaderFilter() {
                        (this.headerFilters = {}),
                            (this.prevHeaderFilterChangeCheck = "{}"),
                            this.headerFilterColumns.forEach((t) => {
                                void 0 !== t.modules.filter.value && delete t.modules.filter.value, (t.modules.filter.prevSuccess = void 0), this.reloadHeaderFilter(t);
                            }),
                            this.trackChanges();
                    }
                    search(t, e, i, r) {
                        var s = [],
                            a = [];
                        return (
                            Array.isArray(e) || (e = [{ field: e, type: i, value: r }]),
                            e.forEach((t) => {
                                (t = this.findFilter(t)) && a.push(t);
                            }),
                            this.table.rowManager.rows.forEach((e) => {
                                var i = !0;
                                a.forEach((t) => {
                                    this.filterRecurse(t, e.getData()) || (i = !1);
                                }),
                                    i && s.push("data" === t ? e.getData("data") : e.getComponent());
                            }),
                            s
                        );
                    }
                    filter(t, e) {
                        var i = [],
                            r = [];
                        return (
                            this.subscribedExternal("dataFiltering") && this.dispatchExternal("dataFiltering", this.getFilters(!0)),
                            "remote" !== this.table.options.filterMode && (this.filterList.length || Object.keys(this.headerFilters).length)
                                ? t.forEach((t) => {
                                      this.filterRow(t) && i.push(t);
                                  })
                                : (i = t.slice(0)),
                            this.subscribedExternal("dataFiltered") &&
                                (i.forEach((t) => {
                                    r.push(t.getComponent());
                                }),
                                this.dispatchExternal("dataFiltered", this.getFilters(!0), r)),
                            i
                        );
                    }
                    filterRow(t, e) {
                        var i = !0,
                            r = t.getData();
                        for (var s in (this.filterList.forEach((t) => {
                            this.filterRecurse(t, r) || (i = !1);
                        }),
                        this.headerFilters))
                            this.headerFilters[s].func(r) || (i = !1);
                        return i;
                    }
                    filterRecurse(t, e) {
                        var i = !1;
                        return (
                            Array.isArray(t)
                                ? t.forEach((t) => {
                                      this.filterRecurse(t, e) && (i = !0);
                                  })
                                : (i = t.func(e)),
                            i
                        );
                    }
                }
                (N.moduleName = "filter"), (N.filters = z);
                var V = {
                    plaintext: function (t, e, i) {
                        return this.emptyToSpace(this.sanitizeHTML(t.getValue()));
                    },
                    html: function (t, e, i) {
                        return t.getValue();
                    },
                    textarea: function (t, e, i) {
                        return (t.getElement().style.whiteSpace = "pre-wrap"), this.emptyToSpace(this.sanitizeHTML(t.getValue()));
                    },
                    money: function (t, e, i) {
                        var r,
                            s,
                            a,
                            n,
                            o,
                            l = parseFloat(t.getValue()),
                            h = "",
                            c = e.decimal || ".",
                            d = e.thousand || ",",
                            u = e.negativeSign || "-",
                            p = e.symbol || "",
                            m = !!e.symbolAfter,
                            f = void 0 !== e.precision ? e.precision : 2;
                        if (isNaN(l)) return this.emptyToSpace(this.sanitizeHTML(t.getValue()));
                        if ((l < 0 && ((l = Math.abs(l)), (h = u)), (r = !1 !== f ? l.toFixed(f) : l), (s = (r = String(r).split("."))[0]), (a = r.length > 1 ? c + r[1] : ""), !1 !== e.thousand))
                            for (n = /(\d+)(\d{3})/; n.test(s); ) s = s.replace(n, "$1" + d + "$2");
                        return (o = s + a), !0 === h ? ((o = "(" + o + ")"), m ? o + p : p + o) : m ? h + o + p : h + p + o;
                    },
                    link: function (t, e, i) {
                        var r,
                            s = t.getValue(),
                            a = e.urlPrefix || "",
                            n = e.download,
                            o = s,
                            l = document.createElement("a");
                        if (
                            (e.labelField &&
                                ((r = t.getData()),
                                (o = (function t(e, i) {
                                    var r = i[e.shift()];
                                    return e.length && "object" == typeof r ? t(e, r) : r;
                                })(e.labelField.split(this.table.options.nestedFieldSeparator), r))),
                            e.label)
                        )
                            switch (typeof e.label) {
                                case "string":
                                    o = e.label;
                                    break;
                                case "function":
                                    o = e.label(t);
                            }
                        if (o) {
                            if ((e.urlField && (s = (r = t.getData())[e.urlField]), e.url))
                                switch (typeof e.url) {
                                    case "string":
                                        s = e.url;
                                        break;
                                    case "function":
                                        s = e.url(t);
                                }
                            return (
                                l.setAttribute("href", a + s),
                                e.target && l.setAttribute("target", e.target),
                                e.download && ((n = "function" == typeof n ? n(t) : !0 === n ? "" : n), l.setAttribute("download", n)),
                                (l.innerHTML = this.emptyToSpace(this.sanitizeHTML(o))),
                                l
                            );
                        }
                        return "&nbsp;";
                    },
                    image: function (t, e, i) {
                        var r = document.createElement("img"),
                            s = t.getValue();
                        switch ((e.urlPrefix && (s = e.urlPrefix + t.getValue()), e.urlSuffix && (s += e.urlSuffix), r.setAttribute("src", s), typeof e.height)) {
                            case "number":
                                r.style.height = e.height + "px";
                                break;
                            case "string":
                                r.style.height = e.height;
                        }
                        switch (typeof e.width) {
                            case "number":
                                r.style.width = e.width + "px";
                                break;
                            case "string":
                                r.style.width = e.width;
                        }
                        return (
                            r.addEventListener("load", function () {
                                t.getRow().normalizeHeight();
                            }),
                            r
                        );
                    },
                    tickCross: function (t, e, i) {
                        var r = t.getValue(),
                            s = t.getElement(),
                            a = e.allowEmpty,
                            n = e.allowTruthy,
                            o = Object.keys(e).includes("trueValue"),
                            l =
                                void 0 !== e.tickElement
                                    ? e.tickElement
                                    : '<svg enable-background="new 0 0 24 24" height="14" width="14" viewBox="0 0 24 24" xml:space="preserve" ><path fill="#2DC214" clip-rule="evenodd" d="M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z" fill-rule="evenodd"/></svg>',
                            h =
                                void 0 !== e.crossElement
                                    ? e.crossElement
                                    : '<svg enable-background="new 0 0 24 24" height="14" width="14"  viewBox="0 0 24 24" xml:space="preserve" ><path fill="#CE1515" d="M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z"/></svg>';
                        return (o && r === e.trueValue) || (!o && ((n && r) || !0 === r || "true" === r || "True" === r || 1 === r || "1" === r))
                            ? (s.setAttribute("aria-checked", !0), l || "")
                            : !a || ("null" !== r && "" !== r && null != r)
                            ? (s.setAttribute("aria-checked", !1), h || "")
                            : (s.setAttribute("aria-checked", "mixed"), "");
                    },
                    datetime: function (t, e, i) {
                        var r,
                            s = window.DateTime || luxon.DateTime,
                            a = e.inputFormat || "yyyy-MM-dd HH:mm:ss",
                            n = e.outputFormat || "dd/MM/yyyy HH:mm:ss",
                            o = void 0 !== e.invalidPlaceholder ? e.invalidPlaceholder : "",
                            l = t.getValue();
                        if (void 0 !== s)
                            return (r = s.isDateTime(l) ? l : "iso" === a ? s.fromISO(String(l)) : s.fromFormat(String(l), a)).isValid
                                ? (e.timezone && (r = r.setZone(e.timezone)), r.toFormat(n))
                                : !0 !== o && l
                                ? "function" == typeof o
                                    ? o(l)
                                    : o
                                : l;
                        console.error("Format Error - 'datetime' formatter is dependant on luxon.js");
                    },
                    datetimediff: function (t, e, i) {
                        var r,
                            s = window.DateTime || luxon.DateTime,
                            a = e.inputFormat || "yyyy-MM-dd HH:mm:ss",
                            n = void 0 !== e.invalidPlaceholder ? e.invalidPlaceholder : "",
                            o = void 0 !== e.suffix && e.suffix,
                            l = void 0 !== e.unit ? e.unit : "days",
                            h = void 0 !== e.humanize && e.humanize,
                            c = void 0 !== e.date ? e.date : s.now(),
                            d = t.getValue();
                        if (void 0 !== s)
                            return (r = s.isDateTime(d) ? d : "iso" === a ? s.fromISO(String(d)) : s.fromFormat(String(d), a)).isValid
                                ? h
                                    ? r.diff(c, l).toHuman() + (o ? " " + o : "")
                                    : parseInt(r.diff(c, l)[l]) + (o ? " " + o : "")
                                : !0 === n
                                ? d
                                : "function" == typeof n
                                ? n(d)
                                : n;
                        console.error("Format Error - 'datetimediff' formatter is dependant on luxon.js");
                    },
                    lookup: function (t, e, i) {
                        var r = t.getValue();
                        return void 0 === e[r] ? (console.warn("Missing display value for " + r), r) : e[r];
                    },
                    star: function (t, e, i) {
                        var r = t.getValue(),
                            s = t.getElement(),
                            a = e && e.stars ? e.stars : 5,
                            n = document.createElement("span"),
                            o = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                        (n.style.verticalAlign = "middle"),
                            o.setAttribute("width", "14"),
                            o.setAttribute("height", "14"),
                            o.setAttribute("viewBox", "0 0 512 512"),
                            o.setAttribute("xml:space", "preserve"),
                            (o.style.padding = "0 1px"),
                            (r = r && !isNaN(r) ? parseInt(r) : 0),
                            (r = Math.max(0, Math.min(r, a)));
                        for (var l = 1; l <= a; l++) {
                            var h = o.cloneNode(!0);
                            (h.innerHTML =
                                l <= r
                                    ? '<polygon fill="#FFEA00" stroke="#C1AB60" stroke-width="37.6152" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 "/>'
                                    : '<polygon fill="#D2D2D2" stroke="#686868" stroke-width="37.6152" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 "/>'),
                                n.appendChild(h);
                        }
                        return (s.style.whiteSpace = "nowrap"), (s.style.overflow = "hidden"), (s.style.textOverflow = "ellipsis"), s.setAttribute("aria-label", r), n;
                    },
                    traffic: function (t, e, i) {
                        var r,
                            s,
                            a = this.sanitizeHTML(t.getValue()) || 0,
                            n = document.createElement("span"),
                            o = e && e.max ? e.max : 100,
                            l = e && e.min ? e.min : 0,
                            h = e && void 0 !== e.color ? e.color : ["red", "orange", "green"],
                            c = "#666666";
                        if (!isNaN(a) && void 0 !== t.getValue()) {
                            switch ((n.classList.add("tabulator-traffic-light"), (s = parseFloat(a) <= o ? parseFloat(a) : o), (s = parseFloat(s) >= l ? parseFloat(s) : l), (r = (o - l) / 100), (s = Math.round((s - l) / r)), typeof h)) {
                                case "string":
                                    c = h;
                                    break;
                                case "function":
                                    c = h(a);
                                    break;
                                case "object":
                                    if (Array.isArray(h)) {
                                        var d = 100 / h.length,
                                            u = Math.floor(s / d);
                                        (u = Math.min(u, h.length - 1)), (c = h[(u = Math.max(u, 0))]);
                                        break;
                                    }
                            }
                            return (n.style.backgroundColor = c), n;
                        }
                    },
                    progress: function (t, e = {}, i) {
                        var r,
                            s,
                            a,
                            n,
                            o,
                            l = this.sanitizeHTML(t.getValue()) || 0,
                            h = t.getElement(),
                            c = e.max ? e.max : 100,
                            d = e.min ? e.min : 0,
                            u = e.legendAlign ? e.legendAlign : "center";
                        switch (((s = parseFloat(l) <= c ? parseFloat(l) : c), (s = parseFloat(s) >= d ? parseFloat(s) : d), (r = (c - d) / 100), (s = Math.round((s - d) / r)), typeof e.color)) {
                            case "string":
                                a = e.color;
                                break;
                            case "function":
                                a = e.color(l);
                                break;
                            case "object":
                                if (Array.isArray(e.color)) {
                                    var p = 100 / e.color.length,
                                        m = Math.floor(s / p);
                                    (m = Math.min(m, e.color.length - 1)), (m = Math.max(m, 0)), (a = e.color[m]);
                                    break;
                                }
                            default:
                                a = "#2DC214";
                        }
                        switch (typeof e.legend) {
                            case "string":
                                n = e.legend;
                                break;
                            case "function":
                                n = e.legend(l);
                                break;
                            case "boolean":
                                n = l;
                                break;
                            default:
                                n = !1;
                        }
                        switch (typeof e.legendColor) {
                            case "string":
                                o = e.legendColor;
                                break;
                            case "function":
                                o = e.legendColor(l);
                                break;
                            case "object":
                                if (Array.isArray(e.legendColor)) {
                                    var f = 100 / e.legendColor.length,
                                        g = Math.floor(s / f);
                                    (g = Math.min(g, e.legendColor.length - 1)), (g = Math.max(g, 0)), (o = e.legendColor[g]);
                                }
                                break;
                            default:
                                o = "#000";
                        }
                        (h.style.minWidth = "30px"), (h.style.position = "relative"), h.setAttribute("aria-label", s);
                        var v = document.createElement("div");
                        (v.style.display = "inline-block"), (v.style.width = s + "%"), (v.style.backgroundColor = a), (v.style.height = "100%"), v.setAttribute("data-max", c), v.setAttribute("data-min", d);
                        var b = document.createElement("div");
                        if (((b.style.position = "relative"), (b.style.width = "100%"), (b.style.height = "100%"), n)) {
                            var w = document.createElement("div");
                            (w.style.position = "absolute"), (w.style.top = 0), (w.style.left = 0), (w.style.textAlign = u), (w.style.width = "100%"), (w.style.color = o), (w.innerHTML = n);
                        }
                        return (
                            i(function () {
                                if (!(t instanceof y)) {
                                    var e = document.createElement("div");
                                    (e.style.position = "absolute"), (e.style.top = "4px"), (e.style.bottom = "4px"), (e.style.left = "4px"), (e.style.right = "4px"), h.appendChild(e), (h = e);
                                }
                                h.appendChild(b), b.appendChild(v), n && b.appendChild(w);
                            }),
                            ""
                        );
                    },
                    color: function (t, e, i) {
                        return (t.getElement().style.backgroundColor = this.sanitizeHTML(t.getValue())), "";
                    },
                    buttonTick: function (t, e, i) {
                        return '<svg enable-background="new 0 0 24 24" height="14" width="14" viewBox="0 0 24 24" xml:space="preserve" ><path fill="#2DC214" clip-rule="evenodd" d="M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z" fill-rule="evenodd"/></svg>';
                    },
                    buttonCross: function (t, e, i) {
                        return '<svg enable-background="new 0 0 24 24" height="14" width="14" viewBox="0 0 24 24" xml:space="preserve" ><path fill="#CE1515" d="M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z"/></svg>';
                    },
                    rownum: function (t, e, i) {
                        var r = document.createElement("span");
                        return (
                            t.getRow().watchPosition((t) => {
                                r.innerText = t;
                            }),
                            r
                        );
                    },
                    handle: function (t, e, i) {
                        return (
                            t.getElement().classList.add("tabulator-row-handle"),
                            "<div class='tabulator-row-handle-box'><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div></div>"
                        );
                    },
                    responsiveCollapse: function (t, e, i) {
                        var r = document.createElement("div"),
                            s = t.getRow()._row.modules.responsiveLayout;
                        function a(t) {
                            var e = s.element;
                            (s.open = t), e && (s.open ? (r.classList.add("open"), (e.style.display = "")) : (r.classList.remove("open"), (e.style.display = "none")));
                        }
                        return (
                            r.classList.add("tabulator-responsive-collapse-toggle"),
                            (r.innerHTML =
                                '<svg class=\'tabulator-responsive-collapse-toggle-open\' viewbox="0 0 24 24">\n  <line x1="7" y1="12" x2="17" y2="12" fill="none" stroke-width="3" stroke-linecap="round" />\n  <line y1="7" x1="12" y2="17" x2="12" fill="none" stroke-width="3" stroke-linecap="round" />\n</svg>\n\n<svg class=\'tabulator-responsive-collapse-toggle-close\' viewbox="0 0 24 24">\n  <line x1="7" y1="12" x2="17" y2="12"  fill="none" stroke-width="3" stroke-linecap="round" />\n</svg>'),
                            t.getElement().classList.add("tabulator-row-handle"),
                            r.addEventListener("click", function (e) {
                                e.stopImmediatePropagation(), a(!s.open), t.getTable().rowManager.adjustTableSize();
                            }),
                            a(s.open),
                            r
                        );
                    },
                    rowSelection: function (t, e, i) {
                        var r = document.createElement("input"),
                            s = !1;
                        if (((r.type = "checkbox"), r.setAttribute("aria-label", "Select Row"), this.table.modExists("selectRow", !0)))
                            if (
                                (r.addEventListener("click", (t) => {
                                    t.stopPropagation();
                                }),
                                "function" == typeof t.getRow)
                            ) {
                                var a = t.getRow();
                                a instanceof S
                                    ? (r.addEventListener("change", (t) => {
                                          "click" === this.table.options.selectableRangeMode && s ? (s = !1) : a.toggleSelect();
                                      }),
                                      "click" === this.table.options.selectableRangeMode &&
                                          r.addEventListener("click", (t) => {
                                              (s = !0), this.table.modules.selectRow.handleComplexRowClick(a._row, t);
                                          }),
                                      (r.checked = a.isSelected && a.isSelected()),
                                      this.table.modules.selectRow.registerRowSelectCheckbox(a, r))
                                    : (r = "");
                            } else
                                r.addEventListener("change", (t) => {
                                    this.table.modules.selectRow.selectedRows.length ? this.table.deselectRow() : this.table.selectRow(e.rowRange);
                                }),
                                    this.table.modules.selectRow.registerHeaderSelectCheckbox(r);
                        return r;
                    },
                };
                class H extends h {
                    constructor(t) {
                        super(t),
                            this.registerColumnOption("formatter"),
                            this.registerColumnOption("formatterParams"),
                            this.registerColumnOption("formatterPrint"),
                            this.registerColumnOption("formatterPrintParams"),
                            this.registerColumnOption("formatterClipboard"),
                            this.registerColumnOption("formatterClipboardParams"),
                            this.registerColumnOption("formatterHtmlOutput"),
                            this.registerColumnOption("formatterHtmlOutputParams"),
                            this.registerColumnOption("titleFormatter"),
                            this.registerColumnOption("titleFormatterParams");
                    }
                    initialize() {
                        this.subscribe("cell-format", this.formatValue.bind(this)),
                            this.subscribe("cell-rendered", this.cellRendered.bind(this)),
                            this.subscribe("column-layout", this.initializeColumn.bind(this)),
                            this.subscribe("column-format", this.formatHeader.bind(this));
                    }
                    initializeColumn(t) {
                        (t.modules.format = this.lookupFormatter(t, "")),
                            void 0 !== t.definition.formatterPrint && (t.modules.format.print = this.lookupFormatter(t, "Print")),
                            void 0 !== t.definition.formatterClipboard && (t.modules.format.clipboard = this.lookupFormatter(t, "Clipboard")),
                            void 0 !== t.definition.formatterHtmlOutput && (t.modules.format.htmlOutput = this.lookupFormatter(t, "HtmlOutput"));
                    }
                    lookupFormatter(t, e) {
                        var i = { params: t.definition["formatter" + e + "Params"] || {} },
                            r = t.definition["formatter" + e];
                        switch (typeof r) {
                            case "string":
                                H.formatters[r] ? (i.formatter = H.formatters[r]) : (console.warn("Formatter Error - No such formatter found: ", r), (i.formatter = H.formatters.plaintext));
                                break;
                            case "function":
                                i.formatter = r;
                                break;
                            default:
                                i.formatter = H.formatters.plaintext;
                        }
                        return i;
                    }
                    cellRendered(t) {
                        t.modules.format && t.modules.format.renderedCallback && !t.modules.format.rendered && (t.modules.format.renderedCallback(), (t.modules.format.rendered = !0));
                    }
                    formatHeader(t, e, i) {
                        var r, s, a, n;
                        return t.definition.titleFormatter
                            ? ((r = this.getFormatter(t.definition.titleFormatter)),
                              (a = (e) => {
                                  t.titleFormatterRendered = e;
                              }),
                              (n = {
                                  getValue: function () {
                                      return e;
                                  },
                                  getElement: function () {
                                      return i;
                                  },
                                  getType: function () {
                                      return "header";
                                  },
                                  getColumn: function () {
                                      return t.getComponent();
                                  },
                                  getTable: () => this.table,
                              }),
                              (s = "function" == typeof (s = t.definition.titleFormatterParams || {}) ? s() : s),
                              r.call(this, n, s, a))
                            : e;
                    }
                    formatValue(t) {
                        var e = t.getComponent(),
                            i = "function" == typeof t.column.modules.format.params ? t.column.modules.format.params(e) : t.column.modules.format.params;
                        return t.column.modules.format.formatter.call(this, e, i, function (e) {
                            t.modules.format || (t.modules.format = {}), (t.modules.format.renderedCallback = e), (t.modules.format.rendered = !1);
                        });
                    }
                    formatExportValue(t, e) {
                        var i,
                            r = t.column.modules.format[e];
                        if (r) {
                            function s(e) {
                                t.modules.format || (t.modules.format = {}), (t.modules.format.renderedCallback = e), (t.modules.format.rendered = !1);
                            }
                            return (i = "function" == typeof r.params ? r.params(t.getComponent()) : r.params), r.formatter.call(this, t.getComponent(), i, s);
                        }
                        return this.formatValue(t);
                    }
                    sanitizeHTML(t) {
                        if (t) {
                            var e = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#x2F;", "`": "&#x60;", "=": "&#x3D;" };
                            return String(t).replace(/[&<>"'`=/]/g, function (t) {
                                return e[t];
                            });
                        }
                        return t;
                    }
                    emptyToSpace(t) {
                        return null == t || "" === t ? "&nbsp;" : t;
                    }
                    getFormatter(t) {
                        switch (typeof t) {
                            case "string":
                                H.formatters[t] ? (t = H.formatters[t]) : (console.warn("Formatter Error - No such formatter found: ", t), (t = H.formatters.plaintext));
                                break;
                            case "function":
                                break;
                            default:
                                t = H.formatters.plaintext;
                        }
                        return t;
                    }
                }
                (H.moduleName = "format"), (H.formatters = V);
                class j extends h {
                    constructor(t) {
                        super(t), (this.leftColumns = []), (this.rightColumns = []), (this.initializationMode = "left"), (this.active = !1), (this.blocked = !0), this.registerColumnOption("frozen");
                    }
                    reset() {
                        (this.initializationMode = "left"), (this.leftColumns = []), (this.rightColumns = []), (this.active = !1);
                    }
                    initialize() {
                        this.subscribe("cell-layout", this.layoutCell.bind(this)),
                            this.subscribe("column-init", this.initializeColumn.bind(this)),
                            this.subscribe("column-width", this.layout.bind(this)),
                            this.subscribe("row-layout-after", this.layoutRow.bind(this)),
                            this.subscribe("table-layout", this.layout.bind(this)),
                            this.subscribe("columns-loading", this.reset.bind(this)),
                            this.subscribe("column-add", this.reinitializeColumns.bind(this)),
                            this.subscribe("column-delete", this.reinitializeColumns.bind(this)),
                            this.subscribe("table-redraw", this.layout.bind(this)),
                            this.subscribe("layout-refreshing", this.blockLayout.bind(this)),
                            this.subscribe("layout-refreshed", this.unblockLayout.bind(this)),
                            this.subscribe("scrollbar-vertical", this.adjustForScrollbar.bind(this));
                    }
                    blockLayout() {
                        this.blocked = !0;
                    }
                    unblockLayout() {
                        this.blocked = !1;
                    }
                    layoutCell(t) {
                        this.layoutElement(t.element, t.column);
                    }
                    reinitializeColumns() {
                        this.reset(),
                            this.table.columnManager.columnsByIndex.forEach((t) => {
                                this.initializeColumn(t);
                            });
                    }
                    initializeColumn(t) {
                        var e = { margin: 0, edge: !1 };
                        t.isGroup ||
                            (this.frozenCheck(t)
                                ? ((e.position = this.initializationMode), "left" == this.initializationMode ? this.leftColumns.push(t) : this.rightColumns.unshift(t), (this.active = !0), (t.modules.frozen = e))
                                : (this.initializationMode = "right"));
                    }
                    frozenCheck(t) {
                        return (
                            t.parent.isGroup && t.definition.frozen && console.warn("Frozen Column Error - Parent column group must be frozen, not individual columns or sub column groups"),
                            t.parent.isGroup ? this.frozenCheck(t.parent) : t.definition.frozen
                        );
                    }
                    layoutCalcRows() {
                        this.table.modExists("columnCalcs") &&
                            (this.table.modules.columnCalcs.topInitialized && this.table.modules.columnCalcs.topRow && this.layoutRow(this.table.modules.columnCalcs.topRow),
                            this.table.modules.columnCalcs.botInitialized && this.table.modules.columnCalcs.botRow && this.layoutRow(this.table.modules.columnCalcs.botRow),
                            this.table.modExists("groupRows") && this.layoutGroupCalcs(this.table.modules.groupRows.getGroups()));
                    }
                    layoutGroupCalcs(t) {
                        t.forEach((t) => {
                            t.calcs.top && this.layoutRow(t.calcs.top), t.calcs.bottom && this.layoutRow(t.calcs.bottom), t.groupList && t.groupList.length && this.layoutGroupCalcs(t.groupList);
                        });
                    }
                    layoutColumnPosition(t) {
                        var e = [],
                            i = 0,
                            r = 0;
                        this.leftColumns.forEach((r, s) => {
                            if (
                                ((r.modules.frozen.marginValue = i),
                                (r.modules.frozen.margin = r.modules.frozen.marginValue + "px"),
                                r.visible && (i += r.getWidth()),
                                s == this.leftColumns.length - 1 ? (r.modules.frozen.edge = !0) : (r.modules.frozen.edge = !1),
                                r.parent.isGroup)
                            ) {
                                var a = this.getColGroupParentElement(r);
                                e.includes(a) || (this.layoutElement(a, r), e.push(a)), r.modules.frozen.edge && a.classList.add("tabulator-frozen-" + r.modules.frozen.position);
                            } else this.layoutElement(r.getElement(), r);
                            t &&
                                r.cells.forEach((t) => {
                                    this.layoutElement(t.getElement(!0), r);
                                });
                        }),
                            this.rightColumns.forEach((e, i) => {
                                (e.modules.frozen.marginValue = r),
                                    (e.modules.frozen.margin = e.modules.frozen.marginValue + "px"),
                                    e.visible && (r += e.getWidth()),
                                    i == this.rightColumns.length - 1 ? (e.modules.frozen.edge = !0) : (e.modules.frozen.edge = !1),
                                    e.parent.isGroup ? this.layoutElement(this.getColGroupParentElement(e), e) : this.layoutElement(e.getElement(), e),
                                    t &&
                                        e.cells.forEach((t) => {
                                            this.layoutElement(t.getElement(!0), e);
                                        });
                            });
                    }
                    getColGroupParentElement(t) {
                        return t.parent.isGroup ? this.getColGroupParentElement(t.parent) : t.getElement();
                    }
                    layout() {
                        this.active && !this.blocked && (this.layoutColumnPosition(), this.reinitializeRows(), this.layoutCalcRows());
                    }
                    reinitializeRows() {
                        var t = this.table.rowManager.getVisibleRows(!0);
                        this.table.rowManager
                            .getRows()
                            .filter((e) => !t.includes(e))
                            .forEach((t) => {
                                t.deinitialize();
                            }),
                            t.forEach((t) => {
                                "row" === t.type && this.layoutRow(t);
                            });
                    }
                    layoutRow(t) {
                        "fitDataFill" === this.table.options.layout && this.rightColumns.length && (this.table.rowManager.getTableElement().style.minWidth = "calc(100% - " + this.rightMargin + ")"),
                            this.leftColumns.forEach((e) => {
                                var i = t.getCell(e);
                                i && this.layoutElement(i.getElement(!0), e);
                            }),
                            this.rightColumns.forEach((e) => {
                                var i = t.getCell(e);
                                i && this.layoutElement(i.getElement(!0), e);
                            });
                    }
                    layoutElement(t, e) {
                        var i;
                        e.modules.frozen &&
                            t &&
                            ((t.style.position = "sticky"),
                            (i = this.table.rtl ? ("left" === e.modules.frozen.position ? "right" : "left") : e.modules.frozen.position),
                            (t.style[i] = e.modules.frozen.margin),
                            t.classList.add("tabulator-frozen"),
                            e.modules.frozen.edge && t.classList.add("tabulator-frozen-" + e.modules.frozen.position));
                    }
                    adjustForScrollbar(t) {
                        this.rightColumns.length && (this.table.columnManager.getContentsElement().style.width = "calc(100% - " + t + "px)");
                    }
                    _calcSpace(t, e) {
                        for (var i = 0, r = 0; r < e; r++) t[r].visible && (i += t[r].getWidth());
                        return i;
                    }
                }
                j.moduleName = "frozenColumns";
                class W extends h {
                    constructor(t) {
                        super(t),
                            (this.topElement = document.createElement("div")),
                            (this.rows = []),
                            this.registerComponentFunction("row", "freeze", this.freezeRow.bind(this)),
                            this.registerComponentFunction("row", "unfreeze", this.unfreezeRow.bind(this)),
                            this.registerComponentFunction("row", "isFrozen", this.isRowFrozen.bind(this)),
                            this.registerTableOption("frozenRowsField", "id"),
                            this.registerTableOption("frozenRows", !1);
                    }
                    initialize() {
                        (this.rows = []),
                            this.topElement.classList.add("tabulator-frozen-rows-holder"),
                            this.table.columnManager.getContentsElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling),
                            this.subscribe("row-deleting", this.detachRow.bind(this)),
                            this.subscribe("rows-visible", this.visibleRows.bind(this)),
                            this.registerDisplayHandler(this.getRows.bind(this), 10),
                            this.table.options.frozenRows &&
                                (this.subscribe("data-processed", this.initializeRows.bind(this)),
                                this.subscribe("row-added", this.initializeRow.bind(this)),
                                this.subscribe("table-redrawing", this.resizeHolderWidth.bind(this)),
                                this.subscribe("column-resized", this.resizeHolderWidth.bind(this)),
                                this.subscribe("column-show", this.resizeHolderWidth.bind(this)),
                                this.subscribe("column-hide", this.resizeHolderWidth.bind(this))),
                            this.resizeHolderWidth();
                    }
                    resizeHolderWidth() {
                        this.topElement.style.minWidth = this.table.columnManager.headersElement.offsetWidth + "px";
                    }
                    initializeRows() {
                        this.table.rowManager.getRows().forEach((t) => {
                            this.initializeRow(t);
                        });
                    }
                    initializeRow(t) {
                        var e = this.table.options.frozenRows,
                            i = typeof e;
                        "number" === i
                            ? t.getPosition() && t.getPosition() + this.rows.length <= e && this.freezeRow(t)
                            : "function" === i
                            ? e.call(this.table, t.getComponent()) && this.freezeRow(t)
                            : Array.isArray(e) && e.includes(t.data[this.options("frozenRowsField")]) && this.freezeRow(t);
                    }
                    isRowFrozen(t) {
                        return this.rows.indexOf(t) > -1;
                    }
                    isFrozen() {
                        return !!this.rows.length;
                    }
                    visibleRows(t, e) {
                        return (
                            this.rows.forEach((t) => {
                                e.push(t);
                            }),
                            e
                        );
                    }
                    getRows(t) {
                        var e = t.slice(0);
                        return (
                            this.rows.forEach(function (t) {
                                var i = e.indexOf(t);
                                i > -1 && e.splice(i, 1);
                            }),
                            e
                        );
                    }
                    freezeRow(t) {
                        t.modules.frozen
                            ? console.warn("Freeze Error - Row is already frozen")
                            : ((t.modules.frozen = !0),
                              this.topElement.appendChild(t.getElement()),
                              t.initialize(),
                              t.normalizeHeight(),
                              this.rows.push(t),
                              this.refreshData(!1, "display"),
                              this.table.rowManager.adjustTableSize(),
                              this.styleRows());
                    }
                    unfreezeRow(t) {
                        t.modules.frozen
                            ? ((t.modules.frozen = !1), this.detachRow(t), this.table.rowManager.adjustTableSize(), this.refreshData(!1, "display"), this.rows.length && this.styleRows())
                            : console.warn("Freeze Error - Row is already unfrozen");
                    }
                    detachRow(t) {
                        var e = this.rows.indexOf(t);
                        if (e > -1) {
                            var i = t.getElement();
                            i.parentNode && i.parentNode.removeChild(i), this.rows.splice(e, 1);
                        }
                    }
                    styleRows(t) {
                        this.rows.forEach((t, e) => {
                            this.table.rowManager.styleRow(t, e);
                        });
                    }
                }
                W.moduleName = "frozenRows";
                class G {
                    constructor(t) {
                        return (
                            (this._group = t),
                            (this.type = "GroupComponent"),
                            new Proxy(this, {
                                get: function (t, e, i) {
                                    return void 0 !== t[e] ? t[e] : t._group.groupManager.table.componentFunctionBinder.handle("group", t._group, e);
                                },
                            })
                        );
                    }
                    getKey() {
                        return this._group.key;
                    }
                    getField() {
                        return this._group.field;
                    }
                    getElement() {
                        return this._group.element;
                    }
                    getRows() {
                        return this._group.getRows(!0);
                    }
                    getSubGroups() {
                        return this._group.getSubGroups(!0);
                    }
                    getParentGroup() {
                        return !!this._group.parent && this._group.parent.getComponent();
                    }
                    isVisible() {
                        return this._group.visible;
                    }
                    show() {
                        this._group.show();
                    }
                    hide() {
                        this._group.hide();
                    }
                    toggle() {
                        this._group.toggleVisibility();
                    }
                    scrollTo(t, e) {
                        return this._group.groupManager.table.rowManager.scrollToRow(this._group, t, e);
                    }
                    _getSelf() {
                        return this._group;
                    }
                    getTable() {
                        return this._group.groupManager.table;
                    }
                }
                class q {
                    constructor(t, e, i, r, s, a, n) {
                        (this.groupManager = t),
                            (this.parent = e),
                            (this.key = r),
                            (this.level = i),
                            (this.field = s),
                            (this.hasSubGroups = i < t.groupIDLookups.length - 1),
                            (this.addRow = this.hasSubGroups ? this._addRowToGroup : this._addRow),
                            (this.type = "group"),
                            (this.old = n),
                            (this.rows = []),
                            (this.groups = []),
                            (this.groupList = []),
                            (this.generator = a),
                            (this.element = !1),
                            (this.elementContents = !1),
                            (this.height = 0),
                            (this.outerHeight = 0),
                            (this.initialized = !1),
                            (this.calcs = {}),
                            (this.initialized = !1),
                            (this.modules = {}),
                            (this.arrowElement = !1),
                            (this.visible = n ? n.visible : void 0 !== t.startOpen[i] ? t.startOpen[i] : t.startOpen[0]),
                            (this.component = null),
                            this.createElements(),
                            this.addBindings(),
                            this.createValueGroups();
                    }
                    wipe(t) {
                        t ||
                            (this.groupList.length
                                ? this.groupList.forEach(function (t) {
                                      t.wipe();
                                  })
                                : this.rows.forEach((t) => {
                                      t.modules && delete t.modules.group;
                                  })),
                            (this.element = !1),
                            (this.arrowElement = !1),
                            (this.elementContents = !1);
                    }
                    createElements() {
                        var t = document.createElement("div");
                        t.classList.add("tabulator-arrow"),
                            (this.element = document.createElement("div")),
                            this.element.classList.add("tabulator-row"),
                            this.element.classList.add("tabulator-group"),
                            this.element.classList.add("tabulator-group-level-" + this.level),
                            this.element.setAttribute("role", "rowgroup"),
                            (this.arrowElement = document.createElement("div")),
                            this.arrowElement.classList.add("tabulator-group-toggle"),
                            this.arrowElement.appendChild(t),
                            !1 !== this.groupManager.table.options.movableRows && this.groupManager.table.modExists("moveRow") && this.groupManager.table.modules.moveRow.initializeGroupHeader(this);
                    }
                    createValueGroups() {
                        var t = this.level + 1;
                        this.groupManager.allowedValues &&
                            this.groupManager.allowedValues[t] &&
                            this.groupManager.allowedValues[t].forEach((e) => {
                                this._createGroup(e, t);
                            });
                    }
                    addBindings() {
                        this.groupManager.table.options.groupToggleElement &&
                            ("arrow" == this.groupManager.table.options.groupToggleElement ? this.arrowElement : this.element).addEventListener("click", (t) => {
                                t.stopPropagation(), t.stopImmediatePropagation(), this.toggleVisibility();
                            });
                    }
                    _createGroup(t, e) {
                        var i = e + "_" + t,
                            r = new q(this.groupManager, this, e, t, this.groupManager.groupIDLookups[e].field, this.groupManager.headerGenerator[e] || this.groupManager.headerGenerator[0], !!this.old && this.old.groups[i]);
                        (this.groups[i] = r), this.groupList.push(r);
                    }
                    _addRowToGroup(t) {
                        var e = this.level + 1;
                        if (this.hasSubGroups) {
                            var i = this.groupManager.groupIDLookups[e].func(t.getData()),
                                r = e + "_" + i;
                            this.groupManager.allowedValues && this.groupManager.allowedValues[e] ? this.groups[r] && this.groups[r].addRow(t) : (this.groups[r] || this._createGroup(i, e), this.groups[r].addRow(t));
                        }
                    }
                    _addRow(t) {
                        this.rows.push(t), (t.modules.group = this);
                    }
                    insertRow(t, e, i) {
                        var r = this.conformRowData({});
                        t.updateData(r);
                        var s = this.rows.indexOf(e);
                        s > -1 ? (i ? this.rows.splice(s + 1, 0, t) : this.rows.splice(s, 0, t)) : i ? this.rows.push(t) : this.rows.unshift(t),
                            (t.modules.group = this),
                            this.groupManager.table.modExists("columnCalcs") && "table" != this.groupManager.table.options.columnCalcs && this.groupManager.table.modules.columnCalcs.recalcGroup(this),
                            this.groupManager.updateGroupRows(!0);
                    }
                    scrollHeader(t) {
                        this.arrowElement &&
                            ((this.arrowElement.style.marginLeft = t),
                            this.groupList.forEach(function (e) {
                                e.scrollHeader(t);
                            }));
                    }
                    getRowIndex(t) {}
                    conformRowData(t) {
                        return this.field ? (t[this.field] = this.key) : console.warn("Data Conforming Error - Cannot conform row data to match new group as groupBy is a function"), this.parent && (t = this.parent.conformRowData(t)), t;
                    }
                    removeRow(t) {
                        var e = this.rows.indexOf(t),
                            i = t.getElement();
                        e > -1 && this.rows.splice(e, 1),
                            this.groupManager.table.options.groupValues || this.rows.length
                                ? (i.parentNode && i.parentNode.removeChild(i),
                                  this.groupManager.blockRedraw ||
                                      (this.generateGroupHeaderContents(),
                                      this.groupManager.table.modExists("columnCalcs") && "table" != this.groupManager.table.options.columnCalcs && this.groupManager.table.modules.columnCalcs.recalcGroup(this)))
                                : (this.parent ? this.parent.removeGroup(this) : this.groupManager.removeGroup(this), this.groupManager.updateGroupRows(!0));
                    }
                    removeGroup(t) {
                        var e,
                            i = t.level + "_" + t.key;
                        this.groups[i] &&
                            (delete this.groups[i], (e = this.groupList.indexOf(t)) > -1 && this.groupList.splice(e, 1), this.groupList.length || (this.parent ? this.parent.removeGroup(this) : this.groupManager.removeGroup(this)));
                    }
                    getHeadersAndRows() {
                        var t = [];
                        return (
                            t.push(this),
                            this._visSet(),
                            this.calcs.top && (this.calcs.top.detachElement(), this.calcs.top.deleteCells()),
                            this.calcs.bottom && (this.calcs.bottom.detachElement(), this.calcs.bottom.deleteCells()),
                            this.visible
                                ? this.groupList.length
                                    ? this.groupList.forEach(function (e) {
                                          t = t.concat(e.getHeadersAndRows());
                                      })
                                    : ("table" != this.groupManager.table.options.columnCalcs &&
                                          this.groupManager.table.modExists("columnCalcs") &&
                                          this.groupManager.table.modules.columnCalcs.hasTopCalcs() &&
                                          ((this.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows)), t.push(this.calcs.top)),
                                      (t = t.concat(this.rows)),
                                      "table" != this.groupManager.table.options.columnCalcs &&
                                          this.groupManager.table.modExists("columnCalcs") &&
                                          this.groupManager.table.modules.columnCalcs.hasBottomCalcs() &&
                                          ((this.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows)), t.push(this.calcs.bottom)))
                                : this.groupList.length ||
                                  "table" == this.groupManager.table.options.columnCalcs ||
                                  (this.groupManager.table.modExists("columnCalcs") &&
                                      (this.groupManager.table.modules.columnCalcs.hasTopCalcs() &&
                                          this.groupManager.table.options.groupClosedShowCalcs &&
                                          ((this.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows)), t.push(this.calcs.top)),
                                      this.groupManager.table.modules.columnCalcs.hasBottomCalcs() &&
                                          this.groupManager.table.options.groupClosedShowCalcs &&
                                          ((this.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows)), t.push(this.calcs.bottom)))),
                            t
                        );
                    }
                    getData(t, e) {
                        var i = [];
                        return (
                            this._visSet(),
                            (!t || (t && this.visible)) &&
                                this.rows.forEach((t) => {
                                    i.push(t.getData(e || "data"));
                                }),
                            i
                        );
                    }
                    getRowCount() {
                        var t = 0;
                        return (
                            this.groupList.length
                                ? this.groupList.forEach((e) => {
                                      t += e.getRowCount();
                                  })
                                : (t = this.rows.length),
                            t
                        );
                    }
                    toggleVisibility() {
                        this.visible ? this.hide() : this.show();
                    }
                    hide() {
                        (this.visible = !1),
                            "basic" != this.groupManager.table.rowManager.getRenderMode() ||
                                this.groupManager.table.options.pagination ||
                                (this.element.classList.remove("tabulator-group-visible"),
                                this.groupList.length
                                    ? this.groupList.forEach((t) => {
                                          t.getHeadersAndRows().forEach((t) => {
                                              t.detachElement();
                                          });
                                      })
                                    : this.rows.forEach((t) => {
                                          var e = t.getElement();
                                          e.parentNode.removeChild(e);
                                      })),
                            this.groupManager.updateGroupRows(!0),
                            this.groupManager.table.externalEvents.dispatch("groupVisibilityChanged", this.getComponent(), !1);
                    }
                    show() {
                        if (((this.visible = !0), "basic" != this.groupManager.table.rowManager.getRenderMode() || this.groupManager.table.options.pagination)) this.groupManager.updateGroupRows(!0);
                        else {
                            this.element.classList.add("tabulator-group-visible");
                            var t = this.generateElement();
                            this.groupList.length
                                ? this.groupList.forEach((e) => {
                                      e.getHeadersAndRows().forEach((e) => {
                                          var i = e.getElement();
                                          t.parentNode.insertBefore(i, t.nextSibling), e.initialize(), (t = i);
                                      });
                                  })
                                : this.rows.forEach((e) => {
                                      var i = e.getElement();
                                      t.parentNode.insertBefore(i, t.nextSibling), e.initialize(), (t = i);
                                  }),
                                this.groupManager.updateGroupRows(!0);
                        }
                        this.groupManager.table.externalEvents.dispatch("groupVisibilityChanged", this.getComponent(), !0);
                    }
                    _visSet() {
                        var t = [];
                        "function" == typeof this.visible &&
                            (this.rows.forEach(function (e) {
                                t.push(e.getData());
                            }),
                            (this.visible = this.visible(this.key, this.getRowCount(), t, this.getComponent())));
                    }
                    getRowGroup(t) {
                        var e = !1;
                        return (
                            this.groupList.length
                                ? this.groupList.forEach(function (i) {
                                      var r = i.getRowGroup(t);
                                      r && (e = r);
                                  })
                                : this.rows.find(function (e) {
                                      return e === t;
                                  }) && (e = this),
                            e
                        );
                    }
                    getSubGroups(t) {
                        var e = [];
                        return (
                            this.groupList.forEach(function (i) {
                                e.push(t ? i.getComponent() : i);
                            }),
                            e
                        );
                    }
                    getRows(t) {
                        var e = [];
                        return (
                            this.rows.forEach(function (i) {
                                e.push(t ? i.getComponent() : i);
                            }),
                            e
                        );
                    }
                    generateGroupHeaderContents() {
                        var t = [];
                        for (
                            this.rows.forEach(function (e) {
                                t.push(e.getData());
                            }),
                                this.elementContents = this.generator(this.key, this.getRowCount(), t, this.getComponent());
                            this.element.firstChild;

                        )
                            this.element.removeChild(this.element.firstChild);
                        "string" == typeof this.elementContents ? (this.element.innerHTML = this.elementContents) : this.element.appendChild(this.elementContents), this.element.insertBefore(this.arrowElement, this.element.firstChild);
                    }
                    getPath(t = []) {
                        return t.unshift(this.key), this.parent && this.parent.getPath(t), t;
                    }
                    getElement() {
                        return this.elementContents ? this.element : this.generateElement();
                    }
                    generateElement() {
                        (this.addBindings = !1), this._visSet(), this.visible ? this.element.classList.add("tabulator-group-visible") : this.element.classList.remove("tabulator-group-visible");
                        for (var t = 0; t < this.element.childNodes.length; ++t) this.element.childNodes[t].parentNode.removeChild(this.element.childNodes[t]);
                        return this.generateGroupHeaderContents(), this.element;
                    }
                    detachElement() {
                        this.element && this.element.parentNode && this.element.parentNode.removeChild(this.element);
                    }
                    normalizeHeight() {
                        this.setHeight(this.element.clientHeight);
                    }
                    initialize(t) {
                        (this.initialized && !t) || (this.normalizeHeight(), (this.initialized = !0));
                    }
                    reinitialize() {
                        (this.initialized = !1), (this.height = 0), o.elVisible(this.element) && this.initialize(!0);
                    }
                    setHeight(t) {
                        this.height != t && ((this.height = t), (this.outerHeight = this.element.offsetHeight));
                    }
                    getHeight() {
                        return this.outerHeight;
                    }
                    getGroup() {
                        return this;
                    }
                    reinitializeHeight() {}
                    calcHeight() {}
                    setCellHeight() {}
                    clearCellHeight() {}
                    deinitializeHeight() {}
                    getComponent() {
                        return this.component || (this.component = new G(this)), this.component;
                    }
                }
                class $ extends h {
                    constructor(t) {
                        super(t),
                            (this.groupIDLookups = !1),
                            (this.startOpen = [
                                function () {
                                    return !1;
                                },
                            ]),
                            (this.headerGenerator = [
                                function () {
                                    return "";
                                },
                            ]),
                            (this.groupList = []),
                            (this.allowedValues = !1),
                            (this.groups = {}),
                            (this.displayHandler = this.getRows.bind(this)),
                            (this.blockRedraw = !1),
                            this.registerTableOption("groupBy", !1),
                            this.registerTableOption("groupStartOpen", !0),
                            this.registerTableOption("groupValues", !1),
                            this.registerTableOption("groupUpdateOnCellEdit", !1),
                            this.registerTableOption("groupHeader", !1),
                            this.registerTableOption("groupHeaderPrint", null),
                            this.registerTableOption("groupHeaderClipboard", null),
                            this.registerTableOption("groupHeaderHtmlOutput", null),
                            this.registerTableOption("groupHeaderDownload", null),
                            this.registerTableOption("groupToggleElement", "arrow"),
                            this.registerTableOption("groupClosedShowCalcs", !1),
                            this.registerTableFunction("setGroupBy", this.setGroupBy.bind(this)),
                            this.registerTableFunction("setGroupValues", this.setGroupValues.bind(this)),
                            this.registerTableFunction("setGroupStartOpen", this.setGroupStartOpen.bind(this)),
                            this.registerTableFunction("setGroupHeader", this.setGroupHeader.bind(this)),
                            this.registerTableFunction("getGroups", this.userGetGroups.bind(this)),
                            this.registerTableFunction("getGroupedData", this.userGetGroupedData.bind(this)),
                            this.registerComponentFunction("row", "getGroup", this.rowGetGroup.bind(this));
                    }
                    initialize() {
                        this.subscribe("table-destroy", this._blockRedrawing.bind(this)),
                            this.subscribe("rows-wipe", this._blockRedrawing.bind(this)),
                            this.subscribe("rows-wiped", this._restore_redrawing.bind(this)),
                            this.table.options.groupBy &&
                                (this.table.options.groupUpdateOnCellEdit && (this.subscribe("cell-value-updated", this.cellUpdated.bind(this)), this.subscribe("row-data-changed", this.reassignRowToGroup.bind(this), 0)),
                                this.subscribe("table-built", this.configureGroupSetup.bind(this)),
                                this.subscribe("row-deleting", this.rowDeleting.bind(this)),
                                this.subscribe("row-deleted", this.rowsUpdated.bind(this)),
                                this.subscribe("scroll-horizontal", this.scrollHeaders.bind(this)),
                                this.subscribe("rows-wipe", this.wipe.bind(this)),
                                this.subscribe("rows-added", this.rowsUpdated.bind(this)),
                                this.subscribe("row-moving", this.rowMoving.bind(this)),
                                this.subscribe("row-adding-index", this.rowAddingIndex.bind(this)),
                                this.subscribe("rows-sample", this.rowSample.bind(this)),
                                this.subscribe("render-virtual-fill", this.virtualRenderFill.bind(this)),
                                this.registerDisplayHandler(this.displayHandler, 20),
                                (this.initialized = !0));
                    }
                    _blockRedrawing() {
                        this.blockRedraw = !0;
                    }
                    _restore_redrawing() {
                        this.blockRedraw = !1;
                    }
                    configureGroupSetup() {
                        if (this.table.options.groupBy) {
                            var t = this.table.options.groupBy,
                                e = this.table.options.groupStartOpen,
                                i = this.table.options.groupHeader;
                            if (
                                ((this.allowedValues = this.table.options.groupValues),
                                Array.isArray(t) && Array.isArray(i) && t.length > i.length && console.warn("Error creating group headers, groupHeader array is shorter than groupBy array"),
                                (this.headerGenerator = [
                                    function () {
                                        return "";
                                    },
                                ]),
                                (this.startOpen = [
                                    function () {
                                        return !1;
                                    },
                                ]),
                                this.langBind("groups|item", (t, e) => {
                                    this.headerGenerator[0] = (i, r, s) => (void 0 === i ? "" : i) + "<span>(" + r + " " + (1 === r ? t : e.groups.items) + ")</span>";
                                }),
                                (this.groupIDLookups = []),
                                t)
                            )
                                this.table.modExists("columnCalcs") && "table" != this.table.options.columnCalcs && "both" != this.table.options.columnCalcs && this.table.modules.columnCalcs.removeCalcs();
                            else if (this.table.modExists("columnCalcs") && "group" != this.table.options.columnCalcs)
                                this.table.columnManager.getRealColumns().forEach((t) => {
                                    t.definition.topCalc && this.table.modules.columnCalcs.initializeTopRow(), t.definition.bottomCalc && this.table.modules.columnCalcs.initializeBottomRow();
                                });
                            Array.isArray(t) || (t = [t]),
                                t.forEach((t, e) => {
                                    var i, r;
                                    (i =
                                        "function" == typeof t
                                            ? t
                                            : (r = this.table.columnManager.getColumnByField(t))
                                            ? function (t) {
                                                  return r.getFieldValue(t);
                                              }
                                            : function (e) {
                                                  return e[t];
                                              }),
                                        this.groupIDLookups.push({ field: "function" != typeof t && t, func: i, values: !!this.allowedValues && this.allowedValues[e] });
                                }),
                                e && (Array.isArray(e) || (e = [e]), e.forEach((t) => {}), (this.startOpen = e)),
                                i && (this.headerGenerator = Array.isArray(i) ? i : [i]);
                        } else (this.groupList = []), (this.groups = {});
                    }
                    rowSample(t, e) {
                        if (this.table.options.groupBy) {
                            var i = this.getGroups(!1)[0];
                            e.push(i.getRows(!1)[0]);
                        }
                        return e;
                    }
                    virtualRenderFill() {
                        var t = this.table.rowManager.tableElement,
                            e = this.table.rowManager.getVisibleRows();
                        if (!this.table.options.groupBy) return e;
                        (e = e.filter((t) => "group" !== t.type)), (t.style.minWidth = e.length ? "" : this.table.columnManager.getWidth() + "px");
                    }
                    rowAddingIndex(t, e, i) {
                        if (this.table.options.groupBy) {
                            this.assignRowToGroup(t);
                            var r = t.modules.group.rows;
                            return (
                                r.length > 1 &&
                                    (!e || (e && -1 == r.indexOf(e))
                                        ? i
                                            ? r[0] !== t && ((e = r[0]), this.table.rowManager.moveRowInArray(t.modules.group.rows, t, e, !i))
                                            : r[r.length - 1] !== t && ((e = r[r.length - 1]), this.table.rowManager.moveRowInArray(t.modules.group.rows, t, e, !i))
                                        : this.table.rowManager.moveRowInArray(t.modules.group.rows, t, e, !i)),
                                e
                            );
                        }
                    }
                    trackChanges() {
                        this.dispatch("group-changed");
                    }
                    setGroupBy(t) {
                        (this.table.options.groupBy = t),
                            this.initialized || this.initialize(),
                            this.configureGroupSetup(),
                            !t && this.table.modExists("columnCalcs") && !0 === this.table.options.columnCalcs && this.table.modules.columnCalcs.reinitializeCalcs(),
                            this.refreshData(),
                            this.trackChanges();
                    }
                    setGroupValues(t) {
                        (this.table.options.groupValues = t), this.configureGroupSetup(), this.refreshData(), this.trackChanges();
                    }
                    setGroupStartOpen(t) {
                        (this.table.options.groupStartOpen = t),
                            this.configureGroupSetup(),
                            this.table.options.groupBy ? (this.refreshData(), this.trackChanges()) : console.warn("Grouping Update - cant refresh view, no groups have been set");
                    }
                    setGroupHeader(t) {
                        (this.table.options.groupHeader = t), this.configureGroupSetup(), this.table.options.groupBy ? (this.refreshData(), this.trackChanges()) : console.warn("Grouping Update - cant refresh view, no groups have been set");
                    }
                    userGetGroups(t) {
                        return this.getGroups(!0);
                    }
                    userGetGroupedData() {
                        return this.table.options.groupBy ? this.getGroupedData() : this.getData();
                    }
                    rowGetGroup(t) {
                        return !!t.modules.group && t.modules.group.getComponent();
                    }
                    rowMoving(t, e, i) {
                        if (this.table.options.groupBy) {
                            !i && e instanceof q && (e = this.table.rowManager.prevDisplayRow(t) || e);
                            var r = e instanceof q ? e : e.modules.group,
                                s = t instanceof q ? t : t.modules.group;
                            r === s ? this.table.rowManager.moveRowInArray(r.rows, t, e, i) : (s && s.removeRow(t), r.insertRow(t, e, i));
                        }
                    }
                    rowDeleting(t) {
                        this.table.options.groupBy && t.modules.group && t.modules.group.removeRow(t);
                    }
                    rowsUpdated(t) {
                        this.table.options.groupBy && this.updateGroupRows(!0);
                    }
                    cellUpdated(t) {
                        this.table.options.groupBy && this.reassignRowToGroup(t.row);
                    }
                    getRows(t) {
                        return this.table.options.groupBy && this.groupIDLookups.length
                            ? (this.dispatchExternal("dataGrouping"), this.generateGroups(t), this.subscribedExternal("dataGrouped") && this.dispatchExternal("dataGrouped", this.getGroups(!0)), this.updateGroupRows())
                            : t.slice(0);
                    }
                    getGroups(t) {
                        var e = [];
                        return (
                            this.groupList.forEach(function (i) {
                                e.push(t ? i.getComponent() : i);
                            }),
                            e
                        );
                    }
                    getChildGroups(t) {
                        var e = [];
                        return (
                            t || (t = this),
                            t.groupList.forEach((t) => {
                                t.groupList.length ? (e = e.concat(this.getChildGroups(t))) : e.push(t);
                            }),
                            e
                        );
                    }
                    wipe() {
                        this.table.options.groupBy &&
                            (this.groupList.forEach(function (t) {
                                t.wipe();
                            }),
                            (this.groupList = []),
                            (this.groups = {}));
                    }
                    pullGroupListData(t) {
                        var e = [];
                        return (
                            t.forEach((t) => {
                                var i = { level: 0, rowCount: 0, headerContent: "" },
                                    r = [];
                                t.hasSubGroups
                                    ? ((r = this.pullGroupListData(t.groupList)),
                                      (i.level = t.level),
                                      (i.rowCount = r.length - t.groupList.length),
                                      (i.headerContent = t.generator(t.key, i.rowCount, t.rows, t)),
                                      e.push(i),
                                      (e = e.concat(r)))
                                    : ((i.level = t.level),
                                      (i.headerContent = t.generator(t.key, t.rows.length, t.rows, t)),
                                      (i.rowCount = t.getRows().length),
                                      e.push(i),
                                      t.getRows().forEach((t) => {
                                          e.push(t.getData("data"));
                                      }));
                            }),
                            e
                        );
                    }
                    getGroupedData() {
                        return this.pullGroupListData(this.groupList);
                    }
                    getRowGroup(t) {
                        var e = !1;
                        return (
                            this.options("dataTree") && (t = this.table.modules.dataTree.getTreeParentRoot(t)),
                            this.groupList.forEach((i) => {
                                var r = i.getRowGroup(t);
                                r && (e = r);
                            }),
                            e
                        );
                    }
                    countGroups() {
                        return this.groupList.length;
                    }
                    generateGroups(t) {
                        var e = this.groups;
                        (this.groups = {}),
                            (this.groupList = []),
                            this.allowedValues && this.allowedValues[0]
                                ? (this.allowedValues[0].forEach((t) => {
                                      this.createGroup(t, 0, e);
                                  }),
                                  t.forEach((t) => {
                                      this.assignRowToExistingGroup(t, e);
                                  }))
                                : t.forEach((t) => {
                                      this.assignRowToGroup(t, e);
                                  }),
                            Object.values(e).forEach((t) => {
                                t.wipe(!0);
                            });
                    }
                    createGroup(t, e, i) {
                        var r,
                            s = e + "_" + t;
                        (i = i || []), (r = new q(this, !1, e, t, this.groupIDLookups[0].field, this.headerGenerator[0], i[s])), (this.groups[s] = r), this.groupList.push(r);
                    }
                    assignRowToExistingGroup(t, e) {
                        var i = "0_" + this.groupIDLookups[0].func(t.getData());
                        this.groups[i] && this.groups[i].addRow(t);
                    }
                    assignRowToGroup(t, e) {
                        var i = this.groupIDLookups[0].func(t.getData()),
                            r = !this.groups["0_" + i];
                        return r && this.createGroup(i, 0, e), this.groups["0_" + i].addRow(t), !r;
                    }
                    reassignRowToGroup(t) {
                        if ("row" === t.type) {
                            var e = t.modules.group,
                                i = e.getPath(),
                                r = this.getExpectedPath(t);
                            (i.length == r.length && i.every((t, e) => t === r[e])) || (e.removeRow(t), this.assignRowToGroup(t, this.groups), this.refreshData(!0));
                        }
                    }
                    getExpectedPath(t) {
                        var e = [],
                            i = t.getData();
                        return (
                            this.groupIDLookups.forEach((t) => {
                                e.push(t.func(i));
                            }),
                            e
                        );
                    }
                    updateGroupRows(t) {
                        var e = [];
                        return (
                            this.blockRedraw ||
                                (this.groupList.forEach((t) => {
                                    e = e.concat(t.getHeadersAndRows());
                                }),
                                t && this.refreshData(!0)),
                            e
                        );
                    }
                    scrollHeaders(t) {
                        this.table.options.groupBy &&
                            ("virtual" === this.table.options.renderHorizontal && (t -= this.table.columnManager.renderer.vDomPadLeft),
                            (t += "px"),
                            this.groupList.forEach((e) => {
                                e.scrollHeader(t);
                            }));
                    }
                    removeGroup(t) {
                        var e,
                            i = t.level + "_" + t.key;
                        this.groups[i] && (delete this.groups[i], (e = this.groupList.indexOf(t)) > -1 && this.groupList.splice(e, 1));
                    }
                    checkBasicModeGroupHeaderWidth() {
                        var t = this.table.rowManager.tableElement,
                            e = !0;
                        this.table.rowManager.getDisplayRows().forEach((i, r) => {
                            this.table.rowManager.styleRow(i, r), t.appendChild(i.getElement()), i.initialize(!0), "group" !== i.type && (e = !1);
                        }),
                            (t.style.minWidth = e ? this.table.columnManager.getWidth() + "px" : "");
                    }
                }
                $.moduleName = "groupRows";
                class U extends h {
                    constructor(t) {
                        super(t), (this.history = []), (this.index = -1), this.registerTableOption("history", !1);
                    }
                    initialize() {
                        this.table.options.history &&
                            (this.subscribe("cell-value-updated", this.cellUpdated.bind(this)),
                            this.subscribe("cell-delete", this.clearComponentHistory.bind(this)),
                            this.subscribe("row-delete", this.rowDeleted.bind(this)),
                            this.subscribe("rows-wipe", this.clear.bind(this)),
                            this.subscribe("row-added", this.rowAdded.bind(this)),
                            this.subscribe("row-move", this.rowMoved.bind(this))),
                            this.registerTableFunction("undo", this.undo.bind(this)),
                            this.registerTableFunction("redo", this.redo.bind(this)),
                            this.registerTableFunction("getHistoryUndoSize", this.getHistoryUndoSize.bind(this)),
                            this.registerTableFunction("getHistoryRedoSize", this.getHistoryRedoSize.bind(this)),
                            this.registerTableFunction("clearHistory", this.clear.bind(this));
                    }
                    rowMoved(t, e, i) {
                        this.action("rowMove", t, { posFrom: t.getPosition(), posTo: e.getPosition(), to: e, after: i });
                    }
                    rowAdded(t, e, i, r) {
                        this.action("rowAdd", t, { data: e, pos: i, index: r });
                    }
                    rowDeleted(t) {
                        var e, i;
                        this.table.options.groupBy ? (e = (i = t.getComponent().getGroup()._getSelf().rows).indexOf(t)) && (e = i[e - 1]) : (e = t.table.rowManager.getRowIndex(t)) && (e = t.table.rowManager.rows[e - 1]),
                            this.action("rowDelete", t, { data: t.getData(), pos: !e, index: e });
                    }
                    cellUpdated(t) {
                        this.action("cellEdit", t, { oldValue: t.oldValue, newValue: t.value });
                    }
                    clear() {
                        (this.history = []), (this.index = -1);
                    }
                    action(t, e, i) {
                        (this.history = this.history.slice(0, this.index + 1)), this.history.push({ type: t, component: e, data: i }), this.index++;
                    }
                    getHistoryUndoSize() {
                        return this.index + 1;
                    }
                    getHistoryRedoSize() {
                        return this.history.length - (this.index + 1);
                    }
                    clearComponentHistory(t) {
                        var e = this.history.findIndex(function (e) {
                            return e.component === t;
                        });
                        e > -1 && (this.history.splice(e, 1), e <= this.index && this.index--, this.clearComponentHistory(t));
                    }
                    undo() {
                        if (this.index > -1) {
                            var t = this.history[this.index];
                            return U.undoers[t.type].call(this, t), this.index--, this.dispatchExternal("historyUndo", t.type, t.component.getComponent(), t.data), !0;
                        }
                        return console.warn("History Undo Error - No more history to undo"), !1;
                    }
                    redo() {
                        if (this.history.length - 1 > this.index) {
                            this.index++;
                            var t = this.history[this.index];
                            return U.redoers[t.type].call(this, t), this.dispatchExternal("historyRedo", t.type, t.component.getComponent(), t.data), !0;
                        }
                        return console.warn("History Redo Error - No more history to redo"), !1;
                    }
                    _rebindRow(t, e) {
                        this.history.forEach(function (i) {
                            if (i.component instanceof T) i.component === t && (i.component = e);
                            else if (i.component instanceof w && i.component.row === t) {
                                var r = i.component.column.getField();
                                r && (i.component = e.getCell(r));
                            }
                        });
                    }
                }
                (U.moduleName = "history"),
                    (U.undoers = {
                        cellEdit: function (t) {
                            t.component.setValueProcessData(t.data.oldValue), t.component.cellRendered();
                        },
                        rowAdd: function (t) {
                            t.component.deleteActual();
                        },
                        rowDelete: function (t) {
                            var e = this.table.rowManager.addRowActual(t.data.data, t.data.pos, t.data.index);
                            this.table.options.groupBy && this.table.modExists("groupRows") && this.table.modules.groupRows.updateGroupRows(!0), this._rebindRow(t.component, e);
                        },
                        rowMove: function (t) {
                            this.table.rowManager.moveRowActual(t.component, this.table.rowManager.rows[t.data.posFrom], !t.data.after), this.table.rowManager.redraw();
                        },
                    }),
                    (U.redoers = {
                        cellEdit: function (t) {
                            t.component.setValueProcessData(t.data.newValue), t.component.cellRendered();
                        },
                        rowAdd: function (t) {
                            var e = this.table.rowManager.addRowActual(t.data.data, t.data.pos, t.data.index);
                            this.table.options.groupBy && this.table.modExists("groupRows") && this.table.modules.groupRows.updateGroupRows(!0), this._rebindRow(t.component, e);
                        },
                        rowDelete: function (t) {
                            t.component.deleteActual();
                        },
                        rowMove: function (t) {
                            this.table.rowManager.moveRowActual(t.component, this.table.rowManager.rows[t.data.posTo], t.data.after), this.table.rowManager.redraw();
                        },
                    });
                class Y extends h {
                    constructor(t) {
                        super(t), (this.fieldIndex = []), (this.hasIndex = !1);
                    }
                    initialize() {
                        this.tableElementCheck();
                    }
                    tableElementCheck() {
                        this.table.originalElement &&
                            "TABLE" === this.table.originalElement.tagName &&
                            (this.table.originalElement.childNodes.length
                                ? this.parseTable()
                                : console.warn("Unable to parse data from empty table tag, Tabulator should be initialized on a div tag unless importing data from a table element."));
                    }
                    parseTable() {
                        var t = this.table.originalElement,
                            e = this.table.options,
                            i = t.getElementsByTagName("th"),
                            r = t.getElementsByTagName("tbody")[0],
                            s = [];
                        (this.hasIndex = !1), this.dispatchExternal("htmlImporting"), (r = r ? r.getElementsByTagName("tr") : []), this._extractOptions(t, e), i.length ? this._extractHeaders(i, r) : this._generateBlankHeaders(i, r);
                        for (var a = 0; a < r.length; a++) {
                            var n = r[a].getElementsByTagName("td"),
                                o = {};
                            this.hasIndex || (o[e.index] = a);
                            for (var l = 0; l < n.length; l++) {
                                var h = n[l];
                                void 0 !== this.fieldIndex[l] && (o[this.fieldIndex[l]] = h.innerHTML);
                            }
                            s.push(o);
                        }
                        (e.data = s), this.dispatchExternal("htmlImported");
                    }
                    _extractOptions(t, e, i) {
                        var r = t.attributes,
                            s = i ? Object.keys(i) : Object.keys(e),
                            a = {};
                        for (var n in (s.forEach((t) => {
                            a[t.toLowerCase()] = t;
                        }),
                        r)) {
                            var o,
                                l = r[n];
                            l && "object" == typeof l && l.name && 0 === l.name.indexOf("tabulator-") && ((o = l.name.replace("tabulator-", "")), void 0 !== a[o] && (e[a[o]] = this._attribValue(l.value)));
                        }
                    }
                    _attribValue(t) {
                        return "true" === t || ("false" !== t && t);
                    }
                    _findCol(t) {
                        return this.table.options.columns.find((e) => e.title === t) || !1;
                    }
                    _extractHeaders(t, e) {
                        for (var i = 0; i < t.length; i++) {
                            var r,
                                s = t[i],
                                a = !1,
                                n = this._findCol(s.textContent);
                            n ? (a = !0) : (n = { title: s.textContent.trim() }),
                                n.field || (n.field = s.textContent.trim().toLowerCase().replace(" ", "_")),
                                (r = s.getAttribute("width")) && !n.width && (n.width = r),
                                this._extractOptions(s, n, this.table.columnManager.optionsList.registeredDefaults),
                                (this.fieldIndex[i] = n.field),
                                n.field == this.table.options.index && (this.hasIndex = !0),
                                a || this.table.options.columns.push(n);
                        }
                    }
                    _generateBlankHeaders(t, e) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i],
                                s = { title: "", field: "col" + i };
                            this.fieldIndex[i] = s.field;
                            var a = r.getAttribute("width");
                            a && (s.width = a), this.table.options.columns.push(s);
                        }
                    }
                }
                Y.moduleName = "htmlTableImport";
                var X = {
                    csv: function (t) {
                        for (var e = [], i = 0, r = 0, s = !1, a = 0; a < t.length; a++) {
                            var n = t[a],
                                o = t[a + 1];
                            e[i] || (e[i] = []),
                                e[i][r] || (e[i][r] = ""),
                                '"' == n && s && '"' == o
                                    ? ((e[i][r] += n), a++)
                                    : '"' != n
                                    ? "," != n || s
                                        ? "\r" != n || "\n" != o || s
                                            ? ("\r" != n && "\n" != n) || s
                                                ? (e[i][r] += n)
                                                : ((r = 0), i++)
                                            : ((r = 0), i++, a++)
                                        : r++
                                    : (s = !s);
                        }
                        return e;
                    },
                    json: function (t) {
                        try {
                            return JSON.parse(t);
                        } catch (t) {
                            return console.warn("JSON Import Error - File contents is invalid JSON", t), Promise.reject();
                        }
                    },
                    array: function (t) {
                        return t;
                    },
                };
                class K extends h {
                    constructor(t) {
                        super(t), this.registerTableOption("importFormat"), this.registerTableOption("importReader", "text");
                    }
                    initialize() {
                        this.registerTableFunction("import", this.importFromFile.bind(this)),
                            this.table.options.importFormat && (this.subscribe("data-loading", this.loadDataCheck.bind(this), 10), this.subscribe("data-load", this.loadData.bind(this), 10));
                    }
                    loadDataCheck(t) {
                        return this.table.options.importFormat && ("string" == typeof t || (Array.isArray(t) && t.length && Array.isArray(t)));
                    }
                    loadData(t, e, i, r, s) {
                        return this.importData(this.lookupImporter(), t)
                            .then(this.structureData.bind(this))
                            .catch((t) => (console.error("Import Error:", t || "Unable to import data"), Promise.reject(t)));
                    }
                    lookupImporter(t) {
                        var e;
                        return t || (t = this.table.options.importFormat), (e = "string" == typeof t ? K.importers[t] : t) || console.error("Import Error - Importer not found:", t), e;
                    }
                    importFromFile(t, e) {
                        var i = this.lookupImporter(t);
                        if (i)
                            return this.pickFile(e)
                                .then(this.importData.bind(this, i))
                                .then(this.structureData.bind(this))
                                .then(this.setData.bind(this))
                                .catch((t) => (console.error("Import Error:", t || "Unable to import file"), Promise.reject(t)));
                    }
                    pickFile(t) {
                        return new Promise((e, i) => {
                            var r = document.createElement("input");
                            (r.type = "file"),
                                (r.accept = t),
                                r.addEventListener("change", (t) => {
                                    var s = r.files[0],
                                        a = new FileReader();
                                    switch (this.table.options.importReader) {
                                        case "buffer":
                                            a.readAsArrayBuffer(s);
                                            break;
                                        case "binary":
                                            a.readAsBinaryString(s);
                                            break;
                                        case "url":
                                            a.readAsDataURL(s);
                                            break;
                                        default:
                                            a.readAsText(s);
                                    }
                                    (a.onload = (t) => {
                                        e(a.result);
                                    }),
                                        (a.onerror = (t) => {
                                            console.warn("File Load Error - Unable to read file"), i();
                                        });
                                }),
                                r.click();
                        });
                    }
                    importData(t, e) {
                        var i = t.call(this.table, e);
                        return i instanceof Promise ? i : i ? Promise.resolve(i) : Promise.reject();
                    }
                    structureData(t) {
                        return Array.isArray(t) && t.length && Array.isArray(t[0]) ? (this.table.options.autoColumns ? this.structureArrayToObject(t) : this.structureArrayToColumns(t)) : t;
                    }
                    structureArrayToObject(t) {
                        var e = t.shift();
                        return t.map((t) => {
                            var i = {};
                            return (
                                e.forEach((e, r) => {
                                    i[e] = t[r];
                                }),
                                i
                            );
                        });
                    }
                    structureArrayToColumns(t) {
                        var e = [],
                            i = this.table.getColumns();
                        return (
                            i[0] && t[0][0] && i[0].getDefinition().title === t[0][0] && t.shift(),
                            t.forEach((t) => {
                                var r = {};
                                t.forEach((t, e) => {
                                    var s = i[e];
                                    s && (r[s.getField()] = t);
                                }),
                                    e.push(r);
                            }),
                            e
                        );
                    }
                    setData(t) {
                        return this.table.setData(t);
                    }
                }
                (K.moduleName = "import"), (K.importers = X);
                class Z extends h {
                    constructor(t) {
                        super(t),
                            (this.eventMap = {
                                rowClick: "row-click",
                                rowDblClick: "row-dblclick",
                                rowContext: "row-contextmenu",
                                rowMouseEnter: "row-mouseenter",
                                rowMouseLeave: "row-mouseleave",
                                rowMouseOver: "row-mouseover",
                                rowMouseOut: "row-mouseout",
                                rowMouseMove: "row-mousemove",
                                rowMouseDown: "row-mousedown",
                                rowMouseUp: "row-mouseup",
                                rowTap: "row",
                                rowDblTap: "row",
                                rowTapHold: "row",
                                cellClick: "cell-click",
                                cellDblClick: "cell-dblclick",
                                cellContext: "cell-contextmenu",
                                cellMouseEnter: "cell-mouseenter",
                                cellMouseLeave: "cell-mouseleave",
                                cellMouseOver: "cell-mouseover",
                                cellMouseOut: "cell-mouseout",
                                cellMouseMove: "cell-mousemove",
                                cellMouseDown: "cell-mousedown",
                                cellMouseUp: "cell-mouseup",
                                cellTap: "cell",
                                cellDblTap: "cell",
                                cellTapHold: "cell",
                                headerClick: "column-click",
                                headerDblClick: "column-dblclick",
                                headerContext: "column-contextmenu",
                                headerMouseEnter: "column-mouseenter",
                                headerMouseLeave: "column-mouseleave",
                                headerMouseOver: "column-mouseover",
                                headerMouseOut: "column-mouseout",
                                headerMouseMove: "column-mousemove",
                                headerMouseDown: "column-mousedown",
                                headerMouseUp: "column-mouseup",
                                headerTap: "column",
                                headerDblTap: "column",
                                headerTapHold: "column",
                                groupClick: "group-click",
                                groupDblClick: "group-dblclick",
                                groupContext: "group-contextmenu",
                                groupMouseEnter: "group-mouseenter",
                                groupMouseLeave: "group-mouseleave",
                                groupMouseOver: "group-mouseover",
                                groupMouseOut: "group-mouseout",
                                groupMouseMove: "group-mousemove",
                                groupMouseDown: "group-mousedown",
                                groupMouseUp: "group-mouseup",
                                groupTap: "group",
                                groupDblTap: "group",
                                groupTapHold: "group",
                            }),
                            (this.subscribers = {}),
                            (this.touchSubscribers = {}),
                            (this.columnSubscribers = {}),
                            (this.touchWatchers = {
                                row: { tap: null, tapDbl: null, tapHold: null },
                                cell: { tap: null, tapDbl: null, tapHold: null },
                                column: { tap: null, tapDbl: null, tapHold: null },
                                group: { tap: null, tapDbl: null, tapHold: null },
                            }),
                            this.registerColumnOption("headerClick"),
                            this.registerColumnOption("headerDblClick"),
                            this.registerColumnOption("headerContext"),
                            this.registerColumnOption("headerMouseEnter"),
                            this.registerColumnOption("headerMouseLeave"),
                            this.registerColumnOption("headerMouseOver"),
                            this.registerColumnOption("headerMouseOut"),
                            this.registerColumnOption("headerMouseMove"),
                            this.registerColumnOption("headerMouseDown"),
                            this.registerColumnOption("headerMouseUp"),
                            this.registerColumnOption("headerTap"),
                            this.registerColumnOption("headerDblTap"),
                            this.registerColumnOption("headerTapHold"),
                            this.registerColumnOption("cellClick"),
                            this.registerColumnOption("cellDblClick"),
                            this.registerColumnOption("cellContext"),
                            this.registerColumnOption("cellMouseEnter"),
                            this.registerColumnOption("cellMouseLeave"),
                            this.registerColumnOption("cellMouseOver"),
                            this.registerColumnOption("cellMouseOut"),
                            this.registerColumnOption("cellMouseMove"),
                            this.registerColumnOption("cellMouseDown"),
                            this.registerColumnOption("cellMouseUp"),
                            this.registerColumnOption("cellTap"),
                            this.registerColumnOption("cellDblTap"),
                            this.registerColumnOption("cellTapHold");
                    }
                    initialize() {
                        this.initializeExternalEvents(),
                            this.subscribe("column-init", this.initializeColumn.bind(this)),
                            this.subscribe("cell-dblclick", this.cellContentsSelectionFixer.bind(this)),
                            this.subscribe("scroll-horizontal", this.clearTouchWatchers.bind(this)),
                            this.subscribe("scroll-vertical", this.clearTouchWatchers.bind(this));
                    }
                    clearTouchWatchers() {
                        Object.values(this.touchWatchers).forEach((t) => {
                            for (var e in t) t[e] = null;
                        });
                    }
                    cellContentsSelectionFixer(t, e) {
                        var i;
                        if (!this.table.modExists("edit") || this.table.modules.edit.currentCell !== e) {
                            t.preventDefault();
                            try {
                                document.selection
                                    ? ((i = document.body.createTextRange()).moveToElementText(e.getElement()), i.select())
                                    : window.getSelection && ((i = document.createRange()).selectNode(e.getElement()), window.getSelection().removeAllRanges(), window.getSelection().addRange(i));
                            } catch (t) {}
                        }
                    }
                    initializeExternalEvents() {
                        for (var t in this.eventMap) this.subscriptionChangeExternal(t, this.subscriptionChanged.bind(this, t));
                    }
                    subscriptionChanged(t, e) {
                        e
                            ? this.subscribers[t] || (this.eventMap[t].includes("-") ? ((this.subscribers[t] = this.handle.bind(this, t)), this.subscribe(this.eventMap[t], this.subscribers[t])) : this.subscribeTouchEvents(t))
                            : this.eventMap[t].includes("-")
                            ? !this.subscribers[t] || this.columnSubscribers[t] || this.subscribedExternal(t) || (this.unsubscribe(this.eventMap[t], this.subscribers[t]), delete this.subscribers[t])
                            : this.unsubscribeTouchEvents(t);
                    }
                    subscribeTouchEvents(t) {
                        var e = this.eventMap[t];
                        this.touchSubscribers[e + "-touchstart"] ||
                            ((this.touchSubscribers[e + "-touchstart"] = this.handleTouch.bind(this, e, "start")),
                            (this.touchSubscribers[e + "-touchend"] = this.handleTouch.bind(this, e, "end")),
                            this.subscribe(e + "-touchstart", this.touchSubscribers[e + "-touchstart"]),
                            this.subscribe(e + "-touchend", this.touchSubscribers[e + "-touchend"])),
                            (this.subscribers[t] = !0);
                    }
                    unsubscribeTouchEvents(t) {
                        var e = !0,
                            i = this.eventMap[t];
                        if (this.subscribers[t] && !this.subscribedExternal(t)) {
                            for (var r in (delete this.subscribers[t], this.eventMap)) this.eventMap[r] === i && this.subscribers[r] && (e = !1);
                            e &&
                                (this.unsubscribe(i + "-touchstart", this.touchSubscribers[i + "-touchstart"]),
                                this.unsubscribe(i + "-touchend", this.touchSubscribers[i + "-touchend"]),
                                delete this.touchSubscribers[i + "-touchstart"],
                                delete this.touchSubscribers[i + "-touchend"]);
                        }
                    }
                    initializeColumn(t) {
                        var e = t.definition;
                        for (var i in this.eventMap) e[i] && (this.subscriptionChanged(i, !0), this.columnSubscribers[i] || (this.columnSubscribers[i] = []), this.columnSubscribers[i].push(t));
                    }
                    handle(t, e, i) {
                        this.dispatchEvent(t, e, i);
                    }
                    handleTouch(t, e, i, r) {
                        var s = this.touchWatchers[t];
                        switch (("column" === t && (t = "header"), e)) {
                            case "start":
                                (s.tap = !0),
                                    clearTimeout(s.tapHold),
                                    (s.tapHold = setTimeout(() => {
                                        clearTimeout(s.tapHold), (s.tapHold = null), (s.tap = null), clearTimeout(s.tapDbl), (s.tapDbl = null), this.dispatchEvent(t + "TapHold", i, r);
                                    }, 1e3));
                                break;
                            case "end":
                                s.tap && ((s.tap = null), this.dispatchEvent(t + "Tap", i, r)),
                                    s.tapDbl
                                        ? (clearTimeout(s.tapDbl), (s.tapDbl = null), this.dispatchEvent(t + "DblTap", i, r))
                                        : (s.tapDbl = setTimeout(() => {
                                              clearTimeout(s.tapDbl), (s.tapDbl = null);
                                          }, 300)),
                                    clearTimeout(s.tapHold),
                                    (s.tapHold = null);
                        }
                    }
                    dispatchEvent(t, e, i) {
                        var r,
                            s = i.getComponent();
                        this.columnSubscribers[t] && (i instanceof w ? (r = i.column.definition[t]) : i instanceof C && (r = i.definition[t]), r && r(e, s)), this.dispatchExternal(t, e, s);
                    }
                }
                Z.moduleName = "interaction";
                class J extends h {
                    constructor(t) {
                        super(t), (this.watchKeys = null), (this.pressedKeys = null), (this.keyupBinding = !1), (this.keydownBinding = !1), this.registerTableOption("keybindings", {}), this.registerTableOption("tabEndNewRow", !1);
                    }
                    initialize() {
                        var t = this.table.options.keybindings,
                            e = {};
                        (this.watchKeys = {}), (this.pressedKeys = []), !1 !== t && (Object.assign(e, J.bindings), Object.assign(e, t), this.mapBindings(e), this.bindEvents()), this.subscribe("table-destroy", this.clearBindings.bind(this));
                    }
                    mapBindings(t) {
                        var e = this,
                            i = function (i) {
                                J.actions[i]
                                    ? t[i] &&
                                      ("object" != typeof t[i] && (t[i] = [t[i]]),
                                      t[i].forEach((t) => {
                                          (Array.isArray(t) ? t : [t]).forEach((t) => {
                                              e.mapBinding(i, t);
                                          });
                                      }))
                                    : console.warn("Key Binding Error - no such action:", i);
                            };
                        for (var r in t) i(r);
                    }
                    mapBinding(t, e) {
                        var i = { action: J.actions[t], keys: [], ctrl: !1, shift: !1, meta: !1 };
                        e.toString()
                            .toLowerCase()
                            .split(" ")
                            .join("")
                            .split("+")
                            .forEach((t) => {
                                switch (t) {
                                    case "ctrl":
                                        i.ctrl = !0;
                                        break;
                                    case "shift":
                                        i.shift = !0;
                                        break;
                                    case "meta":
                                        i.meta = !0;
                                        break;
                                    default:
                                        (t = isNaN(t) ? t.toUpperCase().charCodeAt(0) : parseInt(t)), i.keys.push(t), this.watchKeys[t] || (this.watchKeys[t] = []), this.watchKeys[t].push(i);
                                }
                            });
                    }
                    bindEvents() {
                        var t = this;
                        (this.keyupBinding = function (e) {
                            var i = e.keyCode,
                                r = t.watchKeys[i];
                            r &&
                                (t.pressedKeys.push(i),
                                r.forEach(function (i) {
                                    t.checkBinding(e, i);
                                }));
                        }),
                            (this.keydownBinding = function (e) {
                                var i = e.keyCode;
                                if (t.watchKeys[i]) {
                                    var r = t.pressedKeys.indexOf(i);
                                    r > -1 && t.pressedKeys.splice(r, 1);
                                }
                            }),
                            this.table.element.addEventListener("keydown", this.keyupBinding),
                            this.table.element.addEventListener("keyup", this.keydownBinding);
                    }
                    clearBindings() {
                        this.keyupBinding && this.table.element.removeEventListener("keydown", this.keyupBinding), this.keydownBinding && this.table.element.removeEventListener("keyup", this.keydownBinding);
                    }
                    checkBinding(t, e) {
                        var i = !0;
                        return (
                            t.ctrlKey == e.ctrl &&
                            t.shiftKey == e.shift &&
                            t.metaKey == e.meta &&
                            (e.keys.forEach((t) => {
                                -1 == this.pressedKeys.indexOf(t) && (i = !1);
                            }),
                            i && e.action.call(this, t),
                            !0)
                        );
                    }
                }
                (J.moduleName = "keybindings"),
                    (J.bindings = {
                        navPrev: "shift + 9",
                        navNext: 9,
                        navUp: 38,
                        navDown: 40,
                        scrollPageUp: 33,
                        scrollPageDown: 34,
                        scrollToStart: 36,
                        scrollToEnd: 35,
                        undo: ["ctrl + 90", "meta + 90"],
                        redo: ["ctrl + 89", "meta + 89"],
                        copyToClipboard: ["ctrl + 67", "meta + 89"],
                    }),
                    (J.actions = {
                        keyBlock: function (t) {
                            t.stopPropagation(), t.preventDefault();
                        },
                        scrollPageUp: function (t) {
                            var e = this.table.rowManager,
                                i = e.scrollTop - e.element.clientHeight;
                            t.preventDefault(), e.displayRowsCount && (i >= 0 ? (e.element.scrollTop = i) : e.scrollToRow(e.getDisplayRows()[0])), this.table.element.focus();
                        },
                        scrollPageDown: function (t) {
                            var e = this.table.rowManager,
                                i = e.scrollTop + e.element.clientHeight,
                                r = e.element.scrollHeight;
                            t.preventDefault(), e.displayRowsCount && (i <= r ? (e.element.scrollTop = i) : e.scrollToRow(e.getDisplayRows()[e.displayRowsCount - 1])), this.table.element.focus();
                        },
                        scrollToStart: function (t) {
                            var e = this.table.rowManager;
                            t.preventDefault(), e.displayRowsCount && e.scrollToRow(e.getDisplayRows()[0]), this.table.element.focus();
                        },
                        scrollToEnd: function (t) {
                            var e = this.table.rowManager;
                            t.preventDefault(), e.displayRowsCount && e.scrollToRow(e.getDisplayRows()[e.displayRowsCount - 1]), this.table.element.focus();
                        },
                        navPrev: function (t) {
                            this.dispatch("keybinding-nav-prev", t);
                        },
                        navNext: function (t) {
                            this.dispatch("keybinding-nav-next", t);
                        },
                        navLeft: function (t) {
                            this.dispatch("keybinding-nav-left", t);
                        },
                        navRight: function (t) {
                            this.dispatch("keybinding-nav-right", t);
                        },
                        navUp: function (t) {
                            this.dispatch("keybinding-nav-up", t);
                        },
                        navDown: function (t) {
                            this.dispatch("keybinding-nav-down", t);
                        },
                        undo: function (t) {
                            this.table.options.history && this.table.modExists("history") && this.table.modExists("edit") && (this.table.modules.edit.currentCell || (t.preventDefault(), this.table.modules.history.undo()));
                        },
                        redo: function (t) {
                            this.table.options.history && this.table.modExists("history") && this.table.modExists("edit") && (this.table.modules.edit.currentCell || (t.preventDefault(), this.table.modules.history.redo()));
                        },
                        copyToClipboard: function (t) {
                            this.table.modules.edit.currentCell || (this.table.modExists("clipboard", !0) && this.table.modules.clipboard.copy(!1, !0));
                        },
                    });
                class Q extends h {
                    constructor(t) {
                        super(t),
                            (this.menuContainer = null),
                            (this.nestedMenuBlock = !1),
                            (this.currentComponent = null),
                            (this.rootPopup = null),
                            (this.columnSubscribers = {}),
                            this.registerTableOption("menuContainer", void 0),
                            this.registerTableOption("rowContextMenu", !1),
                            this.registerTableOption("rowClickMenu", !1),
                            this.registerTableOption("rowDblClickMenu", !1),
                            this.registerTableOption("groupContextMenu", !1),
                            this.registerTableOption("groupClickMenu", !1),
                            this.registerTableOption("groupDblClickMenu", !1),
                            this.registerColumnOption("headerContextMenu"),
                            this.registerColumnOption("headerClickMenu"),
                            this.registerColumnOption("headerDblClickMenu"),
                            this.registerColumnOption("headerMenu"),
                            this.registerColumnOption("headerMenuIcon"),
                            this.registerColumnOption("contextMenu"),
                            this.registerColumnOption("clickMenu"),
                            this.registerColumnOption("dblClickMenu");
                    }
                    initialize() {
                        this.deprecatedOptionsCheck(), this.initializeRowWatchers(), this.initializeGroupWatchers(), this.subscribe("column-init", this.initializeColumn.bind(this));
                    }
                    deprecatedOptionsCheck() {
                        this.deprecationCheck("menuContainer", "popupContainer") || (this.table.options.popupContainer = this.table.options.menuContainer);
                    }
                    initializeRowWatchers() {
                        this.table.options.rowContextMenu &&
                            (this.subscribe("row-contextmenu", this.loadMenuEvent.bind(this, this.table.options.rowContextMenu)), this.table.on("rowTapHold", this.loadMenuEvent.bind(this, this.table.options.rowContextMenu))),
                            this.table.options.rowClickMenu && this.subscribe("row-click", this.loadMenuEvent.bind(this, this.table.options.rowClickMenu)),
                            this.table.options.rowDblClickMenu && this.subscribe("row-dblclick", this.loadMenuEvent.bind(this, this.table.options.rowDblClickMenu));
                    }
                    initializeGroupWatchers() {
                        this.table.options.groupContextMenu &&
                            (this.subscribe("group-contextmenu", this.loadMenuEvent.bind(this, this.table.options.groupContextMenu)), this.table.on("groupTapHold", this.loadMenuEvent.bind(this, this.table.options.groupContextMenu))),
                            this.table.options.groupClickMenu && this.subscribe("group-click", this.loadMenuEvent.bind(this, this.table.options.groupClickMenu)),
                            this.table.options.groupDblClickMenu && this.subscribe("group-dblclick", this.loadMenuEvent.bind(this, this.table.options.groupDblClickMenu));
                    }
                    initializeColumn(t) {
                        var e = t.definition;
                        e.headerContextMenu &&
                            !this.columnSubscribers.headerContextMenu &&
                            ((this.columnSubscribers.headerContextMenu = this.loadMenuTableColumnEvent.bind(this, "headerContextMenu")),
                            this.subscribe("column-contextmenu", this.columnSubscribers.headerContextMenu),
                            this.table.on("headerTapHold", this.loadMenuTableColumnEvent.bind(this, "headerContextMenu"))),
                            e.headerClickMenu &&
                                !this.columnSubscribers.headerClickMenu &&
                                ((this.columnSubscribers.headerClickMenu = this.loadMenuTableColumnEvent.bind(this, "headerClickMenu")), this.subscribe("column-click", this.columnSubscribers.headerClickMenu)),
                            e.headerDblClickMenu &&
                                !this.columnSubscribers.headerDblClickMenu &&
                                ((this.columnSubscribers.headerDblClickMenu = this.loadMenuTableColumnEvent.bind(this, "headerDblClickMenu")), this.subscribe("column-dblclick", this.columnSubscribers.headerDblClickMenu)),
                            e.headerMenu && this.initializeColumnHeaderMenu(t),
                            e.contextMenu &&
                                !this.columnSubscribers.contextMenu &&
                                ((this.columnSubscribers.contextMenu = this.loadMenuTableCellEvent.bind(this, "contextMenu")),
                                this.subscribe("cell-contextmenu", this.columnSubscribers.contextMenu),
                                this.table.on("cellTapHold", this.loadMenuTableCellEvent.bind(this, "contextMenu"))),
                            e.clickMenu && !this.columnSubscribers.clickMenu && ((this.columnSubscribers.clickMenu = this.loadMenuTableCellEvent.bind(this, "clickMenu")), this.subscribe("cell-click", this.columnSubscribers.clickMenu)),
                            e.dblClickMenu &&
                                !this.columnSubscribers.dblClickMenu &&
                                ((this.columnSubscribers.dblClickMenu = this.loadMenuTableCellEvent.bind(this, "dblClickMenu")), this.subscribe("cell-dblclick", this.columnSubscribers.dblClickMenu));
                    }
                    initializeColumnHeaderMenu(t) {
                        var e,
                            i = t.definition.headerMenuIcon;
                        (e = document.createElement("span")).classList.add("tabulator-header-popup-button"),
                            i ? ("function" == typeof i && (i = i(t.getComponent())), i instanceof HTMLElement ? e.appendChild(i) : (e.innerHTML = i)) : (e.innerHTML = "&vellip;"),
                            e.addEventListener("click", (e) => {
                                e.stopPropagation(), e.preventDefault(), this.loadMenuEvent(t.definition.headerMenu, e, t);
                            }),
                            t.titleElement.insertBefore(e, t.titleElement.firstChild);
                    }
                    loadMenuTableCellEvent(t, e, i) {
                        i._cell && (i = i._cell), i.column.definition[t] && this.loadMenuEvent(i.column.definition[t], e, i);
                    }
                    loadMenuTableColumnEvent(t, e, i) {
                        i._column && (i = i._column), i.definition[t] && this.loadMenuEvent(i.definition[t], e, i);
                    }
                    loadMenuEvent(t, e, i) {
                        i._group ? (i = i._group) : i._row && (i = i._row), (t = "function" == typeof t ? t.call(this.table, e, i.getComponent()) : t), this.loadMenu(e, i, t);
                    }
                    loadMenu(t, e, i, r, s) {
                        var a,
                            n = !(t instanceof MouseEvent),
                            o = document.createElement("div");
                        if ((o.classList.add("tabulator-menu"), n || t.preventDefault(), i && i.length)) {
                            if (r) a = s.child(o);
                            else {
                                if (this.nestedMenuBlock) {
                                    if (this.rootPopup) return;
                                } else
                                    this.nestedMenuBlock = setTimeout(() => {
                                        this.nestedMenuBlock = !1;
                                    }, 100);
                                this.rootPopup && this.rootPopup.hide(), (this.rootPopup = a = this.popup(o));
                            }
                            i.forEach((t) => {
                                var i = document.createElement("div"),
                                    r = t.label,
                                    s = t.disabled;
                                t.separator
                                    ? i.classList.add("tabulator-menu-separator")
                                    : (i.classList.add("tabulator-menu-item"),
                                      "function" == typeof r && (r = r.call(this.table, e.getComponent())),
                                      r instanceof Node ? i.appendChild(r) : (i.innerHTML = r),
                                      "function" == typeof s && (s = s.call(this.table, e.getComponent())),
                                      s
                                          ? (i.classList.add("tabulator-menu-item-disabled"),
                                            i.addEventListener("click", (t) => {
                                                t.stopPropagation();
                                            }))
                                          : t.menu && t.menu.length
                                          ? i.addEventListener("click", (r) => {
                                                r.stopPropagation(), this.loadMenu(r, e, t.menu, i, a);
                                            })
                                          : t.action &&
                                            i.addEventListener("click", (i) => {
                                                t.action(i, e.getComponent());
                                            }),
                                      t.menu && t.menu.length && i.classList.add("tabulator-menu-item-submenu")),
                                    o.appendChild(i);
                            }),
                                o.addEventListener("click", (t) => {
                                    this.rootPopup && this.rootPopup.hide();
                                }),
                                a.show(r || t),
                                a === this.rootPopup &&
                                    (this.rootPopup.hideOnBlur(() => {
                                        (this.rootPopup = null), this.currentComponent && (this.dispatchExternal("menuClosed", this.currentComponent.getComponent()), (this.currentComponent = null));
                                    }),
                                    (this.currentComponent = e),
                                    this.dispatchExternal("menuOpened", e.getComponent()));
                        }
                    }
                }
                Q.moduleName = "menu";
                class tt extends h {
                    constructor(t) {
                        super(t),
                            (this.placeholderElement = this.createPlaceholderElement()),
                            (this.hoverElement = !1),
                            (this.checkTimeout = !1),
                            (this.checkPeriod = 250),
                            (this.moving = !1),
                            (this.toCol = !1),
                            (this.toColAfter = !1),
                            (this.startX = 0),
                            (this.autoScrollMargin = 40),
                            (this.autoScrollStep = 5),
                            (this.autoScrollTimeout = !1),
                            (this.touchMove = !1),
                            (this.moveHover = this.moveHover.bind(this)),
                            (this.endMove = this.endMove.bind(this)),
                            this.registerTableOption("movableColumns", !1);
                    }
                    createPlaceholderElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-col"), t.classList.add("tabulator-col-placeholder"), t;
                    }
                    initialize() {
                        this.table.options.movableColumns && this.subscribe("column-init", this.initializeColumn.bind(this));
                    }
                    initializeColumn(t) {
                        var e,
                            i = this,
                            r = {};
                        t.modules.frozen ||
                            t.isGroup ||
                            ((e = t.getElement()),
                            (r.mousemove = function (r) {
                                t.parent === i.moving.parent &&
                                    ((i.touchMove ? r.touches[0].pageX : r.pageX) - o.elOffset(e).left + i.table.columnManager.contentsElement.scrollLeft > t.getWidth() / 2
                                        ? (i.toCol === t && i.toColAfter) || (e.parentNode.insertBefore(i.placeholderElement, e.nextSibling), i.moveColumn(t, !0))
                                        : (i.toCol !== t || i.toColAfter) && (e.parentNode.insertBefore(i.placeholderElement, e), i.moveColumn(t, !1)));
                            }.bind(i)),
                            e.addEventListener("mousedown", function (e) {
                                (i.touchMove = !1),
                                    1 === e.which &&
                                        (i.checkTimeout = setTimeout(function () {
                                            i.startMove(e, t);
                                        }, i.checkPeriod));
                            }),
                            e.addEventListener("mouseup", function (t) {
                                1 === t.which && i.checkTimeout && clearTimeout(i.checkTimeout);
                            }),
                            i.bindTouchEvents(t)),
                            (t.modules.moveColumn = r);
                    }
                    bindTouchEvents(t) {
                        var e,
                            i,
                            r,
                            s,
                            a,
                            n,
                            o = t.getElement(),
                            l = !1;
                        o.addEventListener(
                            "touchstart",
                            (o) => {
                                this.checkTimeout = setTimeout(() => {
                                    (this.touchMove = !0), (e = t.nextColumn()), (r = e ? e.getWidth() / 2 : 0), (i = t.prevColumn()), (s = i ? i.getWidth() / 2 : 0), (a = 0), (n = 0), (l = !1), this.startMove(o, t);
                                }, this.checkPeriod);
                            },
                            { passive: !0 }
                        ),
                            o.addEventListener(
                                "touchmove",
                                (o) => {
                                    var h, c;
                                    this.moving &&
                                        (this.moveHover(o),
                                        l || (l = o.touches[0].pageX),
                                        (h = o.touches[0].pageX - l) > 0
                                            ? e && h - a > r && (c = e) !== t && ((l = o.touches[0].pageX), c.getElement().parentNode.insertBefore(this.placeholderElement, c.getElement().nextSibling), this.moveColumn(c, !0))
                                            : i && -h - n > s && (c = i) !== t && ((l = o.touches[0].pageX), c.getElement().parentNode.insertBefore(this.placeholderElement, c.getElement()), this.moveColumn(c, !1)),
                                        c && ((e = c.nextColumn()), (a = r), (r = e ? e.getWidth() / 2 : 0), (i = c.prevColumn()), (n = s), (s = i ? i.getWidth() / 2 : 0)));
                                },
                                { passive: !0 }
                            ),
                            o.addEventListener("touchend", (t) => {
                                this.checkTimeout && clearTimeout(this.checkTimeout), this.moving && this.endMove(t);
                            });
                    }
                    startMove(t, e) {
                        var i = e.getElement(),
                            r = this.table.columnManager.getContentsElement(),
                            s = this.table.columnManager.getHeadersElement();
                        (this.moving = e),
                            (this.startX = (this.touchMove ? t.touches[0].pageX : t.pageX) - o.elOffset(i).left),
                            this.table.element.classList.add("tabulator-block-select"),
                            (this.placeholderElement.style.width = e.getWidth() + "px"),
                            (this.placeholderElement.style.height = e.getHeight() + "px"),
                            i.parentNode.insertBefore(this.placeholderElement, i),
                            i.parentNode.removeChild(i),
                            (this.hoverElement = i.cloneNode(!0)),
                            this.hoverElement.classList.add("tabulator-moving"),
                            r.appendChild(this.hoverElement),
                            (this.hoverElement.style.left = "0"),
                            (this.hoverElement.style.bottom = r.clientHeight - s.offsetHeight + "px"),
                            this.touchMove || (this._bindMouseMove(), document.body.addEventListener("mousemove", this.moveHover), document.body.addEventListener("mouseup", this.endMove)),
                            this.moveHover(t);
                    }
                    _bindMouseMove() {
                        this.table.columnManager.columnsByIndex.forEach(function (t) {
                            t.modules.moveColumn.mousemove && t.getElement().addEventListener("mousemove", t.modules.moveColumn.mousemove);
                        });
                    }
                    _unbindMouseMove() {
                        this.table.columnManager.columnsByIndex.forEach(function (t) {
                            t.modules.moveColumn.mousemove && t.getElement().removeEventListener("mousemove", t.modules.moveColumn.mousemove);
                        });
                    }
                    moveColumn(t, e) {
                        var i = this.moving.getCells();
                        (this.toCol = t),
                            (this.toColAfter = e),
                            e
                                ? t.getCells().forEach(function (t, e) {
                                      var r = t.getElement(!0);
                                      r.parentNode && i[e] && r.parentNode.insertBefore(i[e].getElement(), r.nextSibling);
                                  })
                                : t.getCells().forEach(function (t, e) {
                                      var r = t.getElement(!0);
                                      r.parentNode && i[e] && r.parentNode.insertBefore(i[e].getElement(), r);
                                  });
                    }
                    endMove(t) {
                        (1 === t.which || this.touchMove) &&
                            (this._unbindMouseMove(),
                            this.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling),
                            this.placeholderElement.parentNode.removeChild(this.placeholderElement),
                            this.hoverElement.parentNode.removeChild(this.hoverElement),
                            this.table.element.classList.remove("tabulator-block-select"),
                            this.toCol && this.table.columnManager.moveColumnActual(this.moving, this.toCol, this.toColAfter),
                            (this.moving = !1),
                            (this.toCol = !1),
                            (this.toColAfter = !1),
                            this.touchMove || (document.body.removeEventListener("mousemove", this.moveHover), document.body.removeEventListener("mouseup", this.endMove)));
                    }
                    moveHover(t) {
                        var e,
                            i = this.table.columnManager.getContentsElement(),
                            r = i.scrollLeft,
                            s = (this.touchMove ? t.touches[0].pageX : t.pageX) - o.elOffset(i).left + r;
                        (this.hoverElement.style.left = s - this.startX + "px"),
                            s - r < this.autoScrollMargin &&
                                (this.autoScrollTimeout ||
                                    (this.autoScrollTimeout = setTimeout(() => {
                                        (e = Math.max(0, r - 5)), (this.table.rowManager.getElement().scrollLeft = e), (this.autoScrollTimeout = !1);
                                    }, 1))),
                            r + i.clientWidth - s < this.autoScrollMargin &&
                                (this.autoScrollTimeout ||
                                    (this.autoScrollTimeout = setTimeout(() => {
                                        (e = Math.min(i.clientWidth, r + 5)), (this.table.rowManager.getElement().scrollLeft = e), (this.autoScrollTimeout = !1);
                                    }, 1)));
                    }
                }
                tt.moduleName = "moveColumn";
                class et extends h {
                    constructor(t) {
                        super(t),
                            (this.placeholderElement = this.createPlaceholderElement()),
                            (this.hoverElement = !1),
                            (this.checkTimeout = !1),
                            (this.checkPeriod = 150),
                            (this.moving = !1),
                            (this.toRow = !1),
                            (this.toRowAfter = !1),
                            (this.hasHandle = !1),
                            (this.startY = 0),
                            (this.startX = 0),
                            (this.moveHover = this.moveHover.bind(this)),
                            (this.endMove = this.endMove.bind(this)),
                            (this.tableRowDropEvent = !1),
                            (this.touchMove = !1),
                            (this.connection = !1),
                            (this.connectionSelectorsTables = !1),
                            (this.connectionSelectorsElements = !1),
                            (this.connectionElements = []),
                            (this.connections = []),
                            (this.connectedTable = !1),
                            (this.connectedRow = !1),
                            this.registerTableOption("movableRows", !1),
                            this.registerTableOption("movableRowsConnectedTables", !1),
                            this.registerTableOption("movableRowsConnectedElements", !1),
                            this.registerTableOption("movableRowsSender", !1),
                            this.registerTableOption("movableRowsReceiver", "insert"),
                            this.registerColumnOption("rowHandle");
                    }
                    createPlaceholderElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-row"), t.classList.add("tabulator-row-placeholder"), t;
                    }
                    initialize() {
                        this.table.options.movableRows &&
                            ((this.connectionSelectorsTables = this.table.options.movableRowsConnectedTables),
                            (this.connectionSelectorsElements = this.table.options.movableRowsConnectedElements),
                            (this.connection = this.connectionSelectorsTables || this.connectionSelectorsElements),
                            this.subscribe("cell-init", this.initializeCell.bind(this)),
                            this.subscribe("column-init", this.initializeColumn.bind(this)),
                            this.subscribe("row-init", this.initializeRow.bind(this)));
                    }
                    initializeGroupHeader(t) {
                        var e = this,
                            i = {};
                        (i.mouseup = function (i) {
                            e.tableRowDrop(i, t);
                        }.bind(e)),
                            (i.mousemove = function (i) {
                                var r;
                                i.pageY - o.elOffset(t.element).top + e.table.rowManager.element.scrollTop > t.getHeight() / 2
                                    ? (e.toRow === t && e.toRowAfter) || ((r = t.getElement()).parentNode.insertBefore(e.placeholderElement, r.nextSibling), e.moveRow(t, !0))
                                    : (e.toRow !== t || e.toRowAfter) && (r = t.getElement()).previousSibling && (r.parentNode.insertBefore(e.placeholderElement, r), e.moveRow(t, !1));
                            }.bind(e)),
                            (t.modules.moveRow = i);
                    }
                    initializeRow(t) {
                        var e,
                            i = this,
                            r = {};
                        (r.mouseup = function (e) {
                            i.tableRowDrop(e, t);
                        }.bind(i)),
                            (r.mousemove = function (e) {
                                var r = t.getElement();
                                e.pageY - o.elOffset(r).top + i.table.rowManager.element.scrollTop > t.getHeight() / 2
                                    ? (i.toRow === t && i.toRowAfter) || (r.parentNode.insertBefore(i.placeholderElement, r.nextSibling), i.moveRow(t, !0))
                                    : (i.toRow !== t || i.toRowAfter) && (r.parentNode.insertBefore(i.placeholderElement, r), i.moveRow(t, !1));
                            }.bind(i)),
                            this.hasHandle ||
                                ((e = t.getElement()).addEventListener("mousedown", function (e) {
                                    1 === e.which &&
                                        (i.checkTimeout = setTimeout(function () {
                                            i.startMove(e, t);
                                        }, i.checkPeriod));
                                }),
                                e.addEventListener("mouseup", function (t) {
                                    1 === t.which && i.checkTimeout && clearTimeout(i.checkTimeout);
                                }),
                                this.bindTouchEvents(t, t.getElement())),
                            (t.modules.moveRow = r);
                    }
                    initializeColumn(t) {
                        t.definition.rowHandle && !1 !== this.table.options.movableRows && (this.hasHandle = !0);
                    }
                    initializeCell(t) {
                        if (t.column.definition.rowHandle && !1 !== this.table.options.movableRows) {
                            var e = this,
                                i = t.getElement(!0);
                            i.addEventListener("mousedown", function (i) {
                                1 === i.which &&
                                    (e.checkTimeout = setTimeout(function () {
                                        e.startMove(i, t.row);
                                    }, e.checkPeriod));
                            }),
                                i.addEventListener("mouseup", function (t) {
                                    1 === t.which && e.checkTimeout && clearTimeout(e.checkTimeout);
                                }),
                                this.bindTouchEvents(t.row, i);
                        }
                    }
                    bindTouchEvents(t, e) {
                        var i,
                            r,
                            s,
                            a,
                            n,
                            o,
                            l = !1;
                        e.addEventListener(
                            "touchstart",
                            (e) => {
                                this.checkTimeout = setTimeout(() => {
                                    (this.touchMove = !0), (i = t.nextRow()), (s = i ? i.getHeight() / 2 : 0), (r = t.prevRow()), (a = r ? r.getHeight() / 2 : 0), (n = 0), (o = 0), (l = !1), this.startMove(e, t);
                                }, this.checkPeriod);
                            },
                            { passive: !0 }
                        ),
                            this.moving,
                            this.toRow,
                            this.toRowAfter,
                            e.addEventListener("touchmove", (e) => {
                                var h, c;
                                this.moving &&
                                    (e.preventDefault(),
                                    this.moveHover(e),
                                    l || (l = e.touches[0].pageY),
                                    (h = e.touches[0].pageY - l) > 0
                                        ? i && h - n > s && (c = i) !== t && ((l = e.touches[0].pageY), c.getElement().parentNode.insertBefore(this.placeholderElement, c.getElement().nextSibling), this.moveRow(c, !0))
                                        : r && -h - o > a && (c = r) !== t && ((l = e.touches[0].pageY), c.getElement().parentNode.insertBefore(this.placeholderElement, c.getElement()), this.moveRow(c, !1)),
                                    c && ((i = c.nextRow()), (n = s), (s = i ? i.getHeight() / 2 : 0), (r = c.prevRow()), (o = a), (a = r ? r.getHeight() / 2 : 0)));
                            }),
                            e.addEventListener("touchend", (t) => {
                                this.checkTimeout && clearTimeout(this.checkTimeout), this.moving && (this.endMove(t), (this.touchMove = !1));
                            });
                    }
                    _bindMouseMove() {
                        this.table.rowManager.getDisplayRows().forEach((t) => {
                            ("row" === t.type || "group" === t.type) && t.modules.moveRow && t.modules.moveRow.mousemove && t.getElement().addEventListener("mousemove", t.modules.moveRow.mousemove);
                        });
                    }
                    _unbindMouseMove() {
                        this.table.rowManager.getDisplayRows().forEach((t) => {
                            ("row" === t.type || "group" === t.type) && t.modules.moveRow && t.modules.moveRow.mousemove && t.getElement().removeEventListener("mousemove", t.modules.moveRow.mousemove);
                        });
                    }
                    startMove(t, e) {
                        var i = e.getElement();
                        this.setStartPosition(t, e),
                            (this.moving = e),
                            this.table.element.classList.add("tabulator-block-select"),
                            (this.placeholderElement.style.width = e.getWidth() + "px"),
                            (this.placeholderElement.style.height = e.getHeight() + "px"),
                            this.connection ? (this.table.element.classList.add("tabulator-movingrow-sending"), this.connectToTables(e)) : (i.parentNode.insertBefore(this.placeholderElement, i), i.parentNode.removeChild(i)),
                            (this.hoverElement = i.cloneNode(!0)),
                            this.hoverElement.classList.add("tabulator-moving"),
                            this.connection
                                ? (document.body.appendChild(this.hoverElement),
                                  (this.hoverElement.style.left = "0"),
                                  (this.hoverElement.style.top = "0"),
                                  (this.hoverElement.style.width = this.table.element.clientWidth + "px"),
                                  (this.hoverElement.style.whiteSpace = "nowrap"),
                                  (this.hoverElement.style.overflow = "hidden"),
                                  (this.hoverElement.style.pointerEvents = "none"))
                                : (this.table.rowManager.getTableElement().appendChild(this.hoverElement), (this.hoverElement.style.left = "0"), (this.hoverElement.style.top = "0"), this._bindMouseMove()),
                            document.body.addEventListener("mousemove", this.moveHover),
                            document.body.addEventListener("mouseup", this.endMove),
                            this.dispatchExternal("rowMoving", e.getComponent()),
                            this.moveHover(t);
                    }
                    setStartPosition(t, e) {
                        var i,
                            r,
                            s = this.touchMove ? t.touches[0].pageX : t.pageX,
                            a = this.touchMove ? t.touches[0].pageY : t.pageY;
                        (i = e.getElement()),
                            this.connection ? ((r = i.getBoundingClientRect()), (this.startX = r.left - s + window.pageXOffset), (this.startY = r.top - a + window.pageYOffset)) : (this.startY = a - i.getBoundingClientRect().top);
                    }
                    endMove(t) {
                        (t && 1 !== t.which && !this.touchMove) ||
                            (this._unbindMouseMove(),
                            this.connection || (this.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling), this.placeholderElement.parentNode.removeChild(this.placeholderElement)),
                            this.hoverElement.parentNode.removeChild(this.hoverElement),
                            this.table.element.classList.remove("tabulator-block-select"),
                            this.toRow ? this.table.rowManager.moveRow(this.moving, this.toRow, this.toRowAfter) : this.dispatchExternal("rowMoveCancelled", this.moving.getComponent()),
                            (this.moving = !1),
                            (this.toRow = !1),
                            (this.toRowAfter = !1),
                            document.body.removeEventListener("mousemove", this.moveHover),
                            document.body.removeEventListener("mouseup", this.endMove),
                            this.connection && (this.table.element.classList.remove("tabulator-movingrow-sending"), this.disconnectFromTables()));
                    }
                    moveRow(t, e) {
                        (this.toRow = t), (this.toRowAfter = e);
                    }
                    moveHover(t) {
                        this.connection ? this.moveHoverConnections.call(this, t) : this.moveHoverTable.call(this, t);
                    }
                    moveHoverTable(t) {
                        var e = this.table.rowManager.getElement(),
                            i = e.scrollTop,
                            r = (this.touchMove ? t.touches[0].pageY : t.pageY) - e.getBoundingClientRect().top + i;
                        this.hoverElement.style.top = Math.min(r - this.startY, this.table.rowManager.element.scrollHeight - this.hoverElement.offsetHeight) + "px";
                    }
                    moveHoverConnections(t) {
                        (this.hoverElement.style.left = this.startX + (this.touchMove ? t.touches[0].pageX : t.pageX) + "px"), (this.hoverElement.style.top = this.startY + (this.touchMove ? t.touches[0].pageY : t.pageY) + "px");
                    }
                    elementRowDrop(t, e, i) {
                        this.dispatchExternal("movableRowsElementDrop", t, e, !!i && i.getComponent());
                    }
                    connectToTables(t) {
                        var e;
                        this.connectionSelectorsTables &&
                            ((e = this.commsConnections(this.connectionSelectorsTables)), this.dispatchExternal("movableRowsSendingStart", e), this.commsSend(this.connectionSelectorsTables, "moveRow", "connect", { row: t })),
                            this.connectionSelectorsElements &&
                                ((this.connectionElements = []),
                                Array.isArray(this.connectionSelectorsElements) || (this.connectionSelectorsElements = [this.connectionSelectorsElements]),
                                this.connectionSelectorsElements.forEach((t) => {
                                    "string" == typeof t ? (this.connectionElements = this.connectionElements.concat(Array.prototype.slice.call(document.querySelectorAll(t)))) : this.connectionElements.push(t);
                                }),
                                this.connectionElements.forEach((t) => {
                                    var e = (e) => {
                                        this.elementRowDrop(e, t, this.moving);
                                    };
                                    t.addEventListener("mouseup", e), (t.tabulatorElementDropEvent = e), t.classList.add("tabulator-movingrow-receiving");
                                }));
                    }
                    disconnectFromTables() {
                        var t;
                        this.connectionSelectorsTables &&
                            ((t = this.commsConnections(this.connectionSelectorsTables)), this.dispatchExternal("movableRowsSendingStop", t), this.commsSend(this.connectionSelectorsTables, "moveRow", "disconnect")),
                            this.connectionElements.forEach((t) => {
                                t.classList.remove("tabulator-movingrow-receiving"), t.removeEventListener("mouseup", t.tabulatorElementDropEvent), delete t.tabulatorElementDropEvent;
                            });
                    }
                    connect(t, e) {
                        return this.connectedTable
                            ? (console.warn("Move Row Error - Table cannot accept connection, already connected to table:", this.connectedTable), !1)
                            : ((this.connectedTable = t),
                              (this.connectedRow = e),
                              this.table.element.classList.add("tabulator-movingrow-receiving"),
                              this.table.rowManager.getDisplayRows().forEach((t) => {
                                  "row" === t.type && t.modules.moveRow && t.modules.moveRow.mouseup && t.getElement().addEventListener("mouseup", t.modules.moveRow.mouseup);
                              }),
                              (this.tableRowDropEvent = this.tableRowDrop.bind(this)),
                              this.table.element.addEventListener("mouseup", this.tableRowDropEvent),
                              this.dispatchExternal("movableRowsReceivingStart", e, t),
                              !0);
                    }
                    disconnect(t) {
                        t === this.connectedTable
                            ? ((this.connectedTable = !1),
                              (this.connectedRow = !1),
                              this.table.element.classList.remove("tabulator-movingrow-receiving"),
                              this.table.rowManager.getDisplayRows().forEach((t) => {
                                  "row" === t.type && t.modules.moveRow && t.modules.moveRow.mouseup && t.getElement().removeEventListener("mouseup", t.modules.moveRow.mouseup);
                              }),
                              this.table.element.removeEventListener("mouseup", this.tableRowDropEvent),
                              this.dispatchExternal("movableRowsReceivingStop", t))
                            : console.warn("Move Row Error - trying to disconnect from non connected table");
                    }
                    dropComplete(t, e, i) {
                        var r = !1;
                        if (i) {
                            switch (typeof this.table.options.movableRowsSender) {
                                case "string":
                                    r = this.senders[this.table.options.movableRowsSender];
                                    break;
                                case "function":
                                    r = this.table.options.movableRowsSender;
                            }
                            r
                                ? r.call(this, this.moving ? this.moving.getComponent() : void 0, e ? e.getComponent() : void 0, t)
                                : this.table.options.movableRowsSender && console.warn("Mover Row Error - no matching sender found:", this.table.options.movableRowsSender),
                                this.dispatchExternal("movableRowsSent", this.moving.getComponent(), e ? e.getComponent() : void 0, t);
                        } else this.dispatchExternal("movableRowsSentFailed", this.moving.getComponent(), e ? e.getComponent() : void 0, t);
                        this.endMove();
                    }
                    tableRowDrop(t, e) {
                        var i = !1,
                            r = !1;
                        switch ((t.stopImmediatePropagation(), typeof this.table.options.movableRowsReceiver)) {
                            case "string":
                                i = this.receivers[this.table.options.movableRowsReceiver];
                                break;
                            case "function":
                                i = this.table.options.movableRowsReceiver;
                        }
                        i ? (r = i.call(this, this.connectedRow.getComponent(), e ? e.getComponent() : void 0, this.connectedTable)) : console.warn("Mover Row Error - no matching receiver found:", this.table.options.movableRowsReceiver),
                            r
                                ? this.dispatchExternal("movableRowsReceived", this.connectedRow.getComponent(), e ? e.getComponent() : void 0, this.connectedTable)
                                : this.dispatchExternal("movableRowsReceivedFailed", this.connectedRow.getComponent(), e ? e.getComponent() : void 0, this.connectedTable),
                            this.commsSend(this.connectedTable, "moveRow", "dropcomplete", { row: e, success: r });
                    }
                    commsReceived(t, e, i) {
                        switch (e) {
                            case "connect":
                                return this.connect(t, i.row);
                            case "disconnect":
                                return this.disconnect(t);
                            case "dropcomplete":
                                return this.dropComplete(t, i.row, i.success);
                        }
                    }
                }
                (et.prototype.receivers = {
                    insert: function (t, e, i) {
                        return this.table.addRow(t.getData(), void 0, e), !0;
                    },
                    add: function (t, e, i) {
                        return this.table.addRow(t.getData()), !0;
                    },
                    update: function (t, e, i) {
                        return !!e && (e.update(t.getData()), !0);
                    },
                    replace: function (t, e, i) {
                        return !!e && (this.table.addRow(t.getData(), void 0, e), e.delete(), !0);
                    },
                }),
                    (et.prototype.senders = {
                        delete: function (t, e, i) {
                            t.delete();
                        },
                    }),
                    (et.moduleName = "moveRow");
                class it extends h {
                    constructor(t) {
                        super(t),
                            (this.allowedTypes = ["", "data", "edit", "clipboard"]),
                            (this.enabled = !0),
                            this.registerColumnOption("mutator"),
                            this.registerColumnOption("mutatorParams"),
                            this.registerColumnOption("mutatorData"),
                            this.registerColumnOption("mutatorDataParams"),
                            this.registerColumnOption("mutatorEdit"),
                            this.registerColumnOption("mutatorEditParams"),
                            this.registerColumnOption("mutatorClipboard"),
                            this.registerColumnOption("mutatorClipboardParams"),
                            this.registerColumnOption("mutateLink");
                    }
                    initialize() {
                        this.subscribe("cell-value-changing", this.transformCell.bind(this)),
                            this.subscribe("cell-value-changed", this.mutateLink.bind(this)),
                            this.subscribe("column-layout", this.initializeColumn.bind(this)),
                            this.subscribe("row-data-init-before", this.rowDataChanged.bind(this)),
                            this.subscribe("row-data-changing", this.rowDataChanged.bind(this));
                    }
                    rowDataChanged(t, e, i) {
                        return this.transformRow(e, "data", i);
                    }
                    initializeColumn(t) {
                        var e = !1,
                            i = {};
                        this.allowedTypes.forEach((r) => {
                            var s,
                                a = "mutator" + (r.charAt(0).toUpperCase() + r.slice(1));
                            t.definition[a] && (s = this.lookupMutator(t.definition[a])) && ((e = !0), (i[a] = { mutator: s, params: t.definition[a + "Params"] || {} }));
                        }),
                            e && (t.modules.mutate = i);
                    }
                    lookupMutator(t) {
                        var e = !1;
                        switch (typeof t) {
                            case "string":
                                it.mutators[t] ? (e = it.mutators[t]) : console.warn("Mutator Error - No such mutator found, ignoring: ", t);
                                break;
                            case "function":
                                e = t;
                        }
                        return e;
                    }
                    transformRow(t, e, i) {
                        var r,
                            s = "mutator" + (e.charAt(0).toUpperCase() + e.slice(1));
                        return (
                            this.enabled &&
                                this.table.columnManager.traverse((a) => {
                                    var n, o, l;
                                    a.modules.mutate &&
                                        (n = a.modules.mutate[s] || a.modules.mutate.mutator || !1) &&
                                        ((r = a.getFieldValue(void 0 !== i ? i : t)),
                                        (("data" == e && !i) || void 0 !== r) && ((l = a.getComponent()), (o = "function" == typeof n.params ? n.params(r, t, e, l) : n.params), a.setFieldValue(t, n.mutator(r, t, e, o, l))));
                                }),
                            t
                        );
                    }
                    transformCell(t, e) {
                        if (t.column.modules.mutate) {
                            var i = t.column.modules.mutate.mutatorEdit || t.column.modules.mutate.mutator || !1,
                                r = {};
                            if (i) return (r = Object.assign(r, t.row.getData())), t.column.setFieldValue(r, e), i.mutator(e, r, "edit", i.params, t.getComponent());
                        }
                        return e;
                    }
                    mutateLink(t) {
                        var e = t.column.definition.mutateLink;
                        e &&
                            (Array.isArray(e) || (e = [e]),
                            e.forEach((e) => {
                                var i = t.row.getCell(e);
                                i && i.setValue(i.getValue(), !0, !0);
                            }));
                    }
                    enable() {
                        this.enabled = !0;
                    }
                    disable() {
                        this.enabled = !1;
                    }
                }
                (it.moduleName = "mutator"), (it.mutators = {});
                var rt = {
                    rows: function (t, e, i, r, s) {
                        var a = document.createElement("span"),
                            n = document.createElement("span"),
                            o = document.createElement("span"),
                            l = document.createElement("span"),
                            h = document.createElement("span"),
                            c = document.createElement("span");
                        return (
                            this.table.modules.localize.langBind("pagination|counter|showing", (t) => {
                                n.innerHTML = t;
                            }),
                            this.table.modules.localize.langBind("pagination|counter|of", (t) => {
                                l.innerHTML = t;
                            }),
                            this.table.modules.localize.langBind("pagination|counter|rows", (t) => {
                                c.innerHTML = t;
                            }),
                            r
                                ? ((o.innerHTML = " " + e + "-" + Math.min(e + t - 1, r) + " "), (h.innerHTML = " " + r + " "), a.appendChild(n), a.appendChild(o), a.appendChild(l), a.appendChild(h), a.appendChild(c))
                                : ((o.innerHTML = " 0 "), a.appendChild(n), a.appendChild(o), a.appendChild(c)),
                            a
                        );
                    },
                    pages: function (t, e, i, r, s) {
                        var a = document.createElement("span"),
                            n = document.createElement("span"),
                            o = document.createElement("span"),
                            l = document.createElement("span"),
                            h = document.createElement("span"),
                            c = document.createElement("span");
                        return (
                            this.table.modules.localize.langBind("pagination|counter|showing", (t) => {
                                n.innerHTML = t;
                            }),
                            (o.innerHTML = " " + i + " "),
                            this.table.modules.localize.langBind("pagination|counter|of", (t) => {
                                l.innerHTML = t;
                            }),
                            (h.innerHTML = " " + s + " "),
                            this.table.modules.localize.langBind("pagination|counter|pages", (t) => {
                                c.innerHTML = t;
                            }),
                            a.appendChild(n),
                            a.appendChild(o),
                            a.appendChild(l),
                            a.appendChild(h),
                            a.appendChild(c),
                            a
                        );
                    },
                };
                class st extends h {
                    constructor(t) {
                        super(t),
                            (this.mode = "local"),
                            (this.progressiveLoad = !1),
                            (this.element = null),
                            (this.pageCounterElement = null),
                            (this.pageCounter = null),
                            (this.size = 0),
                            (this.page = 1),
                            (this.count = 5),
                            (this.max = 1),
                            (this.remoteRowCountEstimate = null),
                            (this.initialLoad = !0),
                            (this.dataChanging = !1),
                            (this.pageSizes = []),
                            this.registerTableOption("pagination", !1),
                            this.registerTableOption("paginationMode", "local"),
                            this.registerTableOption("paginationSize", !1),
                            this.registerTableOption("paginationInitialPage", 1),
                            this.registerTableOption("paginationCounter", !1),
                            this.registerTableOption("paginationCounterElement", !1),
                            this.registerTableOption("paginationButtonCount", 5),
                            this.registerTableOption("paginationSizeSelector", !1),
                            this.registerTableOption("paginationElement", !1),
                            this.registerTableOption("paginationAddRow", "page"),
                            this.registerTableOption("progressiveLoad", !1),
                            this.registerTableOption("progressiveLoadDelay", 0),
                            this.registerTableOption("progressiveLoadScrollMargin", 0),
                            this.registerTableFunction("setMaxPage", this.setMaxPage.bind(this)),
                            this.registerTableFunction("setPage", this.setPage.bind(this)),
                            this.registerTableFunction("setPageToRow", this.userSetPageToRow.bind(this)),
                            this.registerTableFunction("setPageSize", this.userSetPageSize.bind(this)),
                            this.registerTableFunction("getPageSize", this.getPageSize.bind(this)),
                            this.registerTableFunction("previousPage", this.previousPage.bind(this)),
                            this.registerTableFunction("nextPage", this.nextPage.bind(this)),
                            this.registerTableFunction("getPage", this.getPage.bind(this)),
                            this.registerTableFunction("getPageMax", this.getPageMax.bind(this)),
                            this.registerComponentFunction("row", "pageTo", this.setPageToRow.bind(this));
                    }
                    initialize() {
                        this.table.options.pagination
                            ? (this.subscribe("row-deleted", this.rowsUpdated.bind(this)),
                              this.subscribe("row-added", this.rowsUpdated.bind(this)),
                              this.subscribe("data-processed", this.initialLoadComplete.bind(this)),
                              this.subscribe("table-built", this.calculatePageSizes.bind(this)),
                              this.subscribe("footer-redraw", this.footerRedraw.bind(this)),
                              "page" == this.table.options.paginationAddRow && this.subscribe("row-adding-position", this.rowAddingPosition.bind(this)),
                              "remote" === this.table.options.paginationMode && (this.subscribe("data-params", this.remotePageParams.bind(this)), this.subscribe("data-loaded", this._parseRemoteData.bind(this))),
                              this.table.options.progressiveLoad && console.error("Progressive Load Error - Pagination and progressive load cannot be used at the same time"),
                              this.registerDisplayHandler(this.restOnRenderBefore.bind(this), 40),
                              this.registerDisplayHandler(this.getRows.bind(this), 50),
                              this.createElements(),
                              this.initializePageCounter(),
                              this.initializePaginator())
                            : this.table.options.progressiveLoad &&
                              (this.subscribe("data-params", this.remotePageParams.bind(this)),
                              this.subscribe("data-loaded", this._parseRemoteData.bind(this)),
                              this.subscribe("table-built", this.calculatePageSizes.bind(this)),
                              this.subscribe("data-processed", this.initialLoadComplete.bind(this)),
                              this.initializeProgressive(this.table.options.progressiveLoad),
                              "scroll" === this.table.options.progressiveLoad && this.subscribe("scroll-vertical", this.scrollVertical.bind(this)));
                    }
                    rowAddingPosition(t, e) {
                        var i,
                            r = this.table.rowManager,
                            s = r.getDisplayRows();
                        return e ? (s.length ? (i = s[0]) : r.activeRows.length && ((i = r.activeRows[r.activeRows.length - 1]), (e = !1))) : s.length && ((i = s[s.length - 1]), (e = !(s.length < this.size))), { index: i, top: e };
                    }
                    calculatePageSizes() {
                        var t, e;
                        this.table.options.paginationSize
                            ? (this.size = this.table.options.paginationSize)
                            : ((t = document.createElement("div")).classList.add("tabulator-row"),
                              (t.style.visibility = "hidden"),
                              (e = document.createElement("div")).classList.add("tabulator-cell"),
                              (e.innerHTML = "Page Row Test"),
                              t.appendChild(e),
                              this.table.rowManager.getTableElement().appendChild(t),
                              (this.size = Math.floor(this.table.rowManager.getElement().clientHeight / t.offsetHeight)),
                              this.table.rowManager.getTableElement().removeChild(t)),
                            this.dispatchExternal("pageSizeChanged", this.size),
                            this.generatePageSizeSelectList();
                    }
                    initialLoadComplete() {
                        this.initialLoad = !1;
                    }
                    remotePageParams(t, e, i, r) {
                        return this.initialLoad || (((this.progressiveLoad && !i) || (!this.progressiveLoad && !this.dataChanging)) && this.reset(!0)), (r.page = this.page), this.size && (r.size = this.size), r;
                    }
                    userSetPageToRow(t) {
                        return this.table.options.pagination && (t = this.rowManager.findRow(t)) ? this.setPageToRow(t) : Promise.reject();
                    }
                    userSetPageSize(t) {
                        return !!this.table.options.pagination && (this.setPageSize(t), this.setPage(1));
                    }
                    scrollVertical(t, e) {
                        var i;
                        e ||
                            this.table.dataLoader.loading ||
                            ((i = this.table.rowManager.getElement()).scrollHeight - i.clientHeight - t < (this.table.options.progressiveLoadScrollMargin || 2 * i.clientHeight) && this.nextPage().catch(() => {}));
                    }
                    restOnRenderBefore(t, e) {
                        return e || ("local" === this.mode && this.reset()), t;
                    }
                    rowsUpdated() {
                        this.refreshData(!0, "all");
                    }
                    createElements() {
                        var t;
                        (this.element = document.createElement("span")),
                            this.element.classList.add("tabulator-paginator"),
                            (this.pagesElement = document.createElement("span")),
                            this.pagesElement.classList.add("tabulator-pages"),
                            (t = document.createElement("button")).classList.add("tabulator-page"),
                            t.setAttribute("type", "button"),
                            t.setAttribute("role", "button"),
                            t.setAttribute("aria-label", ""),
                            t.setAttribute("title", ""),
                            (this.firstBut = t.cloneNode(!0)),
                            this.firstBut.setAttribute("data-page", "first"),
                            (this.prevBut = t.cloneNode(!0)),
                            this.prevBut.setAttribute("data-page", "prev"),
                            (this.nextBut = t.cloneNode(!0)),
                            this.nextBut.setAttribute("data-page", "next"),
                            (this.lastBut = t.cloneNode(!0)),
                            this.lastBut.setAttribute("data-page", "last"),
                            this.table.options.paginationSizeSelector && ((this.pageSizeSelect = document.createElement("select")), this.pageSizeSelect.classList.add("tabulator-page-size"));
                    }
                    generatePageSizeSelectList() {
                        var t = [];
                        if (this.pageSizeSelect) {
                            if (Array.isArray(this.table.options.paginationSizeSelector)) (t = this.table.options.paginationSizeSelector), (this.pageSizes = t), -1 == this.pageSizes.indexOf(this.size) && t.unshift(this.size);
                            else if (-1 == this.pageSizes.indexOf(this.size)) {
                                t = [];
                                for (var e = 1; e < 5; e++) t.push(this.size * e);
                                this.pageSizes = t;
                            } else t = this.pageSizes;
                            for (; this.pageSizeSelect.firstChild; ) this.pageSizeSelect.removeChild(this.pageSizeSelect.firstChild);
                            t.forEach((t) => {
                                var e = document.createElement("option");
                                (e.value = t),
                                    !0 === t
                                        ? this.langBind("pagination|all", function (t) {
                                              e.innerHTML = t;
                                          })
                                        : (e.innerHTML = t),
                                    this.pageSizeSelect.appendChild(e);
                            }),
                                (this.pageSizeSelect.value = this.size);
                        }
                    }
                    initializePageCounter() {
                        var t = this.table.options.paginationCounter,
                            e = null;
                        t &&
                            ((e = "function" == typeof t ? t : st.pageCounters[t])
                                ? ((this.pageCounter = e), (this.pageCounterElement = document.createElement("span")), this.pageCounterElement.classList.add("tabulator-page-counter"))
                                : console.warn("Pagination Error - No such page counter found: ", t));
                    }
                    initializePaginator(t) {
                        var e, i;
                        t ||
                            (this.langBind("pagination|first", (t) => {
                                this.firstBut.innerHTML = t;
                            }),
                            this.langBind("pagination|first_title", (t) => {
                                this.firstBut.setAttribute("aria-label", t), this.firstBut.setAttribute("title", t);
                            }),
                            this.langBind("pagination|prev", (t) => {
                                this.prevBut.innerHTML = t;
                            }),
                            this.langBind("pagination|prev_title", (t) => {
                                this.prevBut.setAttribute("aria-label", t), this.prevBut.setAttribute("title", t);
                            }),
                            this.langBind("pagination|next", (t) => {
                                this.nextBut.innerHTML = t;
                            }),
                            this.langBind("pagination|next_title", (t) => {
                                this.nextBut.setAttribute("aria-label", t), this.nextBut.setAttribute("title", t);
                            }),
                            this.langBind("pagination|last", (t) => {
                                this.lastBut.innerHTML = t;
                            }),
                            this.langBind("pagination|last_title", (t) => {
                                this.lastBut.setAttribute("aria-label", t), this.lastBut.setAttribute("title", t);
                            }),
                            this.firstBut.addEventListener("click", () => {
                                this.setPage(1);
                            }),
                            this.prevBut.addEventListener("click", () => {
                                this.previousPage();
                            }),
                            this.nextBut.addEventListener("click", () => {
                                this.nextPage();
                            }),
                            this.lastBut.addEventListener("click", () => {
                                this.setPage(this.max);
                            }),
                            this.table.options.paginationElement && (this.element = this.table.options.paginationElement),
                            this.pageSizeSelect &&
                                ((e = document.createElement("label")),
                                this.langBind("pagination|page_size", (t) => {
                                    this.pageSizeSelect.setAttribute("aria-label", t), this.pageSizeSelect.setAttribute("title", t), (e.innerHTML = t);
                                }),
                                this.element.appendChild(e),
                                this.element.appendChild(this.pageSizeSelect),
                                this.pageSizeSelect.addEventListener("change", (t) => {
                                    this.setPageSize("true" == this.pageSizeSelect.value || this.pageSizeSelect.value), this.setPage(1);
                                })),
                            this.element.appendChild(this.firstBut),
                            this.element.appendChild(this.prevBut),
                            this.element.appendChild(this.pagesElement),
                            this.element.appendChild(this.nextBut),
                            this.element.appendChild(this.lastBut),
                            this.table.options.paginationElement ||
                                (this.table.options.paginationCounter &&
                                    (this.table.options.paginationCounterElement
                                        ? this.table.options.paginationCounterElement instanceof HTMLElement
                                            ? this.table.options.paginationCounterElement.appendChild(this.pageCounterElement)
                                            : "string" == typeof this.table.options.paginationCounterElement &&
                                              ((i = document.querySelector(this.table.options.paginationCounterElement))
                                                  ? i.appendChild(this.pageCounterElement)
                                                  : console.warn("Pagination Error - Unable to find element matching paginationCounterElement selector:", this.table.options.paginationCounterElement))
                                        : this.footerAppend(this.pageCounterElement)),
                                this.footerAppend(this.element)),
                            (this.page = this.table.options.paginationInitialPage),
                            (this.count = this.table.options.paginationButtonCount)),
                            (this.mode = this.table.options.paginationMode);
                    }
                    initializeProgressive(t) {
                        this.initializePaginator(!0), (this.mode = "progressive_" + t), (this.progressiveLoad = !0);
                    }
                    trackChanges() {
                        this.dispatch("page-changed");
                    }
                    setMaxRows(t) {
                        (this.max = t ? (!0 === this.size ? 1 : Math.ceil(t / this.size)) : 1), this.page > this.max && (this.page = this.max);
                    }
                    reset(t) {
                        this.initialLoad || (("local" == this.mode || t) && ((this.page = 1), this.trackChanges()));
                    }
                    setMaxPage(t) {
                        (t = parseInt(t)), (this.max = t || 1), this.page > this.max && ((this.page = this.max), this.trigger());
                    }
                    setPage(t) {
                        switch (t) {
                            case "first":
                                return this.setPage(1);
                            case "prev":
                                return this.previousPage();
                            case "next":
                                return this.nextPage();
                            case "last":
                                return this.setPage(this.max);
                        }
                        return ((t = parseInt(t)) > 0 && t <= this.max) || "local" !== this.mode
                            ? ((this.page = t), this.trackChanges(), this.trigger())
                            : (console.warn("Pagination Error - Requested page is out of range of 1 - " + this.max + ":", t), Promise.reject());
                    }
                    setPageToRow(t) {
                        var e = this.displayRows(-1).indexOf(t);
                        if (e > -1) {
                            var i = !0 === this.size ? 1 : Math.ceil((e + 1) / this.size);
                            return this.setPage(i);
                        }
                        return console.warn("Pagination Error - Requested row is not visible"), Promise.reject();
                    }
                    setPageSize(t) {
                        !0 !== t && (t = parseInt(t)), t > 0 && ((this.size = t), this.dispatchExternal("pageSizeChanged", t)), this.pageSizeSelect && this.generatePageSizeSelectList(), this.trackChanges();
                    }
                    _setPageCounter(t, e, i) {
                        var r;
                        if (this.pageCounter)
                            switch (("remote" === this.mode && ((e = this.size), (i = (this.page - 1) * this.size + 1), (t = this.remoteRowCountEstimate)), typeof (r = this.pageCounter.call(this, e, i, this.page, t, this.max)))) {
                                case "object":
                                    if (r instanceof Node) {
                                        for (; this.pageCounterElement.firstChild; ) this.pageCounterElement.removeChild(this.pageCounterElement.firstChild);
                                        this.pageCounterElement.appendChild(r);
                                    } else
                                        (this.pageCounterElement.innerHTML = ""),
                                            null != r && console.warn("Page Counter Error - Page Counter has returned a type of object, the only valid page counter object return is an instance of Node, the page counter returned:", r);
                                    break;
                                case "undefined":
                                    this.pageCounterElement.innerHTML = "";
                                    break;
                                default:
                                    this.pageCounterElement.innerHTML = r;
                            }
                    }
                    _setPageButtons() {
                        for (
                            var t = Math.floor((this.count - 1) / 2),
                                e = Math.ceil((this.count - 1) / 2),
                                i = this.max - this.page + t + 1 < this.count ? this.max - this.count + 1 : Math.max(this.page - t, 1),
                                r = this.page <= e ? Math.min(this.count, this.max) : Math.min(this.page + e, this.max);
                            this.pagesElement.firstChild;

                        )
                            this.pagesElement.removeChild(this.pagesElement.firstChild);
                        1 == this.page ? ((this.firstBut.disabled = !0), (this.prevBut.disabled = !0)) : ((this.firstBut.disabled = !1), (this.prevBut.disabled = !1)),
                            this.page == this.max ? ((this.lastBut.disabled = !0), (this.nextBut.disabled = !0)) : ((this.lastBut.disabled = !1), (this.nextBut.disabled = !1));
                        for (var s = i; s <= r; s++) s > 0 && s <= this.max && this.pagesElement.appendChild(this._generatePageButton(s));
                        this.footerRedraw();
                    }
                    _generatePageButton(t) {
                        var e = document.createElement("button");
                        return (
                            e.classList.add("tabulator-page"),
                            t == this.page && e.classList.add("active"),
                            e.setAttribute("type", "button"),
                            e.setAttribute("role", "button"),
                            this.langBind("pagination|page_title", (i) => {
                                e.setAttribute("aria-label", i + " " + t), e.setAttribute("title", i + " " + t);
                            }),
                            e.setAttribute("data-page", t),
                            (e.textContent = t),
                            e.addEventListener("click", (e) => {
                                this.setPage(t);
                            }),
                            e
                        );
                    }
                    previousPage() {
                        return this.page > 1 ? (this.page--, this.trackChanges(), this.trigger()) : (console.warn("Pagination Error - Previous page would be less than page 1:", 0), Promise.reject());
                    }
                    nextPage() {
                        return this.page < this.max
                            ? (this.page++, this.trackChanges(), this.trigger())
                            : (this.progressiveLoad || console.warn("Pagination Error - Next page would be greater than maximum page of " + this.max + ":", this.max + 1), Promise.reject());
                    }
                    getPage() {
                        return this.page;
                    }
                    getPageMax() {
                        return this.max;
                    }
                    getPageSize(t) {
                        return this.size;
                    }
                    getMode() {
                        return this.mode;
                    }
                    getRows(t) {
                        var e,
                            i,
                            r,
                            s,
                            a = 0,
                            n = t.filter((t) => "row" === t.type);
                        if ("local" == this.mode) {
                            (e = []), this.setMaxRows(t.length), !0 === this.size ? ((i = 0), (r = t.length)) : (r = (i = this.size * (this.page - 1)) + parseInt(this.size)), this._setPageButtons();
                            for (var o = i; o < r; o++) {
                                var l = t[o];
                                l && (e.push(l), "row" === l.type && (s || (s = l), a++));
                            }
                            return this._setPageCounter(n.length, a, s ? n.indexOf(s) + 1 : 0), e;
                        }
                        return this._setPageButtons(), this._setPageCounter(n.length), t.slice(0);
                    }
                    trigger() {
                        var t;
                        switch (this.mode) {
                            case "local":
                                return (t = this.table.rowManager.scrollLeft), this.refreshData(), this.table.rowManager.scrollHorizontal(t), this.dispatchExternal("pageLoaded", this.getPage()), Promise.resolve();
                            case "remote":
                                return (
                                    (this.dataChanging = !0),
                                    this.reloadData(null).finally(() => {
                                        this.dataChanging = !1;
                                    })
                                );
                            case "progressive_load":
                            case "progressive_scroll":
                                return this.reloadData(null, !0);
                            default:
                                return console.warn("Pagination Error - no such pagination mode:", this.mode), Promise.reject();
                        }
                    }
                    _parseRemoteData(t) {
                        var e;
                        if ((void 0 === t.last_page && console.warn("Remote Pagination Error - Server response missing '" + (this.options("dataReceiveParams").last_page || "last_page") + "' property"), t.data)) {
                            if (
                                ((this.max = parseInt(t.last_page) || 1),
                                (this.remoteRowCountEstimate = void 0 !== t.last_row ? t.last_row : t.last_page * this.size - (this.page == t.last_page ? this.size - t.data.length : 0)),
                                this.progressiveLoad)
                            ) {
                                switch (this.mode) {
                                    case "progressive_load":
                                        1 == this.page ? this.table.rowManager.setData(t.data, !1, 1 == this.page) : this.table.rowManager.addRows(t.data),
                                            this.page < this.max &&
                                                setTimeout(() => {
                                                    this.nextPage();
                                                }, this.table.options.progressiveLoadDelay);
                                        break;
                                    case "progressive_scroll":
                                        (t = 1 === this.page ? t.data : this.table.rowManager.getData().concat(t.data)),
                                            this.table.rowManager.setData(t, 1 !== this.page, 1 == this.page),
                                            (e = this.table.options.progressiveLoadScrollMargin || 2 * this.table.rowManager.element.clientHeight),
                                            this.table.rowManager.element.scrollHeight <= this.table.rowManager.element.clientHeight + e &&
                                                this.page < this.max &&
                                                setTimeout(() => {
                                                    this.nextPage();
                                                });
                                }
                                return !1;
                            }
                            this.dispatchExternal("pageLoaded", this.getPage());
                        } else console.warn("Remote Pagination Error - Server response missing '" + (this.options("dataReceiveParams").data || "data") + "' property");
                        return t.data;
                    }
                    footerRedraw() {
                        var t = this.table.footerManager.containerElement;
                        Math.ceil(t.clientWidth) - t.scrollWidth < 0
                            ? (this.pagesElement.style.display = "none")
                            : ((this.pagesElement.style.display = ""), Math.ceil(t.clientWidth) - t.scrollWidth < 0 && (this.pagesElement.style.display = "none"));
                    }
                }
                (st.moduleName = "page"), (st.pageCounters = rt);
                var at = {
                        local: function (t, e) {
                            var i = localStorage.getItem(t + "-" + e);
                            return !!i && JSON.parse(i);
                        },
                        cookie: function (t, e) {
                            var i,
                                r,
                                s = document.cookie,
                                a = t + "-" + e,
                                n = s.indexOf(a + "=");
                            return n > -1 && ((s = s.slice(n)), (i = s.indexOf(";")) > -1 && (s = s.slice(0, i)), (r = s.replace(a + "=", ""))), !!r && JSON.parse(r);
                        },
                    },
                    nt = {
                        local: function (t, e, i) {
                            localStorage.setItem(t + "-" + e, JSON.stringify(i));
                        },
                        cookie: function (t, e, i) {
                            var r = new Date();
                            r.setDate(r.getDate() + 1e4), (document.cookie = t + "-" + e + "=" + JSON.stringify(i) + "; expires=" + r.toUTCString());
                        },
                    };
                class ot extends h {
                    constructor(t) {
                        super(t),
                            (this.mode = ""),
                            (this.id = ""),
                            (this.defWatcherBlock = !1),
                            (this.config = {}),
                            (this.readFunc = !1),
                            (this.writeFunc = !1),
                            this.registerTableOption("persistence", !1),
                            this.registerTableOption("persistenceID", ""),
                            this.registerTableOption("persistenceMode", !0),
                            this.registerTableOption("persistenceReaderFunc", !1),
                            this.registerTableOption("persistenceWriterFunc", !1);
                    }
                    localStorageTest() {
                        var t = "_tabulator_test";
                        try {
                            return window.localStorage.setItem(t, t), window.localStorage.removeItem(t), !0;
                        } catch (t) {
                            return !1;
                        }
                    }
                    initialize() {
                        if (this.table.options.persistence) {
                            var t,
                                e = this.table.options.persistenceMode,
                                i = this.table.options.persistenceID;
                            (this.mode = !0 !== e ? e : this.localStorageTest() ? "local" : "cookie"),
                                this.table.options.persistenceReaderFunc
                                    ? "function" == typeof this.table.options.persistenceReaderFunc
                                        ? (this.readFunc = this.table.options.persistenceReaderFunc)
                                        : ot.readers[this.table.options.persistenceReaderFunc]
                                        ? (this.readFunc = ot.readers[this.table.options.persistenceReaderFunc])
                                        : console.warn("Persistence Read Error - invalid reader set", this.table.options.persistenceReaderFunc)
                                    : ot.readers[this.mode]
                                    ? (this.readFunc = ot.readers[this.mode])
                                    : console.warn("Persistence Read Error - invalid reader set", this.mode),
                                this.table.options.persistenceWriterFunc
                                    ? "function" == typeof this.table.options.persistenceWriterFunc
                                        ? (this.writeFunc = this.table.options.persistenceWriterFunc)
                                        : ot.writers[this.table.options.persistenceWriterFunc]
                                        ? (this.writeFunc = ot.writers[this.table.options.persistenceWriterFunc])
                                        : console.warn("Persistence Write Error - invalid reader set", this.table.options.persistenceWriterFunc)
                                    : ot.writers[this.mode]
                                    ? (this.writeFunc = ot.writers[this.mode])
                                    : console.warn("Persistence Write Error - invalid writer set", this.mode),
                                (this.id = "tabulator-" + (i || this.table.element.getAttribute("id") || "")),
                                (this.config = {
                                    sort: !0 === this.table.options.persistence || this.table.options.persistence.sort,
                                    filter: !0 === this.table.options.persistence || this.table.options.persistence.filter,
                                    headerFilter: !0 === this.table.options.persistence || this.table.options.persistence.headerFilter,
                                    group: !0 === this.table.options.persistence || this.table.options.persistence.group,
                                    page: !0 === this.table.options.persistence || this.table.options.persistence.page,
                                    columns: !0 === this.table.options.persistence ? ["title", "width", "visible"] : this.table.options.persistence.columns,
                                }),
                                this.config.page &&
                                    (t = this.retrieveData("page")) &&
                                    (void 0 === t.paginationSize || (!0 !== this.config.page && !this.config.page.size) || (this.table.options.paginationSize = t.paginationSize),
                                    void 0 === t.paginationInitialPage || (!0 !== this.config.page && !this.config.page.page) || (this.table.options.paginationInitialPage = t.paginationInitialPage)),
                                this.config.group &&
                                    (t = this.retrieveData("group")) &&
                                    (void 0 === t.groupBy || (!0 !== this.config.group && !this.config.group.groupBy) || (this.table.options.groupBy = t.groupBy),
                                    void 0 === t.groupStartOpen || (!0 !== this.config.group && !this.config.group.groupStartOpen) || (this.table.options.groupStartOpen = t.groupStartOpen),
                                    void 0 === t.groupHeader || (!0 !== this.config.group && !this.config.group.groupHeader) || (this.table.options.groupHeader = t.groupHeader)),
                                this.config.columns &&
                                    ((this.table.options.columns = this.load("columns", this.table.options.columns)),
                                    this.subscribe("column-init", this.initializeColumn.bind(this)),
                                    this.subscribe("column-show", this.save.bind(this, "columns")),
                                    this.subscribe("column-hide", this.save.bind(this, "columns")),
                                    this.subscribe("column-moved", this.save.bind(this, "columns"))),
                                this.subscribe("table-built", this.tableBuilt.bind(this), 0),
                                this.subscribe("table-redraw", this.tableRedraw.bind(this)),
                                this.subscribe("filter-changed", this.eventSave.bind(this, "filter")),
                                this.subscribe("filter-changed", this.eventSave.bind(this, "headerFilter")),
                                this.subscribe("sort-changed", this.eventSave.bind(this, "sort")),
                                this.subscribe("group-changed", this.eventSave.bind(this, "group")),
                                this.subscribe("page-changed", this.eventSave.bind(this, "page")),
                                this.subscribe("column-resized", this.eventSave.bind(this, "columns")),
                                this.subscribe("column-width", this.eventSave.bind(this, "columns")),
                                this.subscribe("layout-refreshed", this.eventSave.bind(this, "columns"));
                        }
                        this.registerTableFunction("getColumnLayout", this.getColumnLayout.bind(this)), this.registerTableFunction("setColumnLayout", this.setColumnLayout.bind(this));
                    }
                    eventSave(t) {
                        this.config[t] && this.save(t);
                    }
                    tableBuilt() {
                        var t, e, i;
                        this.config.sort && !1 == !(t = this.load("sort")) && (this.table.options.initialSort = t),
                            this.config.filter && !1 == !(e = this.load("filter")) && (this.table.options.initialFilter = e),
                            this.config.headerFilter && !1 == !(i = this.load("headerFilter")) && (this.table.options.initialHeaderFilter = i);
                    }
                    tableRedraw(t) {
                        t && this.config.columns && this.save("columns");
                    }
                    getColumnLayout() {
                        return this.parseColumns(this.table.columnManager.getColumns());
                    }
                    setColumnLayout(t) {
                        return this.table.columnManager.setColumns(this.mergeDefinition(this.table.options.columns, t)), !0;
                    }
                    initializeColumn(t) {
                        var e;
                        this.config.columns &&
                            ((this.defWatcherBlock = !0),
                            (e = t.getDefinition()),
                            (!0 === this.config.columns ? Object.keys(e) : this.config.columns).forEach((t) => {
                                var i = Object.getOwnPropertyDescriptor(e, t),
                                    r = e[t];
                                i &&
                                    Object.defineProperty(e, t, {
                                        set: (t) => {
                                            (r = t), this.defWatcherBlock || this.save("columns"), i.set && i.set(t);
                                        },
                                        get: () => (i.get && i.get(), r),
                                    });
                            }),
                            (this.defWatcherBlock = !1));
                    }
                    load(t, e) {
                        var i = this.retrieveData(t);
                        return e && (i = i ? this.mergeDefinition(e, i) : e), i;
                    }
                    retrieveData(t) {
                        return !!this.readFunc && this.readFunc(this.id, t);
                    }
                    mergeDefinition(t, e) {
                        var i = [];
                        return (
                            (e = e || []).forEach((e, r) => {
                                var s,
                                    a = this._findColumn(t, e);
                                a &&
                                    (!0 === this.config.columns || null == this.config.columns ? (s = Object.keys(a)).push("width") : (s = this.config.columns),
                                    s.forEach((t) => {
                                        "columns" !== t && void 0 !== e[t] && (a[t] = e[t]);
                                    }),
                                    a.columns && (a.columns = this.mergeDefinition(a.columns, e.columns)),
                                    i.push(a));
                            }),
                            t.forEach((t, r) => {
                                this._findColumn(e, t) || (i.length > r ? i.splice(r, 0, t) : i.push(t));
                            }),
                            i
                        );
                    }
                    _findColumn(t, e) {
                        var i = e.columns ? "group" : e.field ? "field" : "object";
                        return t.find(function (t) {
                            switch (i) {
                                case "group":
                                    return t.title === e.title && t.columns.length === e.columns.length;
                                case "field":
                                    return t.field === e.field;
                                case "object":
                                    return t === e;
                            }
                        });
                    }
                    save(t) {
                        var e = {};
                        switch (t) {
                            case "columns":
                                e = this.parseColumns(this.table.columnManager.getColumns());
                                break;
                            case "filter":
                                e = this.table.modules.filter.getFilters();
                                break;
                            case "headerFilter":
                                e = this.table.modules.filter.getHeaderFilters();
                                break;
                            case "sort":
                                e = this.validateSorters(this.table.modules.sort.getSort());
                                break;
                            case "group":
                                e = this.getGroupConfig();
                                break;
                            case "page":
                                e = this.getPageConfig();
                        }
                        this.writeFunc && this.writeFunc(this.id, t, e);
                    }
                    validateSorters(t) {
                        return (
                            t.forEach(function (t) {
                                (t.column = t.field), delete t.field;
                            }),
                            t
                        );
                    }
                    getGroupConfig() {
                        var t = {};
                        return (
                            this.config.group &&
                                ((!0 === this.config.group || this.config.group.groupBy) && (t.groupBy = this.table.options.groupBy),
                                (!0 === this.config.group || this.config.group.groupStartOpen) && (t.groupStartOpen = this.table.options.groupStartOpen),
                                (!0 === this.config.group || this.config.group.groupHeader) && (t.groupHeader = this.table.options.groupHeader)),
                            t
                        );
                    }
                    getPageConfig() {
                        var t = {};
                        return (
                            this.config.page &&
                                ((!0 === this.config.page || this.config.page.size) && (t.paginationSize = this.table.modules.page.getPageSize()),
                                (!0 === this.config.page || this.config.page.page) && (t.paginationInitialPage = this.table.modules.page.getPage())),
                            t
                        );
                    }
                    parseColumns(t) {
                        var e = [],
                            i = ["headerContextMenu", "headerMenu", "contextMenu", "clickMenu"];
                        return (
                            t.forEach((t) => {
                                var r,
                                    s = {},
                                    a = t.getDefinition();
                                t.isGroup
                                    ? ((s.title = a.title), (s.columns = this.parseColumns(t.getColumns())))
                                    : ((s.field = t.getField()),
                                      !0 === this.config.columns || null == this.config.columns ? ((r = Object.keys(a)).push("width"), r.push("visible")) : (r = this.config.columns),
                                      r.forEach((e) => {
                                          switch (e) {
                                              case "width":
                                                  s.width = t.getWidth();
                                                  break;
                                              case "visible":
                                                  s.visible = t.visible;
                                                  break;
                                              default:
                                                  "function" != typeof a[e] && -1 === i.indexOf(e) && (s[e] = a[e]);
                                          }
                                      })),
                                    e.push(s);
                            }),
                            e
                        );
                    }
                }
                (ot.moduleName = "persistence"), (ot.moduleInitOrder = -10), (ot.readers = at), (ot.writers = nt);
                class lt extends h {
                    constructor(t) {
                        super(t),
                            (this.columnSubscribers = {}),
                            this.registerTableOption("rowContextPopup", !1),
                            this.registerTableOption("rowClickPopup", !1),
                            this.registerTableOption("rowDblClickPopup", !1),
                            this.registerTableOption("groupContextPopup", !1),
                            this.registerTableOption("groupClickPopup", !1),
                            this.registerTableOption("groupDblClickPopup", !1),
                            this.registerColumnOption("headerContextPopup"),
                            this.registerColumnOption("headerClickPopup"),
                            this.registerColumnOption("headerDblClickPopup"),
                            this.registerColumnOption("headerPopup"),
                            this.registerColumnOption("headerPopupIcon"),
                            this.registerColumnOption("contextPopup"),
                            this.registerColumnOption("clickPopup"),
                            this.registerColumnOption("dblClickPopup"),
                            this.registerComponentFunction("cell", "popup", this._componentPopupCall.bind(this)),
                            this.registerComponentFunction("column", "popup", this._componentPopupCall.bind(this)),
                            this.registerComponentFunction("row", "popup", this._componentPopupCall.bind(this)),
                            this.registerComponentFunction("group", "popup", this._componentPopupCall.bind(this));
                    }
                    initialize() {
                        this.initializeRowWatchers(), this.initializeGroupWatchers(), this.subscribe("column-init", this.initializeColumn.bind(this));
                    }
                    _componentPopupCall(t, e, i) {
                        this.loadPopupEvent(e, null, t, i);
                    }
                    initializeRowWatchers() {
                        this.table.options.rowContextPopup &&
                            (this.subscribe("row-contextmenu", this.loadPopupEvent.bind(this, this.table.options.rowContextPopup)), this.table.on("rowTapHold", this.loadPopupEvent.bind(this, this.table.options.rowContextPopup))),
                            this.table.options.rowClickPopup && this.subscribe("row-click", this.loadPopupEvent.bind(this, this.table.options.rowClickPopup)),
                            this.table.options.rowDblClickPopup && this.subscribe("row-dblclick", this.loadPopupEvent.bind(this, this.table.options.rowDblClickPopup));
                    }
                    initializeGroupWatchers() {
                        this.table.options.groupContextPopup &&
                            (this.subscribe("group-contextmenu", this.loadPopupEvent.bind(this, this.table.options.groupContextPopup)), this.table.on("groupTapHold", this.loadPopupEvent.bind(this, this.table.options.groupContextPopup))),
                            this.table.options.groupClickPopup && this.subscribe("group-click", this.loadPopupEvent.bind(this, this.table.options.groupClickPopup)),
                            this.table.options.groupDblClickPopup && this.subscribe("group-dblclick", this.loadPopupEvent.bind(this, this.table.options.groupDblClickPopup));
                    }
                    initializeColumn(t) {
                        var e = t.definition;
                        e.headerContextPopup &&
                            !this.columnSubscribers.headerContextPopup &&
                            ((this.columnSubscribers.headerContextPopup = this.loadPopupTableColumnEvent.bind(this, "headerContextPopup")),
                            this.subscribe("column-contextmenu", this.columnSubscribers.headerContextPopup),
                            this.table.on("headerTapHold", this.loadPopupTableColumnEvent.bind(this, "headerContextPopup"))),
                            e.headerClickPopup &&
                                !this.columnSubscribers.headerClickPopup &&
                                ((this.columnSubscribers.headerClickPopup = this.loadPopupTableColumnEvent.bind(this, "headerClickPopup")), this.subscribe("column-click", this.columnSubscribers.headerClickPopup)),
                            e.headerDblClickPopup &&
                                !this.columnSubscribers.headerDblClickPopup &&
                                ((this.columnSubscribers.headerDblClickPopup = this.loadPopupTableColumnEvent.bind(this, "headerDblClickPopup")), this.subscribe("column-dblclick", this.columnSubscribers.headerDblClickPopup)),
                            e.headerPopup && this.initializeColumnHeaderPopup(t),
                            e.contextPopup &&
                                !this.columnSubscribers.contextPopup &&
                                ((this.columnSubscribers.contextPopup = this.loadPopupTableCellEvent.bind(this, "contextPopup")),
                                this.subscribe("cell-contextmenu", this.columnSubscribers.contextPopup),
                                this.table.on("cellTapHold", this.loadPopupTableCellEvent.bind(this, "contextPopup"))),
                            e.clickPopup &&
                                !this.columnSubscribers.clickPopup &&
                                ((this.columnSubscribers.clickPopup = this.loadPopupTableCellEvent.bind(this, "clickPopup")), this.subscribe("cell-click", this.columnSubscribers.clickPopup)),
                            e.dblClickPopup &&
                                !this.columnSubscribers.dblClickPopup &&
                                ((this.columnSubscribers.dblClickPopup = this.loadPopupTableCellEvent.bind(this, "dblClickPopup")), this.subscribe("cell-click", this.columnSubscribers.dblClickPopup));
                    }
                    initializeColumnHeaderPopup(t) {
                        var e,
                            i = t.definition.headerPopupIcon;
                        (e = document.createElement("span")).classList.add("tabulator-header-popup-button"),
                            i ? ("function" == typeof i && (i = i(t.getComponent())), i instanceof HTMLElement ? e.appendChild(i) : (e.innerHTML = i)) : (e.innerHTML = "&vellip;"),
                            e.addEventListener("click", (e) => {
                                e.stopPropagation(), e.preventDefault(), this.loadPopupEvent(t.definition.headerPopup, e, t);
                            }),
                            t.titleElement.insertBefore(e, t.titleElement.firstChild);
                    }
                    loadPopupTableCellEvent(t, e, i) {
                        i._cell && (i = i._cell), i.column.definition[t] && this.loadPopupEvent(i.column.definition[t], e, i);
                    }
                    loadPopupTableColumnEvent(t, e, i) {
                        i._column && (i = i._column), i.definition[t] && this.loadPopupEvent(i.definition[t], e, i);
                    }
                    loadPopupEvent(t, e, i, r) {
                        var s;
                        i._group ? (i = i._group) : i._row && (i = i._row),
                            (t =
                                "function" == typeof t
                                    ? t.call(this.table, e, i.getComponent(), function (t) {
                                          s = t;
                                      })
                                    : t),
                            this.loadPopup(e, i, t, s, r);
                    }
                    loadPopup(t, e, i, r, s) {
                        var a,
                            n,
                            o = !(t instanceof MouseEvent);
                        i instanceof HTMLElement ? (a = i) : ((a = document.createElement("div")).innerHTML = i),
                            a.classList.add("tabulator-popup"),
                            a.addEventListener("click", (t) => {
                                t.stopPropagation();
                            }),
                            o || t.preventDefault(),
                            (n = this.popup(a)),
                            "function" == typeof r && n.renderCallback(r),
                            t ? n.show(t) : n.show(e.getElement(), s || "center"),
                            n.hideOnBlur(() => {
                                this.dispatchExternal("popupClosed", e.getComponent());
                            }),
                            this.dispatchExternal("popupOpened", e.getComponent());
                    }
                }
                lt.moduleName = "popup";
                class ht extends h {
                    constructor(t) {
                        super(t),
                            (this.element = !1),
                            (this.manualBlock = !1),
                            (this.beforeprintEventHandler = null),
                            (this.afterprintEventHandler = null),
                            this.registerTableOption("printAsHtml", !1),
                            this.registerTableOption("printFormatter", !1),
                            this.registerTableOption("printHeader", !1),
                            this.registerTableOption("printFooter", !1),
                            this.registerTableOption("printStyled", !0),
                            this.registerTableOption("printRowRange", "visible"),
                            this.registerTableOption("printConfig", {}),
                            this.registerColumnOption("print"),
                            this.registerColumnOption("titlePrint");
                    }
                    initialize() {
                        this.table.options.printAsHtml &&
                            ((this.beforeprintEventHandler = this.replaceTable.bind(this)),
                            (this.afterprintEventHandler = this.cleanup.bind(this)),
                            window.addEventListener("beforeprint", this.beforeprintEventHandler),
                            window.addEventListener("afterprint", this.afterprintEventHandler),
                            this.subscribe("table-destroy", this.destroy.bind(this))),
                            this.registerTableFunction("print", this.printFullscreen.bind(this));
                    }
                    destroy() {
                        this.table.options.printAsHtml && (window.removeEventListener("beforeprint", this.beforeprintEventHandler), window.removeEventListener("afterprint", this.afterprintEventHandler));
                    }
                    replaceTable() {
                        this.manualBlock ||
                            ((this.element = document.createElement("div")),
                            this.element.classList.add("tabulator-print-table"),
                            this.element.appendChild(this.table.modules.export.generateTable(this.table.options.printConfig, this.table.options.printStyled, this.table.options.printRowRange, "print")),
                            (this.table.element.style.display = "none"),
                            this.table.element.parentNode.insertBefore(this.element, this.table.element));
                    }
                    cleanup() {
                        document.body.classList.remove("tabulator-print-fullscreen-hide"), this.element && this.element.parentNode && (this.element.parentNode.removeChild(this.element), (this.table.element.style.display = ""));
                    }
                    printFullscreen(t, e, i) {
                        var r,
                            s,
                            a = window.scrollX,
                            n = window.scrollY,
                            o = document.createElement("div"),
                            l = document.createElement("div"),
                            h = this.table.modules.export.generateTable(void 0 !== i ? i : this.table.options.printConfig, void 0 !== e ? e : this.table.options.printStyled, t || this.table.options.printRowRange, "print");
                        (this.manualBlock = !0),
                            (this.element = document.createElement("div")),
                            this.element.classList.add("tabulator-print-fullscreen"),
                            this.table.options.printHeader &&
                                (o.classList.add("tabulator-print-header"),
                                "string" == typeof (r = "function" == typeof this.table.options.printHeader ? this.table.options.printHeader.call(this.table) : this.table.options.printHeader) ? (o.innerHTML = r) : o.appendChild(r),
                                this.element.appendChild(o)),
                            this.element.appendChild(h),
                            this.table.options.printFooter &&
                                (l.classList.add("tabulator-print-footer"),
                                "string" == typeof (s = "function" == typeof this.table.options.printFooter ? this.table.options.printFooter.call(this.table) : this.table.options.printFooter) ? (l.innerHTML = s) : l.appendChild(s),
                                this.element.appendChild(l)),
                            document.body.classList.add("tabulator-print-fullscreen-hide"),
                            document.body.appendChild(this.element),
                            this.table.options.printFormatter && this.table.options.printFormatter(this.element, h),
                            window.print(),
                            this.cleanup(),
                            window.scrollTo(a, n),
                            (this.manualBlock = !1);
                    }
                }
                ht.moduleName = "print";
                class ct extends h {
                    constructor(t) {
                        super(t), (this.data = !1), (this.blocked = !1), (this.origFuncs = {}), (this.currentVersion = 0), this.registerTableOption("reactiveData", !1);
                    }
                    initialize() {
                        this.table.options.reactiveData &&
                            (this.subscribe("cell-value-save-before", this.block.bind(this, "cellsave")),
                            this.subscribe("cell-value-save-after", this.unblock.bind(this, "cellsave")),
                            this.subscribe("row-data-save-before", this.block.bind(this, "rowsave")),
                            this.subscribe("row-data-save-after", this.unblock.bind(this, "rowsave")),
                            this.subscribe("row-data-init-after", this.watchRow.bind(this)),
                            this.subscribe("data-processing", this.watchData.bind(this)),
                            this.subscribe("table-destroy", this.unwatchData.bind(this)));
                    }
                    watchData(t) {
                        var e,
                            i = this;
                        this.currentVersion++,
                            (e = this.currentVersion),
                            this.unwatchData(),
                            (this.data = t),
                            (this.origFuncs.push = t.push),
                            Object.defineProperty(this.data, "push", {
                                enumerable: !1,
                                configurable: !0,
                                value: function () {
                                    var r,
                                        s = Array.from(arguments);
                                    return (
                                        i.blocked ||
                                            e !== i.currentVersion ||
                                            (i.block("data-push"),
                                            s.forEach((t) => {
                                                i.table.rowManager.addRowActual(t, !1);
                                            }),
                                            (r = i.origFuncs.push.apply(t, arguments)),
                                            i.unblock("data-push")),
                                        r
                                    );
                                },
                            }),
                            (this.origFuncs.unshift = t.unshift),
                            Object.defineProperty(this.data, "unshift", {
                                enumerable: !1,
                                configurable: !0,
                                value: function () {
                                    var r,
                                        s = Array.from(arguments);
                                    return (
                                        i.blocked ||
                                            e !== i.currentVersion ||
                                            (i.block("data-unshift"),
                                            s.forEach((t) => {
                                                i.table.rowManager.addRowActual(t, !0);
                                            }),
                                            (r = i.origFuncs.unshift.apply(t, arguments)),
                                            i.unblock("data-unshift")),
                                        r
                                    );
                                },
                            }),
                            (this.origFuncs.shift = t.shift),
                            Object.defineProperty(this.data, "shift", {
                                enumerable: !1,
                                configurable: !0,
                                value: function () {
                                    var r, s;
                                    return (
                                        i.blocked ||
                                            e !== i.currentVersion ||
                                            (i.block("data-shift"), i.data.length && (r = i.table.rowManager.getRowFromDataObject(i.data[0])) && r.deleteActual(), (s = i.origFuncs.shift.call(t)), i.unblock("data-shift")),
                                        s
                                    );
                                },
                            }),
                            (this.origFuncs.pop = t.pop),
                            Object.defineProperty(this.data, "pop", {
                                enumerable: !1,
                                configurable: !0,
                                value: function () {
                                    var r, s;
                                    return (
                                        i.blocked ||
                                            e !== i.currentVersion ||
                                            (i.block("data-pop"), i.data.length && (r = i.table.rowManager.getRowFromDataObject(i.data[i.data.length - 1])) && r.deleteActual(), (s = i.origFuncs.pop.call(t)), i.unblock("data-pop")),
                                        s
                                    );
                                },
                            }),
                            (this.origFuncs.splice = t.splice),
                            Object.defineProperty(this.data, "splice", {
                                enumerable: !1,
                                configurable: !0,
                                value: function () {
                                    var r,
                                        s,
                                        a = Array.from(arguments),
                                        n = a[0] < 0 ? t.length + a[0] : a[0],
                                        o = a[1],
                                        l = !!a[2] && a.slice(2);
                                    if (!i.blocked && e === i.currentVersion) {
                                        if (
                                            (i.block("data-splice"),
                                            l &&
                                                ((r = !!t[n] && i.table.rowManager.getRowFromDataObject(t[n]))
                                                    ? l.forEach((t) => {
                                                          i.table.rowManager.addRowActual(t, !0, r, !0);
                                                      })
                                                    : (l = l.slice().reverse()).forEach((t) => {
                                                          i.table.rowManager.addRowActual(t, !0, !1, !0);
                                                      })),
                                            0 !== o)
                                        ) {
                                            var h = t.slice(n, void 0 === a[1] ? a[1] : n + o);
                                            h.forEach((t, e) => {
                                                var r = i.table.rowManager.getRowFromDataObject(t);
                                                r && r.deleteActual(e !== h.length - 1);
                                            });
                                        }
                                        (l || 0 !== o) && i.table.rowManager.reRenderInPosition(), (s = i.origFuncs.splice.apply(t, arguments)), i.unblock("data-splice");
                                    }
                                    return s;
                                },
                            });
                    }
                    unwatchData() {
                        if (!1 !== this.data) for (var t in this.origFuncs) Object.defineProperty(this.data, t, { enumerable: !0, configurable: !0, writable: !0, value: this.origFuncs.key });
                    }
                    watchRow(t) {
                        var e = t.getData();
                        for (var i in e) this.watchKey(t, e, i);
                        this.table.options.dataTree && this.watchTreeChildren(t);
                    }
                    watchTreeChildren(t) {
                        var e = this,
                            i = t.getData()[this.table.options.dataTreeChildField],
                            r = {};
                        i &&
                            ((r.push = i.push),
                            Object.defineProperty(i, "push", {
                                enumerable: !1,
                                configurable: !0,
                                value: () => {
                                    if (!e.blocked) {
                                        e.block("tree-push");
                                        var s = r.push.apply(i, arguments);
                                        this.rebuildTree(t), e.unblock("tree-push");
                                    }
                                    return s;
                                },
                            }),
                            (r.unshift = i.unshift),
                            Object.defineProperty(i, "unshift", {
                                enumerable: !1,
                                configurable: !0,
                                value: () => {
                                    if (!e.blocked) {
                                        e.block("tree-unshift");
                                        var s = r.unshift.apply(i, arguments);
                                        this.rebuildTree(t), e.unblock("tree-unshift");
                                    }
                                    return s;
                                },
                            }),
                            (r.shift = i.shift),
                            Object.defineProperty(i, "shift", {
                                enumerable: !1,
                                configurable: !0,
                                value: () => {
                                    if (!e.blocked) {
                                        e.block("tree-shift");
                                        var s = r.shift.call(i);
                                        this.rebuildTree(t), e.unblock("tree-shift");
                                    }
                                    return s;
                                },
                            }),
                            (r.pop = i.pop),
                            Object.defineProperty(i, "pop", {
                                enumerable: !1,
                                configurable: !0,
                                value: () => {
                                    if (!e.blocked) {
                                        e.block("tree-pop");
                                        var s = r.pop.call(i);
                                        this.rebuildTree(t), e.unblock("tree-pop");
                                    }
                                    return s;
                                },
                            }),
                            (r.splice = i.splice),
                            Object.defineProperty(i, "splice", {
                                enumerable: !1,
                                configurable: !0,
                                value: () => {
                                    if (!e.blocked) {
                                        e.block("tree-splice");
                                        var s = r.splice.apply(i, arguments);
                                        this.rebuildTree(t), e.unblock("tree-splice");
                                    }
                                    return s;
                                },
                            }));
                    }
                    rebuildTree(t) {
                        this.table.modules.dataTree.initializeRow(t), this.table.modules.dataTree.layoutRow(t), this.table.rowManager.refreshActiveData("tree", !1, !0);
                    }
                    watchKey(t, e, i) {
                        var r = this,
                            s = Object.getOwnPropertyDescriptor(e, i),
                            a = e[i],
                            n = this.currentVersion;
                        Object.defineProperty(e, i, {
                            set: (e) => {
                                if (((a = e), !r.blocked && n === r.currentVersion)) {
                                    r.block("key");
                                    var o = {};
                                    (o[i] = e), t.updateData(o), r.unblock("key");
                                }
                                s.set && s.set(e);
                            },
                            get: () => (s.get && s.get(), a),
                        });
                    }
                    unwatchRow(t) {
                        var e = t.getData();
                        for (var i in e) Object.defineProperty(e, i, { value: e[i] });
                    }
                    block(t) {
                        this.blocked || (this.blocked = t);
                    }
                    unblock(t) {
                        this.blocked === t && (this.blocked = !1);
                    }
                }
                ct.moduleName = "reactiveData";
                class dt extends h {
                    constructor(t) {
                        super(t),
                            (this.startColumn = !1),
                            (this.startX = !1),
                            (this.startWidth = !1),
                            (this.latestX = !1),
                            (this.handle = null),
                            (this.initialNextColumn = null),
                            (this.nextColumn = null),
                            (this.initialized = !1),
                            this.registerColumnOption("resizable", !0),
                            this.registerTableOption("resizableColumnFit", !1);
                    }
                    initialize() {
                        this.subscribe("column-rendered", this.layoutColumnHeader.bind(this));
                    }
                    initializeEventWatchers() {
                        this.initialized ||
                            (this.subscribe("cell-rendered", this.layoutCellHandles.bind(this)),
                            this.subscribe("cell-delete", this.deInitializeComponent.bind(this)),
                            this.subscribe("cell-height", this.resizeHandle.bind(this)),
                            this.subscribe("column-moved", this.columnLayoutUpdated.bind(this)),
                            this.subscribe("column-hide", this.deInitializeColumn.bind(this)),
                            this.subscribe("column-show", this.columnLayoutUpdated.bind(this)),
                            this.subscribe("column-width", this.columnWidthUpdated.bind(this)),
                            this.subscribe("column-delete", this.deInitializeComponent.bind(this)),
                            this.subscribe("column-height", this.resizeHandle.bind(this)),
                            (this.initialized = !0));
                    }
                    layoutCellHandles(t) {
                        "row" === t.row.type && (this.deInitializeComponent(t), this.initializeColumn("cell", t, t.column, t.element));
                    }
                    layoutColumnHeader(t) {
                        t.definition.resizable && (this.initializeEventWatchers(), this.deInitializeComponent(t), this.initializeColumn("header", t, t, t.element));
                    }
                    columnLayoutUpdated(t) {
                        var e = t.prevColumn();
                        this.reinitializeColumn(t), e && this.reinitializeColumn(e);
                    }
                    columnWidthUpdated(t) {
                        t.modules.frozen &&
                            (this.table.modules.frozenColumns.leftColumns.includes(t)
                                ? this.table.modules.frozenColumns.leftColumns.forEach((t) => {
                                      this.reinitializeColumn(t);
                                  })
                                : this.table.modules.frozenColumns.rightColumns.includes(t) &&
                                  this.table.modules.frozenColumns.rightColumns.forEach((t) => {
                                      this.reinitializeColumn(t);
                                  }));
                    }
                    frozenColumnOffset(t) {
                        var e = !1;
                        return t.modules.frozen && ((e = t.modules.frozen.marginValue), "left" === t.modules.frozen.position ? (e += t.getWidth() - 3) : e && (e -= 3)), !1 !== e && e + "px";
                    }
                    reinitializeColumn(t) {
                        var e = this.frozenColumnOffset(t);
                        t.cells.forEach((i) => {
                            i.modules.resize && i.modules.resize.handleEl && (e && (i.modules.resize.handleEl.style[t.modules.frozen.position] = e), i.element.after(i.modules.resize.handleEl));
                        }),
                            t.modules.resize && t.modules.resize.handleEl && (e && (t.modules.resize.handleEl.style[t.modules.frozen.position] = e), t.element.after(t.modules.resize.handleEl));
                    }
                    initializeColumn(t, e, i, r) {
                        var s = this,
                            a = i.definition.resizable,
                            n = {},
                            o = i.getLastColumn();
                        if (("header" === t && (n = { variableHeight: "textarea" == i.definition.formatter || i.definition.variableHeight }), (!0 === a || a == t) && this._checkResizability(o))) {
                            var l = document.createElement("span");
                            (l.className = "tabulator-col-resize-handle"),
                                l.addEventListener("click", function (t) {
                                    t.stopPropagation();
                                });
                            var h = function (t) {
                                (s.startColumn = i), (s.initialNextColumn = s.nextColumn = o.nextColumn()), s._mouseDown(t, o, l);
                            };
                            l.addEventListener("mousedown", h),
                                l.addEventListener("touchstart", h, { passive: !0 }),
                                l.addEventListener("dblclick", (t) => {
                                    var e = o.getWidth();
                                    t.stopPropagation(), o.reinitializeWidth(!0), e !== o.getWidth() && (s.dispatch("column-resized", o), s.table.externalEvents.dispatch("columnResized", o.getComponent()));
                                }),
                                i.modules.frozen && ((l.style.position = "sticky"), (l.style[i.modules.frozen.position] = this.frozenColumnOffset(i))),
                                (n.handleEl = l),
                                r.parentNode && i.visible && r.after(l);
                        }
                        e.modules.resize = n;
                    }
                    deInitializeColumn(t) {
                        this.deInitializeComponent(t),
                            t.cells.forEach((t) => {
                                this.deInitializeComponent(t);
                            });
                    }
                    deInitializeComponent(t) {
                        var e;
                        t.modules.resize && (e = t.modules.resize.handleEl) && e.parentElement && e.parentElement.removeChild(e);
                    }
                    resizeHandle(t, e) {
                        t.modules.resize && t.modules.resize.handleEl && (t.modules.resize.handleEl.style.height = e);
                    }
                    _checkResizability(t) {
                        return t.definition.resizable;
                    }
                    _mouseDown(t, e, i) {
                        var r = this;
                        function s(t) {
                            var i,
                                s,
                                a = void 0 === t.screenX ? t.touches[0].screenX : t.screenX,
                                n = a - r.startX,
                                o = a - r.latestX;
                            if (
                                ((r.latestX = a),
                                r.table.rtl && ((n = -n), (o = -o)),
                                (i = e.width == e.minWidth || e.width == e.maxWidth),
                                e.setWidth(r.startWidth + n),
                                (s = e.width == e.minWidth || e.width == e.maxWidth),
                                o < 0 && (r.nextColumn = r.initialNextColumn),
                                r.table.options.resizableColumnFit && r.nextColumn && (!i || !s))
                            ) {
                                var l = r.nextColumn.getWidth();
                                o > 0 && l <= r.nextColumn.minWidth && (r.nextColumn = r.nextColumn.nextColumn()), r.nextColumn && r.nextColumn.setWidth(r.nextColumn.getWidth() - o);
                            }
                            r.table.columnManager.rerenderColumns(!0), !r.table.browserSlow && e.modules.resize && e.modules.resize.variableHeight && e.checkCellHeights();
                        }
                        function a(t) {
                            r.startColumn.modules.edit && (r.startColumn.modules.edit.blocked = !1),
                                r.table.browserSlow && e.modules.resize && e.modules.resize.variableHeight && e.checkCellHeights(),
                                document.body.removeEventListener("mouseup", a),
                                document.body.removeEventListener("mousemove", s),
                                i.removeEventListener("touchmove", s),
                                i.removeEventListener("touchend", a),
                                r.table.element.classList.remove("tabulator-block-select"),
                                r.startWidth !== e.getWidth() && (r.table.columnManager.verticalAlignHeaders(), r.dispatch("column-resized", e), r.table.externalEvents.dispatch("columnResized", e.getComponent()));
                        }
                        r.table.element.classList.add("tabulator-block-select"),
                            t.stopPropagation(),
                            r.startColumn.modules.edit && (r.startColumn.modules.edit.blocked = !0),
                            (r.startX = void 0 === t.screenX ? t.touches[0].screenX : t.screenX),
                            (r.latestX = r.startX),
                            (r.startWidth = e.getWidth()),
                            document.body.addEventListener("mousemove", s),
                            document.body.addEventListener("mouseup", a),
                            i.addEventListener("touchmove", s, { passive: !0 }),
                            i.addEventListener("touchend", a);
                    }
                }
                dt.moduleName = "resizeColumns";
                class ut extends h {
                    constructor(t) {
                        super(t), (this.startColumn = !1), (this.startY = !1), (this.startHeight = !1), (this.handle = null), (this.prevHandle = null), this.registerTableOption("resizableRows", !1);
                    }
                    initialize() {
                        this.table.options.resizableRows && this.subscribe("row-layout-after", this.initializeRow.bind(this));
                    }
                    initializeRow(t) {
                        var e = this,
                            i = t.getElement(),
                            r = document.createElement("div");
                        r.className = "tabulator-row-resize-handle";
                        var s = document.createElement("div");
                        (s.className = "tabulator-row-resize-handle prev"),
                            r.addEventListener("click", function (t) {
                                t.stopPropagation();
                            });
                        var a = function (i) {
                            (e.startRow = t), e._mouseDown(i, t, r);
                        };
                        r.addEventListener("mousedown", a),
                            r.addEventListener("touchstart", a, { passive: !0 }),
                            s.addEventListener("click", function (t) {
                                t.stopPropagation();
                            });
                        var n = function (i) {
                            var r = e.table.rowManager.prevDisplayRow(t);
                            r && ((e.startRow = r), e._mouseDown(i, r, s));
                        };
                        s.addEventListener("mousedown", n), s.addEventListener("touchstart", n, { passive: !0 }), i.appendChild(r), i.appendChild(s);
                    }
                    _mouseDown(t, e, i) {
                        var r = this;
                        function s(t) {
                            e.setHeight(r.startHeight + ((void 0 === t.screenY ? t.touches[0].screenY : t.screenY) - r.startY));
                        }
                        function a(t) {
                            document.body.removeEventListener("mouseup", s),
                                document.body.removeEventListener("mousemove", s),
                                i.removeEventListener("touchmove", s),
                                i.removeEventListener("touchend", a),
                                r.table.element.classList.remove("tabulator-block-select"),
                                r.dispatchExternal("rowResized", e.getComponent());
                        }
                        r.table.element.classList.add("tabulator-block-select"),
                            t.stopPropagation(),
                            (r.startY = void 0 === t.screenY ? t.touches[0].screenY : t.screenY),
                            (r.startHeight = e.getHeight()),
                            document.body.addEventListener("mousemove", s),
                            document.body.addEventListener("mouseup", a),
                            i.addEventListener("touchmove", s, { passive: !0 }),
                            i.addEventListener("touchend", a);
                    }
                }
                ut.moduleName = "resizeRows";
                class pt extends h {
                    constructor(t) {
                        super(t),
                            (this.binding = !1),
                            (this.visibilityObserver = !1),
                            (this.resizeObserver = !1),
                            (this.containerObserver = !1),
                            (this.tableHeight = 0),
                            (this.tableWidth = 0),
                            (this.containerHeight = 0),
                            (this.containerWidth = 0),
                            (this.autoResize = !1),
                            (this.visible = !1),
                            (this.initialized = !1),
                            (this.initialRedraw = !1),
                            this.registerTableOption("autoResize", !0);
                    }
                    initialize() {
                        if (this.table.options.autoResize) {
                            var t,
                                e = this.table;
                            (this.tableHeight = e.element.clientHeight),
                                (this.tableWidth = e.element.clientWidth),
                                e.element.parentNode && ((this.containerHeight = e.element.parentNode.clientHeight), (this.containerWidth = e.element.parentNode.clientWidth)),
                                "undefined" != typeof IntersectionObserver && "undefined" != typeof ResizeObserver && "virtual" === e.rowManager.getRenderMode()
                                    ? (this.initializeVisibilityObserver(),
                                      (this.autoResize = !0),
                                      (this.resizeObserver = new ResizeObserver((t) => {
                                          if (!e.browserMobile || (e.browserMobile && !e.modules.edit.currentCell)) {
                                              var i = Math.floor(t[0].contentRect.height),
                                                  r = Math.floor(t[0].contentRect.width);
                                              (this.tableHeight == i && this.tableWidth == r) ||
                                                  ((this.tableHeight = i),
                                                  (this.tableWidth = r),
                                                  e.element.parentNode && ((this.containerHeight = e.element.parentNode.clientHeight), (this.containerWidth = e.element.parentNode.clientWidth)),
                                                  this.redrawTable());
                                          }
                                      })),
                                      this.resizeObserver.observe(e.element),
                                      (t = window.getComputedStyle(e.element)),
                                      this.table.element.parentNode &&
                                          !this.table.rowManager.fixedHeight &&
                                          (t.getPropertyValue("max-height") || t.getPropertyValue("min-height")) &&
                                          ((this.containerObserver = new ResizeObserver((t) => {
                                              if (!e.browserMobile || (e.browserMobile && !e.modules.edit.currentCell)) {
                                                  var i = Math.floor(t[0].contentRect.height),
                                                      r = Math.floor(t[0].contentRect.width);
                                                  (this.containerHeight == i && this.containerWidth == r) ||
                                                      ((this.containerHeight = i), (this.containerWidth = r), (this.tableHeight = e.element.clientHeight), (this.tableWidth = e.element.clientWidth)),
                                                      this.redrawTable();
                                              }
                                          })),
                                          this.containerObserver.observe(this.table.element.parentNode)),
                                      this.subscribe("table-resize", this.tableResized.bind(this)))
                                    : ((this.binding = function () {
                                          (!e.browserMobile || (e.browserMobile && !e.modules.edit.currentCell)) && (e.columnManager.rerenderColumns(!0), e.redraw());
                                      }),
                                      window.addEventListener("resize", this.binding)),
                                this.subscribe("table-destroy", this.clearBindings.bind(this));
                        }
                    }
                    initializeVisibilityObserver() {
                        (this.visibilityObserver = new IntersectionObserver((t) => {
                            (this.visible = t[0].isIntersecting), this.initialized ? this.visible && (this.redrawTable(this.initialRedraw), (this.initialRedraw = !1)) : ((this.initialized = !0), (this.initialRedraw = !this.visible));
                        })),
                            this.visibilityObserver.observe(this.table.element);
                    }
                    redrawTable(t) {
                        this.initialized && this.visible && (this.table.columnManager.rerenderColumns(!0), this.table.redraw(t));
                    }
                    tableResized() {
                        this.table.rowManager.redraw();
                    }
                    clearBindings() {
                        this.binding && window.removeEventListener("resize", this.binding),
                            this.resizeObserver && this.resizeObserver.unobserve(this.table.element),
                            this.visibilityObserver && this.visibilityObserver.unobserve(this.table.element),
                            this.containerObserver && this.containerObserver.unobserve(this.table.element.parentNode);
                    }
                }
                pt.moduleName = "resizeTable";
                class mt extends h {
                    constructor(t) {
                        super(t),
                            (this.columns = []),
                            (this.hiddenColumns = []),
                            (this.mode = ""),
                            (this.index = 0),
                            (this.collapseFormatter = []),
                            (this.collapseStartOpen = !0),
                            (this.collapseHandleColumn = !1),
                            this.registerTableOption("responsiveLayout", !1),
                            this.registerTableOption("responsiveLayoutCollapseStartOpen", !0),
                            this.registerTableOption("responsiveLayoutCollapseUseFormatters", !0),
                            this.registerTableOption("responsiveLayoutCollapseFormatter", !1),
                            this.registerColumnOption("responsive");
                    }
                    initialize() {
                        this.table.options.responsiveLayout &&
                            (this.subscribe("column-layout", this.initializeColumn.bind(this)),
                            this.subscribe("column-show", this.updateColumnVisibility.bind(this)),
                            this.subscribe("column-hide", this.updateColumnVisibility.bind(this)),
                            this.subscribe("columns-loaded", this.initializeResponsivity.bind(this)),
                            this.subscribe("column-moved", this.initializeResponsivity.bind(this)),
                            this.subscribe("column-add", this.initializeResponsivity.bind(this)),
                            this.subscribe("column-delete", this.initializeResponsivity.bind(this)),
                            this.subscribe("table-redrawing", this.tableRedraw.bind(this)),
                            "collapse" === this.table.options.responsiveLayout &&
                                (this.subscribe("row-data-changed", this.generateCollapsedRowContent.bind(this)), this.subscribe("row-init", this.initializeRow.bind(this)), this.subscribe("row-layout", this.layoutRow.bind(this))));
                    }
                    tableRedraw(t) {
                        -1 === ["fitColumns", "fitDataStretch"].indexOf(this.layoutMode()) && (t || this.update());
                    }
                    initializeResponsivity() {
                        var t = [];
                        (this.mode = this.table.options.responsiveLayout),
                            (this.collapseFormatter = this.table.options.responsiveLayoutCollapseFormatter || this.formatCollapsedData),
                            (this.collapseStartOpen = this.table.options.responsiveLayoutCollapseStartOpen),
                            (this.hiddenColumns = []),
                            this.table.columnManager.columnsByIndex.forEach((e, i) => {
                                e.modules.responsive && e.modules.responsive.order && e.modules.responsive.visible && ((e.modules.responsive.index = i), t.push(e), e.visible || "collapse" !== this.mode || this.hiddenColumns.push(e));
                            }),
                            (t = (t = t.reverse()).sort((t, e) => e.modules.responsive.order - t.modules.responsive.order || e.modules.responsive.index - t.modules.responsive.index)),
                            (this.columns = t),
                            "collapse" === this.mode && this.generateCollapsedContent();
                        var e,
                            i = s(this.table.columnManager.columnsByIndex);
                        try {
                            for (i.s(); !(e = i.n()).done; ) {
                                var r = e.value;
                                if ("responsiveCollapse" == r.definition.formatter) {
                                    this.collapseHandleColumn = r;
                                    break;
                                }
                            }
                        } catch (t) {
                            i.e(t);
                        } finally {
                            i.f();
                        }
                        this.collapseHandleColumn && (this.hiddenColumns.length ? this.collapseHandleColumn.show() : this.collapseHandleColumn.hide());
                    }
                    initializeColumn(t) {
                        var e = t.getDefinition();
                        t.modules.responsive = { order: void 0 === e.responsive ? 1 : e.responsive, visible: !1 !== e.visible };
                    }
                    initializeRow(t) {
                        var e;
                        "calc" !== t.type &&
                            ((e = document.createElement("div")).classList.add("tabulator-responsive-collapse"),
                            (t.modules.responsiveLayout = { element: e, open: this.collapseStartOpen }),
                            this.collapseStartOpen || (e.style.display = "none"));
                    }
                    layoutRow(t) {
                        var e = t.getElement();
                        t.modules.responsiveLayout && (e.appendChild(t.modules.responsiveLayout.element), this.generateCollapsedRowContent(t));
                    }
                    updateColumnVisibility(t, e) {
                        !e && t.modules.responsive && ((t.modules.responsive.visible = t.visible), this.initializeResponsivity());
                    }
                    hideColumn(t) {
                        var e = this.hiddenColumns.length;
                        t.hide(!1, !0), "collapse" === this.mode && (this.hiddenColumns.unshift(t), this.generateCollapsedContent(), this.collapseHandleColumn && !e && this.collapseHandleColumn.show());
                    }
                    showColumn(t) {
                        var e;
                        t.show(!1, !0),
                            t.setWidth(t.getWidth()),
                            "collapse" === this.mode &&
                                ((e = this.hiddenColumns.indexOf(t)) > -1 && this.hiddenColumns.splice(e, 1), this.generateCollapsedContent(), this.collapseHandleColumn && !this.hiddenColumns.length && this.collapseHandleColumn.hide());
                    }
                    update() {
                        for (var t = !0; t; ) {
                            var e = "fitColumns" == this.table.modules.layout.getMode() ? this.table.columnManager.getFlexBaseWidth() : this.table.columnManager.getWidth(),
                                i = (this.table.options.headerVisible ? this.table.columnManager.element.clientWidth : this.table.element.clientWidth) - e;
                            if (i < 0) {
                                var r = this.columns[this.index];
                                r ? (this.hideColumn(r), this.index++) : (t = !1);
                            } else {
                                var s = this.columns[this.index - 1];
                                s && i > 0 && i >= s.getWidth() ? (this.showColumn(s), this.index--) : (t = !1);
                            }
                            this.table.rowManager.activeRowsCount || this.table.rowManager.renderEmptyScroll();
                        }
                    }
                    generateCollapsedContent() {
                        this.table.rowManager.getDisplayRows().forEach((t) => {
                            this.generateCollapsedRowContent(t);
                        });
                    }
                    generateCollapsedRowContent(t) {
                        var e, i;
                        if (t.modules.responsiveLayout) {
                            for (e = t.modules.responsiveLayout.element; e.firstChild; ) e.removeChild(e.firstChild);
                            (i = this.collapseFormatter(this.generateCollapsedRowData(t))) && e.appendChild(i);
                        }
                    }
                    generateCollapsedRowData(t) {
                        var e,
                            i = t.getData(),
                            r = [];
                        return (
                            this.hiddenColumns.forEach((s) => {
                                var a = s.getFieldValue(i);
                                if (s.definition.title && s.field)
                                    if (s.modules.format && this.table.options.responsiveLayoutCollapseUseFormatters) {
                                        function n(t) {
                                            t();
                                        }
                                        (e = {
                                            value: !1,
                                            data: {},
                                            getValue: function () {
                                                return a;
                                            },
                                            getData: function () {
                                                return i;
                                            },
                                            getType: function () {
                                                return "cell";
                                            },
                                            getElement: function () {
                                                return document.createElement("div");
                                            },
                                            getRow: function () {
                                                return t.getComponent();
                                            },
                                            getColumn: function () {
                                                return s.getComponent();
                                            },
                                            getTable: () => this.table,
                                        }),
                                            r.push({ field: s.field, title: s.definition.title, value: s.modules.format.formatter.call(this.table.modules.format, e, s.modules.format.params, n) });
                                    } else r.push({ field: s.field, title: s.definition.title, value: a });
                            }),
                            r
                        );
                    }
                    formatCollapsedData(t) {
                        var e = document.createElement("table");
                        return (
                            t.forEach(function (t) {
                                var i,
                                    r = document.createElement("tr"),
                                    s = document.createElement("td"),
                                    a = document.createElement("td"),
                                    n = document.createElement("strong");
                                s.appendChild(n),
                                    this.langBind("columns|" + t.field, function (e) {
                                        n.innerHTML = e || t.title;
                                    }),
                                    t.value instanceof Node ? ((i = document.createElement("div")).appendChild(t.value), a.appendChild(i)) : (a.innerHTML = t.value),
                                    r.appendChild(s),
                                    r.appendChild(a),
                                    e.appendChild(r);
                            }, this),
                            Object.keys(t).length ? e : ""
                        );
                    }
                }
                mt.moduleName = "responsiveLayout";
                class ft extends h {
                    constructor(t) {
                        super(t),
                            (this.selecting = !1),
                            (this.lastClickedRow = !1),
                            (this.selectPrev = []),
                            (this.selectedRows = []),
                            (this.headerCheckboxElement = null),
                            this.registerTableOption("selectable", "highlight"),
                            this.registerTableOption("selectableRangeMode", "drag"),
                            this.registerTableOption("selectableRollingSelection", !0),
                            this.registerTableOption("selectablePersistence", !0),
                            this.registerTableOption("selectableCheck", function (t, e) {
                                return !0;
                            }),
                            this.registerTableFunction("selectRow", this.selectRows.bind(this)),
                            this.registerTableFunction("deselectRow", this.deselectRows.bind(this)),
                            this.registerTableFunction("toggleSelectRow", this.toggleRow.bind(this)),
                            this.registerTableFunction("getSelectedRows", this.getSelectedRows.bind(this)),
                            this.registerTableFunction("getSelectedData", this.getSelectedData.bind(this)),
                            this.registerComponentFunction("row", "select", this.selectRows.bind(this)),
                            this.registerComponentFunction("row", "deselect", this.deselectRows.bind(this)),
                            this.registerComponentFunction("row", "toggleSelect", this.toggleRow.bind(this)),
                            this.registerComponentFunction("row", "isSelected", this.isRowSelected.bind(this));
                    }
                    initialize() {
                        !1 !== this.table.options.selectable &&
                            (this.subscribe("row-init", this.initializeRow.bind(this)),
                            this.subscribe("row-deleting", this.rowDeleted.bind(this)),
                            this.subscribe("rows-wipe", this.clearSelectionData.bind(this)),
                            this.subscribe("rows-retrieve", this.rowRetrieve.bind(this)),
                            this.table.options.selectable && !this.table.options.selectablePersistence && this.subscribe("data-refreshing", this.deselectRows.bind(this)));
                    }
                    rowRetrieve(t, e) {
                        return "selected" === t ? this.selectedRows : e;
                    }
                    rowDeleted(t) {
                        this._deselectRow(t, !0);
                    }
                    clearSelectionData(t) {
                        var e = this.selectedRows.length;
                        (this.selecting = !1), (this.lastClickedRow = !1), (this.selectPrev = []), (this.selectedRows = []), e && !0 !== t && this._rowSelectionChanged();
                    }
                    initializeRow(t) {
                        var e = this,
                            i = t.getElement(),
                            r = function t() {
                                setTimeout(function () {
                                    e.selecting = !1;
                                }, 50),
                                    document.body.removeEventListener("mouseup", t);
                            };
                        (t.modules.select = { selected: !1 }),
                            e.checkRowSelectability(t)
                                ? (i.classList.add("tabulator-selectable"),
                                  i.classList.remove("tabulator-unselectable"),
                                  e.table.options.selectable &&
                                      "highlight" != e.table.options.selectable &&
                                      ("click" === e.table.options.selectableRangeMode
                                          ? i.addEventListener("click", this.handleComplexRowClick.bind(this, t))
                                          : (i.addEventListener("click", function (i) {
                                                (e.table.modExists("edit") && e.table.modules.edit.getCurrentCell()) || e.table._clearSelection(), e.selecting || e.toggleRow(t);
                                            }),
                                            i.addEventListener("mousedown", function (i) {
                                                if (i.shiftKey)
                                                    return e.table._clearSelection(), (e.selecting = !0), (e.selectPrev = []), document.body.addEventListener("mouseup", r), document.body.addEventListener("keyup", r), e.toggleRow(t), !1;
                                            }),
                                            i.addEventListener("mouseenter", function (i) {
                                                e.selecting && (e.table._clearSelection(), e.toggleRow(t), e.selectPrev[1] == t && e.toggleRow(e.selectPrev[0]));
                                            }),
                                            i.addEventListener("mouseout", function (i) {
                                                e.selecting && (e.table._clearSelection(), e.selectPrev.unshift(t));
                                            }))))
                                : (i.classList.add("tabulator-unselectable"), i.classList.remove("tabulator-selectable"));
                    }
                    handleComplexRowClick(t, e) {
                        if (e.shiftKey) {
                            this.table._clearSelection(), (this.lastClickedRow = this.lastClickedRow || t);
                            var i = this.table.rowManager.getDisplayRowIndex(this.lastClickedRow),
                                r = this.table.rowManager.getDisplayRowIndex(t),
                                s = i <= r ? i : r,
                                a = i >= r ? i : r,
                                n = this.table.rowManager
                                    .getDisplayRows()
                                    .slice(0)
                                    .splice(s, a - s + 1);
                            e.ctrlKey || e.metaKey
                                ? (n.forEach((e) => {
                                      e !== this.lastClickedRow && (!0 === this.table.options.selectable || this.isRowSelected(t) || this.selectedRows.length < this.table.options.selectable) && this.toggleRow(e);
                                  }),
                                  (this.lastClickedRow = t))
                                : (this.deselectRows(void 0, !0), !0 !== this.table.options.selectable && n.length > this.table.options.selectable && (n = n.slice(0, this.table.options.selectable)), this.selectRows(n)),
                                this.table._clearSelection();
                        } else e.ctrlKey || e.metaKey ? (this.toggleRow(t), (this.lastClickedRow = t)) : (this.deselectRows(void 0, !0), this.selectRows(t), (this.lastClickedRow = t));
                    }
                    checkRowSelectability(t) {
                        return !(!t || "row" !== t.type) && this.table.options.selectableCheck.call(this.table, t.getComponent());
                    }
                    toggleRow(t) {
                        this.checkRowSelectability(t) && (t.modules.select && t.modules.select.selected ? this._deselectRow(t) : this._selectRow(t));
                    }
                    selectRows(t) {
                        var e,
                            i,
                            r = [];
                        switch (typeof t) {
                            case "undefined":
                                e = this.table.rowManager.rows;
                                break;
                            case "string":
                                (e = this.table.rowManager.findRow(t)) || (e = this.table.rowManager.getRows(t));
                                break;
                            default:
                                e = t;
                        }
                        Array.isArray(e)
                            ? e.length &&
                              (e.forEach((t) => {
                                  (i = this._selectRow(t, !0, !0)) && r.push(i);
                              }),
                              this._rowSelectionChanged(!1, r))
                            : e && this._selectRow(e, !1, !0);
                    }
                    _selectRow(t, e, i) {
                        if (!isNaN(this.table.options.selectable) && !0 !== this.table.options.selectable && !i && this.selectedRows.length >= this.table.options.selectable) {
                            if (!this.table.options.selectableRollingSelection) return !1;
                            this._deselectRow(this.selectedRows[0]);
                        }
                        var r = this.table.rowManager.findRow(t);
                        if (r) {
                            if (-1 == this.selectedRows.indexOf(r))
                                return (
                                    r.getElement().classList.add("tabulator-selected"),
                                    r.modules.select || (r.modules.select = {}),
                                    (r.modules.select.selected = !0),
                                    r.modules.select.checkboxEl && (r.modules.select.checkboxEl.checked = !0),
                                    this.selectedRows.push(r),
                                    this.table.options.dataTreeSelectPropagate && this.childRowSelection(r, !0),
                                    this.dispatchExternal("rowSelected", r.getComponent()),
                                    this._rowSelectionChanged(e, r),
                                    r
                                );
                        } else e || console.warn("Selection Error - No such row found, ignoring selection:" + t);
                    }
                    isRowSelected(t) {
                        return -1 !== this.selectedRows.indexOf(t);
                    }
                    deselectRows(t, e) {
                        var i,
                            r,
                            s = [];
                        switch (typeof t) {
                            case "undefined":
                                i = Object.assign([], this.selectedRows);
                                break;
                            case "string":
                                (i = this.table.rowManager.findRow(t)) || (i = this.table.rowManager.getRows(t));
                                break;
                            default:
                                i = t;
                        }
                        Array.isArray(i)
                            ? i.length &&
                              (i.forEach((t) => {
                                  (r = this._deselectRow(t, !0, !0)) && s.push(r);
                              }),
                              this._rowSelectionChanged(e, [], s))
                            : i && this._deselectRow(i, e, !0);
                    }
                    _deselectRow(t, e) {
                        var i,
                            r,
                            s = this,
                            a = s.table.rowManager.findRow(t);
                        if (a) {
                            if (
                                (i = s.selectedRows.findIndex(function (t) {
                                    return t == a;
                                })) > -1
                            )
                                return (
                                    (r = a.getElement()) && r.classList.remove("tabulator-selected"),
                                    a.modules.select || (a.modules.select = {}),
                                    (a.modules.select.selected = !1),
                                    a.modules.select.checkboxEl && (a.modules.select.checkboxEl.checked = !1),
                                    s.selectedRows.splice(i, 1),
                                    this.table.options.dataTreeSelectPropagate && this.childRowSelection(a, !1),
                                    this.dispatchExternal("rowDeselected", a.getComponent()),
                                    s._rowSelectionChanged(e, void 0, a),
                                    a
                                );
                        } else e || console.warn("Deselection Error - No such row found, ignoring selection:" + t);
                    }
                    getSelectedData() {
                        var t = [];
                        return (
                            this.selectedRows.forEach(function (e) {
                                t.push(e.getData());
                            }),
                            t
                        );
                    }
                    getSelectedRows() {
                        var t = [];
                        return (
                            this.selectedRows.forEach(function (e) {
                                t.push(e.getComponent());
                            }),
                            t
                        );
                    }
                    _rowSelectionChanged(t, e = [], i = []) {
                        this.headerCheckboxElement &&
                            (0 === this.selectedRows.length
                                ? ((this.headerCheckboxElement.checked = !1), (this.headerCheckboxElement.indeterminate = !1))
                                : this.table.rowManager.rows.length === this.selectedRows.length
                                ? ((this.headerCheckboxElement.checked = !0), (this.headerCheckboxElement.indeterminate = !1))
                                : ((this.headerCheckboxElement.indeterminate = !0), (this.headerCheckboxElement.checked = !1))),
                            t ||
                                (Array.isArray(e) || (e = [e]),
                                (e = e.map((t) => t.getComponent())),
                                Array.isArray(i) || (i = [i]),
                                (i = i.map((t) => t.getComponent())),
                                this.dispatchExternal("rowSelectionChanged", this.getSelectedData(), this.getSelectedRows(), e, i));
                    }
                    registerRowSelectCheckbox(t, e) {
                        t._row.modules.select || (t._row.modules.select = {}), (t._row.modules.select.checkboxEl = e);
                    }
                    registerHeaderSelectCheckbox(t) {
                        this.headerCheckboxElement = t;
                    }
                    childRowSelection(t, e) {
                        var i = this.table.modules.dataTree.getChildren(t, !0);
                        if (e) {
                            var r,
                                a = s(i);
                            try {
                                for (a.s(); !(r = a.n()).done; ) {
                                    var n = r.value;
                                    this._selectRow(n, !0);
                                }
                            } catch (t) {
                                a.e(t);
                            } finally {
                                a.f();
                            }
                        } else {
                            var o,
                                l = s(i);
                            try {
                                for (l.s(); !(o = l.n()).done; ) {
                                    var h = o.value;
                                    this._deselectRow(h, !0);
                                }
                            } catch (t) {
                                l.e(t);
                            } finally {
                                l.f();
                            }
                        }
                    }
                }
                function gt(t, e, i, r, s, a, n) {
                    var o = window.DateTime || luxon.DateTime,
                        l = n.format || "dd/MM/yyyy HH:mm:ss",
                        h = n.alignEmptyValues,
                        c = 0;
                    if (void 0 !== o) {
                        if ((o.isDateTime(t) || (t = "iso" === l ? o.fromISO(String(t)) : o.fromFormat(String(t), l)), o.isDateTime(e) || (e = "iso" === l ? o.fromISO(String(e)) : o.fromFormat(String(e), l)), t.isValid)) {
                            if (e.isValid) return t - e;
                            c = 1;
                        } else c = e.isValid ? -1 : 0;
                        return (("top" === h && "desc" === a) || ("bottom" === h && "asc" === a)) && (c *= -1), c;
                    }
                    console.error("Sort Error - 'datetime' sorter is dependant on luxon.js");
                }
                ft.moduleName = "selectRow";
                var vt = {
                    number: function (t, e, i, r, s, a, n) {
                        var o = n.alignEmptyValues,
                            l = n.decimalSeparator,
                            h = n.thousandSeparator,
                            c = 0;
                        if (((t = String(t)), (e = String(e)), h && ((t = t.split(h).join("")), (e = e.split(h).join(""))), l && ((t = t.split(l).join(".")), (e = e.split(l).join("."))), (t = parseFloat(t)), (e = parseFloat(e)), isNaN(t)))
                            c = isNaN(e) ? 0 : -1;
                        else {
                            if (!isNaN(e)) return t - e;
                            c = 1;
                        }
                        return (("top" === o && "desc" === a) || ("bottom" === o && "asc" === a)) && (c *= -1), c;
                    },
                    string: function (t, e, i, r, s, a, n) {
                        var o,
                            l = n.alignEmptyValues,
                            h = 0;
                        if (t) {
                            if (e) {
                                switch (typeof n.locale) {
                                    case "boolean":
                                        n.locale && (o = this.langLocale());
                                        break;
                                    case "string":
                                        o = n.locale;
                                }
                                return String(t).toLowerCase().localeCompare(String(e).toLowerCase(), o);
                            }
                            h = 1;
                        } else h = e ? -1 : 0;
                        return (("top" === l && "desc" === a) || ("bottom" === l && "asc" === a)) && (h *= -1), h;
                    },
                    date: function (t, e, i, r, s, a, n) {
                        return n.format || (n.format = "dd/MM/yyyy"), gt.call(this, t, e, i, r, s, a, n);
                    },
                    time: function (t, e, i, r, s, a, n) {
                        return n.format || (n.format = "HH:mm"), gt.call(this, t, e, i, r, s, a, n);
                    },
                    datetime: gt,
                    boolean: function (t, e, i, r, s, a, n) {
                        return (!0 === t || "true" === t || "True" === t || 1 === t ? 1 : 0) - (!0 === e || "true" === e || "True" === e || 1 === e ? 1 : 0);
                    },
                    array: function (t, e, i, r, s, a, n) {
                        var o = n.type || "length",
                            l = n.alignEmptyValues,
                            h = 0;
                        function c(t) {
                            var e;
                            switch (o) {
                                case "length":
                                    e = t.length;
                                    break;
                                case "sum":
                                    e = t.reduce(function (t, e) {
                                        return t + e;
                                    });
                                    break;
                                case "max":
                                    e = Math.max.apply(null, t);
                                    break;
                                case "min":
                                    e = Math.min.apply(null, t);
                                    break;
                                case "avg":
                                    e =
                                        t.reduce(function (t, e) {
                                            return t + e;
                                        }) / t.length;
                            }
                            return e;
                        }
                        if (Array.isArray(t)) {
                            if (Array.isArray(e)) return c(e) - c(t);
                            h = 1;
                        } else h = Array.isArray(e) ? -1 : 0;
                        return (("top" === l && "desc" === a) || ("bottom" === l && "asc" === a)) && (h *= -1), h;
                    },
                    exists: function (t, e, i, r, s, a, n) {
                        return (void 0 === t ? 0 : 1) - (void 0 === e ? 0 : 1);
                    },
                    alphanum: function (t, e, i, r, s, a, n) {
                        var o,
                            l,
                            h,
                            c,
                            d,
                            u = 0,
                            p = /(\d+)|(\D+)/g,
                            m = /\d/,
                            f = n.alignEmptyValues,
                            g = 0;
                        if (t || 0 === t) {
                            if (e || 0 === e) {
                                if (isFinite(t) && isFinite(e)) return t - e;
                                if ((o = String(t).toLowerCase()) === (l = String(e).toLowerCase())) return 0;
                                if (!m.test(o) || !m.test(l)) return o > l ? 1 : -1;
                                for (o = o.match(p), l = l.match(p), d = o.length > l.length ? l.length : o.length; u < d; )
                                    if ((h = o[u]) !== (c = l[u++])) return isFinite(h) && isFinite(c) ? ("0" === h.charAt(0) && (h = "." + h), "0" === c.charAt(0) && (c = "." + c), h - c) : h > c ? 1 : -1;
                                return o.length > l.length;
                            }
                            g = 1;
                        } else g = e || 0 === e ? -1 : 0;
                        return (("top" === f && "desc" === a) || ("bottom" === f && "asc" === a)) && (g *= -1), g;
                    },
                };
                class bt extends h {
                    constructor(t) {
                        super(t),
                            (this.sortList = []),
                            (this.changed = !1),
                            this.registerTableOption("sortMode", "local"),
                            this.registerTableOption("initialSort", !1),
                            this.registerTableOption("columnHeaderSortMulti", !0),
                            this.registerTableOption("sortOrderReverse", !1),
                            this.registerTableOption("headerSortElement", "<div class='tabulator-arrow'></div>"),
                            this.registerTableOption("headerSortClickElement", "header"),
                            this.registerColumnOption("sorter"),
                            this.registerColumnOption("sorterParams"),
                            this.registerColumnOption("headerSort", !0),
                            this.registerColumnOption("headerSortStartingDir"),
                            this.registerColumnOption("headerSortTristate");
                    }
                    initialize() {
                        this.subscribe("column-layout", this.initializeColumn.bind(this)),
                            this.subscribe("table-built", this.tableBuilt.bind(this)),
                            this.registerDataHandler(this.sort.bind(this), 20),
                            this.registerTableFunction("setSort", this.userSetSort.bind(this)),
                            this.registerTableFunction("getSorters", this.getSort.bind(this)),
                            this.registerTableFunction("clearSort", this.clearSort.bind(this)),
                            "remote" === this.table.options.sortMode && this.subscribe("data-params", this.remoteSortParams.bind(this));
                    }
                    tableBuilt() {
                        this.table.options.initialSort && this.setSort(this.table.options.initialSort);
                    }
                    remoteSortParams(t, e, i, r) {
                        var s = this.getSort();
                        return (
                            s.forEach((t) => {
                                delete t.column;
                            }),
                            (r.sort = s),
                            r
                        );
                    }
                    userSetSort(t, e) {
                        this.setSort(t, e), this.refreshSort();
                    }
                    clearSort() {
                        this.clear(), this.refreshSort();
                    }
                    initializeColumn(t) {
                        var e,
                            i,
                            r = !1;
                        switch (typeof t.definition.sorter) {
                            case "string":
                                bt.sorters[t.definition.sorter] ? (r = bt.sorters[t.definition.sorter]) : console.warn("Sort Error - No such sorter found: ", t.definition.sorter);
                                break;
                            case "function":
                                r = t.definition.sorter;
                        }
                        if (
                            ((t.modules.sort = { sorter: r, dir: "none", params: t.definition.sorterParams || {}, startingDir: t.definition.headerSortStartingDir || "asc", tristate: t.definition.headerSortTristate }),
                            !1 !== t.definition.headerSort)
                        ) {
                            if (((e = t.getElement()).classList.add("tabulator-sortable"), (i = document.createElement("div")).classList.add("tabulator-col-sorter"), "icon" === this.table.options.headerSortClickElement))
                                i.classList.add("tabulator-col-sorter-element");
                            else e.classList.add("tabulator-col-sorter-element");
                            switch (this.table.options.headerSortElement) {
                                case "function":
                                    break;
                                case "object":
                                    i.appendChild(this.table.options.headerSortElement);
                                    break;
                                default:
                                    i.innerHTML = this.table.options.headerSortElement;
                            }
                            t.titleHolderElement.appendChild(i),
                                (t.modules.sort.element = i),
                                this.setColumnHeaderSortIcon(t, "none"),
                                ("icon" === this.table.options.headerSortClickElement ? i : e).addEventListener("click", (e) => {
                                    var i = "",
                                        r = [],
                                        s = !1;
                                    if (t.modules.sort) {
                                        if (t.modules.sort.tristate) i = "none" == t.modules.sort.dir ? t.modules.sort.startingDir : t.modules.sort.dir == t.modules.sort.startingDir ? ("asc" == t.modules.sort.dir ? "desc" : "asc") : "none";
                                        else
                                            switch (t.modules.sort.dir) {
                                                case "asc":
                                                    i = "desc";
                                                    break;
                                                case "desc":
                                                    i = "asc";
                                                    break;
                                                default:
                                                    i = t.modules.sort.startingDir;
                                            }
                                        this.table.options.columnHeaderSortMulti && (e.shiftKey || e.ctrlKey)
                                            ? ((s = (r = this.getSort()).findIndex((e) => e.field === t.getField())),
                                              s > -1 ? ((r[s].dir = i), (s = r.splice(s, 1)[0]), "none" != i && r.push(s)) : "none" != i && r.push({ column: t, dir: i }),
                                              this.setSort(r))
                                            : "none" == i
                                            ? this.clear()
                                            : this.setSort(t, i),
                                            this.refreshSort();
                                    }
                                });
                        }
                    }
                    refreshSort() {
                        "remote" === this.table.options.sortMode ? this.reloadData(null, !1, !1) : this.refreshData(!0);
                    }
                    hasChanged() {
                        var t = this.changed;
                        return (this.changed = !1), t;
                    }
                    getSort() {
                        var t = [];
                        return (
                            this.sortList.forEach(function (e) {
                                e.column && t.push({ column: e.column.getComponent(), field: e.column.getField(), dir: e.dir });
                            }),
                            t
                        );
                    }
                    setSort(t, e) {
                        var i = this,
                            r = [];
                        Array.isArray(t) || (t = [{ column: t, dir: e }]),
                            t.forEach(function (t) {
                                var e;
                                (e = i.table.columnManager.findColumn(t.column)) ? ((t.column = e), r.push(t), (i.changed = !0)) : console.warn("Sort Warning - Sort field does not exist and is being ignored: ", t.column);
                            }),
                            (i.sortList = r),
                            this.dispatch("sort-changed");
                    }
                    clear() {
                        this.setSort([]);
                    }
                    findSorter(t) {
                        var e,
                            i = this.table.rowManager.activeRows[0],
                            r = "string";
                        if (i && ((i = i.getData()), t.getField()))
                            switch (typeof (e = t.getFieldValue(i))) {
                                case "undefined":
                                    r = "string";
                                    break;
                                case "boolean":
                                    r = "boolean";
                                    break;
                                default:
                                    isNaN(e) || "" === e ? e.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i) && (r = "alphanum") : (r = "number");
                            }
                        return bt.sorters[r];
                    }
                    sort(t) {
                        var e = this,
                            i = this.table.options.sortOrderReverse ? e.sortList.slice().reverse() : e.sortList,
                            r = [],
                            s = [];
                        return (
                            this.subscribedExternal("dataSorting") && this.dispatchExternal("dataSorting", e.getSort()),
                            e.clearColumnHeaders(),
                            "remote" !== this.table.options.sortMode
                                ? (i.forEach(function (t, i) {
                                      var s;
                                      t.column &&
                                          ((s = t.column.modules.sort) && (s.sorter || (s.sorter = e.findSorter(t.column)), (t.params = "function" == typeof s.params ? s.params(t.column.getComponent(), t.dir) : s.params), r.push(t)),
                                          e.setColumnHeader(t.column, t.dir));
                                  }),
                                  r.length && e._sortItems(t, r))
                                : i.forEach(function (t, i) {
                                      e.setColumnHeader(t.column, t.dir);
                                  }),
                            this.subscribedExternal("dataSorted") &&
                                (t.forEach((t) => {
                                    s.push(t.getComponent());
                                }),
                                this.dispatchExternal("dataSorted", e.getSort(), s)),
                            t
                        );
                    }
                    clearColumnHeaders() {
                        this.table.columnManager.getRealColumns().forEach((t) => {
                            t.modules.sort && ((t.modules.sort.dir = "none"), t.getElement().setAttribute("aria-sort", "none"), this.setColumnHeaderSortIcon(t, "none"));
                        });
                    }
                    setColumnHeader(t, e) {
                        (t.modules.sort.dir = e), t.getElement().setAttribute("aria-sort", "asc" === e ? "ascending" : "descending"), this.setColumnHeaderSortIcon(t, e);
                    }
                    setColumnHeaderSortIcon(t, e) {
                        var i,
                            r = t.modules.sort.element;
                        if (t.definition.headerSort && "function" == typeof this.table.options.headerSortElement) {
                            for (; r.firstChild; ) r.removeChild(r.firstChild);
                            "object" == typeof (i = this.table.options.headerSortElement.call(this.table, t.getComponent(), e)) ? r.appendChild(i) : (r.innerHTML = i);
                        }
                    }
                    _sortItems(t, e) {
                        var i = e.length - 1;
                        t.sort((t, r) => {
                            for (var s, a = i; a >= 0; a--) {
                                var n = e[a];
                                if (0 !== (s = this._sortRow(t, r, n.column, n.dir, n.params))) break;
                            }
                            return s;
                        });
                    }
                    _sortRow(t, e, i, r, s) {
                        var a,
                            n,
                            o = "asc" == r ? t : e,
                            l = "asc" == r ? e : t;
                        return (
                            (t = void 0 !== (t = i.getFieldValue(o.getData())) ? t : ""),
                            (e = void 0 !== (e = i.getFieldValue(l.getData())) ? e : ""),
                            (a = o.getComponent()),
                            (n = l.getComponent()),
                            i.modules.sort.sorter.call(this, t, e, a, n, i.getComponent(), r, s)
                        );
                    }
                }
                (bt.moduleName = "sort"), (bt.sorters = vt);
                class yt extends h {
                    constructor(t) {
                        super(t),
                            (this.tooltipSubscriber = null),
                            (this.headerSubscriber = null),
                            (this.timeout = null),
                            (this.popupInstance = null),
                            this.registerTableOption("tooltipGenerationMode", void 0),
                            this.registerTableOption("tooltipDelay", 300),
                            this.registerColumnOption("tooltip"),
                            this.registerColumnOption("headerTooltip");
                    }
                    initialize() {
                        this.deprecatedOptionsCheck(), this.subscribe("column-init", this.initializeColumn.bind(this));
                    }
                    deprecatedOptionsCheck() {
                        this.deprecationCheckMsg("tooltipGenerationMode", "This option is no longer needed as tooltips are always generated on hover now");
                    }
                    initializeColumn(t) {
                        t.definition.headerTooltip &&
                            !this.headerSubscriber &&
                            ((this.headerSubscriber = !0), this.subscribe("column-mousemove", this.mousemoveCheck.bind(this, "headerTooltip")), this.subscribe("column-mouseout", this.mouseoutCheck.bind(this, "headerTooltip"))),
                            t.definition.tooltip &&
                                !this.tooltipSubscriber &&
                                ((this.tooltipSubscriber = !0), this.subscribe("cell-mousemove", this.mousemoveCheck.bind(this, "tooltip")), this.subscribe("cell-mouseout", this.mouseoutCheck.bind(this, "tooltip")));
                    }
                    mousemoveCheck(t, e, i) {
                        var r = "tooltip" === t ? i.column.definition.tooltip : i.definition.headerTooltip;
                        r && (this.clearPopup(), (this.timeout = setTimeout(this.loadTooltip.bind(this, e, i, r), this.table.options.tooltipDelay)));
                    }
                    mouseoutCheck(t, e, i) {
                        this.popupInstance || this.clearPopup();
                    }
                    clearPopup(t, e, i) {
                        clearTimeout(this.timeout), (this.timeout = null), this.popupInstance && this.popupInstance.hide();
                    }
                    loadTooltip(t, e, i) {
                        var r, s, a;
                        "function" == typeof i &&
                            (i = i(t, e.getComponent(), function (t) {
                                s = t;
                            })),
                            i instanceof HTMLElement
                                ? (r = i)
                                : ((r = document.createElement("div")),
                                  !0 === i &&
                                      (e instanceof w
                                          ? (i = e.value)
                                          : e.definition.field
                                          ? this.langBind("columns|" + e.definition.field, (t) => {
                                                r.innerHTML = i = t || e.definition.title;
                                            })
                                          : (i = e.definition.title)),
                                  (r.innerHTML = i)),
                            (i || 0 === i || !1 === i) &&
                                (r.classList.add("tabulator-tooltip"),
                                r.addEventListener("mousemove", (t) => t.preventDefault()),
                                (this.popupInstance = this.popup(r)),
                                "function" == typeof s && this.popupInstance.renderCallback(s),
                                (a = this.popupInstance.containerEventCoords(t)),
                                this.popupInstance.show(a.x + 15, a.y + 15).hideOnBlur(() => {
                                    this.dispatchExternal("TooltipClosed", e.getComponent()), (this.popupInstance = null);
                                }),
                                this.dispatchExternal("TooltipOpened", e.getComponent()));
                    }
                }
                yt.moduleName = "tooltip";
                var wt = {
                    integer: function (t, e, i) {
                        return "" === e || null == e || ((e = Number(e)), !isNaN(e) && isFinite(e) && Math.floor(e) === e);
                    },
                    float: function (t, e, i) {
                        return "" === e || null == e || ((e = Number(e)), !isNaN(e) && isFinite(e) && e % 1 != 0);
                    },
                    numeric: function (t, e, i) {
                        return "" === e || null == e || !isNaN(e);
                    },
                    string: function (t, e, i) {
                        return "" === e || null == e || isNaN(e);
                    },
                    max: function (t, e, i) {
                        return "" === e || null == e || parseFloat(e) <= i;
                    },
                    min: function (t, e, i) {
                        return "" === e || null == e || parseFloat(e) >= i;
                    },
                    starts: function (t, e, i) {
                        return "" === e || null == e || String(e).toLowerCase().startsWith(String(i).toLowerCase());
                    },
                    ends: function (t, e, i) {
                        return "" === e || null == e || String(e).toLowerCase().endsWith(String(i).toLowerCase());
                    },
                    minLength: function (t, e, i) {
                        return "" === e || null == e || String(e).length >= i;
                    },
                    maxLength: function (t, e, i) {
                        return "" === e || null == e || String(e).length <= i;
                    },
                    in: function (t, e, i) {
                        return "" === e || null == e || ("string" == typeof i && (i = i.split("|")), i.indexOf(e) > -1);
                    },
                    regex: function (t, e, i) {
                        return "" === e || null == e || new RegExp(i).test(e);
                    },
                    unique: function (t, e, i) {
                        if ("" === e || null == e) return !0;
                        var r = !0,
                            s = t.getData(),
                            a = t.getColumn()._getSelf();
                        return (
                            this.table.rowManager.rows.forEach(function (t) {
                                var i = t.getData();
                                i !== s && e == a.getFieldValue(i) && (r = !1);
                            }),
                            r
                        );
                    },
                    required: function (t, e, i) {
                        return "" !== e && null != e;
                    },
                };
                class xt extends h {
                    constructor(t) {
                        super(t),
                            (this.invalidCells = []),
                            this.registerTableOption("validationMode", "blocking"),
                            this.registerColumnOption("validator"),
                            this.registerTableFunction("getInvalidCells", this.getInvalidCells.bind(this)),
                            this.registerTableFunction("clearCellValidation", this.userClearCellValidation.bind(this)),
                            this.registerTableFunction("validate", this.userValidate.bind(this)),
                            this.registerComponentFunction("cell", "isValid", this.cellIsValid.bind(this)),
                            this.registerComponentFunction("cell", "clearValidation", this.clearValidation.bind(this)),
                            this.registerComponentFunction("cell", "validate", this.cellValidate.bind(this)),
                            this.registerComponentFunction("column", "validate", this.columnValidate.bind(this)),
                            this.registerComponentFunction("row", "validate", this.rowValidate.bind(this));
                    }
                    initialize() {
                        this.subscribe("cell-delete", this.clearValidation.bind(this)),
                            this.subscribe("column-layout", this.initializeColumnCheck.bind(this)),
                            this.subscribe("edit-success", this.editValidate.bind(this)),
                            this.subscribe("edit-editor-clear", this.editorClear.bind(this)),
                            this.subscribe("edit-edited-clear", this.editedClear.bind(this));
                    }
                    editValidate(t, e, i) {
                        var r = "manual" === this.table.options.validationMode || this.validate(t.column.modules.validate, t, e);
                        return (
                            !0 !== r &&
                                setTimeout(() => {
                                    t.getElement().classList.add("tabulator-validation-fail"), this.dispatchExternal("validationFailed", t.getComponent(), e, r);
                                }),
                            r
                        );
                    }
                    editorClear(t, e) {
                        e && t.column.modules.validate && this.cellValidate(t), t.getElement().classList.remove("tabulator-validation-fail");
                    }
                    editedClear(t) {
                        t.modules.validate && (t.modules.validate.invalid = !1);
                    }
                    cellIsValid(t) {
                        return (t.modules.validate && t.modules.validate.invalid) || !0;
                    }
                    cellValidate(t) {
                        return this.validate(t.column.modules.validate, t, t.getValue());
                    }
                    columnValidate(t) {
                        var e = [];
                        return (
                            t.cells.forEach((t) => {
                                !0 !== this.cellValidate(t) && e.push(t.getComponent());
                            }),
                            !e.length || e
                        );
                    }
                    rowValidate(t) {
                        var e = [];
                        return (
                            t.cells.forEach((t) => {
                                !0 !== this.cellValidate(t) && e.push(t.getComponent());
                            }),
                            !e.length || e
                        );
                    }
                    userClearCellValidation(t) {
                        t || (t = this.getInvalidCells()),
                            Array.isArray(t) || (t = [t]),
                            t.forEach((t) => {
                                this.clearValidation(t._getSelf());
                            });
                    }
                    userValidate(t) {
                        var e = [];
                        return (
                            this.table.rowManager.rows.forEach((t) => {
                                var i = (t = t.getComponent()).validate();
                                !0 !== i && (e = e.concat(i));
                            }),
                            !e.length || e
                        );
                    }
                    initializeColumnCheck(t) {
                        void 0 !== t.definition.validator && this.initializeColumn(t);
                    }
                    initializeColumn(t) {
                        var e,
                            i = this,
                            r = [];
                        t.definition.validator &&
                            (Array.isArray(t.definition.validator)
                                ? t.definition.validator.forEach((t) => {
                                      (e = i._extractValidator(t)) && r.push(e);
                                  })
                                : (e = this._extractValidator(t.definition.validator)) && r.push(e),
                            (t.modules.validate = !!r.length && r));
                    }
                    _extractValidator(t) {
                        var e, i, r;
                        switch (typeof t) {
                            case "string":
                                return (r = t.indexOf(":")) > -1 ? ((e = t.substring(0, r)), (i = t.substring(r + 1))) : (e = t), this._buildValidator(e, i);
                            case "function":
                                return this._buildValidator(t);
                            case "object":
                                return this._buildValidator(t.type, t.parameters);
                        }
                    }
                    _buildValidator(t, e) {
                        var i = "function" == typeof t ? t : xt.validators[t];
                        return i ? { type: "function" == typeof t ? "function" : t, func: i, params: e } : (console.warn("Validator Setup Error - No matching validator found:", t), !1);
                    }
                    validate(t, e, i) {
                        var r = this,
                            s = [],
                            a = this.invalidCells.indexOf(e);
                        return (
                            t &&
                                t.forEach((t) => {
                                    t.func.call(r, e.getComponent(), i, t.params) || s.push({ type: t.type, parameters: t.params });
                                }),
                            e.modules.validate || (e.modules.validate = {}),
                            s.length
                                ? ((e.modules.validate.invalid = s), "manual" !== this.table.options.validationMode && e.getElement().classList.add("tabulator-validation-fail"), -1 == a && this.invalidCells.push(e))
                                : ((e.modules.validate.invalid = !1), e.getElement().classList.remove("tabulator-validation-fail"), a > -1 && this.invalidCells.splice(a, 1)),
                            !s.length || s
                        );
                    }
                    getInvalidCells() {
                        var t = [];
                        return (
                            this.invalidCells.forEach((e) => {
                                t.push(e.getComponent());
                            }),
                            t
                        );
                    }
                    clearValidation(t) {
                        var e;
                        t.modules.validate &&
                            t.modules.validate.invalid &&
                            (t.getElement().classList.remove("tabulator-validation-fail"), (t.modules.validate.invalid = !1), (e = this.invalidCells.indexOf(t)) > -1 && this.invalidCells.splice(e, 1));
                    }
                }
                (xt.moduleName = "validate"), (xt.validators = wt);
                var Et = Object.freeze({
                    __proto__: null,
                    AccessorModule: c,
                    AjaxModule: g,
                    ClipboardModule: v,
                    ColumnCalcsModule: M,
                    DataTreeModule: P,
                    DownloadModule: A,
                    EditModule: R,
                    ExportModule: B,
                    FilterModule: N,
                    FormatModule: H,
                    FrozenColumnsModule: j,
                    FrozenRowsModule: W,
                    GroupRowsModule: $,
                    HistoryModule: U,
                    HtmlTableImportModule: Y,
                    ImportModule: K,
                    InteractionModule: Z,
                    KeybindingsModule: J,
                    MenuModule: Q,
                    MoveColumnsModule: tt,
                    MoveRowsModule: et,
                    MutatorModule: it,
                    PageModule: st,
                    PersistenceModule: ot,
                    PopupModule: lt,
                    PrintModule: ht,
                    ReactiveDataModule: ct,
                    ResizeColumnsModule: dt,
                    ResizeRowsModule: ut,
                    ResizeTableModule: pt,
                    ResponsiveLayoutModule: mt,
                    SelectRowModule: ft,
                    SortModule: bt,
                    TooltipModule: yt,
                    ValidateModule: xt,
                });
                class Ct {
                    constructor(t, e, i = {}) {
                        (this.table = t), (this.msgType = e), (this.registeredDefaults = Object.assign({}, i));
                    }
                    register(t, e) {
                        this.registeredDefaults[t] = e;
                    }
                    generate(t, e = {}) {
                        var i = Object.assign({}, this.registeredDefaults),
                            r = this.table.options.debugInvalidOptions || !0 === e.debugInvalidOptions;
                        for (var s in (Object.assign(i, t), e)) i.hasOwnProperty(s) || (r && console.warn("Invalid " + this.msgType + " option:", s), (i[s] = e.key));
                        for (var a in i) a in e ? (i[a] = e[a]) : Array.isArray(i[a]) ? (i[a] = Object.assign([], i[a])) : "object" == typeof i[a] && null !== i[a] ? (i[a] = Object.assign({}, i[a])) : void 0 === i[a] && delete i[a];
                        return i;
                    }
                }
                class St extends n {
                    constructor(t) {
                        super(t), (this.elementVertical = t.rowManager.element), (this.elementHorizontal = t.columnManager.element), (this.tableElement = t.rowManager.tableElement), (this.verticalFillMode = "fit");
                    }
                    initialize() {}
                    clearRows() {}
                    clearColumns() {}
                    reinitializeColumnWidths(t) {}
                    renderRows() {}
                    renderColumns() {}
                    rerenderRows(t) {
                        t && t();
                    }
                    rerenderColumns(t, e) {}
                    renderRowCells(t) {}
                    rerenderRowCells(t, e) {}
                    scrollColumns(t, e) {}
                    scrollRows(t, e) {}
                    resize() {}
                    scrollToRow(t) {}
                    scrollToRowNearestTop(t) {}
                    visibleRows(t) {
                        return [];
                    }
                    rows() {
                        return this.table.rowManager.getDisplayRows();
                    }
                    styleRow(t, e) {
                        var i = t.getElement();
                        e % 2 ? (i.classList.add("tabulator-row-even"), i.classList.remove("tabulator-row-odd")) : (i.classList.add("tabulator-row-odd"), i.classList.remove("tabulator-row-even"));
                    }
                    clear() {
                        this.clearRows(), this.clearColumns();
                    }
                    render() {
                        this.renderRows(), this.renderColumns();
                    }
                    rerender(t) {
                        this.rerenderRows(), this.rerenderColumns();
                    }
                    scrollToRowPosition(t, e, i) {
                        var r = this.rows().indexOf(t),
                            s = t.getElement(),
                            a = 0;
                        return new Promise((n, l) => {
                            if (r > -1) {
                                if (
                                    (void 0 === i && (i = this.table.options.scrollToRowIfVisible),
                                    !i && o.elVisible(s) && (a = o.elOffset(s).top - o.elOffset(this.elementVertical).top) > 0 && a < this.elementVertical.clientHeight - s.offsetHeight)
                                )
                                    return n(), !1;
                                switch ((void 0 === e && (e = this.table.options.scrollToRowPosition), "nearest" === e && (e = this.scrollToRowNearestTop(t) ? "top" : "bottom"), this.scrollToRow(t), e)) {
                                    case "middle":
                                    case "center":
                                        this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight
                                            ? (this.elementVertical.scrollTop = this.elementVertical.scrollTop + (s.offsetTop - this.elementVertical.scrollTop) - (this.elementVertical.scrollHeight - s.offsetTop) / 2)
                                            : (this.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight / 2);
                                        break;
                                    case "bottom":
                                        this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight
                                            ? (this.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.scrollHeight - s.offsetTop) + s.offsetHeight)
                                            : (this.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight + s.offsetHeight);
                                        break;
                                    case "top":
                                        this.elementVertical.scrollTop = s.offsetTop;
                                }
                                n();
                            } else console.warn("Scroll Error - Row not visible"), l("Scroll Error - Row not visible");
                        });
                    }
                }
                class Tt extends St {
                    constructor(t) {
                        super(t);
                    }
                    renderRowCells(t) {
                        var e = document.createDocumentFragment();
                        t.cells.forEach((t) => {
                            e.appendChild(t.getElement());
                        }),
                            t.element.appendChild(e),
                            t.cells.forEach((t) => {
                                t.cellRendered();
                            });
                    }
                    reinitializeColumnWidths(t) {
                        t.forEach(function (t) {
                            t.reinitializeWidth();
                        });
                    }
                }
                class _t extends St {
                    constructor(t) {
                        super(t),
                            (this.leftCol = 0),
                            (this.rightCol = 0),
                            (this.scrollLeft = 0),
                            (this.vDomScrollPosLeft = 0),
                            (this.vDomScrollPosRight = 0),
                            (this.vDomPadLeft = 0),
                            (this.vDomPadRight = 0),
                            (this.fitDataColAvg = 0),
                            (this.windowBuffer = 200),
                            (this.visibleRows = null),
                            (this.initialized = !1),
                            (this.isFitData = !1),
                            (this.columns = []);
                    }
                    initialize() {
                        this.compatibilityCheck(), this.layoutCheck(), this.vertScrollListen();
                    }
                    compatibilityCheck() {
                        "fitDataTable" == this.options("layout") && console.warn("Horizontal Virtual DOM is not compatible with fitDataTable layout mode"),
                            this.options("responsiveLayout") && console.warn("Horizontal Virtual DOM is not compatible with responsive columns"),
                            this.options("rtl") && console.warn("Horizontal Virtual DOM is not currently compatible with RTL text direction");
                    }
                    layoutCheck() {
                        this.isFitData = this.options("layout").startsWith("fitData");
                    }
                    vertScrollListen() {
                        this.subscribe("scroll-vertical", this.clearVisRowCache.bind(this)), this.subscribe("data-refreshed", this.clearVisRowCache.bind(this));
                    }
                    clearVisRowCache() {
                        this.visibleRows = null;
                    }
                    renderColumns(t, e) {
                        this.dataChange();
                    }
                    scrollColumns(t, e) {
                        this.scrollLeft != t && ((this.scrollLeft = t), this.scroll(t - (this.vDomScrollPosLeft + this.windowBuffer)));
                    }
                    calcWindowBuffer() {
                        var t = this.elementVertical.clientWidth;
                        this.table.columnManager.columnsByIndex.forEach((e) => {
                            if (e.visible) {
                                var i = e.getWidth();
                                i > t && (t = i);
                            }
                        }),
                            (this.windowBuffer = 2 * t);
                    }
                    rerenderColumns(t, e) {
                        var i = { cols: this.columns, leftCol: this.leftCol, rightCol: this.rightCol },
                            r = 0;
                        (t && !this.initialized) ||
                            (this.clear(),
                            this.calcWindowBuffer(),
                            (this.scrollLeft = this.elementVertical.scrollLeft),
                            (this.vDomScrollPosLeft = this.scrollLeft - this.windowBuffer),
                            (this.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.windowBuffer),
                            this.table.columnManager.columnsByIndex.forEach((t) => {
                                var e,
                                    i = {};
                                t.visible &&
                                    (t.modules.frozen ||
                                        ((e = t.getWidth()),
                                        (i.leftPos = r),
                                        (i.rightPos = r + e),
                                        (i.width = e),
                                        this.isFitData && (i.fitDataCheck = !t.modules.vdomHoz || t.modules.vdomHoz.fitDataCheck),
                                        r + e > this.vDomScrollPosLeft && r < this.vDomScrollPosRight
                                            ? (-1 == this.leftCol && ((this.leftCol = this.columns.length), (this.vDomPadLeft = r)), (this.rightCol = this.columns.length))
                                            : -1 !== this.leftCol && (this.vDomPadRight += e),
                                        this.columns.push(t),
                                        (t.modules.vdomHoz = i),
                                        (r += e)));
                            }),
                            (this.tableElement.style.paddingLeft = this.vDomPadLeft + "px"),
                            (this.tableElement.style.paddingRight = this.vDomPadRight + "px"),
                            (this.initialized = !0),
                            e || (t && !this.reinitChanged(i)) || this.reinitializeRows(),
                            (this.elementVertical.scrollLeft = this.scrollLeft));
                    }
                    renderRowCells(t) {
                        if (this.initialized) this.initializeRow(t);
                        else {
                            var e = document.createDocumentFragment();
                            t.cells.forEach((t) => {
                                e.appendChild(t.getElement());
                            }),
                                t.element.appendChild(e),
                                t.cells.forEach((t) => {
                                    t.cellRendered();
                                });
                        }
                    }
                    rerenderRowCells(t, e) {
                        this.reinitializeRow(t, e);
                    }
                    reinitializeColumnWidths(t) {
                        for (var e = this.leftCol; e <= this.rightCol; e++) this.columns[e].reinitializeWidth();
                    }
                    deinitialize() {
                        this.initialized = !1;
                    }
                    clear() {
                        (this.columns = []), (this.leftCol = -1), (this.rightCol = 0), (this.vDomScrollPosLeft = 0), (this.vDomScrollPosRight = 0), (this.vDomPadLeft = 0), (this.vDomPadRight = 0);
                    }
                    dataChange() {
                        var t,
                            e,
                            i = !1;
                        if (this.isFitData) {
                            if (
                                (this.table.columnManager.columnsByIndex.forEach((t) => {
                                    !t.definition.width && t.visible && (i = !0);
                                }),
                                i &&
                                    this.table.rowManager.getDisplayRows().length &&
                                    ((this.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.windowBuffer), (t = this.chain("rows-sample", [1], [], () => this.table.rowManager.getDisplayRows())[0])))
                            ) {
                                (e = t.getElement()), t.generateCells(), this.tableElement.appendChild(e);
                                for (var r = 0; r < t.cells.length; r++) {
                                    var s = t.cells[r];
                                    e.appendChild(s.getElement()), s.column.reinitializeWidth();
                                }
                                e.parentNode.removeChild(e), this.rerenderColumns(!1, !0);
                            }
                        } else "fitColumns" === this.options("layout") && (this.layoutRefresh(), this.rerenderColumns(!1, !0));
                    }
                    reinitChanged(t) {
                        var e = !0;
                        return (
                            t.cols.length !== this.columns.length ||
                            t.leftCol !== this.leftCol ||
                            t.rightCol !== this.rightCol ||
                            (t.cols.forEach((t, i) => {
                                t !== this.columns[i] && (e = !1);
                            }),
                            !e)
                        );
                    }
                    reinitializeRows() {
                        var t = this.getVisibleRows(),
                            e = this.table.rowManager.getRows().filter((e) => !t.includes(e));
                        t.forEach((t) => {
                            this.reinitializeRow(t, !0);
                        }),
                            e.forEach((t) => {
                                t.deinitialize();
                            });
                    }
                    getVisibleRows() {
                        return this.visibleRows || (this.visibleRows = this.table.rowManager.getVisibleRows()), this.visibleRows;
                    }
                    scroll(t) {
                        (this.vDomScrollPosLeft += t),
                            (this.vDomScrollPosRight += t),
                            Math.abs(t) > this.windowBuffer / 2 ? this.rerenderColumns() : t > 0 ? (this.addColRight(), this.removeColLeft()) : (this.addColLeft(), this.removeColRight());
                    }
                    colPositionAdjust(t, e, i) {
                        for (var r = t; r < e; r++) {
                            var s = this.columns[r];
                            (s.modules.vdomHoz.leftPos += i), (s.modules.vdomHoz.rightPos += i);
                        }
                    }
                    addColRight() {
                        for (
                            var t = this,
                                e = !1,
                                i = !0,
                                r = function () {
                                    var r = t.columns[t.rightCol + 1];
                                    r && r.modules.vdomHoz.leftPos <= t.vDomScrollPosRight
                                        ? ((e = !0),
                                          t.getVisibleRows().forEach((e) => {
                                              if ("group" !== e.type) {
                                                  var i = e.getCell(r);
                                                  e.getElement().insertBefore(i.getElement(), e.getCell(t.columns[t.rightCol]).getElement().nextSibling), i.cellRendered();
                                              }
                                          }),
                                          t.fitDataColActualWidthCheck(r),
                                          t.rightCol++,
                                          t.getVisibleRows().forEach((e) => {
                                              "group" !== e.type && (e.modules.vdomHoz.rightCol = t.rightCol);
                                          }),
                                          t.rightCol >= t.columns.length - 1 ? (t.vDomPadRight = 0) : (t.vDomPadRight -= r.getWidth()))
                                        : (i = !1);
                                };
                            i;

                        )
                            r();
                        e && (this.tableElement.style.paddingRight = this.vDomPadRight + "px");
                    }
                    addColLeft() {
                        for (
                            var t = this,
                                e = !1,
                                i = !0,
                                r = function () {
                                    var r = t.columns[t.leftCol - 1];
                                    if (r)
                                        if (r.modules.vdomHoz.rightPos >= t.vDomScrollPosLeft) {
                                            (e = !0),
                                                t.getVisibleRows().forEach((e) => {
                                                    if ("group" !== e.type) {
                                                        var i = e.getCell(r);
                                                        e.getElement().insertBefore(i.getElement(), e.getCell(t.columns[t.leftCol]).getElement()), i.cellRendered();
                                                    }
                                                }),
                                                t.leftCol--,
                                                t.getVisibleRows().forEach((e) => {
                                                    "group" !== e.type && (e.modules.vdomHoz.leftCol = t.leftCol);
                                                }),
                                                t.leftCol <= 0 ? (t.vDomPadLeft = 0) : (t.vDomPadLeft -= r.getWidth());
                                            var s = t.fitDataColActualWidthCheck(r);
                                            s && ((t.scrollLeft = t.elementVertical.scrollLeft = t.elementVertical.scrollLeft + s), (t.vDomPadRight -= s));
                                        } else i = !1;
                                    else i = !1;
                                };
                            i;

                        )
                            r();
                        e && (this.tableElement.style.paddingLeft = this.vDomPadLeft + "px");
                    }
                    removeColRight() {
                        for (
                            var t = this,
                                e = !1,
                                i = !0,
                                r = function () {
                                    var r = t.columns[t.rightCol];
                                    r && r.modules.vdomHoz.leftPos > t.vDomScrollPosRight
                                        ? ((e = !0),
                                          t.getVisibleRows().forEach((t) => {
                                              if ("group" !== t.type) {
                                                  var e = t.getCell(r);
                                                  try {
                                                      t.getElement().removeChild(e.getElement());
                                                  } catch (t) {
                                                      console.warn("Could not removeColRight", t.message);
                                                  }
                                              }
                                          }),
                                          (t.vDomPadRight += r.getWidth()),
                                          t.rightCol--,
                                          t.getVisibleRows().forEach((e) => {
                                              "group" !== e.type && (e.modules.vdomHoz.rightCol = t.rightCol);
                                          }))
                                        : (i = !1);
                                };
                            i;

                        )
                            r();
                        e && (this.tableElement.style.paddingRight = this.vDomPadRight + "px");
                    }
                    removeColLeft() {
                        for (
                            var t = this,
                                e = !1,
                                i = !0,
                                r = function () {
                                    var r = t.columns[t.leftCol];
                                    r && r.modules.vdomHoz.rightPos < t.vDomScrollPosLeft
                                        ? ((e = !0),
                                          t.getVisibleRows().forEach((t) => {
                                              if ("group" !== t.type) {
                                                  var e = t.getCell(r);
                                                  try {
                                                      t.getElement().removeChild(e.getElement());
                                                  } catch (t) {
                                                      console.warn("Could not removeColLeft", t.message);
                                                  }
                                              }
                                          }),
                                          (t.vDomPadLeft += r.getWidth()),
                                          t.leftCol++,
                                          t.getVisibleRows().forEach((e) => {
                                              "group" !== e.type && (e.modules.vdomHoz.leftCol = t.leftCol);
                                          }))
                                        : (i = !1);
                                };
                            i;

                        )
                            r();
                        e && (this.tableElement.style.paddingLeft = this.vDomPadLeft + "px");
                    }
                    fitDataColActualWidthCheck(t) {
                        var e, i;
                        return (
                            t.modules.vdomHoz.fitDataCheck &&
                                (t.reinitializeWidth(),
                                (i = (e = t.getWidth()) - t.modules.vdomHoz.width) && ((t.modules.vdomHoz.rightPos += i), (t.modules.vdomHoz.width = e), this.colPositionAdjust(this.columns.indexOf(t) + 1, this.columns.length, i)),
                                (t.modules.vdomHoz.fitDataCheck = !1)),
                            i
                        );
                    }
                    initializeRow(t) {
                        if ("group" !== t.type) {
                            (t.modules.vdomHoz = { leftCol: this.leftCol, rightCol: this.rightCol }),
                                this.table.modules.frozenColumns &&
                                    this.table.modules.frozenColumns.leftColumns.forEach((e) => {
                                        this.appendCell(t, e);
                                    });
                            for (var e = this.leftCol; e <= this.rightCol; e++) this.appendCell(t, this.columns[e]);
                            this.table.modules.frozenColumns &&
                                this.table.modules.frozenColumns.rightColumns.forEach((e) => {
                                    this.appendCell(t, e);
                                });
                        }
                    }
                    appendCell(t, e) {
                        if (e && e.visible) {
                            var i = t.getCell(e);
                            t.getElement().appendChild(i.getElement()), i.cellRendered();
                        }
                    }
                    reinitializeRow(t, e) {
                        if ("group" !== t.type && (e || !t.modules.vdomHoz || t.modules.vdomHoz.leftCol !== this.leftCol || t.modules.vdomHoz.rightCol !== this.rightCol)) {
                            for (var i = t.getElement(); i.firstChild; ) i.removeChild(i.firstChild);
                            this.initializeRow(t);
                        }
                    }
                }
                class Mt extends n {
                    constructor(t) {
                        super(t),
                            (this.blockHozScrollEvent = !1),
                            (this.headersElement = null),
                            (this.contentsElement = null),
                            (this.element = null),
                            (this.columns = []),
                            (this.columnsByIndex = []),
                            (this.columnsByField = {}),
                            (this.scrollLeft = 0),
                            (this.optionsList = new Ct(this.table, "column definition", E)),
                            (this.redrawBlock = !1),
                            (this.redrawBlockUpdate = null),
                            (this.renderer = null);
                    }
                    initialize() {
                        this.initializeRenderer(),
                            (this.headersElement = this.createHeadersElement()),
                            (this.contentsElement = this.createHeaderContentsElement()),
                            (this.element = this.createHeaderElement()),
                            this.contentsElement.insertBefore(this.headersElement, this.contentsElement.firstChild),
                            this.element.insertBefore(this.contentsElement, this.element.firstChild),
                            this.initializeScrollWheelWatcher(),
                            this.subscribe("scroll-horizontal", this.scrollHorizontal.bind(this)),
                            this.subscribe("scrollbar-vertical", this.padVerticalScrollbar.bind(this));
                    }
                    padVerticalScrollbar(t) {
                        this.table.rtl ? (this.headersElement.style.marginLeft = t + "px") : (this.headersElement.style.marginRight = t + "px");
                    }
                    initializeRenderer() {
                        var t,
                            e = { virtual: _t, basic: Tt };
                        (t = "string" == typeof this.table.options.renderHorizontal ? e[this.table.options.renderHorizontal] : this.table.options.renderHorizontal)
                            ? ((this.renderer = new t(this.table, this.element, this.tableElement)), this.renderer.initialize())
                            : console.error("Unable to find matching renderer:", this.table.options.renderHorizontal);
                    }
                    createHeadersElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-headers"), t.setAttribute("role", "row"), t;
                    }
                    createHeaderContentsElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-header-contents"), t.setAttribute("role", "rowgroup"), t;
                    }
                    createHeaderElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-header"), t.setAttribute("role", "rowgroup"), this.table.options.headerVisible || t.classList.add("tabulator-header-hidden"), t;
                    }
                    getElement() {
                        return this.element;
                    }
                    getContentsElement() {
                        return this.contentsElement;
                    }
                    getHeadersElement() {
                        return this.headersElement;
                    }
                    scrollHorizontal(t) {
                        (this.contentsElement.scrollLeft = t), (this.scrollLeft = t), this.renderer.scrollColumns(t);
                    }
                    initializeScrollWheelWatcher() {
                        this.contentsElement.addEventListener("wheel", (t) => {
                            var e;
                            t.deltaX && ((e = this.contentsElement.scrollLeft + t.deltaX), this.table.rowManager.scrollHorizontal(e), this.table.columnManager.scrollHorizontal(e));
                        });
                    }
                    generateColumnsFromRowData(t) {
                        var e,
                            i,
                            r = [],
                            s = this.table.options.autoColumnsDefinitions;
                        if (t && t.length) {
                            for (var a in (e = t[0])) {
                                var n = { field: a, title: a },
                                    o = e[a];
                                switch (typeof o) {
                                    case "undefined":
                                        i = "string";
                                        break;
                                    case "boolean":
                                        i = "boolean";
                                        break;
                                    case "object":
                                        i = Array.isArray(o) ? "array" : "string";
                                        break;
                                    default:
                                        i = isNaN(o) || "" === o ? (o.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i) ? "alphanum" : "string") : "number";
                                }
                                (n.sorter = i), r.push(n);
                            }
                            if (s)
                                switch (typeof s) {
                                    case "function":
                                        this.table.options.columns = s.call(this.table, r);
                                        break;
                                    case "object":
                                        Array.isArray(s)
                                            ? r.forEach((t) => {
                                                  var e = s.find((e) => e.field === t.field);
                                                  e && Object.assign(t, e);
                                              })
                                            : r.forEach((t) => {
                                                  s[t.field] && Object.assign(t, s[t.field]);
                                              }),
                                            (this.table.options.columns = r);
                                }
                            else this.table.options.columns = r;
                            this.setColumns(this.table.options.columns);
                        }
                    }
                    setColumns(t, e) {
                        for (; this.headersElement.firstChild; ) this.headersElement.removeChild(this.headersElement.firstChild);
                        (this.columns = []),
                            (this.columnsByIndex = []),
                            (this.columnsByField = {}),
                            this.dispatch("columns-loading"),
                            t.forEach((t, e) => {
                                this._addColumn(t);
                            }),
                            this._reIndexColumns(),
                            this.dispatch("columns-loaded"),
                            this.rerenderColumns(!1, !0),
                            this.redraw(!0);
                    }
                    _addColumn(t, e, i) {
                        var r = new C(t, this),
                            s = r.getElement(),
                            a = i ? this.findColumnIndex(i) : i;
                        if (i && a > -1) {
                            var n = i.getTopColumn(),
                                o = this.columns.indexOf(n),
                                l = n.getElement();
                            e ? (this.columns.splice(o, 0, r), l.parentNode.insertBefore(s, l)) : (this.columns.splice(o + 1, 0, r), l.parentNode.insertBefore(s, l.nextSibling));
                        } else e ? (this.columns.unshift(r), this.headersElement.insertBefore(r.getElement(), this.headersElement.firstChild)) : (this.columns.push(r), this.headersElement.appendChild(r.getElement()));
                        return r.columnRendered(), r;
                    }
                    registerColumnField(t) {
                        t.definition.field && (this.columnsByField[t.definition.field] = t);
                    }
                    registerColumnPosition(t) {
                        this.columnsByIndex.push(t);
                    }
                    _reIndexColumns() {
                        (this.columnsByIndex = []),
                            this.columns.forEach(function (t) {
                                t.reRegisterPosition();
                            });
                    }
                    verticalAlignHeaders() {
                        var t = 0;
                        this.redrawBlock ||
                            ((this.headersElement.style.height = ""),
                            this.columns.forEach((t) => {
                                t.clearVerticalAlign();
                            }),
                            this.columns.forEach((e) => {
                                var i = e.getHeight();
                                i > t && (t = i);
                            }),
                            (this.headersElement.style.height = t + "px"),
                            this.columns.forEach((e) => {
                                e.verticalAlign(this.table.options.columnHeaderVertAlign, t);
                            }),
                            this.table.rowManager.adjustTableSize());
                    }
                    findColumn(t) {
                        var e;
                        return "object" != typeof t
                            ? this.columnsByField[t] || !1
                            : t instanceof C
                            ? t
                            : t instanceof x
                            ? t._getSelf() || !1
                            : "undefined" != typeof HTMLElement &&
                              t instanceof HTMLElement &&
                              ((e = []),
                              this.columns.forEach((t) => {
                                  e.push(t), (e = e.concat(t.getColumns(!0)));
                              }),
                              e.find((e) => e.element === t) || !1);
                    }
                    getColumnByField(t) {
                        return this.columnsByField[t];
                    }
                    getColumnsByFieldRoot(t) {
                        var e = [];
                        return (
                            Object.keys(this.columnsByField).forEach((i) => {
                                i.split(".")[0] === t && e.push(this.columnsByField[i]);
                            }),
                            e
                        );
                    }
                    getColumnByIndex(t) {
                        return this.columnsByIndex[t];
                    }
                    getFirstVisibleColumn() {
                        var t = this.columnsByIndex.findIndex((t) => t.visible);
                        return t > -1 && this.columnsByIndex[t];
                    }
                    getColumns() {
                        return this.columns;
                    }
                    findColumnIndex(t) {
                        return this.columnsByIndex.findIndex((e) => t === e);
                    }
                    getRealColumns() {
                        return this.columnsByIndex;
                    }
                    traverse(t) {
                        this.columnsByIndex.forEach((e, i) => {
                            t(e, i);
                        });
                    }
                    getDefinitions(t) {
                        var e = [];
                        return (
                            this.columnsByIndex.forEach((i) => {
                                (!t || (t && i.visible)) && e.push(i.getDefinition());
                            }),
                            e
                        );
                    }
                    getDefinitionTree() {
                        var t = [];
                        return (
                            this.columns.forEach((e) => {
                                t.push(e.getDefinition(!0));
                            }),
                            t
                        );
                    }
                    getComponents(t) {
                        var e = [];
                        return (
                            (t ? this.columns : this.columnsByIndex).forEach((t) => {
                                e.push(t.getComponent());
                            }),
                            e
                        );
                    }
                    getWidth() {
                        var t = 0;
                        return (
                            this.columnsByIndex.forEach((e) => {
                                e.visible && (t += e.getWidth());
                            }),
                            t
                        );
                    }
                    moveColumn(t, e, i) {
                        e.element.parentNode.insertBefore(t.element, e.element),
                            i && e.element.parentNode.insertBefore(e.element, t.element),
                            this.moveColumnActual(t, e, i),
                            this.verticalAlignHeaders(),
                            this.table.rowManager.reinitialize();
                    }
                    moveColumnActual(t, e, i) {
                        t.parent.isGroup ? this._moveColumnInArray(t.parent.columns, t, e, i) : this._moveColumnInArray(this.columns, t, e, i),
                            this._moveColumnInArray(this.columnsByIndex, t, e, i, !0),
                            this.rerenderColumns(!0),
                            this.dispatch("column-moved", t, e, i),
                            this.subscribedExternal("columnMoved") && this.dispatchExternal("columnMoved", t.getComponent(), this.table.columnManager.getComponents());
                    }
                    _moveColumnInArray(t, e, i, r, s) {
                        var a,
                            n = t.indexOf(e);
                        n > -1 &&
                            (t.splice(n, 1),
                            (a = t.indexOf(i)) > -1 ? r && (a += 1) : (a = n),
                            t.splice(a, 0, e),
                            s &&
                                (this.chain("column-moving-rows", [e, i, r], null, []) || []).concat(this.table.rowManager.rows).forEach(function (t) {
                                    if (t.cells.length) {
                                        var e = t.cells.splice(n, 1)[0];
                                        t.cells.splice(a, 0, e);
                                    }
                                }));
                    }
                    scrollToColumn(t, e, i) {
                        var r = 0,
                            s = t.getLeftOffset(),
                            a = 0,
                            n = t.getElement();
                        return new Promise((o, l) => {
                            if ((void 0 === e && (e = this.table.options.scrollToColumnPosition), void 0 === i && (i = this.table.options.scrollToColumnIfVisible), t.visible)) {
                                switch (e) {
                                    case "middle":
                                    case "center":
                                        a = -this.element.clientWidth / 2;
                                        break;
                                    case "right":
                                        a = n.clientWidth - this.headersElement.clientWidth;
                                }
                                if (!i && s > 0 && s + n.offsetWidth < this.element.clientWidth) return !1;
                                (r = s + a), (r = Math.max(Math.min(r, this.table.rowManager.element.scrollWidth - this.table.rowManager.element.clientWidth), 0)), this.table.rowManager.scrollHorizontal(r), this.scrollHorizontal(r), o();
                            } else console.warn("Scroll Error - Column not visible"), l("Scroll Error - Column not visible");
                        });
                    }
                    generateCells(t) {
                        var e = [];
                        return (
                            this.columnsByIndex.forEach((i) => {
                                e.push(i.generateCell(t));
                            }),
                            e
                        );
                    }
                    getFlexBaseWidth() {
                        var t = this.table.element.clientWidth,
                            e = 0;
                        return (
                            this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight && (t -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth),
                            this.columnsByIndex.forEach(function (i) {
                                var r, s, a;
                                i.visible && ((r = i.definition.width || 0), (s = parseInt(i.minWidth)), (a = "string" == typeof r ? (r.indexOf("%") > -1 ? (t / 100) * parseInt(r) : parseInt(r)) : r), (e += a > s ? a : s));
                            }),
                            e
                        );
                    }
                    addColumn(t, e, i) {
                        return new Promise((r, s) => {
                            var a = this._addColumn(t, e, i);
                            this._reIndexColumns(), this.dispatch("column-add", t, e, i), "fitColumns" != this.layoutMode() && a.reinitializeWidth(), this.redraw(!0), this.table.rowManager.reinitialize(), this.rerenderColumns(), r(a);
                        });
                    }
                    deregisterColumn(t) {
                        var e,
                            i = t.getField();
                        i && delete this.columnsByField[i],
                            (e = this.columnsByIndex.indexOf(t)) > -1 && this.columnsByIndex.splice(e, 1),
                            (e = this.columns.indexOf(t)) > -1 && this.columns.splice(e, 1),
                            this.verticalAlignHeaders(),
                            this.redraw();
                    }
                    rerenderColumns(t, e) {
                        this.redrawBlock ? (!1 === t || (!0 === t && null === this.redrawBlockUpdate)) && (this.redrawBlockUpdate = t) : this.renderer.rerenderColumns(t, e);
                    }
                    blockRedraw() {
                        (this.redrawBlock = !0), (this.redrawBlockUpdate = null);
                    }
                    restoreRedraw() {
                        (this.redrawBlock = !1), this.verticalAlignHeaders(), this.renderer.rerenderColumns(this.redrawBlockUpdate);
                    }
                    redraw(t) {
                        o.elVisible(this.element) && this.verticalAlignHeaders(),
                            t && (this.table.rowManager.resetScroll(), this.table.rowManager.reinitialize()),
                            this.confirm("table-redrawing", t) || this.layoutRefresh(t),
                            this.dispatch("table-redraw", t),
                            this.table.footerManager.redraw();
                    }
                }
                class Pt extends St {
                    constructor(t) {
                        super(t), (this.verticalFillMode = "fill"), (this.scrollTop = 0), (this.scrollLeft = 0), (this.scrollTop = 0), (this.scrollLeft = 0);
                    }
                    clearRows() {
                        for (var t = this.tableElement; t.firstChild; ) t.removeChild(t.firstChild);
                        (t.scrollTop = 0), (t.scrollLeft = 0), (t.style.minWidth = ""), (t.style.minHeight = ""), (t.style.display = ""), (t.style.visibility = "");
                    }
                    renderRows() {
                        var t = this.tableElement,
                            e = !0,
                            i = document.createDocumentFragment();
                        this.rows().forEach((t, r) => {
                            this.styleRow(t, r), t.initialize(!0), "group" !== t.type && (e = !1), i.appendChild(t.getElement());
                        }),
                            t.appendChild(i),
                            (t.style.minWidth = e ? this.table.columnManager.getWidth() + "px" : "");
                    }
                    rerenderRows(t) {
                        this.clearRows(), t && t(), this.renderRows();
                    }
                    scrollToRowNearestTop(t) {
                        var e = o.elOffset(t.getElement()).top;
                        return !(Math.abs(this.elementVertical.scrollTop - e) > Math.abs(this.elementVertical.scrollTop + this.elementVertical.clientHeight - e));
                    }
                    scrollToRow(t) {
                        var e = t.getElement();
                        this.elementVertical.scrollTop = o.elOffset(e).top - o.elOffset(this.elementVertical).top + this.elementVertical.scrollTop;
                    }
                    visibleRows(t) {
                        return this.rows();
                    }
                }
                class kt extends St {
                    constructor(t) {
                        super(t),
                            (this.verticalFillMode = "fill"),
                            (this.scrollTop = 0),
                            (this.scrollLeft = 0),
                            (this.vDomRowHeight = 20),
                            (this.vDomTop = 0),
                            (this.vDomBottom = 0),
                            (this.vDomScrollPosTop = 0),
                            (this.vDomScrollPosBottom = 0),
                            (this.vDomTopPad = 0),
                            (this.vDomBottomPad = 0),
                            (this.vDomMaxRenderChain = 90),
                            (this.vDomWindowBuffer = 0),
                            (this.vDomWindowMinTotalRows = 20),
                            (this.vDomWindowMinMarginRows = 5),
                            (this.vDomTopNewRows = []),
                            (this.vDomBottomNewRows = []);
                    }
                    clearRows() {
                        for (var t = this.tableElement; t.firstChild; ) t.removeChild(t.firstChild);
                        (t.style.paddingTop = ""),
                            (t.style.paddingBottom = ""),
                            (t.style.minHeight = ""),
                            (t.style.display = ""),
                            (t.style.visibility = ""),
                            (this.elementVertical.scrollTop = 0),
                            (this.elementVertical.scrollLeft = 0),
                            (this.scrollTop = 0),
                            (this.scrollLeft = 0),
                            (this.vDomTop = 0),
                            (this.vDomBottom = 0),
                            (this.vDomTopPad = 0),
                            (this.vDomBottomPad = 0),
                            (this.vDomScrollPosTop = 0),
                            (this.vDomScrollPosBottom = 0);
                    }
                    renderRows() {
                        this._virtualRenderFill();
                    }
                    rerenderRows(t) {
                        for (var e = this.elementVertical.scrollTop, i = !1, r = !1, s = this.table.rowManager.scrollLeft, a = this.rows(), n = this.vDomTop; n <= this.vDomBottom; n++)
                            if (a[n]) {
                                var o = e - a[n].getElement().offsetTop;
                                if (!(!1 === r || Math.abs(o) < r)) break;
                                (r = o), (i = n);
                            }
                        a.forEach((t) => {
                            t.deinitializeHeight();
                        }),
                            t && t(),
                            this.rows().length ? this._virtualRenderFill(!1 === i ? this.rows.length - 1 : i, !0, r || 0) : (this.clear(), this.table.rowManager.tableEmpty()),
                            this.scrollColumns(s);
                    }
                    scrollColumns(t) {
                        this.table.rowManager.scrollHorizontal(t);
                    }
                    scrollRows(t, e) {
                        var i = t - this.vDomScrollPosTop,
                            r = t - this.vDomScrollPosBottom,
                            s = 2 * this.vDomWindowBuffer,
                            a = this.rows();
                        if (((this.scrollTop = t), -i > s || r > s)) {
                            var n = this.table.rowManager.scrollLeft;
                            this._virtualRenderFill(Math.floor((this.elementVertical.scrollTop / this.elementVertical.scrollHeight) * a.length)), this.scrollColumns(n);
                        } else
                            e
                                ? (i < 0 && this._addTopRow(a, -i), r < 0 && (this.vDomScrollHeight - this.scrollTop > this.vDomWindowBuffer ? this._removeBottomRow(a, -r) : (this.vDomScrollPosBottom = this.scrollTop)))
                                : (r >= 0 && this._addBottomRow(a, r), i >= 0 && (this.scrollTop > this.vDomWindowBuffer ? this._removeTopRow(a, i) : (this.vDomScrollPosTop = this.scrollTop)));
                    }
                    resize() {
                        this.vDomWindowBuffer = this.table.options.renderVerticalBuffer || this.elementVertical.clientHeight;
                    }
                    scrollToRowNearestTop(t) {
                        var e = this.rows().indexOf(t);
                        return !(Math.abs(this.vDomTop - e) > Math.abs(this.vDomBottom - e));
                    }
                    scrollToRow(t) {
                        var e = this.rows().indexOf(t);
                        e > -1 && this._virtualRenderFill(e, !0);
                    }
                    visibleRows(t) {
                        var e = this.elementVertical.scrollTop,
                            i = this.elementVertical.clientHeight + e,
                            r = !1,
                            s = 0,
                            a = 0,
                            n = this.rows();
                        if (t) (s = this.vDomTop), (a = this.vDomBottom);
                        else
                            for (var o = this.vDomTop; o <= this.vDomBottom; o++)
                                if (n[o])
                                    if (r) {
                                        if (!(i - n[o].getElement().offsetTop >= 0)) break;
                                        a = o;
                                    } else if (e - n[o].getElement().offsetTop >= 0) s = o;
                                    else {
                                        if (((r = !0), !(i - n[o].getElement().offsetTop >= 0))) break;
                                        a = o;
                                    }
                        return n.slice(s, a + 1);
                    }
                    _virtualRenderFill(t, e, i) {
                        var r,
                            s,
                            a = this.tableElement,
                            n = this.elementVertical,
                            l = 0,
                            h = 0,
                            c = 0,
                            d = 0,
                            u = 0,
                            p = 0,
                            m = this.rows(),
                            f = m.length,
                            g = 0,
                            v = [],
                            b = 0,
                            y = 0,
                            w = this.table.rowManager.fixedHeight,
                            x = this.elementVertical.clientHeight,
                            E = this.table.options.rowHeight,
                            C = !0;
                        if (((i = i || 0), (t = t || 0))) {
                            for (; a.firstChild; ) a.removeChild(a.firstChild);
                            (d = (f - t + 1) * this.vDomRowHeight) < x && (t -= Math.ceil((x - d) / this.vDomRowHeight)) < 0 && (t = 0),
                                (t -= l = Math.min(Math.max(Math.floor(this.vDomWindowBuffer / this.vDomRowHeight), this.vDomWindowMinMarginRows), t));
                        } else this.clear();
                        if (f && o.elVisible(this.elementVertical)) {
                            for (
                                this.vDomTop = t, this.vDomBottom = t - 1, w || this.table.options.maxHeight ? (E && (y = x / E + this.vDomWindowBuffer / E), (y = Math.max(this.vDomWindowMinTotalRows, Math.ceil(y)))) : (y = f);
                                (y == f || h <= x + this.vDomWindowBuffer || b < this.vDomWindowMinTotalRows) && this.vDomBottom < f - 1;

                            ) {
                                for (v = [], s = document.createDocumentFragment(), p = 0; p < y && this.vDomBottom < f - 1; )
                                    (r = m[(g = this.vDomBottom + 1)]),
                                        this.styleRow(r, g),
                                        r.initialize(),
                                        r.heightInitialized || this.table.options.rowHeight || r.clearCellHeight(),
                                        s.appendChild(r.getElement()),
                                        v.push(r),
                                        this.vDomBottom++,
                                        p++;
                                if (!v.length) break;
                                a.appendChild(s),
                                    v.forEach((t) => {
                                        t.heightInitialized || t.calcHeight(!0);
                                    }),
                                    v.forEach((t) => {
                                        t.heightInitialized || t.setCellHeight();
                                    }),
                                    v.forEach((t) => {
                                        (c = t.getHeight()), b < l ? (u += c) : (h += c), c > this.vDomWindowBuffer && (this.vDomWindowBuffer = 2 * c), b++;
                                    }),
                                    (C = this.table.rowManager.adjustTableSize()),
                                    (x = this.elementVertical.clientHeight),
                                    C && (w || this.table.options.maxHeight) && ((E = h / b), (y = Math.max(this.vDomWindowMinTotalRows, Math.ceil(x / E + this.vDomWindowBuffer / E))));
                            }
                            t
                                ? ((this.vDomTopPad = e ? this.vDomRowHeight * this.vDomTop + i : this.scrollTop - u), (this.vDomBottomPad = this.vDomBottom == f - 1 ? 0 : Math.max(this.vDomScrollHeight - this.vDomTopPad - h - u, 0)))
                                : ((this.vDomTopPad = 0), (this.vDomRowHeight = Math.floor((h + u) / b)), (this.vDomBottomPad = this.vDomRowHeight * (f - this.vDomBottom - 1)), (this.vDomScrollHeight = u + h + this.vDomBottomPad - x)),
                                (a.style.paddingTop = this.vDomTopPad + "px"),
                                (a.style.paddingBottom = this.vDomBottomPad + "px"),
                                e && (this.scrollTop = this.vDomTopPad + u + i - (this.elementVertical.scrollWidth > this.elementVertical.clientWidth ? this.elementVertical.offsetHeight - x : 0)),
                                (this.scrollTop = Math.min(this.scrollTop, this.elementVertical.scrollHeight - x)),
                                this.elementVertical.scrollWidth > this.elementVertical.clientWidth && e && (this.scrollTop += this.elementVertical.offsetHeight - x),
                                (this.vDomScrollPosTop = this.scrollTop),
                                (this.vDomScrollPosBottom = this.scrollTop),
                                (n.scrollTop = this.scrollTop),
                                this.dispatch("render-virtual-fill");
                        }
                    }
                    _addTopRow(t, e) {
                        for (var i = this.tableElement, r = [], s = 0, a = this.vDomTop - 1, n = 0, o = !0; o; )
                            if (this.vDomTop) {
                                var l = t[a],
                                    h = void 0,
                                    c = void 0;
                                l && n < this.vDomMaxRenderChain
                                    ? ((h = l.getHeight() || this.vDomRowHeight),
                                      (c = l.initialized),
                                      e >= h
                                          ? (this.styleRow(l, a),
                                            i.insertBefore(l.getElement(), i.firstChild),
                                            (l.initialized && l.heightInitialized) || r.push(l),
                                            l.initialize(),
                                            c || ((h = l.getElement().offsetHeight) > this.vDomWindowBuffer && (this.vDomWindowBuffer = 2 * h)),
                                            (e -= h),
                                            (s += h),
                                            this.vDomTop--,
                                            a--,
                                            n++)
                                          : (o = !1))
                                    : (o = !1);
                            } else o = !1;
                        for (var d = 0, u = r; d < u.length; d++) {
                            u[d].clearCellHeight();
                        }
                        this._quickNormalizeRowHeight(r),
                            s && ((this.vDomTopPad -= s), this.vDomTopPad < 0 && (this.vDomTopPad = a * this.vDomRowHeight), a < 1 && (this.vDomTopPad = 0), (i.style.paddingTop = this.vDomTopPad + "px"), (this.vDomScrollPosTop -= s));
                    }
                    _removeTopRow(t, e) {
                        for (var i = [], r = 0, s = 0, a = !0; a; ) {
                            var n = t[this.vDomTop],
                                o = void 0;
                            n && s < this.vDomMaxRenderChain && e >= (o = n.getHeight() || this.vDomRowHeight) ? (this.vDomTop++, (e -= o), (r += o), i.push(n), s++) : (a = !1);
                        }
                        for (var l = 0, h = i; l < h.length; l++) {
                            var c = h[l].getElement();
                            c.parentNode && c.parentNode.removeChild(c);
                        }
                        r && ((this.vDomTopPad += r), (this.tableElement.style.paddingTop = this.vDomTopPad + "px"), (this.vDomScrollPosTop += this.vDomTop ? r : r + this.vDomWindowBuffer));
                    }
                    _addBottomRow(t, e) {
                        for (var i = this.tableElement, r = [], s = 0, a = this.vDomBottom + 1, n = 0, o = !0; o; ) {
                            var l = t[a],
                                h = void 0,
                                c = void 0;
                            l && n < this.vDomMaxRenderChain
                                ? ((h = l.getHeight() || this.vDomRowHeight),
                                  (c = l.initialized),
                                  e >= h
                                      ? (this.styleRow(l, a),
                                        i.appendChild(l.getElement()),
                                        (l.initialized && l.heightInitialized) || r.push(l),
                                        l.initialize(),
                                        c || ((h = l.getElement().offsetHeight) > this.vDomWindowBuffer && (this.vDomWindowBuffer = 2 * h)),
                                        (e -= h),
                                        (s += h),
                                        this.vDomBottom++,
                                        a++,
                                        n++)
                                      : (o = !1))
                                : (o = !1);
                        }
                        for (var d = 0, u = r; d < u.length; d++) {
                            u[d].clearCellHeight();
                        }
                        this._quickNormalizeRowHeight(r),
                            s && ((this.vDomBottomPad -= s), (this.vDomBottomPad < 0 || a == t.length - 1) && (this.vDomBottomPad = 0), (i.style.paddingBottom = this.vDomBottomPad + "px"), (this.vDomScrollPosBottom += s));
                    }
                    _removeBottomRow(t, e) {
                        for (var i = [], r = 0, s = 0, a = !0; a; ) {
                            var n = t[this.vDomBottom],
                                o = void 0;
                            n && s < this.vDomMaxRenderChain && e >= (o = n.getHeight() || this.vDomRowHeight) ? (this.vDomBottom--, (e -= o), (r += o), i.push(n), s++) : (a = !1);
                        }
                        for (var l = 0, h = i; l < h.length; l++) {
                            var c = h[l].getElement();
                            c.parentNode && c.parentNode.removeChild(c);
                        }
                        r && ((this.vDomBottomPad += r), this.vDomBottomPad < 0 && (this.vDomBottomPad = 0), (this.tableElement.style.paddingBottom = this.vDomBottomPad + "px"), (this.vDomScrollPosBottom -= r));
                    }
                    _quickNormalizeRowHeight(t) {
                        var e,
                            i = s(t);
                        try {
                            for (i.s(); !(e = i.n()).done; ) {
                                e.value.calcHeight();
                            }
                        } catch (t) {
                            i.e(t);
                        } finally {
                            i.f();
                        }
                        var r,
                            a = s(t);
                        try {
                            for (a.s(); !(r = a.n()).done; ) {
                                r.value.setCellHeight();
                            }
                        } catch (t) {
                            a.e(t);
                        } finally {
                            a.f();
                        }
                    }
                }
                class At extends n {
                    constructor(t) {
                        super(t),
                            (this.element = this.createHolderElement()),
                            (this.tableElement = this.createTableElement()),
                            (this.heightFixer = this.createTableElement()),
                            (this.placeholder = null),
                            (this.placeholderContents = null),
                            (this.firstRender = !1),
                            (this.renderMode = "virtual"),
                            (this.fixedHeight = !1),
                            (this.rows = []),
                            (this.activeRowsPipeline = []),
                            (this.activeRows = []),
                            (this.activeRowsCount = 0),
                            (this.displayRows = []),
                            (this.displayRowsCount = 0),
                            (this.scrollTop = 0),
                            (this.scrollLeft = 0),
                            (this.redrawBlock = !1),
                            (this.redrawBlockRestoreConfig = !1),
                            (this.redrawBlockRenderInPosition = !1),
                            (this.dataPipeline = []),
                            (this.displayPipeline = []),
                            (this.scrollbarWidth = 0),
                            (this.renderer = null);
                    }
                    createHolderElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-tableholder"), t.setAttribute("tabindex", 0), t;
                    }
                    createTableElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-table"), t.setAttribute("role", "rowgroup"), t;
                    }
                    initializePlaceholder() {
                        var t = this.table.options.placeholder;
                        if (("function" == typeof t && (t = t.call(this.table)), (t = this.chain("placeholder", [t], t, t) || t))) {
                            var e = document.createElement("div");
                            if ((e.classList.add("tabulator-placeholder"), "string" == typeof t)) {
                                var i = document.createElement("div");
                                i.classList.add("tabulator-placeholder-contents"), (i.innerHTML = t), e.appendChild(i), (this.placeholderContents = i);
                            } else
                                "undefined" != typeof HTMLElement && t instanceof HTMLElement
                                    ? (e.appendChild(t), (this.placeholderContents = t))
                                    : (console.warn("Invalid placeholder provided, must be string or HTML Element", t), (this.el = null));
                            this.placeholder = e;
                        }
                    }
                    getElement() {
                        return this.element;
                    }
                    getTableElement() {
                        return this.tableElement;
                    }
                    initialize() {
                        this.initializePlaceholder(),
                            this.initializeRenderer(),
                            this.element.appendChild(this.tableElement),
                            (this.firstRender = !0),
                            this.element.addEventListener("scroll", () => {
                                var t = this.element.scrollLeft,
                                    e = this.scrollLeft > t,
                                    i = this.element.scrollTop,
                                    r = this.scrollTop > i;
                                this.scrollLeft != t && ((this.scrollLeft = t), this.dispatch("scroll-horizontal", t, e), this.dispatchExternal("scrollHorizontal", t, e), this._positionPlaceholder()),
                                    this.scrollTop != i && ((this.scrollTop = i), this.renderer.scrollRows(i, r), this.dispatch("scroll-vertical", i, r), this.dispatchExternal("scrollVertical", i, r));
                            });
                    }
                    findRow(t) {
                        return "object" != typeof t
                            ? void 0 !== t && (this.rows.find((e) => e.data[this.table.options.index] == t) || !1)
                            : t instanceof T
                            ? t
                            : t instanceof S
                            ? t._getSelf() || !1
                            : ("undefined" != typeof HTMLElement && t instanceof HTMLElement && this.rows.find((e) => e.getElement() === t)) || !1;
                    }
                    getRowFromDataObject(t) {
                        return this.rows.find((e) => e.data === t) || !1;
                    }
                    getRowFromPosition(t) {
                        return this.getDisplayRows().find((e) => e.getPosition() === t && e.isDisplayed());
                    }
                    scrollToRow(t, e, i) {
                        return this.renderer.scrollToRowPosition(t, e, i);
                    }
                    setData(t, e, i) {
                        return new Promise((r, s) => {
                            e && this.getDisplayRows().length
                                ? this.table.options.pagination
                                    ? this._setDataActual(t, !0)
                                    : this.reRenderInPosition(() => {
                                          this._setDataActual(t);
                                      })
                                : (this.table.options.autoColumns && i && this.table.initialized && this.table.columnManager.generateColumnsFromRowData(t), this.resetScroll(), this._setDataActual(t)),
                                r();
                        });
                    }
                    _setDataActual(t, e) {
                        this.dispatchExternal("dataProcessing", t),
                            this._wipeElements(),
                            Array.isArray(t)
                                ? (this.dispatch("data-processing", t),
                                  t.forEach((t, e) => {
                                      if (t && "object" == typeof t) {
                                          var i = new T(t, this);
                                          this.rows.push(i);
                                      } else console.warn("Data Loading Warning - Invalid row data detected and ignored, expecting object but received:", t);
                                  }),
                                  this.refreshActiveData(!1, !1, e),
                                  this.dispatch("data-processed", t),
                                  this.dispatchExternal("dataProcessed", t))
                                : console.error("Data Loading Error - Unable to process data due to invalid data type \nExpecting: array \nReceived: ", typeof t, "\nData:     ", t);
                    }
                    _wipeElements() {
                        this.dispatch("rows-wipe"), this.destroy(), this.adjustTableSize(), this.dispatch("rows-wiped");
                    }
                    destroy() {
                        this.rows.forEach((t) => {
                            t.wipe();
                        }),
                            (this.rows = []),
                            (this.activeRows = []),
                            (this.activeRowsPipeline = []),
                            (this.activeRowsCount = 0),
                            (this.displayRows = []),
                            (this.displayRowsCount = 0);
                    }
                    deleteRow(t, e) {
                        var i = this.rows.indexOf(t),
                            r = this.activeRows.indexOf(t);
                        r > -1 && this.activeRows.splice(r, 1),
                            i > -1 && this.rows.splice(i, 1),
                            this.setActiveRows(this.activeRows),
                            this.displayRowIterator((e) => {
                                var i = e.indexOf(t);
                                i > -1 && e.splice(i, 1);
                            }),
                            e || this.reRenderInPosition(),
                            this.regenerateRowPositions(),
                            this.dispatchExternal("rowDeleted", t.getComponent()),
                            this.displayRowsCount || this.tableEmpty(),
                            this.subscribedExternal("dataChanged") && this.dispatchExternal("dataChanged", this.getData());
                    }
                    addRow(t, e, i, r) {
                        return this.addRowActual(t, e, i, r);
                    }
                    addRows(t, e, i, r) {
                        var s = [];
                        return new Promise((a, n) => {
                            (e = this.findAddRowPos(e)),
                                Array.isArray(t) || (t = [t]),
                                ((void 0 === i && e) || (void 0 !== i && !e)) && t.reverse(),
                                t.forEach((t, r) => {
                                    var a = this.addRow(t, e, i, !0);
                                    s.push(a), this.dispatch("row-added", a, t, e, i);
                                }),
                                this.refreshActiveData(!!r && "displayPipeline", !1, !0),
                                this.regenerateRowPositions(),
                                s.length && this._clearPlaceholder(),
                                a(s);
                        });
                    }
                    findAddRowPos(t) {
                        return void 0 === t && (t = this.table.options.addRowPos), "pos" === t && (t = !0), "bottom" === t && (t = !1), t;
                    }
                    addRowActual(t, e, i, r) {
                        var s,
                            a,
                            n = t instanceof T ? t : new T(t || {}, this),
                            o = this.findAddRowPos(e),
                            l = -1;
                        return (
                            i || ((a = this.chain("row-adding-position", [n, o], null, { index: i, top: o })), (i = a.index), (o = a.top)),
                            void 0 !== i && (i = this.findRow(i)),
                            (i = this.chain("row-adding-index", [n, i, o], null, i)) && (l = this.rows.indexOf(i)),
                            i && l > -1
                                ? ((s = this.activeRows.indexOf(i)),
                                  this.displayRowIterator(function (t) {
                                      var e = t.indexOf(i);
                                      e > -1 && t.splice(o ? e : e + 1, 0, n);
                                  }),
                                  s > -1 && this.activeRows.splice(o ? s : s + 1, 0, n),
                                  this.rows.splice(o ? l : l + 1, 0, n))
                                : o
                                ? (this.displayRowIterator(function (t) {
                                      t.unshift(n);
                                  }),
                                  this.activeRows.unshift(n),
                                  this.rows.unshift(n))
                                : (this.displayRowIterator(function (t) {
                                      t.push(n);
                                  }),
                                  this.activeRows.push(n),
                                  this.rows.push(n)),
                            this.setActiveRows(this.activeRows),
                            this.dispatchExternal("rowAdded", n.getComponent()),
                            this.subscribedExternal("dataChanged") && this.dispatchExternal("dataChanged", this.table.rowManager.getData()),
                            r || this.reRenderInPosition(),
                            n
                        );
                    }
                    moveRow(t, e, i) {
                        this.dispatch("row-move", t, e, i), this.moveRowActual(t, e, i), this.regenerateRowPositions(), this.dispatch("row-moved", t, e, i), this.dispatchExternal("rowMoved", t.getComponent());
                    }
                    moveRowActual(t, e, i) {
                        this.moveRowInArray(this.rows, t, e, i),
                            this.moveRowInArray(this.activeRows, t, e, i),
                            this.displayRowIterator((r) => {
                                this.moveRowInArray(r, t, e, i);
                            }),
                            this.dispatch("row-moving", t, e, i);
                    }
                    moveRowInArray(t, e, i, r) {
                        var s, a, n;
                        if (e !== i && ((s = t.indexOf(e)) > -1 && (t.splice(s, 1), (a = t.indexOf(i)) > -1 ? (r ? t.splice(a + 1, 0, e) : t.splice(a, 0, e)) : t.splice(s, 0, e)), t === this.getDisplayRows())) {
                            n = a > s ? a : s + 1;
                            for (var o = s < a ? s : a; o <= n; o++) t[o] && this.styleRow(t[o], o);
                        }
                    }
                    clearData() {
                        this.setData([]);
                    }
                    getRowIndex(t) {
                        return this.findRowIndex(t, this.rows);
                    }
                    getDisplayRowIndex(t) {
                        var e = this.getDisplayRows().indexOf(t);
                        return e > -1 && e;
                    }
                    nextDisplayRow(t, e) {
                        var i = this.getDisplayRowIndex(t),
                            r = !1;
                        return !1 !== i && i < this.displayRowsCount - 1 && (r = this.getDisplayRows()[i + 1]), !r || (r instanceof T && "row" == r.type) ? r : this.nextDisplayRow(r, e);
                    }
                    prevDisplayRow(t, e) {
                        var i = this.getDisplayRowIndex(t),
                            r = !1;
                        return i && (r = this.getDisplayRows()[i - 1]), !e || !r || (r instanceof T && "row" == r.type) ? r : this.prevDisplayRow(r, e);
                    }
                    findRowIndex(t, e) {
                        var i;
                        return !!((t = this.findRow(t)) && (i = e.indexOf(t)) > -1) && i;
                    }
                    getData(t, e) {
                        var i = [];
                        return (
                            this.getRows(t).forEach(function (t) {
                                "row" == t.type && i.push(t.getData(e || "data"));
                            }),
                            i
                        );
                    }
                    getComponents(t) {
                        var e = [];
                        return (
                            this.getRows(t).forEach(function (t) {
                                e.push(t.getComponent());
                            }),
                            e
                        );
                    }
                    getDataCount(t) {
                        return this.getRows(t).length;
                    }
                    scrollHorizontal(t) {
                        (this.scrollLeft = t), (this.element.scrollLeft = t), this.dispatch("scroll-horizontal", t);
                    }
                    registerDataPipelineHandler(t, e) {
                        void 0 !== e
                            ? (this.dataPipeline.push({ handler: t, priority: e }), this.dataPipeline.sort((t, e) => t.priority - e.priority))
                            : console.error("Data pipeline handlers must have a priority in order to be registered");
                    }
                    registerDisplayPipelineHandler(t, e) {
                        void 0 !== e
                            ? (this.displayPipeline.push({ handler: t, priority: e }), this.displayPipeline.sort((t, e) => t.priority - e.priority))
                            : console.error("Display pipeline handlers must have a priority in order to be registered");
                    }
                    refreshActiveData(t, e, i) {
                        var r = this.table,
                            s = "",
                            a = 0,
                            n = ["all", "dataPipeline", "display", "displayPipeline", "end"];
                        if (!this.table.destroyed) {
                            if ("function" == typeof t)
                                if ((a = this.dataPipeline.findIndex((e) => e.handler === t)) > -1) (s = "dataPipeline"), e && (a == this.dataPipeline.length - 1 ? (s = "display") : a++);
                                else {
                                    if (!((a = this.displayPipeline.findIndex((e) => e.handler === t)) > -1)) return void console.error("Unable to refresh data, invalid handler provided", t);
                                    (s = "displayPipeline"), e && (a == this.displayPipeline.length - 1 ? (s = "end") : a++);
                                }
                            else (s = t || "all"), (a = 0);
                            if (this.redrawBlock)
                                return void (
                                    (!this.redrawBlockRestoreConfig ||
                                        (this.redrawBlockRestoreConfig && ((this.redrawBlockRestoreConfig.stage === s && a < this.redrawBlockRestoreConfig.index) || n.indexOf(s) < n.indexOf(this.redrawBlockRestoreConfig.stage)))) &&
                                    (this.redrawBlockRestoreConfig = { handler: t, skipStage: e, renderInPosition: i, stage: s, index: a })
                                );
                            o.elVisible(this.element)
                                ? i
                                    ? this.reRenderInPosition(this.refreshPipelines.bind(this, t, s, a, i))
                                    : (this.refreshPipelines(t, s, a, i), t || this.table.columnManager.renderer.renderColumns(), this.renderTable(), r.options.layoutColumnsOnNewData && this.table.columnManager.redraw(!0))
                                : this.refreshPipelines(t, s, a, i),
                                this.dispatch("data-refreshed");
                        }
                    }
                    refreshPipelines(t, e, i, r) {
                        switch ((this.dispatch("data-refreshing"), t || (this.activeRowsPipeline[0] = this.rows.slice(0)), e)) {
                            case "all":
                            case "dataPipeline":
                                for (var s = i; s < this.dataPipeline.length; s++) {
                                    var a = this.dataPipeline[s].handler(this.activeRowsPipeline[s].slice(0));
                                    this.activeRowsPipeline[s + 1] = a || this.activeRowsPipeline[s].slice(0);
                                }
                                this.setActiveRows(this.activeRowsPipeline[this.dataPipeline.length]);
                            case "display":
                                (i = 0), this.resetDisplayRows();
                            case "displayPipeline":
                                for (var n = i; n < this.displayPipeline.length; n++) {
                                    var o = this.displayPipeline[n].handler((n ? this.getDisplayRows(n - 1) : this.activeRows).slice(0), r);
                                    this.setDisplayRows(o || this.getDisplayRows(n - 1).slice(0), n);
                                }
                            case "end":
                                this.regenerateRowPositions();
                        }
                        this.getDisplayRows().length && this._clearPlaceholder();
                    }
                    regenerateRowPositions() {
                        var t = this.getDisplayRows(),
                            e = 1;
                        t.forEach((t) => {
                            "row" === t.type && (t.setPosition(e), e++);
                        });
                    }
                    setActiveRows(t) {
                        (this.activeRows = this.activeRows = Object.assign([], t)), (this.activeRowsCount = this.activeRows.length);
                    }
                    resetDisplayRows() {
                        (this.displayRows = []), this.displayRows.push(this.activeRows.slice(0)), (this.displayRowsCount = this.displayRows[0].length);
                    }
                    setDisplayRows(t, e) {
                        (this.displayRows[e] = t), e == this.displayRows.length - 1 && (this.displayRowsCount = this.displayRows[this.displayRows.length - 1].length);
                    }
                    getDisplayRows(t) {
                        return void 0 === t ? (this.displayRows.length ? this.displayRows[this.displayRows.length - 1] : []) : this.displayRows[t] || [];
                    }
                    getVisibleRows(t, e) {
                        var i = Object.assign([], this.renderer.visibleRows(!e));
                        return t && (i = this.chain("rows-visible", [e], i, i)), i;
                    }
                    displayRowIterator(t) {
                        this.activeRowsPipeline.forEach(t), this.displayRows.forEach(t), (this.displayRowsCount = this.displayRows[this.displayRows.length - 1].length);
                    }
                    getRows(t) {
                        var e = [];
                        switch (t) {
                            case "active":
                                e = this.activeRows;
                                break;
                            case "display":
                                e = this.table.rowManager.getDisplayRows();
                                break;
                            case "visible":
                                e = this.getVisibleRows(!1, !0);
                                break;
                            default:
                                e = this.chain("rows-retrieve", t, null, this.rows) || this.rows;
                        }
                        return e;
                    }
                    reRenderInPosition(t) {
                        this.redrawBlock
                            ? t
                                ? t()
                                : (this.redrawBlockRenderInPosition = !0)
                            : (this.dispatchExternal("renderStarted"), this.renderer.rerenderRows(t), this.fixedHeight || this.adjustTableSize(), this.scrollBarCheck(), this.dispatchExternal("renderComplete"));
                    }
                    scrollBarCheck() {
                        var t = 0;
                        this.element.scrollHeight > this.element.clientHeight && (t = this.element.offsetWidth - this.element.clientWidth), t !== this.scrollbarWidth && ((this.scrollbarWidth = t), this.dispatch("scrollbar-vertical", t));
                    }
                    initializeRenderer() {
                        var t,
                            e = { virtual: kt, basic: Pt };
                        (t = "string" == typeof this.table.options.renderVertical ? e[this.table.options.renderVertical] : this.table.options.renderVertical)
                            ? ((this.renderMode = this.table.options.renderVertical),
                              (this.renderer = new t(this.table, this.element, this.tableElement)),
                              this.renderer.initialize(),
                              (!this.table.element.clientHeight && !this.table.options.height) || (this.table.options.minHeight && this.table.options.maxHeight) ? (this.fixedHeight = !1) : (this.fixedHeight = !0))
                            : console.error("Unable to find matching renderer:", this.table.options.renderVertical);
                    }
                    getRenderMode() {
                        return this.renderMode;
                    }
                    renderTable() {
                        this.dispatchExternal("renderStarted"),
                            (this.element.scrollTop = 0),
                            this._clearTable(),
                            this.displayRowsCount ? (this.renderer.renderRows(), this.firstRender && ((this.firstRender = !1), this.fixedHeight || this.adjustTableSize(), this.layoutRefresh(!0))) : this.renderEmptyScroll(),
                            this.fixedHeight || this.adjustTableSize(),
                            this.dispatch("table-layout"),
                            this.displayRowsCount || this._showPlaceholder(),
                            this.scrollBarCheck(),
                            this.dispatchExternal("renderComplete");
                    }
                    renderEmptyScroll() {
                        this.placeholder ? (this.tableElement.style.display = "none") : (this.tableElement.style.minWidth = this.table.columnManager.getWidth() + "px");
                    }
                    _clearTable() {
                        this._clearPlaceholder(), (this.scrollTop = 0), (this.scrollLeft = 0), this.renderer.clearRows();
                    }
                    tableEmpty() {
                        this.renderEmptyScroll(), this._showPlaceholder();
                    }
                    _showPlaceholder() {
                        this.placeholder &&
                            (this.placeholder && this.placeholder.parentNode && this.placeholder.parentNode.removeChild(this.placeholder),
                            this.initializePlaceholder(),
                            this.placeholder.setAttribute("tabulator-render-mode", this.renderMode),
                            this.getElement().appendChild(this.placeholder),
                            this._positionPlaceholder());
                    }
                    _clearPlaceholder() {
                        this.placeholder && this.placeholder.parentNode && this.placeholder.parentNode.removeChild(this.placeholder), (this.tableElement.style.minWidth = ""), (this.tableElement.style.display = "");
                    }
                    _positionPlaceholder() {
                        this.placeholder &&
                            this.placeholder.parentNode &&
                            ((this.placeholder.style.width = this.table.columnManager.getWidth() + "px"),
                            (this.placeholderContents.style.width = this.table.rowManager.element.clientWidth + "px"),
                            (this.placeholderContents.style.marginLeft = this.scrollLeft + "px"));
                    }
                    styleRow(t, e) {
                        var i = t.getElement();
                        e % 2 ? (i.classList.add("tabulator-row-even"), i.classList.remove("tabulator-row-odd")) : (i.classList.add("tabulator-row-odd"), i.classList.remove("tabulator-row-even"));
                    }
                    normalizeHeight() {
                        this.activeRows.forEach(function (t) {
                            t.normalizeHeight();
                        });
                    }
                    adjustTableSize() {
                        var t,
                            e = this.element.clientHeight,
                            i = !1;
                        if ("fill" === this.renderer.verticalFillMode) {
                            var r = Math.floor(
                                this.table.columnManager.getElement().getBoundingClientRect().height +
                                    (this.table.footerManager && this.table.footerManager.active && !this.table.footerManager.external ? this.table.footerManager.getElement().getBoundingClientRect().height : 0)
                            );
                            if (this.fixedHeight) {
                                t = isNaN(this.table.options.minHeight) ? this.table.options.minHeight : this.table.options.minHeight + "px";
                                var s = "calc(100% - " + r + "px)";
                                (this.element.style.minHeight = t || "calc(100% - " + r + "px)"), (this.element.style.height = s), (this.element.style.maxHeight = s);
                            } else (this.element.style.height = ""), (this.element.style.height = this.table.element.clientHeight - r + "px"), (this.element.scrollTop = this.scrollTop);
                            this.renderer.resize(), this.fixedHeight || e == this.element.clientHeight || ((i = !0), this.subscribed("table-resize") ? this.dispatch("table-resize") : this.redraw()), this.scrollBarCheck();
                        }
                        return this._positionPlaceholder(), i;
                    }
                    reinitialize() {
                        this.rows.forEach(function (t) {
                            t.reinitialize(!0);
                        });
                    }
                    blockRedraw() {
                        (this.redrawBlock = !0), (this.redrawBlockRestoreConfig = !1);
                    }
                    restoreRedraw() {
                        (this.redrawBlock = !1),
                            this.redrawBlockRestoreConfig
                                ? (this.refreshActiveData(this.redrawBlockRestoreConfig.handler, this.redrawBlockRestoreConfig.skipStage, this.redrawBlockRestoreConfig.renderInPosition), (this.redrawBlockRestoreConfig = !1))
                                : this.redrawBlockRenderInPosition && this.reRenderInPosition(),
                            (this.redrawBlockRenderInPosition = !1);
                    }
                    redraw(t) {
                        var e = this.adjustTableSize();
                        (this.table.tableWidth = this.table.element.clientWidth), t ? this.renderTable() : (e && this.reRenderInPosition(), this.scrollHorizontal(this.scrollLeft));
                    }
                    resetScroll() {
                        if (((this.element.scrollLeft = 0), (this.element.scrollTop = 0), "ie" === this.table.browser)) {
                            var t = document.createEvent("Event");
                            t.initEvent("scroll", !1, !0), this.element.dispatchEvent(t);
                        } else this.element.dispatchEvent(new Event("scroll"));
                    }
                }
                class Dt extends n {
                    constructor(t) {
                        super(t), (this.active = !1), (this.element = this.createElement()), (this.containerElement = this.createContainerElement()), (this.external = !1);
                    }
                    initialize() {
                        this.initializeElement();
                    }
                    createElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-footer"), t;
                    }
                    createContainerElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-footer-contents"), this.element.appendChild(t), t;
                    }
                    initializeElement() {
                        if (this.table.options.footerElement)
                            if ("string" == typeof this.table.options.footerElement)
                                "<" === this.table.options.footerElement[0]
                                    ? (this.containerElement.innerHTML = this.table.options.footerElement)
                                    : ((this.external = !0), (this.containerElement = document.querySelector(this.table.options.footerElement)));
                            else this.element = this.table.options.footerElement;
                    }
                    getElement() {
                        return this.element;
                    }
                    append(t) {
                        this.activate(), this.containerElement.appendChild(t), this.table.rowManager.adjustTableSize();
                    }
                    prepend(t) {
                        this.activate(), this.element.insertBefore(t, this.element.firstChild), this.table.rowManager.adjustTableSize();
                    }
                    remove(t) {
                        t.parentNode.removeChild(t), this.deactivate();
                    }
                    deactivate(t) {
                        (this.element.firstChild && !t) || (this.external || this.element.parentNode.removeChild(this.element), (this.active = !1));
                    }
                    activate() {
                        this.active || ((this.active = !0), this.external || (this.table.element.appendChild(this.getElement()), (this.table.element.style.display = "")));
                    }
                    redraw() {
                        this.dispatch("footer-redraw");
                    }
                }
                class Lt extends n {
                    constructor(t) {
                        super(t),
                            (this.el = null),
                            (this.abortClasses = ["tabulator-headers", "tabulator-table"]),
                            (this.previousTargets = {}),
                            (this.listeners = ["click", "dblclick", "contextmenu", "mouseenter", "mouseleave", "mouseover", "mouseout", "mousemove", "mouseup", "mousedown", "touchstart", "touchend"]),
                            (this.componentMap = { "tabulator-cell": "cell", "tabulator-row": "row", "tabulator-group": "group", "tabulator-col": "column" }),
                            (this.pseudoTrackers = { row: { subscriber: null, target: null }, cell: { subscriber: null, target: null }, group: { subscriber: null, target: null }, column: { subscriber: null, target: null } }),
                            (this.pseudoTracking = !1);
                    }
                    initialize() {
                        (this.el = this.table.element), this.buildListenerMap(), this.bindSubscriptionWatchers();
                    }
                    buildListenerMap() {
                        var t = {};
                        this.listeners.forEach((e) => {
                            t[e] = { handler: null, components: [] };
                        }),
                            (this.listeners = t);
                    }
                    bindPseudoEvents() {
                        Object.keys(this.pseudoTrackers).forEach((t) => {
                            (this.pseudoTrackers[t].subscriber = this.pseudoMouseEnter.bind(this, t)), this.subscribe(t + "-mouseover", this.pseudoTrackers[t].subscriber);
                        }),
                            (this.pseudoTracking = !0);
                    }
                    pseudoMouseEnter(t, e, i) {
                        this.pseudoTrackers[t].target !== i &&
                            (this.pseudoTrackers[t].target && this.dispatch(t + "-mouseleave", e, this.pseudoTrackers[t].target), this.pseudoMouseLeave(t, e), (this.pseudoTrackers[t].target = i), this.dispatch(t + "-mouseenter", e, i));
                    }
                    pseudoMouseLeave(t, e) {
                        var i = Object.keys(this.pseudoTrackers),
                            r = { row: ["cell"], cell: ["row"] };
                        (i = i.filter((e) => {
                            var i = r[t];
                            return e !== t && (!i || (i && !i.includes(e)));
                        })).forEach((t) => {
                            var i = this.pseudoTrackers[t].target;
                            this.pseudoTrackers[t].target && (this.dispatch(t + "-mouseleave", e, i), (this.pseudoTrackers[t].target = null));
                        });
                    }
                    bindSubscriptionWatchers() {
                        for (var t = Object.keys(this.listeners), e = 0, i = Object.values(this.componentMap); e < i.length; e++) {
                            var r,
                                a = i[e],
                                n = s(t);
                            try {
                                for (n.s(); !(r = n.n()).done; ) {
                                    var o = r.value,
                                        l = a + "-" + o;
                                    this.subscriptionChange(l, this.subscriptionChanged.bind(this, a, o));
                                }
                            } catch (t) {
                                n.e(t);
                            } finally {
                                n.f();
                            }
                        }
                        this.subscribe("table-destroy", this.clearWatchers.bind(this));
                    }
                    subscriptionChanged(t, e, i) {
                        var r = this.listeners[e].components,
                            s = r.indexOf(t),
                            a = !1;
                        i ? -1 === s && (r.push(t), (a = !0)) : this.subscribed(t + "-" + e) || (s > -1 && (r.splice(s, 1), (a = !0))),
                            ("mouseenter" !== e && "mouseleave" !== e) || this.pseudoTracking || this.bindPseudoEvents(),
                            a && this.updateEventListeners();
                    }
                    updateEventListeners() {
                        for (var t in this.listeners) {
                            var e = this.listeners[t];
                            e.components.length ? e.handler || ((e.handler = this.track.bind(this, t)), this.el.addEventListener(t, e.handler)) : e.handler && (this.el.removeEventListener(t, e.handler), (e.handler = null));
                        }
                    }
                    track(t, e) {
                        var i = (e.composedPath && e.composedPath()) || e.path,
                            r = this.findTargets(i);
                        (r = this.bindComponents(t, r)), this.triggerEvents(t, e, r), !this.pseudoTracking || ("mouseover" != t && "mouseleave" != t) || Object.keys(r).length || this.pseudoMouseLeave("none", e);
                    }
                    findTargets(t) {
                        var e,
                            i = {},
                            r = Object.keys(this.componentMap),
                            a = s(t);
                        try {
                            for (a.s(); !(e = a.n()).done; ) {
                                var n = e.value,
                                    o = n.classList ? [...n.classList] : [];
                                if (o.filter((t) => this.abortClasses.includes(t)).length) break;
                                var l,
                                    h = s(o.filter((t) => r.includes(t)));
                                try {
                                    for (h.s(); !(l = h.n()).done; ) {
                                        var c = l.value;
                                        i[this.componentMap[c]] || (i[this.componentMap[c]] = n);
                                    }
                                } catch (t) {
                                    h.e(t);
                                } finally {
                                    h.f();
                                }
                            }
                        } catch (t) {
                            a.e(t);
                        } finally {
                            a.f();
                        }
                        return i.group && i.group === i.row && delete i.row, i;
                    }
                    bindComponents(t, e) {
                        var i,
                            r = this,
                            a = Object.keys(e).reverse(),
                            n = this.listeners[t],
                            o = {},
                            l = {},
                            h = s(a);
                        try {
                            var c = function () {
                                var t,
                                    s = i.value,
                                    a = e[s],
                                    h = r.previousTargets[s];
                                if (h && h.target === a) t = h.component;
                                else
                                    switch (s) {
                                        case "row":
                                        case "group":
                                            if (n.components.includes("row") || n.components.includes("cell") || n.components.includes("group"))
                                                (t = r.table.rowManager.getVisibleRows(!0).find((t) => t.getElement() === a)), e.row && e.row.parentNode && e.row.parentNode.closest(".tabulator-row") && (e[s] = !1);
                                            break;
                                        case "column":
                                            n.components.includes("column") && (t = r.table.columnManager.findColumn(a));
                                            break;
                                        case "cell":
                                            n.components.includes("cell") &&
                                                (o.row instanceof T
                                                    ? (t = o.row.findCell(a))
                                                    : e.row && console.warn("Event Target Lookup Error - The row this cell is attached to cannot be found, has the table been reinitialized without being destroyed first?"));
                                    }
                                t && ((o[s] = t), (l[s] = { target: a, component: t }));
                            };
                            for (h.s(); !(i = h.n()).done; ) c();
                        } catch (t) {
                            h.e(t);
                        } finally {
                            h.f();
                        }
                        return (this.previousTargets = l), o;
                    }
                    triggerEvents(t, e, i) {
                        var r = this.listeners[t];
                        for (var s in i) i[s] && r.components.includes(s) && this.dispatch(s + "-" + t, e, i[s]);
                    }
                    clearWatchers() {
                        for (var t in this.listeners) {
                            var e = this.listeners[t];
                            e.handler && (this.el.removeEventListener(t, e.handler), (e.handler = null));
                        }
                    }
                }
                class It {
                    constructor(t) {
                        (this.table = t), (this.bindings = {});
                    }
                    bind(t, e, i) {
                        this.bindings[t] || (this.bindings[t] = {}), this.bindings[t][e] ? console.warn("Unable to bind component handler, a matching function name is already bound", t, e, i) : (this.bindings[t][e] = i);
                    }
                    handle(t, e, i) {
                        if (this.bindings[t] && this.bindings[t][i] && "function" == typeof this.bindings[t][i].bind) return this.bindings[t][i].bind(null, e);
                        "then" === i ||
                            "string" != typeof i ||
                            i.startsWith("_") ||
                            (this.table.options.debugInvalidComponentFuncs && console.error("The " + t + " component does not have a " + i + " function, have you checked that you have the correct Tabulator module installed?"));
                    }
                }
                class Rt extends n {
                    constructor(t) {
                        super(t), (this.requestOrder = 0), (this.loading = !1);
                    }
                    initialize() {}
                    load(t, e, i, r, s, a) {
                        var n = ++this.requestOrder;
                        return (
                            this.dispatchExternal("dataLoading", t),
                            !t || (0 != t.indexOf("{") && 0 != t.indexOf("[")) || (t = JSON.parse(t)),
                            this.confirm("data-loading", [t, e, i, s])
                                ? ((this.loading = !0),
                                  s || this.alertLoader(),
                                  (e = this.chain("data-params", [t, i, s], e || {}, e || {})),
                                  (e = this.mapParams(e, this.table.options.dataSendParams)),
                                  this.chain("data-load", [t, e, i, s], !1, Promise.resolve([]))
                                      .then((t) => {
                                          Array.isArray(t) || "object" != typeof t || (t = this.mapParams(t, this.objectInvert(this.table.options.dataReceiveParams)));
                                          var e = this.chain("data-loaded", t, null, t);
                                          n == this.requestOrder
                                              ? (this.clearAlert(), !1 !== e && (this.dispatchExternal("dataLoaded", e), this.table.rowManager.setData(e, r, void 0 === a ? !r : a)))
                                              : console.warn("Data Load Response Blocked - An active data load request was blocked by an attempt to change table data while the request was being made");
                                      })
                                      .catch((t) => {
                                          console.error("Data Load Error: ", t),
                                              this.dispatchExternal("dataLoadError", t),
                                              s || this.alertError(),
                                              setTimeout(() => {
                                                  this.clearAlert();
                                              }, this.table.options.dataLoaderErrorTimeout);
                                      })
                                      .finally(() => {
                                          this.loading = !1;
                                      }))
                                : (this.dispatchExternal("dataLoaded", t), t || (t = []), this.table.rowManager.setData(t, r, void 0 === a ? !r : a), Promise.resolve())
                        );
                    }
                    mapParams(t, e) {
                        var i = {};
                        for (var r in t) i[e.hasOwnProperty(r) ? e[r] : r] = t[r];
                        return i;
                    }
                    objectInvert(t) {
                        var e = {};
                        for (var i in t) e[t[i]] = i;
                        return e;
                    }
                    blockActiveLoad() {
                        this.requestOrder++;
                    }
                    alertLoader() {
                        ("function" == typeof this.table.options.dataLoader ? this.table.options.dataLoader() : this.table.options.dataLoader) &&
                            this.table.alertManager.alert(this.table.options.dataLoaderLoading || this.langText("data|loading"));
                    }
                    alertError() {
                        this.table.alertManager.alert(this.table.options.dataLoaderError || this.langText("data|error"), "error");
                    }
                    clearAlert() {
                        this.table.alertManager.clear();
                    }
                }
                class Ot {
                    constructor(t, e, i) {
                        (this.table = t), (this.events = {}), (this.optionsList = e || {}), (this.subscriptionNotifiers = {}), (this.dispatch = i ? this._debugDispatch.bind(this) : this._dispatch.bind(this)), (this.debug = i);
                    }
                    subscriptionChange(t, e) {
                        this.subscriptionNotifiers[t] || (this.subscriptionNotifiers[t] = []), this.subscriptionNotifiers[t].push(e), this.subscribed(t) && this._notifySubscriptionChange(t, !0);
                    }
                    subscribe(t, e) {
                        this.events[t] || (this.events[t] = []), this.events[t].push(e), this._notifySubscriptionChange(t, !0);
                    }
                    unsubscribe(t, e) {
                        var i;
                        if (this.events[t]) {
                            if (e) {
                                if (!((i = this.events[t].findIndex((t) => t === e)) > -1)) return void console.warn("Cannot remove event, no matching event found:", t, e);
                                this.events[t].splice(i, 1);
                            } else delete this.events[t];
                            this._notifySubscriptionChange(t, !1);
                        } else console.warn("Cannot remove event, no events set on:", t);
                    }
                    subscribed(t) {
                        return this.events[t] && this.events[t].length;
                    }
                    _notifySubscriptionChange(t, e) {
                        var i = this.subscriptionNotifiers[t];
                        i &&
                            i.forEach((t) => {
                                t(e);
                            });
                    }
                    _dispatch() {
                        var t,
                            e = Array.from(arguments),
                            i = e.shift();
                        return (
                            this.events[i] &&
                                this.events[i].forEach((i, r) => {
                                    var s = i.apply(this.table, e);
                                    r || (t = s);
                                }),
                            t
                        );
                    }
                    _debugDispatch() {
                        var t = Array.from(arguments),
                            e = t[0];
                        return (t[0] = "ExternalEvent:" + t[0]), (!0 === this.debug || this.debug.includes(e)) && console.log(...t), this._dispatch(...arguments);
                    }
                }
                class Ft {
                    constructor(t) {
                        (this.events = {}),
                            (this.subscriptionNotifiers = {}),
                            (this.dispatch = t ? this._debugDispatch.bind(this) : this._dispatch.bind(this)),
                            (this.chain = t ? this._debugChain.bind(this) : this._chain.bind(this)),
                            (this.confirm = t ? this._debugConfirm.bind(this) : this._confirm.bind(this)),
                            (this.debug = t);
                    }
                    subscriptionChange(t, e) {
                        this.subscriptionNotifiers[t] || (this.subscriptionNotifiers[t] = []), this.subscriptionNotifiers[t].push(e), this.subscribed(t) && this._notifySubscriptionChange(t, !0);
                    }
                    subscribe(t, e, i = 1e4) {
                        this.events[t] || (this.events[t] = []), this.events[t].push({ callback: e, priority: i }), this.events[t].sort((t, e) => t.priority - e.priority), this._notifySubscriptionChange(t, !0);
                    }
                    unsubscribe(t, e) {
                        var i;
                        if (this.events[t]) {
                            if (e) {
                                if (!((i = this.events[t].findIndex((t) => t.callback === e)) > -1)) return void console.warn("Cannot remove event, no matching event found:", t, e);
                                this.events[t].splice(i, 1);
                            }
                            this._notifySubscriptionChange(t, !1);
                        } else console.warn("Cannot remove event, no events set on:", t);
                    }
                    subscribed(t) {
                        return this.events[t] && this.events[t].length;
                    }
                    _chain(t, e, i, r) {
                        var s = i;
                        return (
                            Array.isArray(e) || (e = [e]),
                            this.subscribed(t)
                                ? (this.events[t].forEach((t, i) => {
                                      s = t.callback.apply(this, e.concat([s]));
                                  }),
                                  s)
                                : "function" == typeof r
                                ? r()
                                : r
                        );
                    }
                    _confirm(t, e) {
                        var i = !1;
                        return (
                            Array.isArray(e) || (e = [e]),
                            this.subscribed(t) &&
                                this.events[t].forEach((t, r) => {
                                    t.callback.apply(this, e) && (i = !0);
                                }),
                            i
                        );
                    }
                    _notifySubscriptionChange(t, e) {
                        var i = this.subscriptionNotifiers[t];
                        i &&
                            i.forEach((t) => {
                                t(e);
                            });
                    }
                    _dispatch() {
                        var t = Array.from(arguments),
                            e = t.shift();
                        this.events[e] &&
                            this.events[e].forEach((e) => {
                                e.callback.apply(this, t);
                            });
                    }
                    _debugDispatch() {
                        var t = Array.from(arguments),
                            e = t[0];
                        return (t[0] = "InternalEvent:" + e), (!0 === this.debug || this.debug.includes(e)) && console.log(...t), this._dispatch(...arguments);
                    }
                    _debugChain() {
                        var t = Array.from(arguments),
                            e = t[0];
                        return (t[0] = "InternalEvent:" + e), (!0 === this.debug || this.debug.includes(e)) && console.log(...t), this._chain(...arguments);
                    }
                    _debugConfirm() {
                        var t = Array.from(arguments),
                            e = t[0];
                        return (t[0] = "InternalEvent:" + e), (!0 === this.debug || this.debug.includes(e)) && console.log(...t), this._confirm(...arguments);
                    }
                }
                class Bt extends n {
                    constructor(t) {
                        super(t);
                    }
                    _warnUser() {
                        this.options("debugDeprecation") && console.warn(...arguments);
                    }
                    check(t, e) {
                        var i = "";
                        return (
                            void 0 === this.options(t) ||
                            ((i = "Deprecated Setup Option - Use of the %c" + t + "%c option is now deprecated"),
                            e
                                ? ((i = i + ", Please use the %c" + e + "%c option instead"), this._warnUser(i, "font-weight: bold;", "font-weight: normal;", "font-weight: bold;", "font-weight: normal;"))
                                : this._warnUser(i, "font-weight: bold;", "font-weight: normal;"),
                            !1)
                        );
                    }
                    checkMsg(t, e) {
                        return void 0 === this.options(t) || (this._warnUser("%cDeprecated Setup Option - Use of the %c" + t + " %c option is now deprecated, " + e, "font-weight: normal;", "font-weight: bold;", "font-weight: normal;"), !1);
                    }
                    msg(t) {
                        this._warnUser(t);
                    }
                }
                class zt {
                    static register(t) {
                        zt.tables.push(t);
                    }
                    static deregister(t) {
                        var e = zt.tables.indexOf(t);
                        e > -1 && zt.tables.splice(e, 1);
                    }
                    static lookupTable(t, e) {
                        var i,
                            r,
                            s = [];
                        if ("string" == typeof t) {
                            if ((i = document.querySelectorAll(t)).length) for (var a = 0; a < i.length; a++) (r = zt.matchElement(i[a])) && s.push(r);
                        } else
                            ("undefined" != typeof HTMLElement && t instanceof HTMLElement) || t instanceof Ut
                                ? (r = zt.matchElement(t)) && s.push(r)
                                : Array.isArray(t)
                                ? t.forEach(function (t) {
                                      s = s.concat(zt.lookupTable(t));
                                  })
                                : e || console.warn("Table Connection Error - Invalid Selector", t);
                        return s;
                    }
                    static matchElement(t) {
                        return zt.tables.find(function (e) {
                            return t instanceof Ut ? e === t : e.element === t;
                        });
                    }
                }
                function Nt(t, e) {
                    t.forEach(function (t) {
                        t.reinitializeWidth();
                    }),
                        this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.update();
                }
                zt.tables = [];
                var Vt = {
                    fitData: function (t, e) {
                        e && this.table.columnManager.renderer.reinitializeColumnWidths(t), this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.update();
                    },
                    fitDataFill: Nt,
                    fitDataTable: Nt,
                    fitDataStretch: function (t, e) {
                        var i = 0,
                            r = this.table.rowManager.element.clientWidth,
                            s = 0,
                            a = !1;
                        t.forEach((t, e) => {
                            t.widthFixed || t.reinitializeWidth(), (this.table.options.responsiveLayout ? t.modules.responsive.visible : t.visible) && (a = t), t.visible && (i += t.getWidth());
                        }),
                            a
                                ? ((s = r - i + a.getWidth()),
                                  this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && (a.setWidth(0), this.table.modules.responsiveLayout.update()),
                                  s > 0 ? a.setWidth(s) : a.reinitializeWidth())
                                : this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.update();
                    },
                    fitColumns: function (t, e) {
                        var i,
                            r,
                            s = this.table.rowManager.element.getBoundingClientRect().width,
                            a = 0,
                            n = 0,
                            o = 0,
                            l = [],
                            h = [],
                            c = 0,
                            d = 0;
                        function u(t) {
                            return "string" == typeof t ? (t.indexOf("%") > -1 ? (s / 100) * parseInt(t) : parseInt(t)) : t;
                        }
                        function p(t, e, i, r) {
                            var s = [],
                                a = 0,
                                n = 0,
                                l = 0,
                                h = o,
                                c = 0,
                                d = 0,
                                m = [];
                            function f(t) {
                                return i * (t.column.definition.widthGrow || 1);
                            }
                            function g(t) {
                                return u(t.width) - i * (t.column.definition.widthShrink || 0);
                            }
                            return (
                                t.forEach(function (t, a) {
                                    var n = r ? g(t) : f(t);
                                    t.column.minWidth >= n
                                        ? s.push(t)
                                        : t.column.maxWidth && t.column.maxWidth < n
                                        ? ((t.width = t.column.maxWidth), (e -= t.column.maxWidth), (h -= r ? t.column.definition.widthShrink || 1 : t.column.definition.widthGrow || 1) && (i = Math.floor(e / h)))
                                        : (m.push(t), (d += r ? t.column.definition.widthShrink || 1 : t.column.definition.widthGrow || 1));
                                }),
                                s.length
                                    ? (s.forEach(function (t) {
                                          (a += r ? t.width - t.column.minWidth : t.column.minWidth), (t.width = t.column.minWidth);
                                      }),
                                      (n = e - a),
                                      (l = d ? Math.floor(n / d) : n),
                                      (c = p(m, n, l, r)))
                                    : ((c = d ? e - Math.floor(e / d) * d : e),
                                      m.forEach(function (t) {
                                          t.width = r ? g(t) : f(t);
                                      })),
                                c
                            );
                        }
                        this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.update(),
                            this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight && (s -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth),
                            t.forEach(function (t) {
                                var e, i, r;
                                t.visible &&
                                    ((e = t.definition.width),
                                    (i = parseInt(t.minWidth)),
                                    e
                                        ? ((r = u(e)), (a += r > i ? r : i), t.definition.widthShrink && (h.push({ column: t, width: r > i ? r : i }), (c += t.definition.widthShrink)))
                                        : (l.push({ column: t, width: 0 }), (o += t.definition.widthGrow || 1)));
                            }),
                            (n = s - a),
                            (i = Math.floor(n / o)),
                            (d = p(l, n, i, !1)),
                            l.length && d > 0 && (l[l.length - 1].width += d),
                            l.forEach(function (t) {
                                n -= t.width;
                            }),
                            (r = Math.abs(d) + n) > 0 && c && (d = p(h, r, Math.floor(r / c), !0)),
                            d && h.length && (h[h.length - 1].width -= d),
                            l.forEach(function (t) {
                                t.column.setWidth(t.width);
                            }),
                            h.forEach(function (t) {
                                t.column.setWidth(t.width);
                            });
                    },
                };
                class Ht extends h {
                    constructor(t) {
                        super(t, "layout"),
                            (this.mode = null),
                            this.registerTableOption("layout", "fitData"),
                            this.registerTableOption("layoutColumnsOnNewData", !1),
                            this.registerColumnOption("widthGrow"),
                            this.registerColumnOption("widthShrink");
                    }
                    initialize() {
                        var t = this.table.options.layout;
                        Ht.modes[t] ? (this.mode = t) : (console.warn("Layout Error - invalid mode set, defaulting to 'fitData' : " + t), (this.mode = "fitData")), this.table.element.setAttribute("tabulator-layout", this.mode);
                    }
                    getMode() {
                        return this.mode;
                    }
                    layout(t) {
                        this.dispatch("layout-refreshing"), Ht.modes[this.mode].call(this, this.table.columnManager.columnsByIndex, t), this.dispatch("layout-refreshed");
                    }
                }
                (Ht.moduleName = "layout"), (Ht.modes = Vt);
                class jt extends h {
                    constructor(t) {
                        super(t), (this.locale = "default"), (this.lang = !1), (this.bindings = {}), (this.langList = {}), this.registerTableOption("locale", !1), this.registerTableOption("langs", {});
                    }
                    initialize() {
                        for (var t in ((this.langList = o.deepClone(jt.langs)),
                        !1 !== this.table.options.columnDefaults.headerFilterPlaceholder && this.setHeaderFilterPlaceholder(this.table.options.columnDefaults.headerFilterPlaceholder),
                        this.table.options.langs))
                            this.installLang(t, this.table.options.langs[t]);
                        this.setLocale(this.table.options.locale),
                            this.registerTableFunction("setLocale", this.setLocale.bind(this)),
                            this.registerTableFunction("getLocale", this.getLocale.bind(this)),
                            this.registerTableFunction("getLang", this.getLang.bind(this));
                    }
                    setHeaderFilterPlaceholder(t) {
                        this.langList.default.headerFilters.default = t;
                    }
                    installLang(t, e) {
                        this.langList[t] ? this._setLangProp(this.langList[t], e) : (this.langList[t] = e);
                    }
                    _setLangProp(t, e) {
                        for (var i in e) t[i] && "object" == typeof t[i] ? this._setLangProp(t[i], e[i]) : (t[i] = e[i]);
                    }
                    setLocale(t) {
                        if ((!0 === (t = t || "default") && navigator.language && (t = navigator.language.toLowerCase()), t && !this.langList[t])) {
                            var e = t.split("-")[0];
                            this.langList[e]
                                ? (console.warn("Localization Error - Exact matching locale not found, using closest match: ", t, e), (t = e))
                                : (console.warn("Localization Error - Matching locale not found, using default: ", t), (t = "default"));
                        }
                        (this.locale = t),
                            (this.lang = o.deepClone(this.langList.default || {})),
                            "default" != t &&
                                (function t(e, i) {
                                    for (var r in e) "object" == typeof e[r] ? (i[r] || (i[r] = {}), t(e[r], i[r])) : (i[r] = e[r]);
                                })(this.langList[t], this.lang),
                            this.dispatchExternal("localized", this.locale, this.lang),
                            this._executeBindings();
                    }
                    getLocale(t) {
                        return this.locale;
                    }
                    getLang(t) {
                        return t ? this.langList[t] : this.lang;
                    }
                    getText(t, e) {
                        var i = (e ? t + "|" + e : t).split("|");
                        return this._getLangElement(i, this.locale) || "";
                    }
                    _getLangElement(t, e) {
                        var i = this.lang;
                        return (
                            t.forEach(function (t) {
                                var e;
                                i && ((e = i[t]), (i = void 0 !== e && e));
                            }),
                            i
                        );
                    }
                    bind(t, e) {
                        this.bindings[t] || (this.bindings[t] = []), this.bindings[t].push(e), e(this.getText(t), this.lang);
                    }
                    _executeBindings() {
                        var t = this,
                            e = function (e) {
                                t.bindings[e].forEach((i) => {
                                    i(t.getText(e), t.lang);
                                });
                            };
                        for (var i in this.bindings) e(i);
                    }
                }
                (jt.moduleName = "localize"),
                    (jt.langs = {
                        default: {
                            groups: { item: "item", items: "items" },
                            columns: {},
                            data: { loading: "Loading", error: "Error" },
                            pagination: {
                                page_size: "Page Size",
                                page_title: "Show Page",
                                first: "First",
                                first_title: "First Page",
                                last: "Last",
                                last_title: "Last Page",
                                prev: "Prev",
                                prev_title: "Prev Page",
                                next: "Next",
                                next_title: "Next Page",
                                all: "All",
                                counter: { showing: "Showing", of: "of", rows: "rows", pages: "pages" },
                            },
                            headerFilters: { default: "filter column...", columns: {} },
                        },
                    });
                class Wt extends h {
                    constructor(t) {
                        super(t);
                    }
                    initialize() {
                        this.registerTableFunction("tableComms", this.receive.bind(this));
                    }
                    getConnections(t) {
                        var e = [];
                        return (
                            zt.lookupTable(t).forEach((t) => {
                                this.table !== t && e.push(t);
                            }),
                            e
                        );
                    }
                    send(t, e, i, r) {
                        var s = this.getConnections(t);
                        s.forEach((t) => {
                            t.tableComms(this.table.element, e, i, r);
                        }),
                            !s.length && t && console.warn("Table Connection Error - No tables matching selector found", t);
                    }
                    receive(t, e, i, r) {
                        if (this.table.modExists(e)) return this.table.modules[e].commsReceived(t, i, r);
                        console.warn("Inter-table Comms Error - no such module:", e);
                    }
                }
                Wt.moduleName = "comms";
                var Gt = Object.freeze({ __proto__: null, LayoutModule: Ht, LocalizeModule: jt, CommsModule: Wt });
                class qt {
                    constructor(t, e) {
                        this.bindStaticFunctionality(t), this.bindModules(t, Gt, !0), e && this.bindModules(t, e);
                    }
                    bindStaticFunctionality(t) {
                        (t.moduleBindings = {}),
                            (t.extendModule = function (e, i, r) {
                                if (t.moduleBindings[e]) {
                                    var s = t.moduleBindings[e][i];
                                    if (s)
                                        if ("object" == typeof r) for (var a in r) s[a] = r[a];
                                        else console.warn("Module Error - Invalid value type, it must be an object");
                                    else console.warn("Module Error - property does not exist:", i);
                                } else console.warn("Module Error - module does not exist:", e);
                            }),
                            (t.registerModule = function (e) {
                                Array.isArray(e) || (e = [e]),
                                    e.forEach((e) => {
                                        t.registerModuleBinding(e);
                                    });
                            }),
                            (t.registerModuleBinding = function (e) {
                                t.moduleBindings[e.moduleName] = e;
                            }),
                            (t.findTable = function (t) {
                                var e = zt.lookupTable(t, !0);
                                return !(Array.isArray(e) && !e.length) && e;
                            }),
                            (t.prototype.bindModules = function () {
                                var e = [],
                                    i = [],
                                    r = [];
                                for (var s in ((this.modules = {}), t.moduleBindings)) {
                                    var a = t.moduleBindings[s],
                                        n = new a(this);
                                    (this.modules[s] = n), a.prototype.moduleCore ? this.modulesCore.push(n) : a.moduleInitOrder ? (a.moduleInitOrder < 0 ? e.push(n) : i.push(n)) : r.push(n);
                                }
                                e.sort((t, e) => (t.moduleInitOrder > e.moduleInitOrder ? 1 : -1)), i.sort((t, e) => (t.moduleInitOrder > e.moduleInitOrder ? 1 : -1)), (this.modulesRegular = e.concat(r.concat(i)));
                            });
                    }
                    bindModules(t, e, i) {
                        var r = Object.values(e);
                        i &&
                            r.forEach((t) => {
                                t.prototype.moduleCore = !0;
                            }),
                            t.registerModule(r);
                    }
                }
                class $t extends n {
                    constructor(t) {
                        super(t), (this.element = this._createAlertElement()), (this.msgElement = this._createMsgElement()), (this.type = null), this.element.appendChild(this.msgElement);
                    }
                    _createAlertElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-alert"), t;
                    }
                    _createMsgElement() {
                        var t = document.createElement("div");
                        return t.classList.add("tabulator-alert-msg"), t.setAttribute("role", "alert"), t;
                    }
                    _typeClass() {
                        return "tabulator-alert-state-" + this.type;
                    }
                    alert(t, e = "msg") {
                        if (t) {
                            for (this.clear(), this.type = e; this.msgElement.firstChild; ) this.msgElement.removeChild(this.msgElement.firstChild);
                            this.msgElement.classList.add(this._typeClass()),
                                "function" == typeof t && (t = t()),
                                t instanceof HTMLElement ? this.msgElement.appendChild(t) : (this.msgElement.innerHTML = t),
                                this.table.element.appendChild(this.element);
                        }
                    }
                    clear() {
                        this.element.parentNode && this.element.parentNode.removeChild(this.element), this.msgElement.classList.remove(this._typeClass());
                    }
                }
                class Ut {
                    constructor(t, e) {
                        (this.options = {}),
                            (this.columnManager = null),
                            (this.rowManager = null),
                            (this.footerManager = null),
                            (this.alertManager = null),
                            (this.vdomHoz = null),
                            (this.externalEvents = null),
                            (this.eventBus = null),
                            (this.interactionMonitor = !1),
                            (this.browser = ""),
                            (this.browserSlow = !1),
                            (this.browserMobile = !1),
                            (this.rtl = !1),
                            (this.originalElement = null),
                            (this.componentFunctionBinder = new It(this)),
                            (this.dataLoader = !1),
                            (this.modules = {}),
                            (this.modulesCore = []),
                            (this.modulesRegular = []),
                            (this.deprecationAdvisor = new Bt(this)),
                            (this.optionsList = new Ct(this, "table constructor")),
                            (this.initialized = !1),
                            (this.destroyed = !1),
                            this.initializeElement(t) &&
                                (this.initializeCoreSystems(e),
                                setTimeout(() => {
                                    this._create();
                                })),
                            zt.register(this);
                    }
                    initializeElement(t) {
                        return "undefined" != typeof HTMLElement && t instanceof HTMLElement
                            ? ((this.element = t), !0)
                            : "string" == typeof t
                            ? ((this.element = document.querySelector(t)), !!this.element || (console.error("Tabulator Creation Error - no element found matching selector: ", t), !1))
                            : (console.error("Tabulator Creation Error - Invalid element provided:", t), !1);
                    }
                    initializeCoreSystems(t) {
                        (this.columnManager = new Mt(this)),
                            (this.rowManager = new At(this)),
                            (this.footerManager = new Dt(this)),
                            (this.dataLoader = new Rt(this)),
                            (this.alertManager = new $t(this)),
                            this.bindModules(),
                            (this.options = this.optionsList.generate(Ut.defaultOptions, t)),
                            this._clearObjectPointers(),
                            this._mapDeprecatedFunctionality(),
                            (this.externalEvents = new Ot(this, this.options, this.options.debugEventsExternal)),
                            (this.eventBus = new Ft(this.options.debugEventsInternal)),
                            (this.interactionMonitor = new Lt(this)),
                            this.dataLoader.initialize(),
                            this.footerManager.initialize();
                    }
                    _mapDeprecatedFunctionality() {}
                    _clearSelection() {
                        this.element.classList.add("tabulator-block-select"),
                            window.getSelection
                                ? window.getSelection().empty
                                    ? window.getSelection().empty()
                                    : window.getSelection().removeAllRanges && window.getSelection().removeAllRanges()
                                : document.selection && document.selection.empty(),
                            this.element.classList.remove("tabulator-block-select");
                    }
                    _create() {
                        this.externalEvents.dispatch("tableBuilding"),
                            this.eventBus.dispatch("table-building"),
                            this._rtlCheck(),
                            this._buildElement(),
                            this._initializeTable(),
                            this._loadInitialData(),
                            (this.initialized = !0),
                            this.externalEvents.dispatch("tableBuilt");
                    }
                    _rtlCheck() {
                        var t = window.getComputedStyle(this.element);
                        switch (this.options.textDirection) {
                            case "auto":
                                if ("rtl" !== t.direction) break;
                            case "rtl":
                                this.element.classList.add("tabulator-rtl"), (this.rtl = !0);
                                break;
                            case "ltr":
                                this.element.classList.add("tabulator-ltr");
                            default:
                                this.rtl = !1;
                        }
                    }
                    _clearObjectPointers() {
                        (this.options.columns = this.options.columns.slice(0)), Array.isArray(this.options.data) && !this.options.reactiveData && (this.options.data = this.options.data.slice(0));
                    }
                    _buildElement() {
                        var t,
                            e = this.element,
                            i = this.options;
                        if ("TABLE" === e.tagName) {
                            (this.originalElement = this.element), (t = document.createElement("div"));
                            var r = e.attributes;
                            for (var s in r) "object" == typeof r[s] && t.setAttribute(r[s].name, r[s].value);
                            e.parentNode.replaceChild(t, e), (this.element = e = t);
                        }
                        for (e.classList.add("tabulator"), e.setAttribute("role", "grid"); e.firstChild; ) e.removeChild(e.firstChild);
                        i.height && ((i.height = isNaN(i.height) ? i.height : i.height + "px"), (e.style.height = i.height)),
                            !1 !== i.minHeight && ((i.minHeight = isNaN(i.minHeight) ? i.minHeight : i.minHeight + "px"), (e.style.minHeight = i.minHeight)),
                            !1 !== i.maxHeight && ((i.maxHeight = isNaN(i.maxHeight) ? i.maxHeight : i.maxHeight + "px"), (e.style.maxHeight = i.maxHeight));
                    }
                    _initializeTable() {
                        var t = this.element,
                            e = this.options;
                        this.interactionMonitor.initialize(),
                            this.columnManager.initialize(),
                            this.rowManager.initialize(),
                            this._detectBrowser(),
                            this.modulesCore.forEach((t) => {
                                t.initialize();
                            }),
                            t.appendChild(this.columnManager.getElement()),
                            t.appendChild(this.rowManager.getElement()),
                            e.footerElement && this.footerManager.activate(),
                            e.autoColumns && e.data && this.columnManager.generateColumnsFromRowData(this.options.data),
                            this.modulesRegular.forEach((t) => {
                                t.initialize();
                            }),
                            this.columnManager.setColumns(e.columns),
                            this.eventBus.dispatch("table-built");
                    }
                    _loadInitialData() {
                        this.dataLoader.load(this.options.data);
                    }
                    destroy() {
                        var t = this.element;
                        for (this.destroyed = !0, zt.deregister(this), this.eventBus.dispatch("table-destroy"), this.rowManager.destroy(); t.firstChild; ) t.removeChild(t.firstChild);
                        t.classList.remove("tabulator"), this.externalEvents.dispatch("tableDestroyed");
                    }
                    _detectBrowser() {
                        var t = navigator.userAgent || navigator.vendor || window.opera;
                        t.indexOf("Trident") > -1
                            ? ((this.browser = "ie"), (this.browserSlow = !0))
                            : t.indexOf("Edge") > -1
                            ? ((this.browser = "edge"), (this.browserSlow = !0))
                            : t.indexOf("Firefox") > -1
                            ? ((this.browser = "firefox"), (this.browserSlow = !1))
                            : t.indexOf("Mac OS") > -1
                            ? ((this.browser = "safari"), (this.browserSlow = !1))
                            : ((this.browser = "other"), (this.browserSlow = !1)),
                            (this.browserMobile =
                                /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(
                                    t
                                ) ||
                                /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(
                                    t.slice(0, 4)
                                ));
                    }
                    initGuard(t, e) {
                        var i, r;
                        return (
                            this.options.debugInitialization &&
                                !this.initialized &&
                                (t || (t = " " == (r = "Error" == (i = new Error().stack.split("\n"))[0] ? i[2] : i[1])[0] ? r.trim().split(" ")[1].split(".")[1] : r.trim().split("@")[0]),
                                console.warn(
                                    "Table Not Initialized - Calling the " +
                                        t +
                                        " function before the table is initialized may result in inconsistent behavior, Please wait for the `tableBuilt` event before calling this function." +
                                        (e ? " " + e : "")
                                )),
                            this.initialized
                        );
                    }
                    blockRedraw() {
                        this.initGuard(), this.eventBus.dispatch("redraw-blocking"), this.rowManager.blockRedraw(), this.columnManager.blockRedraw(), this.eventBus.dispatch("redraw-blocked");
                    }
                    restoreRedraw() {
                        this.initGuard(), this.eventBus.dispatch("redraw-restoring"), this.rowManager.restoreRedraw(), this.columnManager.restoreRedraw(), this.eventBus.dispatch("redraw-restored");
                    }
                    setData(t, e, i) {
                        return this.initGuard(!1, "To set initial data please use the 'data' property in the table constructor."), this.dataLoader.load(t, e, i, !1);
                    }
                    clearData() {
                        this.initGuard(), this.dataLoader.blockActiveLoad(), this.rowManager.clearData();
                    }
                    getData(t) {
                        return this.rowManager.getData(t);
                    }
                    getDataCount(t) {
                        return this.rowManager.getDataCount(t);
                    }
                    replaceData(t, e, i) {
                        return this.initGuard(), this.dataLoader.load(t, e, i, !0, !0);
                    }
                    updateData(t) {
                        var e = 0;
                        return (
                            this.initGuard(),
                            new Promise((i, r) => {
                                this.dataLoader.blockActiveLoad(),
                                    "string" == typeof t && (t = JSON.parse(t)),
                                    t && t.length > 0
                                        ? t.forEach((t) => {
                                              var s = this.rowManager.findRow(t[this.options.index]);
                                              s
                                                  ? (e++,
                                                    s
                                                        .updateData(t)
                                                        .then(() => {
                                                            --e || i();
                                                        })
                                                        .catch((e) => {
                                                            r("Update Error - Unable to update row", t, e);
                                                        }))
                                                  : r("Update Error - Unable to find row", t);
                                          })
                                        : (console.warn("Update Error - No data provided"), r("Update Error - No data provided"));
                            })
                        );
                    }
                    addData(t, e, i) {
                        return (
                            this.initGuard(),
                            new Promise((r, s) => {
                                this.dataLoader.blockActiveLoad(),
                                    "string" == typeof t && (t = JSON.parse(t)),
                                    t
                                        ? this.rowManager.addRows(t, e, i).then((t) => {
                                              var e = [];
                                              t.forEach(function (t) {
                                                  e.push(t.getComponent());
                                              }),
                                                  r(e);
                                          })
                                        : (console.warn("Update Error - No data provided"), s("Update Error - No data provided"));
                            })
                        );
                    }
                    updateOrAddData(t) {
                        var e = [],
                            i = 0;
                        return (
                            this.initGuard(),
                            new Promise((r, s) => {
                                this.dataLoader.blockActiveLoad(),
                                    "string" == typeof t && (t = JSON.parse(t)),
                                    t && t.length > 0
                                        ? t.forEach((t) => {
                                              var s = this.rowManager.findRow(t[this.options.index]);
                                              i++,
                                                  s
                                                      ? s.updateData(t).then(() => {
                                                            i--, e.push(s.getComponent()), i || r(e);
                                                        })
                                                      : this.rowManager.addRows(t).then((t) => {
                                                            i--, e.push(t[0].getComponent()), i || r(e);
                                                        });
                                          })
                                        : (console.warn("Update Error - No data provided"), s("Update Error - No data provided"));
                            })
                        );
                    }
                    getRow(t) {
                        var e = this.rowManager.findRow(t);
                        return e ? e.getComponent() : (console.warn("Find Error - No matching row found:", t), !1);
                    }
                    getRowFromPosition(t) {
                        var e = this.rowManager.getRowFromPosition(t);
                        return e ? e.getComponent() : (console.warn("Find Error - No matching row found:", t), !1);
                    }
                    deleteRow(t) {
                        var e = [];
                        this.initGuard(), Array.isArray(t) || (t = [t]);
                        var i,
                            r = s(t);
                        try {
                            for (r.s(); !(i = r.n()).done; ) {
                                var a = i.value,
                                    n = this.rowManager.findRow(a, !0);
                                if (!n) return console.error("Delete Error - No matching row found:", a), Promise.reject("Delete Error - No matching row found");
                                e.push(n);
                            }
                        } catch (t) {
                            r.e(t);
                        } finally {
                            r.f();
                        }
                        return (
                            e.sort((t, e) => (this.rowManager.rows.indexOf(t) > this.rowManager.rows.indexOf(e) ? 1 : -1)),
                            e.forEach((t) => {
                                t.delete();
                            }),
                            this.rowManager.reRenderInPosition(),
                            Promise.resolve()
                        );
                    }
                    addRow(t, e, i) {
                        return this.initGuard(), "string" == typeof t && (t = JSON.parse(t)), this.rowManager.addRows(t, e, i, !0).then((t) => t[0].getComponent());
                    }
                    updateOrAddRow(t, e) {
                        var i = this.rowManager.findRow(t);
                        return this.initGuard(), "string" == typeof e && (e = JSON.parse(e)), i ? i.updateData(e).then(() => i.getComponent()) : this.rowManager.addRows(e).then((t) => t[0].getComponent());
                    }
                    updateRow(t, e) {
                        var i = this.rowManager.findRow(t);
                        return (
                            this.initGuard(),
                            "string" == typeof e && (e = JSON.parse(e)),
                            i ? i.updateData(e).then(() => Promise.resolve(i.getComponent())) : (console.warn("Update Error - No matching row found:", t), Promise.reject("Update Error - No matching row found"))
                        );
                    }
                    scrollToRow(t, e, i) {
                        var r = this.rowManager.findRow(t);
                        return r ? this.rowManager.scrollToRow(r, e, i) : (console.warn("Scroll Error - No matching row found:", t), Promise.reject("Scroll Error - No matching row found"));
                    }
                    moveRow(t, e, i) {
                        var r = this.rowManager.findRow(t);
                        this.initGuard(), r ? r.moveToRow(e, i) : console.warn("Move Error - No matching row found:", t);
                    }
                    getRows(t) {
                        return this.rowManager.getComponents(t);
                    }
                    getRowPosition(t) {
                        var e = this.rowManager.findRow(t);
                        return e ? e.getPosition() : (console.warn("Position Error - No matching row found:", t), !1);
                    }
                    setColumns(t) {
                        this.initGuard(!1, "To set initial columns please use the 'columns' property in the table constructor"), this.columnManager.setColumns(t);
                    }
                    getColumns(t) {
                        return this.columnManager.getComponents(t);
                    }
                    getColumn(t) {
                        var e = this.columnManager.findColumn(t);
                        return e ? e.getComponent() : (console.warn("Find Error - No matching column found:", t), !1);
                    }
                    getColumnDefinitions() {
                        return this.columnManager.getDefinitionTree();
                    }
                    showColumn(t) {
                        var e = this.columnManager.findColumn(t);
                        if ((this.initGuard(), !e)) return console.warn("Column Show Error - No matching column found:", t), !1;
                        e.show();
                    }
                    hideColumn(t) {
                        var e = this.columnManager.findColumn(t);
                        if ((this.initGuard(), !e)) return console.warn("Column Hide Error - No matching column found:", t), !1;
                        e.hide();
                    }
                    toggleColumn(t) {
                        var e = this.columnManager.findColumn(t);
                        if ((this.initGuard(), !e)) return console.warn("Column Visibility Toggle Error - No matching column found:", t), !1;
                        e.visible ? e.hide() : e.show();
                    }
                    addColumn(t, e, i) {
                        var r = this.columnManager.findColumn(i);
                        return this.initGuard(), this.columnManager.addColumn(t, e, r).then((t) => t.getComponent());
                    }
                    deleteColumn(t) {
                        var e = this.columnManager.findColumn(t);
                        return this.initGuard(), e ? e.delete() : (console.warn("Column Delete Error - No matching column found:", t), Promise.reject());
                    }
                    updateColumnDefinition(t, e) {
                        var i = this.columnManager.findColumn(t);
                        return this.initGuard(), i ? i.updateDefinition(e) : (console.warn("Column Update Error - No matching column found:", t), Promise.reject());
                    }
                    moveColumn(t, e, i) {
                        var r = this.columnManager.findColumn(t),
                            s = this.columnManager.findColumn(e);
                        this.initGuard(), r ? (s ? this.columnManager.moveColumn(r, s, i) : console.warn("Move Error - No matching column found:", s)) : console.warn("Move Error - No matching column found:", t);
                    }
                    scrollToColumn(t, e, i) {
                        return new Promise((r, s) => {
                            var a = this.columnManager.findColumn(t);
                            return a ? this.columnManager.scrollToColumn(a, e, i) : (console.warn("Scroll Error - No matching column found:", t), Promise.reject("Scroll Error - No matching column found"));
                        });
                    }
                    redraw(t) {
                        this.initGuard(), this.columnManager.redraw(t), this.rowManager.redraw(t);
                    }
                    setHeight(t) {
                        (this.options.height = isNaN(t) ? t : t + "px"), (this.element.style.height = this.options.height), this.rowManager.initializeRenderer(), this.rowManager.redraw();
                    }
                    on(t, e) {
                        this.externalEvents.subscribe(t, e);
                    }
                    off(t, e) {
                        this.externalEvents.unsubscribe(t, e);
                    }
                    dispatchEvent() {
                        Array.from(arguments).shift(), this.externalEvents.dispatch(...arguments);
                    }
                    alert(t, e) {
                        this.initGuard(), this.alertManager.alert(t, e);
                    }
                    clearAlert() {
                        this.initGuard(), this.alertManager.clear();
                    }
                    modExists(t, e) {
                        return !!this.modules[t] || (e && console.error("Tabulator Module Not Installed: " + t), !1);
                    }
                    module(t) {
                        var e = this.modules[t];
                        return e || console.error("Tabulator module not installed: " + t), e;
                    }
                }
                (Ut.defaultOptions = {
                    debugEventsExternal: !1,
                    debugEventsInternal: !1,
                    debugInvalidOptions: !0,
                    debugInvalidComponentFuncs: !0,
                    debugInitialization: !0,
                    debugDeprecation: !0,
                    height: !1,
                    minHeight: !1,
                    maxHeight: !1,
                    columnHeaderVertAlign: "top",
                    popupContainer: !1,
                    columns: [],
                    columnDefaults: {},
                    data: !1,
                    autoColumns: !1,
                    autoColumnsDefinitions: !1,
                    nestedFieldSeparator: ".",
                    footerElement: !1,
                    index: "id",
                    textDirection: "auto",
                    addRowPos: "bottom",
                    headerVisible: !0,
                    renderVertical: "virtual",
                    renderHorizontal: "basic",
                    renderVerticalBuffer: 0,
                    scrollToRowPosition: "top",
                    scrollToRowIfVisible: !0,
                    scrollToColumnPosition: "left",
                    scrollToColumnIfVisible: !0,
                    rowFormatter: !1,
                    rowFormatterPrint: null,
                    rowFormatterClipboard: null,
                    rowFormatterHtmlOutput: null,
                    rowHeight: null,
                    placeholder: !1,
                    dataLoader: !0,
                    dataLoaderLoading: !1,
                    dataLoaderError: !1,
                    dataLoaderErrorTimeout: 3e3,
                    dataSendParams: {},
                    dataReceiveParams: {},
                }),
                    new qt(Ut);
                class Yt extends Ut {}
                new qt(Yt, Et);
                var Xt = i(97219),
                    Kt = i(86155),
                    Zt = i(36148);
                function Jt(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class Qt {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new Qt(t);
                    }
                    static getScopeThis() {
                        return this;
                    }
                    constructor(t) {
                        Jt(this, "initialized", !1),
                            Jt(this, "tableTabulator", null),
                            Jt(this, "arrayColsVisible", []),
                            Jt(this, "isVisibleCollapseButton", !1),
                            Jt(this, "tableBuilt", () => {
                                (this.initialized = !0), this.hideButtonCollapse();
                            }),
                            Jt(this, "columnVisibilityChanged", (t, e) => {
                                if ("collapse" != t.getField()) {
                                    var i = [];
                                    (i.false = this.addColVisible),
                                        (i.true = this.removeColVisible),
                                        i[e.toString()](t.getField()),
                                        0 == this.arrayColsVisible.length || this.isVisibleCollapseButton ? 0 == this.arrayColsVisible.length && this.hideButtonCollapse() : this.showButtonCollapse();
                                }
                            }),
                            Jt(this, "addColVisible", (t) => (this.arrayColsVisible.push(t), !0)),
                            Jt(this, "removeColVisible", (t) => {
                                var e = this.arrayColsVisible.indexOf(t);
                                if (e < 0) return !1;
                                this.arrayColsVisible.splice(e, 1);
                                return !0;
                            });
                        try {
                            var e = t.targetSelector,
                                i = document.querySelector(e);
                            if (!i) throw new CustomError(EXCEPTIONS_CODE.ELEMENT_NOT_FOUND, `Component with (selector: ${e}) not found.`);
                            this.initTabulator(e, t), this.addStripedRow(t, i), this.handleValidation();
                        } catch (t) {}
                    }
                    initTabulator(t, e) {
                        (this.tableTabulator = new Yt(t, e.table)), this.tableTabulator.on("tableBuilt", this.tableBuilt), this.tableTabulator.on("columnVisibilityChanged", this.columnVisibilityChanged);
                    }
                    handleValidation() {
                        this.tableTabulator.on("validationFailed", (t) => {
                            this.addMessageValidation(t);
                        }),
                            this.tableTabulator.on("cellEditCancelled", (t) => {
                                t._cell.modules.validate && t._cell.modules.validate.invalid && t._cell.modules.validate.invalid.length > 0 && t.getElement().classList.add("tabulator-validation-fail"), this.addMessageValidation(t);
                            }),
                            this.tableTabulator.on("cellEditing", (t) => {
                                this.addMessageValidation(t);
                            });
                    }
                    addMessageValidation(t) {
                        var e = t.validate(),
                            i = t.getColumn().getDefinition().validator,
                            r = Zt.Z.uid(),
                            s = "";
                        !1 === Boolean(t.getElement().id) ? (t.getElement().id = r) : (r = t.getElement().id),
                            e && e.length > 0 && ((s = e.map((t) => i.filter((e) => t.parameters.name === e.parameters.name).map((t) => t.message)).join(". ")), t.getElement().appendChild(this.createButtonTooltip(t, s))),
                            this.createPopoverValidator(t.getElement().id, s, t);
                    }
                    createButtonTooltip() {
                        var t = `popover-${Zt.Z.getMaxRandom(1e3)}`,
                            e = document.createElement("i");
                        return e.classList.add("tabulator-cell__btn-validation", "i", "icon-feedback-view-off", "brad-m-xs-l"), e.setAttribute("role", "button"), e.setAttribute("aria-label", "BotÃ£o de informaÃ§Ã£o"), (e.id = t), e;
                    }
                    createPopoverValidator(t, e, i) {
                        var r = void 0,
                            s = document.querySelector(`[target='${t}']`),
                            a = document.createElement("div");
                        a.classList.add("brad-popover", "brad-popover-tooltip"), a.setAttribute("target", t), a.setAttribute("role", "dialog");
                        var n = document.createElement("em");
                        n.classList.add("brad-popover__triangle");
                        var o = document.createElement("div");
                        o.classList.add("brad-popover__content"), o.setAttribute("role", "document"), o.setAttribute("tabindex", "-1");
                        var l = document.createElement("p");
                        l.classList.add("brad-popover__text"),
                            l.setAttribute("role", "document"),
                            (l.textContent = e),
                            o.appendChild(l),
                            a.appendChild(n),
                            a.appendChild(o),
                            !1 === Boolean(s)
                                ? (document.body.appendChild(a), (r = Xt._.getInstance({ id: "", idTarget: t, direction: "top", selector: `[target='${t}']` })), (i.servicePopover = r))
                                : (s.querySelector(".brad-popover__text").textContent = e),
                            e ? i.servicePopover.open() : i.servicePopover.close();
                    }
                    addStripedRow(t, e) {
                        t.table && t.table.isStripedRows && e.classList.add("brad-table--striped-row");
                    }
                    static iconLink(t, e) {
                        var i = t.getValue(),
                            r = document.createElement("a");
                        return r.classList.add("i", i.icon, "brad-text-color-cta"), (r.href = i.href), r;
                    }
                    static iconLabel(t, e) {
                        var i = document.createElement("i"),
                            r = t.getValue();
                        i.classList.add("i", r.icon, "brad-m-xs-r");
                        var s = document.createElement("span");
                        return s.classList.add("brad-flex", "brad-flex-align-items-center"), r.label && (s.innerHTML = r.label), s.insertAdjacentElement("afterbegin", i), s;
                    }
                    static customResponsiveCollapseFormatter(t, e, i) {
                        var r = this,
                            s = !1,
                            a = document.createElement("div");
                        a.classList.add("tabulator-responsive-collapse-toggle");
                        var n = document.createElement("button");
                        function o(e, i) {
                            s = e;
                            var o = t.getRow().getElement().querySelector(".tabulator-responsive-collapse");
                            s
                                ? (a.classList.add("open"), o && (o.style.display = ""), n.setAttribute("aria-label", "Fechar expansivo, situaÃ§Ã£o atual expansivo aberto"))
                                : (a.classList.remove("open"), o && (o.style.display = "none"), n.setAttribute("aria-label", "Abrir expansivo, , situaÃ§Ã£o atual expansivo fechado")),
                                i && r.table.redraw();
                        }
                        return (
                            n.classList.add("tabulator-responsive-collapse-toggle-open", "i", "icon-component-chevron-down", "brad-text-color-cta"),
                            n.setAttribute("aria-label", "Abrir expansivo, situaÃ§Ã£o atual expansivo fechado"),
                            a.appendChild(n),
                            t.getElement().classList.add("tabulator-row-handle"),
                            r.table.options.responsiveLayoutCollapseStartOpen && ((s = !0), (this.isVisibleCollapseButton = !0)),
                            a.addEventListener("click", function () {
                                o(!s, !0);
                            }),
                            o(s, !1),
                            a
                        );
                    }
                    static customCollapse(t) {
                        var e = document.createElement("ul");
                        return (
                            e.setAttribute("aria-label", "ConteÃºdo expansÃ­vel"),
                            t.forEach(function (t) {
                                var i = document.createElement("li");
                                i.classList.add("row-collapse");
                                var r = document.createElement("div"),
                                    s = document.createElement("div");
                                r.append(t.title),
                                    r.classList.add("brad-font-subtitle-xs", "row-collapse--title"),
                                    s.append(t.value),
                                    s.classList.add("brad-font-subtitle-xs", "row-collapse--value"),
                                    i.append(r),
                                    i.append(s),
                                    e.appendChild(i);
                            }),
                            Object.keys(t).length ? e : ""
                        );
                    }
                    static buttonIcon(t, e) {
                        var i = t.getValue(),
                            r = document.createElement("div");
                        r.classList.add("brad-flex", "brad-flex-align-items-center");
                        var s = document.createElement("button");
                        s.classList.add("brad-btn", "brad-btn-icon");
                        var a = document.createElement("em");
                        return a.classList.add("btn-icon", "i", i.icon), r.appendChild(s), s.appendChild(a), (r.rowInfo = t.getRow().getData()), r.addEventListener("click", i.clickCallback), r;
                    }
                    static buttonPopoverHeader(t, e, i) {
                        var r = `buttonPop-${Zt.Z.getMaxRandom(1e3)}`,
                            s = `popover-${Zt.Z.getMaxRandom(1e3)}`,
                            a = document.createElement("i");
                        a.classList.add("i", "icon-feedback-view-off", "brad-m-xs-l"), a.setAttribute("role", "button"), a.setAttribute("aria-label", "BotÃ£o informaÃ§Ã£o"), (a.id = r);
                        var n = "";
                        e.titlePopover && (n = '<p class="brad-popover__title brad-font-title-sm" role="heading">' + e.titlePopover + "</p>");
                        var o = "";
                        e.textPopover && (o = '<p class="brad-popover__text brad-font-subtitle-xs" role="document">' + e.textPopover + "</p>");
                        var l,
                            h =
                                '<div class="brad-popover" id="' +
                                s +
                                '" role="dialog" aria-hidden=true><em class="brad-popover__triangle"></em><div class="brad-popover__content" role="document" tabindex="-1">' +
                                n +
                                o +
                                '</div><em role="button" aria-label="Fechar popover" class="brad-popover__close-icon"></em></div>',
                            c = document.createElement("span"),
                            d = t.getColumn().getDefinition().headerHozAlign;
                        return (
                            d && c.classList.add({ left: "brad-flex-justify-content-start", right: "brad-flex-justify-content-end", center: "brad-flex-justify-content-center" }[d]),
                            c.classList.add("brad-flex", "brad-flex-align-items-center"),
                            (c.innerHTML = t.getValue()),
                            c.appendChild(a),
                            document.body.insertAdjacentHTML("beforeend", h),
                            setTimeout(() => {
                                (l = Xt._.getInstance({ id: s, idTarget: r, direction: "bottom" })),
                                    a.addEventListener("click", (t) => {
                                        l.toggle(), t.stopPropagation();
                                    }),
                                    document
                                        .getElementById(s)
                                        .querySelector(".brad-popover__close-icon")
                                        .addEventListener("click", (t) => {
                                            l.close();
                                        });
                            }, 10),
                            c
                        );
                    }
                    showButtonCollapse() {
                        var t = this.tableTabulator.getColumn("collapse");
                        t &&
                            (setTimeout(() => {
                                t.show(), this.tableTabulator.redraw();
                            }, 50),
                            (this.isVisibleCollapseButton = !0));
                    }
                    hideButtonCollapse() {
                        var t = this.tableTabulator.getColumn("collapse");
                        t && (t.hide(), this.tableTabulator.redraw(), (this.isVisibleCollapseButton = !1));
                    }
                    static addIconExpansiveLine(t) {
                        var e = t.getRow().getElement();
                        return Qt.createIconExpansiveLine(e, !1);
                    }
                    static addIconExpansiveLineTitle(t) {
                        var e = t.getElement(),
                            i = t.getTable().element;
                        return Qt.createIconExpansiveLine(e, i);
                    }
                    static createIconExpansiveLine(t, e) {
                        var i = document.createElement("button");
                        i.setAttribute("role", "button"), i.setAttribute("class", "brad-accordion__header");
                        var r = document.createElement("em");
                        return r.setAttribute("class", "brad-accordion__icon"), i.appendChild(r), Qt.toggleExpansiveLine(i, e, t), i;
                    }
                    static toggleExpansiveLine(t, e, i) {
                        t.addEventListener("click", () => {
                            if (e) return Qt.toggleAllExpansiveLines(e);
                            Qt.toggleUniqueExpansiveLine(i);
                        });
                    }
                    static toggleAllExpansiveLines(t) {
                        var e = t.id,
                            i = !1;
                        t.classList.contains("brad-table--expansive-line-open") ? ((i = !0), t.classList.remove("brad-table--expansive-line-open")) : ((i = !1), t.classList.add("brad-table--expansive-line-open")),
                            Kt.I.toggleAllByContainer(`#${e}`, i);
                    }
                    static toggleUniqueExpansiveLine(t) {
                        var e = { targetSelector: `#${t.id}` };
                        new Kt.I(e).toggle();
                    }
                    static addExpansiveLine(t) {
                        var e = t.getElement(),
                            i = t.getData();
                        e.id = Zt.Z.uid();
                        e.classList.add("brad-accordion", "brad-accordion--without-both");
                        var r = document.createElement("div");
                        r.classList.add("brad-accordion__content"), e.appendChild(r), (r.innerHTML = i.expansiveLine);
                    }
                    static addCheckbox(t) {
                        var e = t && t.getRow ? t.getRow()._row.element : null,
                            i = t && t.getRow ? t.getRow() : null,
                            r = t.getTable().element,
                            s = Qt.createCheckbox(e, r, i, t);
                        e ? e.classList.add("tabulator-row--checkbox") : t.getColumn()._column.element.classList.add("tabulator-col-header--checkbox");
                        return s;
                    }
                    static createCheckbox(t, e, i, r) {
                        var s = document.createElement("label");
                        s.classList.add("brad-checkbox");
                        var a = document.createElement("input");
                        (a.id = Zt.Z.uid()), (a.type = "checkbox"), (a.name = "group"), a.setAttribute("main-checkbox", !t);
                        var n = document.createElement("span");
                        n.classList.add("checkmark");
                        return (
                            a.addEventListener("click", () => {
                                var s = e.querySelectorAll("[main-checkbox=false]");
                                t
                                    ? (t.classList.toggle("tabulator-selected", a.checked), a.checked ? i.select() : i.toggleSelect())
                                    : s.forEach((t, e) => {
                                          Qt.getCheckboxRow(t).classList.toggle("tabulator-selected", a.checked),
                                              (t.checked = a.checked),
                                              a.checked ? r.getTable().selectRow(r.getTable().getRows()[e]) : r.getTable().deselectRow(r.getTable().getRows()[e]);
                                      }),
                                    Qt.setIndeterminate(e, s);
                            }),
                            s.appendChild(a),
                            s.appendChild(n),
                            s
                        );
                    }
                    static setIndeterminate(t, e) {
                        var i = t.querySelector("[main-checkbox=true]"),
                            r = Array.from(e).filter((t) => t.checked);
                        i && (r.length > 0 ? ((i.checked = r.length === e.length), (i.indeterminate = r.length > 0 && !i.checked)) : ((i.checked = !1), (i.indeterminate = null)));
                    }
                    static getCheckboxRow(t) {
                        return t.parentNode.parentNode.parentNode;
                    }
                    static isRowEditing(t) {
                        return t._cell.column.definition.editor && t._cell.element.classList.add("tabulator-cell--editable"), t.getRow()._row.element.classList.contains("tabulator-row--editing");
                    }
                    static addEdit(t) {
                        var e = document.createElement("div");
                        e.classList.add("brad-flex"), e.classList.add("brad-flex-justify-content-between");
                        var i = Qt.createButtonText();
                        return (
                            i.addEventListener("click", () => {
                                var e = t.getValue();
                                if (i.hasAttribute("edit")) {
                                    (i.querySelector("span").innerText = "Salvar"),
                                        t.getRow()._row.element.classList.add("tabulator-row--editing"),
                                        i.removeAttribute("edit"),
                                        i.setAttribute("save", ""),
                                        e.clickCallbackEdit({ row: t.getRow() });
                                    var r = Qt.createButtonText(!0);
                                    i.parentNode.insertBefore(r, i.nextSibling),
                                        r.addEventListener("click", () => {
                                            t._cell.row.cells.forEach((t) => {
                                                "string" == typeof t.oldValue && t.setValue(t.initialValue.trim()), t.modules.validate && t.getElement().classList.remove("tabulator-validation-fail");
                                            }),
                                                Qt.setRowToEditFirstState(i, t),
                                                e.clickCallbackCancel({ row: t.getRow() });
                                        });
                                } else {
                                    var s = !1;
                                    t._cell.row.cells.forEach((t) => {
                                        t.modules.validate && t.modules.validate.invalid && t.modules.validate.invalid.length > 0 && (s = !0);
                                    }),
                                        s ||
                                            (Qt.setRowToEditFirstState(i, t),
                                            e.clickCallbackSave({ row: t.getRow() }),
                                            t._cell.row.cells.forEach((t) => {
                                                t.oldValue && ((t.oldValue = t.value.trim()), (t.initialValue = t.value.trim()));
                                            }));
                                }
                            }),
                            e.appendChild(i),
                            e
                        );
                    }
                    static setRowToEditFirstState(t, e) {
                        (t.querySelector("span").innerText = "Editar"), e.getRow()._row.element.classList.remove("tabulator-row--editing"), t.removeAttribute("save"), t.setAttribute("edit", ""), t.parentNode.removeChild(t.nextSibling);
                    }
                    static createButtonText(t = !1) {
                        var e = document.createElement("button");
                        e.classList.add("brad-btn"), e.classList.add("brad-btn-text"), e.setAttribute("btn-tabulator-row-edit", ""), e.setAttribute(t ? "cancel" : "edit", "");
                        var i = document.createElement("span");
                        return (i.innerText = t ? "Cancelar" : "Editar"), e.appendChild(i), e;
                    }
                    static setResultLineStyle(t) {
                        var e = t._row,
                            i = e.element;
                        !0 === e.getData().resultLine && i.classList.add("tabulator-row--result-line");
                    }
                }
                r.Z.add("BradTableService", Qt);
            },
            35357: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854);
                function s(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class a {
                    static getInstance(t) {
                        return new a(t);
                    }
                    constructor(t) {
                        s(this, "eTabContainer", null), s(this, "firstTab", null), s(this, "lastTab", null), s(this, "indicator", null), s(this, "tabs", []), s(this, "tabpanels", []), s(this, "activeTab", null);
                        var e = t.targetSelector;
                        (this.eTabContainer = document.querySelector(e)),
                            (this.tabs = Array.from(this.eTabContainer.querySelectorAll("[role=tab]"))),
                            this.init(),
                            (this.indicator = this.eTabContainer.querySelector("[role=tablist].indicator"));
                    }
                    init() {
                        for (var t = 0; t < this.tabs.length; t += 1) {
                            var e = this.tabs[t],
                                i = this.eTabContainer.querySelector("#" + e.getAttribute("aria-controls"));
                            (e.tabIndex = -1),
                                this.tabpanels.push(i),
                                (e.onkeydown = (t) => this.onKeydown(t)),
                                (e.onclick = (t) => this.onClick(t)),
                                this.firstTab || (this.firstTab = e),
                                (this.lastTab = e),
                                "true" === e.getAttribute("aria-selected") && (this.activeTab = e);
                        }
                        this.activeTab || (this.activeTab = this.firstTab), this.onScrollContent(), this.setSelectedTab(this.activeTab);
                    }
                    setSelectedTab(t, e) {
                        "boolean" != typeof e && (e = !0), this.scrollTo(t);
                        for (var i = 0; i < this.tabs.length; i += 1) {
                            var r = this.tabs[i];
                            t === r
                                ? (r.setAttribute("aria-selected", "true"), r.removeAttribute("tabindex"), this.tabpanels[i].classList.remove("brad-tabs__is-hidden--js"), this.addElavation(this.tabpanels[i]))
                                : (r.setAttribute("aria-selected", "false"), (r.tabIndex = -1), this.tabpanels[i].classList.add("brad-tabs__is-hidden--js"));
                        }
                    }
                    moveFocusToTab(t) {
                        t.focus();
                    }
                    moveFocusToPreviousTab(t) {
                        var e;
                        t === this.firstTab ? this.moveFocusToTab(this.lastTab) : ((e = this.tabs.indexOf(t)), this.moveFocusToTab(this.tabs[e - 1]));
                    }
                    moveFocusToNextTab(t) {
                        var e;
                        t === this.lastTab ? this.moveFocusToTab(this.firstTab) : ((e = this.tabs.indexOf(t)), this.moveFocusToTab(this.tabs[e + 1]));
                    }
                    onKeydown(t) {
                        var e = t.currentTarget,
                            i = !1;
                        switch (t.key) {
                            case "ArrowLeft":
                                this.moveFocusToPreviousTab(e), (i = !0);
                                break;
                            case "ArrowRight":
                                this.moveFocusToNextTab(e), (i = !0);
                                break;
                            case "Home":
                                this.moveFocusToTab(this.firstTab), (i = !0);
                                break;
                            case "End":
                                this.moveFocusToTab(this.lastTab), (i = !0);
                        }
                        i && (t.stopPropagation(), t.preventDefault());
                    }
                    onClick(t) {
                        this.setSelectedTab(t.currentTarget);
                    }
                    onScrollContent() {
                        this.eTabContainer.querySelectorAll(".brad-tab__content").forEach((t) => {
                            t.addEventListener("scroll", () => this.addElavation(t));
                        });
                    }
                    addElavation(t) {
                        var e = "brad-tab--elevation";
                        Number(t.scrollTop) > 0 ? this.eTabContainer.querySelector("[role=tablist]").classList.add(e) : this.eTabContainer.querySelector("[role=tablist]").classList.remove(e);
                    }
                    scrollTo(t) {
                        this.eTabContainer.querySelector("[role=tablist]").scrollLeft = t.getBoundingClientRect().left - 48;
                    }
                }
                r.Z.add("BradTabsService", a);
            },
            34223: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            81017: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(36148);
                window.bradTextLinkService = new (class {
                    constructor(t) {
                        this.genericUtils = t;
                    }
                })(r.Z);
            },
            95881: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(92534);
                r.Z.add("BradTimelineStepperService", s.V);
            },
            92534: (t, e, i) => {
                "use strict";
                function r(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                i.d(e, { V: () => s });
                class s {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new s(t);
                    }
                    constructor(t) {
                        r(this, "eTimeline", void 0), r(this, "eSteps", void 0), r(this, "steps", []), r(this, "classStep", "brad-timeline-stepper__step");
                        var e = t.targetSelector,
                            i = t.steps,
                            s = void 0 === i ? [] : i;
                        (this.targetSelector = e),
                            (this.steps = s),
                            (this.eTimeline = document.querySelector(this.targetSelector)),
                            this.eTimeline && ((this.eSteps = Array.from(this.eTimeline.querySelectorAll(`.${this.classStep}`))), this.init());
                    }
                    init() {
                        this.update(this.steps);
                    }
                    setState(t, e) {
                        switch ((this.removeAllState(e), t)) {
                            case "inactive":
                            default:
                                e.classList.add(`${this.classStep}--inactive`);
                                break;
                            case "active":
                                e.classList.add(`${this.classStep}--active`), this.scrollTo(e);
                                break;
                            case "complete":
                                e.classList.add(`${this.classStep}--complete`);
                                break;
                            case "error":
                                e.classList.add(`${this.classStep}--error`), this.scrollTo(e);
                        }
                    }
                    update(t) {
                        this.eSteps.forEach((e, i) => {
                            var r = (t && t[i] ? t[i] : "inactive").state;
                            e.classList.contains(`${this.classStep}--${r}`) ||
                                setTimeout(() => {
                                    this.isTimelineCompleted(r, i) && this.scrollTo(e), this.setState(r, e);
                                }, i * this.getTimer());
                        }),
                            this.dispatchUpdateEvent(this.eTimeline);
                    }
                    dispatchUpdateEvent(t) {
                        (this.updatedEvent = new CustomEvent("updated", { detail: t })), this.eTimeline.dispatchEvent(this.updatedEvent);
                    }
                    isTimelineCompleted(t, e) {
                        return "complete" === t && e === this.eSteps.length - 1;
                    }
                    getTimer() {
                        return this.eTimeline.classList.contains("brad-timeline-stepper--horizontal") ? 1200 : 600;
                    }
                    removeAllState(t) {
                        t.classList.remove(`${this.classStep}--active`), t.classList.remove(`${this.classStep}--complete`), t.classList.remove(`${this.classStep}--error`), t.classList.remove(`${this.classStep}--inactive`);
                    }
                    scrollTo(t) {
                        this.eTimeline.scrollLeft = t.getBoundingClientRect().left;
                    }
                }
            },
            76940: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(34849);
                r.Z.add("BradTimelineService", s._);
            },
            34849: (t, e, i) => {
                "use strict";
                i.d(e, { _: () => n });
                var r = i(55988),
                    s = i(9328);
                function a(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class n {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new n(t);
                    }
                    constructor(t) {
                        a(this, "greaterWidth", 32);
                        try {
                            this.initializeOptions(t), this.getElements(), this.setupEvents(), this.applyGreaterWidthToAllColumns();
                        } catch (t) {}
                    }
                    initializeOptions(t) {
                        var e = t.targetSelector,
                            i = t.events;
                        (this.targetSelector = e), (this.events = i), this.validate();
                    }
                    validate() {
                        var t = [{ conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: r.A.SELECTOR_NOT_SPECIFIED, messageError: "Selector is required." }];
                        s.a.validate(t);
                    }
                    getElements() {
                        if (((this.eTimeline = document.querySelector(this.targetSelector)), !this.eTimeline)) throw new r.s(r.A.ELEMENT_NOT_FOUND, `Component with (selector: ${this.targetSelector}) not found.`);
                        this.eEvents = this.eTimeline.querySelectorAll(".brad-timeline__group__item");
                    }
                    setupEvents() {
                        this.events &&
                            this.events.length > 0 &&
                            this.events.forEach((t, e) => {
                                var i = this.eEvents[e],
                                    r = i.querySelector(".brad-timeline__line__dot"),
                                    s = i.querySelectorAll(".brad-timeline__item__status-text"),
                                    a = "custom" === t.state && t.custom;
                                this.removeCustomStyles(r, s), this.addEventStateClass(i, t.state), this.applyCustomColors(r, s, t.custom, a);
                            });
                    }
                    removeCustomStyles(t, e) {
                        t.removeAttribute("style"), e.forEach((t) => t.removeAttribute("style"));
                    }
                    addEventStateClass(t, e) {
                        this.removeAllEventStateClass(t), null == t || t.classList.add(`brad-timeline__group__item--${e}`);
                    }
                    removeAllEventStateClass(t) {
                        ["positive", "negative", "pending", "disabled", "custom"].forEach((e) => (null == t ? void 0 : t.classList.remove(`brad-timeline__group__item--${e}`)));
                    }
                    applyCustomColors(t, e, i, r) {
                        if (r) {
                            var s = `rgb(var(--${o[i]}))`;
                            (t.style.backgroundColor = s), e.forEach((t) => (t.style.color = s));
                        }
                    }
                    applyGreaterWidthToAllColumns() {
                        (this.greaterWidth = 0),
                            this.eEvents.forEach((t) => {
                                var e = t.querySelector(".brad-timeline__info");
                                e && (this.findGreaterWidth(e), this.applyWidthToAllColumns(e));
                            });
                    }
                    findGreaterWidth(t) {
                        var e = Number(getComputedStyle(t).width.replace("px", ""));
                        this.greaterWidth = Math.max(this.greaterWidth, e);
                    }
                    applyWidthToAllColumns(t) {
                        (t.style.maxWidth = `${this.greaterWidth}px`), (t.style.minWidth = `${this.greaterWidth}px`);
                    }
                    updateEvents(t) {
                        (this.events = t), this.setupEvents(), this.applyGreaterWidthToAllColumns();
                    }
                }
                var o = {
                    EXTENDED_BLUE_DARK: "brad-color-extended-blue-dark",
                    EXTENDED_PURPLE: "brad-color-extended-purple",
                    EXTENDED_PURPLE_DARK: "brad-color-extended-purple-dark",
                    EXTENDED_VIOLET: "brad-color-extended-violet",
                    EXTENDED_VIOLET_DARK: "brad-color-extended-violet-dark",
                    EXTENDED_SALMON_DARK: "brad-color-extended-salmon-dark",
                    EXTENDED_RED_DARK: "brad-color-extended-red-dark",
                    NEUTRAL_40: "brad-color-neutral-40",
                    NEUTRAL_50: "brad-color-neutral-50",
                    NEUTRAL_60: "brad-color-neutral-60",
                    NEUTRAL_100: "brad-color-neutral-100",
                };
            },
            59011: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            83095: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            52949: (t, e, i) => {
                "use strict";
                i.d(e, { P: () => r });
                var r = ["brad-animation-loader_validacao_animado_v3", "brad-animation"];
            },
            93265: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(5421),
                    a = i(9328),
                    n = i(55988),
                    o = i(52949);
                function l(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                class h {
                    constructor() {
                        l(this, "animationPrefix", "brad-animation");
                    }
                    static getInstance() {
                        return new h();
                    }
                    getAnimation(t) {
                        return !1 === t.includes(this.animationPrefix) && (t = `${this.animationPrefix}-${t}`), this.validate(t), t;
                    }
                    validate(t) {
                        var e = [{ conditional: () => !0 !== Boolean(this.isValidAnimationOption(t)), exceptionCode: n.A.VALUE_NOT_ALLOWED, messageError: "Invalid animation name." }];
                        a.a.validate(e);
                    }
                    isValidAnimationOption(t) {
                        return o.P.includes(t);
                    }
                }
                var c = i(46824),
                    d = i(98564);
                class u {
                    constructor() {
                        this.environment = "production";
                    }
                    getVariables() {
                        return (this.configForEnvironment = "development" === this.environment ? d : c), this.configForEnvironment;
                    }
                    isDevelopment() {
                        return "development" === this.environment;
                    }
                    isProduction() {
                        return "production" === this.environment;
                    }
                    getEnvironment() {
                        return this.environment;
                    }
                }
                class p {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new p(t);
                    }
                    constructor(t) {
                        this.init(t);
                    }
                    init(t) {
                        var e = new u().getVariables();
                        (this.url = e.BRAD_HASH_ANIMATIONS_URL),
                            this.assignComponentOptionsToComponentVariables(t),
                            this.initBradAnimationOptionsService(),
                            this.validate(),
                            this.setSelectedAnimation(),
                            this.setAnimation(),
                            this.handleCustomEvents(),
                            this.handleEventListeners();
                    }
                    initBradAnimationOptionsService() {
                        this.bradAnimationOptionsService = h.getInstance();
                    }
                    assignComponentOptionsToComponentVariables(t) {
                        var e = t.targetSelector,
                            i = t.animationName,
                            r = t.loop,
                            s = void 0 === r || r,
                            a = t.autoplay,
                            n = void 0 === a || a;
                        (this.targetSelector = e), (this.animationName = i), (this.loop = s), (this.autoplay = n);
                    }
                    validate() {
                        var t = [
                            { conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: n.A.SELECTOR_NOT_SPECIFIED, messageError: "Selector is required." },
                            { conditional: () => !0 !== Boolean(this.animationName), exceptionCode: n.A.VALUE_NOT_ALLOWED, messageError: "Invalid animation name." },
                        ];
                        a.a.validate(t);
                    }
                    setSelectedAnimation() {
                        this.selectedAnimation = this.bradAnimationOptionsService.getAnimation(this.animationName);
                    }
                    setAnimation() {
                        (this.containerAnimation = document.querySelector(this.targetSelector)),
                            (this.animationContainer = s.loadAnimation({ container: this.containerAnimation, path: `${this.url}${this.selectedAnimation}.json`, autoplay: this.autoplay, loop: this.loop }));
                    }
                    handleCustomEvents() {
                        this.endAnimationEvent(), this.endAnimationLoopEvent();
                    }
                    endAnimationEvent() {
                        this.endEvent = new Event("end");
                    }
                    endAnimationLoopEvent() {
                        this.animationLoopEvent = new Event("loopEnd");
                    }
                    handleEventListeners() {
                        this.animationContainer.addEventListener("complete", () => {
                            this.containerAnimation.dispatchEvent(this.endEvent);
                        }),
                            this.animationContainer.addEventListener("loopComplete", () => {
                                this.containerAnimation.dispatchEvent(this.animationLoopEvent);
                            });
                    }
                    playAnimation() {
                        this.animationContainer.play();
                    }
                    pauseAnimation() {
                        this.animationContainer.pause();
                    }
                    stopAnimation() {
                        this.animationContainer.stop();
                    }
                    setAnimationSpeed(t) {
                        "number" == typeof t && this.animationContainer.setSpeed(t);
                    }
                    setAnimationDirection(t) {
                        "number" == typeof t && this.animationContainer.setDirection(t);
                    }
                    destroyAnimation() {
                        this.animationContainer.destroy();
                    }
                    setAnimationLoop(t) {
                        "boolean" == typeof t && this.animationContainer.setLoop(t);
                    }
                    toggleAnimationPlay() {
                        this.animationContainer.togglePause();
                    }
                    resizeAnimation() {
                        this.animationContainer.resize();
                    }
                    getIfAnimationIsPlaying() {
                        return !this.animationContainer.isPaused;
                    }
                    hideAnimation() {
                        this.animationContainer.hide();
                    }
                    showAnimation() {
                        this.animationContainer.show();
                    }
                }
                r.Z.add("BradAnimationService", p);
            },
            67445: (t, e, i) => {
                "use strict";
                i.r(e);
                var r = i(28854),
                    s = i(8750);
                r.Z.add("BradInfiniteScrollService", s.L);
            },
            8750: (t, e, i) => {
                "use strict";
                i.d(e, { L: () => a });
                var r = i(55988),
                    s = i(9328);
                class a {
                    static getInstances(t = [{}]) {
                        return t.map(this.getInstance.bind(this));
                    }
                    static getInstance(t) {
                        return new a(t);
                    }
                    constructor(t) {
                        try {
                            this.initializeOptions(t), this.getElements(), this.handleEvents();
                        } catch (t) {}
                    }
                    initializeOptions(t) {
                        var e = t.targetSelector,
                            i = t.isScrollingInPage,
                            r = void 0 !== i && i;
                        (this.targetSelector = e), (this.isScrollingInPage = r), this.validate();
                    }
                    validate() {
                        var t = [{ conditional: () => !0 !== Boolean(this.targetSelector), exceptionCode: r.A.SELECTOR_NOT_SPECIFIED, messageError: "Selector is required." }];
                        s.a.validate(t);
                    }
                    getElements() {
                        if (((this.eContainer = document.querySelector(this.targetSelector)), !this.eContainer)) throw new r.s(r.A.ELEMENT_NOT_FOUND, `Component with (selector: ${this.targetSelector}) not found.`);
                        this.applyLoading();
                    }
                    applyLoading() {
                        (this.isScrollingInPage ? document : this.eContainer).addEventListener("scroll", () => {
                            this.eContainer.scrollTop >= this.eContainer.scrollHeight - this.eContainer.offsetHeight && this.createLoading();
                        });
                    }
                    createLoading() {
                        !1 === Boolean(this.eLoaderContainer) && ((this.isLoadingApllied = !0), this.createLoaderContainer(), this.createElementBullet(), this.addToContainer(), this.scrollContainerToBottom(), this.dispatchEvent());
                    }
                    createLoaderContainer() {
                        (this.eLoaderContainer = document.createElement("div")),
                            this.eLoaderContainer.classList.add("brad-flex", "brad-flex-justify-content-center", "brad-flex-align-items-center", "brad-p-xl"),
                            (this.eLoader = document.createElement("div")),
                            this.eLoader.classList.add("brad-loader"),
                            this.applyOnColorToButton(),
                            this.eLoaderContainer.appendChild(this.eLoader);
                    }
                    applyOnColorToButton() {
                        this.hasOnColorClass() && this.eLoader.classList.add("brad-loader--on-color");
                    }
                    hasOnColorClass() {
                        return this.eContainer.classList.contains("brad-infinite-scroll--on-color");
                    }
                    createElementBullet() {
                        for (var t = 0; t < 8; t++) {
                            var e = document.createElement("em");
                            this.eLoader.appendChild(e);
                        }
                    }
                    addToContainer() {
                        this.eContainer.appendChild(this.eLoaderContainer);
                    }
                    scrollContainerToBottom() {
                        this.eContainer.scrollTo({ top: this.eContainer.scrollHeight, behavior: "smooth" });
                    }
                    handleEvents() {
                        this.createEvent();
                    }
                    createEvent() {
                        this.event = new Event("bradInfinite");
                    }
                    dispatchEvent() {
                        this.isLoadingApllied && this.eContainer.dispatchEvent(this.event);
                    }
                    complete() {
                        this.eLoaderContainer && (this.eLoaderContainer.remove(), (this.eLoaderContainer = void 0), (this.isLoadingApllied = !1));
                    }
                }
            },
            17116: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            77901: (t, e, i) => {
                "use strict";
                i.r(e);
            },
            59799: (t, e, i) => {
                "use strict";
                i.d(e, { t: () => r });
                class r {
                    static byText(t, e, i) {
                        Boolean(t.toLowerCase().includes(e.toLowerCase())) ? (i.style.display = "flex") : (i.style.display = "none");
                    }
                    static resetFilter(t) {
                        t.style.display = "flex";
                    }
                    static getFilteredElements(t = []) {
                        return Array.from(t).filter((t) => "none" !== getComputedStyle(t).getPropertyValue("display"));
                    }
                }
            },
            6314: (t, e, i) => {
                "use strict";
                i.d(e, { h: () => r });
                class r {
                    checkiOS() {
                        return ["iPad Simulator", "iPhone Simulator", "iPod Simulator", "iPad", "iPhone", "iPod"].includes(navigator.userAgent) || (navigator.userAgent.includes("Mac") && "ontouchend" in document);
                    }
                }
            },
            25375: (t, e, i) => {
                "use strict";
                function r(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                i.d(e, { G: () => s });
                class s {
                    constructor(t) {
                        r(this, "fps", void 0),
                            r(this, "fpsInterval", void 0),
                            r(this, "startTime", void 0),
                            r(this, "now", void 0),
                            r(this, "then", void 0),
                            r(this, "elapsed", void 0),
                            (this.fps = t),
                            (this.fpsInterval = 1e3 / this.fps),
                            (this.then = Date.now()),
                            (this.startTime = this.then);
                    }
                    canExecute() {
                        return (this.now = Date.now()), (this.elapsed = this.now - this.then), this.elapsed > this.fpsInterval && ((this.then = this.now - (this.elapsed % this.fpsInterval)), !0);
                    }
                }
            },
            36148: (t, e, i) => {
                "use strict";
                function r(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                i.d(e, { Z: () => s });
                const s = new (class {
                    constructor(t) {
                        r(this, "windowHolder", void 0), (this.windowHolder = t);
                    }
                    getRandom() {
                        var t = new Uint32Array(1);
                        return window.crypto.getRandomValues(t), t[0] / 1e10;
                    }
                    getMaxRandom(t) {
                        return Math.floor(this.getRandom() * t);
                    }
                    uid() {
                        var t = new Uint8Array(1);
                        window.crypto.getRandomValues(t);
                        var e = t[0] % 26;
                        return String.fromCharCode("A".charCodeAt(0) + e).concat(Math.floor(this.getRandom() * new Date()));
                    }
                    deDup(t = []) {
                        return [...new Set(t)];
                    }
                    splitNotEmpty(t = "", e = ".") {
                        return ((null == t ? void 0 : t.split(e)) || []).filter(Boolean);
                    }
                    getElementsByIds(t = []) {
                        return t.map((t) => this.windowHolder.document.getElementById(t));
                    }
                    static getMobileOperatingSystem() {
                        var t = navigator.userAgent || navigator.vendor;
                        return /iPad|iPhone|iPod/.test(t) || (/Macintosh/i.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 1) ? "iOS" : "unknown";
                    }
                })(window);
            },
            35696: (t, e, i) => {
                "use strict";
                function r(t, e, i = "") {
                    var r = t;
                    return t > e && ((r = e), (r += "+"), (r = "" == i ? r : i)), r;
                }
                i.d(e, { _: () => r });
            },
            28854: (t, e, i) => {
                "use strict";
                function r(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                i.d(e, { Z: () => s });
                const s = new (class {
                    constructor(t, e) {
                        r(this, "window", void 0), r(this, "name", void 0), (this.name = e), (this.window = t), (this.window[e] = this.window[e] || {});
                    }
                    add(t, e) {
                        return (this.window[this.name][t] = e), this.get();
                    }
                    get() {
                        return this.window[this.name];
                    }
                })(window, "LiquidCorp");
            },
            24228: (t, e, i) => {
                "use strict";
                function r(t, e, i) {
                    var r;
                    return (
                        (e =
                            "symbol" ==
                            typeof (r = (function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var r = i.call(t, e || "default");
                                    if ("object" != typeof r) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return ("string" === e ? String : Number)(t);
                            })(e, "string"))
                                ? r
                                : String(r)) in t
                            ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = i),
                        t
                    );
                }
                i.d(e, { a: () => s });
                class s {
                    constructor() {
                        r(this, "currentArrowOption", -1),
                            r(this, "event", null),
                            r(this, "isListOpened", null),
                            r(this, "listElements", null),
                            r(this, "elementAboveToFocus", null),
                            r(this, "callbackElementFocused", null),
                            (this.currentArrowOption = -1);
                    }
                    static getInstance() {
                        return new s();
                    }
                    setEvent(t) {
                        return (this.event = t), this;
                    }
                    getEvent() {
                        return this.event;
                    }
                    setIsListOpened(t) {
                        return (this.isListOpened = t), this;
                    }
                    getIsListOpened() {
                        return this.isListOpened;
                    }
                    setCurrentArrowOption(t) {
                        return (this.currentArrowOption = t), this;
                    }
                    getCurrentArrowOption() {
                        return this.currentArrowOption;
                    }
                    setListElements(t) {
                        return (this.listElements = t), this;
                    }
                    getListElements() {
                        return this.listElements;
                    }
                    setElementAboveToFocus(t) {
                        return (this.elementAboveToFocus = t), this;
                    }
                    getElementAboveToFocus() {
                        return this.elementAboveToFocus;
                    }
                    setCallbackElementFocused(t) {
                        return (this.callbackElementFocused = t), this;
                    }
                    getCallbackElementFocused() {
                        return this.callbackElementFocused;
                    }
                    navigateByArrows() {
                        return this.removeAllFocusedClass(), this.getIsListOpened() ? this.addEventKeydown(this.getEvent().key) : this.resetCurrentArrowOption(), [this.getCurrentArrowOption(), !0];
                    }
                    addEventKeydown(t) {
                        var e = {
                            ArrowUp: () => {
                                this.getEvent().preventDefault(), this.navigateUp();
                            },
                            ArrowDown: () => {
                                this.getEvent().preventDefault(), this.navigateDown();
                            },
                            Enter: () => {},
                            Tab: () => {},
                            Backspace: () => {
                                this.resetCurrentArrowOption();
                            },
                        };
                        Object.keys(e).includes(t) && (e[t](), this.getCallbackElementFocused() && this.executeCallbackElementFocused(this.getCallbackElementFocused(), this.getListElements()));
                    }
                    focusInput() {
                        this.getElementAboveToFocus() &&
                            (this.getElementAboveToFocus().focus(),
                            setTimeout(() => {
                                var t = this.getElementAboveToFocus().value;
                                (this.getElementAboveToFocus().value = ""), (this.getElementAboveToFocus().value = t);
                            }, 50));
                    }
                    removeAllFocusedClass() {
                        this.getListElements().forEach((t) => t.classList.remove("brad-list-item--focus"));
                    }
                    navigateUp() {
                        this.focusInput(), this.getCurrentArrowOption() > 0 && (this.setCurrentArrowOption(this.getCurrentArrowOption() - 1), this.getListElements()[this.getCurrentArrowOption()].classList.add("brad-list-item--focus"));
                    }
                    navigateDown() {
                        this.focusInput(),
                            this.getCurrentArrowOption() < this.getListElements().length - 1 &&
                                (this.setCurrentArrowOption(this.getCurrentArrowOption() + 1), this.getListElements()[this.getCurrentArrowOption()].classList.add("brad-list-item--focus"));
                    }
                    resetCurrentArrowOption() {
                        this.setCurrentArrowOption(-1);
                    }
                    executeCallbackElementFocused() {
                        this.getCallbackElementFocused()(this.getListElements()[this.getCurrentArrowOption()]);
                    }
                }
            },
            55988: (t, e, i) => {
                "use strict";
                i.d(e, { A: () => s, s: () => r });
                class r extends Error {
                    constructor(t, e) {
                        super(e), (this.name = t), (this.message = `${e}`);
                    }
                }
                var s = { VALUE_NOT_ALLOWED: "VALUE_NOT_ALLOWED", ELEMENT_NOT_FOUND: "ELEMENT_NOT_FOUND", ID_NOT_SPECIFIED: "ID_NOT_SPECIFIED", SELECTOR_NOT_SPECIFIED: "SELECTOR_NOT_SPECIFIED", VALUE_IS_REQUIRED: "VALUE_IS_REQUIRED" };
            },
            9328: (t, e, i) => {
                "use strict";
                i.d(e, { a: () => s });
                var r = i(55988);
                class s {
                    static validate(t) {
                        var e = t.find((t) => t.conditional());
                        e && s.throw(e.exceptionCode, e.messageError);
                    }
                    static throw(t, e) {
                        throw new r.s(t, e);
                    }
                    static throwExceptionWhenOptionsNull(t) {
                        if (!0 !== Boolean(t)) throw new r.s(r.A.VALUE_IS_REQUIRED, "Options is required and must have property targetSelector.");
                    }
                }
            },
            4147: (t) => {
                "use strict";
                t.exports = JSON.parse(
                    '{"name":"dsys-fed-liquid","version":"1.27.2","files":["dist","src","static"],"host":"https://banco.bradesco/cdn/design-system/dist/design-system","devDependencies":{"@babel/core":"7.14.8","@babel/plugin-transform-runtime":"7.23.9","@babel/preset-env":"7.14.9","@babel/runtime":"7.21.5","@storybook/addon-actions":"7.0.22","@storybook/addon-essentials":"7.0.22","@storybook/addon-interactions":"7.0.22","@storybook/addon-links":"7.0.22","@storybook/addon-mdx-gfm":"7.0.22","@storybook/html":"7.0.22","@storybook/html-webpack5":"7.0.22","@storybook/testing-library":"0.1.0","@types/jest":"^29.2.0","@webpack-cli/generators":"2.5.0","babel-jest":"^29.2.0","babel-loader":"8.2.3","copy-webpack-plugin":"^11.0.0","core-js":"3.15.1","css-loader":"6.7.1","css-minimizer-webpack-plugin":"5.0.1","dotenv":"16.3.1","file-loader":"^6.2.0","html-webpack-plugin":"5.5.0","jest":"^29.2.0","jest-environment-jsdom":"^29.2.0","mini-css-extract-plugin":"2.6.1","postcss-scss":"^4.0.9","postcss-loader":"^8.1.0","postcss-prefix-selector":"^1.16.0","raw-loader":"^4.0.2","react":"18.2.0","react-dom":"18.2.0","resolve-url-loader":"^5.0.0","sass":"1.54.5","sass-loader":"13.0.2","storybook":"7.0.22","string-replace-loader":"^3.1.0","style-loader":"3.3.1","svg-inline-loader":"0.8.2","terser-webpack-plugin":"5.3.10","url-loader":"^4.1.1","webpack":"5.74.0","webpack-dev-server":"4.9.3"},"bin":{"brad":"brad-cli.js"},"scripts":{"setup":"npm i && npm link","build":"npm run build:all","build:all":"npm run build:components && npm run build:storybook","build:components":"webpack --mode=production --node-env=production","build:storybook":"storybook build -o dist/storybook && node ./scripts/build-rename.js","build:dev":"webpack --mode=development","build:prod":"webpack --mode=production --node-env=production","watch":"webpack --watch","serve":"webpack serve --mode=development --entry ./src/configs/entry-points/visual-editor.js","storybook":"node ./scripts/generate-all-components-import.js && storybook dev -p 6006 ","test":"jest --no-cache --coverage"},"dependencies":{"autocompleter":"6.1.3","bootstrap":"5.2.0","bootstrap-icons":"1.9.1","chalk":"2.4.2","chart.js":"^4.4.0","chartjs-plugin-datalabels":"^2.2.0","cli-table":"0.3.1","commander":"2.19.0","grapesjs":"^0.19.5","grapesjs-blocks-basic":"0.1.8","grapesjs-blocks-flexbox":"0.1.1","grapesjs-plugin-export":"1.0.11","inquirer":"6.2.2","lit":"^2.3.1","lodash":"^4.17.21","lottie-web":"5.12.2","node-sri":"^1.1.1","raw-loader":"4.0.2","regenerator-runtime":"0.14.1","shelljs":"0.8.3","swiper":"11.0.5","tabulator-tables":"^5.4.4"},"jest":{"testPathIgnorePatterns":["/node_modules/","/scripts/"],"moduleNameMapper":{"\\\\.(css|less|scss|svg)$":"<rootDir>/assets/css/__mocks__/styleMock.js"},"testEnvironment":"jsdom","transformIgnorePatterns":["node_modules/(?!(lit-html|lit-element|lit|@lit|swiper|ssr-window)/)"],"transform":{"^.+\\\\.(js|jsx|mjs)$":["babel-jest",{"presets":["@babel/preset-env"],"plugins":[["@babel/transform-runtime"]]}]}}}'
                );
            },
        },
        __webpack_module_cache__ = {};
    function __webpack_require__(t) {
        var e = __webpack_module_cache__[t];
        if (void 0 !== e) return e.exports;
        var i = (__webpack_module_cache__[t] = { exports: {} });
        return __webpack_modules__[t].call(i.exports, i, i.exports, __webpack_require__), i.exports;
    }
    (__webpack_require__.amdO = {}),
        (__webpack_require__.d = (t, e) => {
            for (var i in e) __webpack_require__.o(e, i) && !__webpack_require__.o(t, i) && Object.defineProperty(t, i, { enumerable: !0, get: e[i] });
        }),
        (__webpack_require__.g = (function () {
            if ("object" == typeof globalThis) return globalThis;
            try {
                return this || new Function("return this")();
            } catch (t) {
                if ("object" == typeof window) return window;
            }
        })()),
        (__webpack_require__.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e)),
        (__webpack_require__.r = (t) => {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: !0 });
        });
    var __webpack_exports__ = {};
    (() => {
        __webpack_require__(96144);
        const t = __webpack_require__(86768);
        t.keys().forEach((e) => {
            t(e);
        }),
            __webpack_require__(59011),
            __webpack_require__(83095);
    })();
})();
